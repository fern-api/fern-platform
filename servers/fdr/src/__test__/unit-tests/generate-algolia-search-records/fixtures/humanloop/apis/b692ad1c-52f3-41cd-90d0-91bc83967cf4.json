{
  "rootPackage": {
    "endpoints": [],
    "subpackages": [
      "subpackage_prompts",
      "subpackage_tools",
      "subpackage_datasets",
      "subpackage_evaluators",
      "subpackage_flows",
      "subpackage_files",
      "subpackage_evaluations",
      "subpackage_logs"
    ],
    "types": [
      "type_:BooleanEvaluatorStatsResponse",
      "type_:ChatMessageContentItem",
      "type_:ChatMessageContent",
      "type_:ChatMessage",
      "type_:ChatRole",
      "type_:CodeEvaluatorRequest",
      "type_:CommitRequest",
      "type_:CreateDatapointRequestTargetValue",
      "type_:CreateDatapointRequest",
      "type_:CreateEvaluatorLogResponse",
      "type_:CreateFlowLogResponse",
      "type_:CreatePromptLogResponse",
      "type_:CreateToolLogResponse",
      "type_:DashboardConfiguration",
      "type_:DatapointResponseTargetValue",
      "type_:DatapointResponse",
      "type_:DatasetResponse",
      "type_:EnvironmentResponse",
      "type_:EnvironmentTag",
      "type_:EvaluatedVersionResponse",
      "type_:EvaluateeRequest",
      "type_:EvaluateeResponse",
      "type_:EvaluationEvaluatorResponse",
      "type_:EvaluationReportLogResponse",
      "type_:EvaluationResponse",
      "type_:EvaluationStats",
      "type_:EvaluationStatus",
      "type_:EvaluatorActivationDeactivationRequestActivateItem",
      "type_:EvaluatorActivationDeactivationRequestDeactivateItem",
      "type_:EvaluatorActivationDeactivationRequest",
      "type_:EvaluatorAggregate",
      "type_:EvaluatorArgumentsType",
      "type_:EvaluatorJudgmentNumberLimit",
      "type_:EvaluatorJudgmentOptionResponse",
      "type_:EvaluatorLogResponseJudgment",
      "type_:EvaluatorLogResponse",
      "type_:EvaluatorResponseSpec",
      "type_:EvaluatorResponse",
      "type_:EvaluatorReturnTypeEnum",
      "type_:ExternalEvaluatorRequest",
      "type_:FileEnvironmentResponseFile",
      "type_:FileEnvironmentResponse",
      "type_:FileRequest",
      "type_:FileType",
      "type_:FlowKernelRequest",
      "type_:FlowLogResponse",
      "type_:FlowResponse",
      "type_:FunctionTool",
      "type_:FunctionToolChoice",
      "type_:HttpValidationError",
      "type_:HumanEvaluatorRequestReturnType",
      "type_:HumanEvaluatorRequest",
      "type_:ImageChatContent",
      "type_:ImageUrlDetail",
      "type_:ImageUrl",
      "type_:InputResponse",
      "type_:LlmEvaluatorRequest",
      "type_:LinkedToolResponse",
      "type_:ListDatasets",
      "type_:ListEvaluators",
      "type_:ListFlows",
      "type_:ListPrompts",
      "type_:ListTools",
      "type_:LogResponse",
      "type_:ModelEndpoints",
      "type_:ModelProviders",
      "type_:MonitoringEvaluatorEnvironmentRequest",
      "type_:MonitoringEvaluatorResponse",
      "type_:MonitoringEvaluatorState",
      "type_:MonitoringEvaluatorVersionRequest",
      "type_:NumericEvaluatorStatsResponse",
      "type_:ObservabilityStatus",
      "type_:OverallStats",
      "type_:PaginatedDatapointResponse",
      "type_:PaginatedDatasetResponse",
      "type_:PaginatedDataEvaluationReportLogResponse",
      "type_:PaginatedEvaluationResponse",
      "type_:PaginatedDataEvaluatorResponse",
      "type_:PaginatedDataFlowResponse",
      "type_:PaginatedDataLogResponse",
      "type_:PaginatedDataPromptResponse",
      "type_:PaginatedDataToolResponse",
      "type_:PaginatedDataUnionPromptResponseToolResponseDatasetResponseEvaluatorResponseFlowResponseRecordsItem",
      "type_:PaginatedDataUnionPromptResponseToolResponseDatasetResponseEvaluatorResponseFlowResponse",
      "type_:PlatformAccessEnum",
      "type_:ProjectSortBy",
      "type_:PromptCallLogResponse",
      "type_:PromptCallResponseToolChoice",
      "type_:PromptCallResponse",
      "type_:PromptCallStreamResponse",
      "type_:PromptKernelRequestTemplate",
      "type_:PromptKernelRequestStop",
      "type_:PromptKernelRequest",
      "type_:PromptLogResponseToolChoice",
      "type_:PromptLogResponse",
      "type_:PromptResponseTemplate",
      "type_:PromptResponseStop",
      "type_:PromptResponse",
      "type_:ProviderApiKeys",
      "type_:ResponseFormatType",
      "type_:ResponseFormat",
      "type_:SelectEvaluatorStatsResponse",
      "type_:SortOrder",
      "type_:TextChatContent",
      "type_:TextEvaluatorStatsResponse",
      "type_:TimeUnit",
      "type_:ToolCall",
      "type_:ToolChoice",
      "type_:ToolFunction",
      "type_:ToolKernelRequest",
      "type_:ToolLogResponse",
      "type_:ToolResponse",
      "type_:TraceStatus",
      "type_:UpdateDatesetAction",
      "type_:UserResponse",
      "type_:Valence",
      "type_:ValidationErrorLocItem",
      "type_:ValidationError",
      "type_:VersionDeploymentResponseFile",
      "type_:VersionDeploymentResponse",
      "type_:VersionIdResponseVersion",
      "type_:VersionIdResponse",
      "type_:VersionReferenceResponse",
      "type_:VersionStatsResponseEvaluatorVersionStatsItem",
      "type_:VersionStatsResponse",
      "type_:VersionStatus",
      "type_:ChatToolType",
      "type_:FilesToolType",
      "type_:EvaluationsDatasetRequest",
      "type_:EvaluationsRequest",
      "type_:AgentConfigResponse",
      "type_:EvaluatorConfigResponse",
      "type_:UpdateEvaluationStatusRequest",
      "type_:PaginatedPromptLogResponse",
      "type_:PaginatedSessionResponse",
      "type_:ConfigToolResponse",
      "type_:FeedbackType",
      "type_:BaseModelsUserResponse"
    ],
    "webhooks": [],
    "websockets": []
  },
  "types": {
    "type_prompts:PromptLogRequestToolChoice": {
      "description": "Controls how the model uses tools. The following options are supported:\n\n- `'none'` means the model will not call any tool and instead generates a message; this is the default when no tools are provided as part of the Prompt.\n- `'auto'` means the model can decide to call one or more of the provided tools; this is the default when tools are provided as part of the Prompt.\n- `'required'` means the model can decide to call one or more of the provided tools.\n- `{'type': 'function', 'function': {name': <TOOL_NAME>}}` forces the model to use the named function.",
      "name": "PromptLogRequestToolChoice",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "literal",
              "value": {
                "type": "stringLiteral",
                "value": "none"
              }
            }
          },
          {
            "type": {
              "type": "literal",
              "value": {
                "type": "stringLiteral",
                "value": "auto"
              }
            }
          },
          {
            "type": {
              "type": "literal",
              "value": {
                "type": "stringLiteral",
                "value": "required"
              }
            }
          },
          {
            "type": {
              "type": "id",
              "value": "type_:ToolChoice"
            },
            "displayName": "Tool Choice"
          }
        ]
      }
    },
    "type_prompts:PromptLogUpdateRequestToolChoice": {
      "description": "Controls how the model uses tools. The following options are supported:\n\n- `'none'` means the model will not call any tool and instead generates a message; this is the default when no tools are provided as part of the Prompt.\n- `'auto'` means the model can decide to call one or more of the provided tools; this is the default when tools are provided as part of the Prompt.\n- `'required'` means the model can decide to call one or more of the provided tools.\n- `{'type': 'function', 'function': {name': <TOOL_NAME>}}` forces the model to use the named function.",
      "name": "PromptLogUpdateRequestToolChoice",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "literal",
              "value": {
                "type": "stringLiteral",
                "value": "none"
              }
            }
          },
          {
            "type": {
              "type": "literal",
              "value": {
                "type": "stringLiteral",
                "value": "auto"
              }
            }
          },
          {
            "type": {
              "type": "literal",
              "value": {
                "type": "stringLiteral",
                "value": "required"
              }
            }
          },
          {
            "type": {
              "type": "id",
              "value": "type_:ToolChoice"
            },
            "displayName": "Tool Choice"
          }
        ]
      }
    },
    "type_prompts:PromptsCallStreamRequestToolChoice": {
      "description": "Controls how the model uses tools. The following options are supported:\n\n- `'none'` means the model will not call any tool and instead generates a message; this is the default when no tools are provided as part of the Prompt.\n- `'auto'` means the model can decide to call one or more of the provided tools; this is the default when tools are provided as part of the Prompt.\n- `'required'` means the model can decide to call one or more of the provided tools.\n- `{'type': 'function', 'function': {name': <TOOL_NAME>}}` forces the model to use the named function.",
      "name": "PromptsCallStreamRequestToolChoice",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "literal",
              "value": {
                "type": "stringLiteral",
                "value": "none"
              }
            }
          },
          {
            "type": {
              "type": "literal",
              "value": {
                "type": "stringLiteral",
                "value": "auto"
              }
            }
          },
          {
            "type": {
              "type": "literal",
              "value": {
                "type": "stringLiteral",
                "value": "required"
              }
            }
          },
          {
            "type": {
              "type": "id",
              "value": "type_:ToolChoice"
            },
            "displayName": "Tool Choice"
          }
        ]
      }
    },
    "type_prompts:PromptsCallRequestToolChoice": {
      "description": "Controls how the model uses tools. The following options are supported:\n\n- `'none'` means the model will not call any tool and instead generates a message; this is the default when no tools are provided as part of the Prompt.\n- `'auto'` means the model can decide to call one or more of the provided tools; this is the default when tools are provided as part of the Prompt.\n- `'required'` means the model can decide to call one or more of the provided tools.\n- `{'type': 'function', 'function': {name': <TOOL_NAME>}}` forces the model to use the named function.",
      "name": "PromptsCallRequestToolChoice",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "literal",
              "value": {
                "type": "stringLiteral",
                "value": "none"
              }
            }
          },
          {
            "type": {
              "type": "literal",
              "value": {
                "type": "stringLiteral",
                "value": "auto"
              }
            }
          },
          {
            "type": {
              "type": "literal",
              "value": {
                "type": "stringLiteral",
                "value": "required"
              }
            }
          },
          {
            "type": {
              "type": "id",
              "value": "type_:ToolChoice"
            },
            "displayName": "Tool Choice"
          }
        ]
      }
    },
    "type_prompts:PromptRequestTemplate": {
      "description": "The template contains the main structure and instructions for the model, including input variables for dynamic values.\n\nFor chat models, provide the template as a ChatTemplate (a list of messages), e.g. a system message, followed by a user message with an input variable.\nFor completion models, provide a prompt template as a string.\n\nInput variables should be specified with double curly bracket syntax: `{{input_name}}`.",
      "name": "PromptRequestTemplate",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:ChatMessage"
              }
            }
          }
        ]
      }
    },
    "type_prompts:PromptRequestStop": {
      "description": "The string (or list of strings) after which the model will stop generating. The returned text will not contain the stop sequence.",
      "name": "PromptRequestStop",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "type_evaluators:CreateEvaluatorLogRequestJudgment": {
      "description": "Evaluator assessment of the Log.",
      "name": "CreateEvaluatorLogRequestJudgment",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          }
        ]
      }
    },
    "type_evaluators:CreateEvaluatorLogRequestSpec": {
      "name": "CreateEvaluatorLogRequestSpec",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "id",
              "value": "type_:LlmEvaluatorRequest"
            },
            "displayName": "Llm Evaluator Request"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:CodeEvaluatorRequest"
            },
            "displayName": "Code Evaluator Request"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:HumanEvaluatorRequest"
            },
            "displayName": "Human Evaluator Request"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:ExternalEvaluatorRequest"
            },
            "displayName": "External Evaluator Request"
          }
        ]
      }
    },
    "type_evaluators:SrcExternalAppModelsV5EvaluatorsEvaluatorRequestSpec": {
      "name": "SrcExternalAppModelsV5EvaluatorsEvaluatorRequestSpec",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "id",
              "value": "type_:LlmEvaluatorRequest"
            },
            "displayName": "Llm Evaluator Request"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:CodeEvaluatorRequest"
            },
            "displayName": "Code Evaluator Request"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:HumanEvaluatorRequest"
            },
            "displayName": "Human Evaluator Request"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:ExternalEvaluatorRequest"
            },
            "displayName": "External Evaluator Request"
          }
        ]
      }
    },
    "type_:BooleanEvaluatorStatsResponse": {
      "description": "Base attributes for stats for an Evaluator Version-Evaluated Version pair\nin the Evaluation Report.",
      "name": "BooleanEvaluatorStatsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Evaluator Version.",
            "key": "evaluator_version_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The total number of Logs generated by this Evaluator Version on the Evaluated Version's Logs. This includes Nulls and Errors.",
            "key": "total_logs",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "The total number of Evaluator judgments for this Evaluator Version. This excludes Nulls and Errors.",
            "key": "num_judgments",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "The total number of null judgments (i.e. abstentions) for this Evaluator Version.",
            "key": "num_nulls",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "The total number of errored Evaluators for this Evaluator Version.",
            "key": "num_errors",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "The total number of `True` judgments for this Evaluator Version.",
            "key": "num_true",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "The total number of `False` judgments for this Evaluator Version.",
            "key": "num_false",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "type_:ChatMessageContentItem": {
      "name": "ChatMessageContentItem",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "id",
              "value": "type_:TextChatContent"
            },
            "displayName": "Text Chat Content"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:ImageChatContent"
            },
            "displayName": "Image Chat Content"
          }
        ]
      }
    },
    "type_:ChatMessageContent": {
      "description": "The content of the message.",
      "name": "ChatMessageContent",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:ChatMessageContentItem"
              }
            }
          }
        ]
      }
    },
    "type_:ChatMessage": {
      "name": "ChatMessage",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The content of the message.",
            "key": "content",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:ChatMessageContent"
              }
            }
          },
          {
            "description": "Optional name of the message author.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Tool call that this message is responding to.",
            "key": "tool_call_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Role of the message author.",
            "key": "role",
            "valueType": {
              "type": "id",
              "value": "type_:ChatRole"
            }
          },
          {
            "description": "A list of tool calls requested by the assistant.",
            "key": "tool_calls",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:ToolCall"
                }
              }
            }
          }
        ]
      }
    },
    "type_:ChatRole": {
      "description": "An enumeration.",
      "name": "ChatRole",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "user"
          },
          {
            "value": "assistant"
          },
          {
            "value": "system"
          },
          {
            "value": "tool"
          }
        ]
      }
    },
    "type_:CodeEvaluatorRequest": {
      "name": "CodeEvaluatorRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Whether this Evaluator is target-free or target-required.",
            "key": "arguments_type",
            "valueType": {
              "type": "id",
              "value": "type_:EvaluatorArgumentsType"
            }
          },
          {
            "description": "The type of the return value of the Evaluator.",
            "key": "return_type",
            "valueType": {
              "type": "id",
              "value": "type_:EvaluatorReturnTypeEnum"
            }
          },
          {
            "description": "Additional fields to describe the Evaluator. Helpful to separate Evaluator versions from each other with details on how they were created or used.",
            "key": "attributes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "key": "evaluator_type",
            "valueType": {
              "type": "literal",
              "value": {
                "type": "stringLiteral",
                "value": "python"
              }
            }
          },
          {
            "description": "The code for the Evaluator. This code will be executed in a sandboxed environment.",
            "key": "code",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "type_:CommitRequest": {
      "name": "CommitRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Message describing the changes made.",
            "key": "commit_message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "type_:CreateDatapointRequestTargetValue": {
      "name": "CreateDatapointRequestTargetValue",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "type": {
              "type": "list",
              "itemType": {
                "type": "unknown"
              }
            }
          },
          {
            "type": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          }
        ]
      }
    },
    "type_:CreateDatapointRequest": {
      "name": "CreateDatapointRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The inputs to the prompt template.",
            "key": "inputs",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "List of chat messages to provide to the model.",
            "key": "messages",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:ChatMessage"
                }
              }
            }
          },
          {
            "description": "Object with criteria necessary to evaluate generations with this Datapoint. This is passed in as an argument to Evaluators when used in an Evaluation.",
            "key": "target",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "id",
                  "value": "type_:CreateDatapointRequestTargetValue"
                }
              }
            }
          }
        ]
      }
    },
    "type_:CreateEvaluatorLogResponse": {
      "name": "CreateEvaluatorLogResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "String identifier of the new Log.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Identifier of the evaluated parent Log.",
            "key": "parent_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Identifier of the Session containing both the parent and the new child Log. If the parent Log does not belong to a Session, a new Session is created with this ID.",
            "key": "session_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Identifier of Evaluator Version for which the Log was registered.",
            "key": "version_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "type_:CreateFlowLogResponse": {
      "description": "Response for a Flow Log.",
      "name": "CreateFlowLogResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Log.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Unique identifier for the Flow.",
            "key": "flow_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Unique identifier for the Flow Version.",
            "key": "version_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Status of the Trace. When a Trace is marked as `complete`, no more Logs can be added to it. Monitoring Evaluators will only run on `complete` Traces.",
            "key": "trace_status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:TraceStatus"
              }
            }
          }
        ]
      }
    },
    "type_:CreatePromptLogResponse": {
      "name": "CreatePromptLogResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "String ID of log.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "ID of the Prompt the log belongs to.",
            "key": "prompt_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "ID of the specific version of the Prompt.",
            "key": "version_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "String ID of session the log belongs to.",
            "key": "session_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "type_:CreateToolLogResponse": {
      "name": "CreateToolLogResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "String ID of log.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "ID of the Tool the log belongs to.",
            "key": "tool_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "ID of the specific version of the Tool.",
            "key": "version_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "String ID of session the log belongs to.",
            "key": "session_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "type_:DashboardConfiguration": {
      "name": "DashboardConfiguration",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "time_unit",
            "valueType": {
              "type": "id",
              "value": "type_:TimeUnit"
            }
          },
          {
            "key": "time_range_days",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "model_config_ids",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "type_:DatapointResponseTargetValue": {
      "name": "DatapointResponseTargetValue",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "type": {
              "type": "list",
              "itemType": {
                "type": "unknown"
              }
            }
          },
          {
            "type": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          }
        ]
      }
    },
    "type_:DatapointResponse": {
      "name": "DatapointResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The inputs to the prompt template.",
            "key": "inputs",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "List of chat messages to provide to the model.",
            "key": "messages",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:ChatMessage"
                }
              }
            }
          },
          {
            "description": "Object with criteria necessary to evaluate generations with this Datapoint. This is passed in as an argument to Evaluators when used in an Evaluation.",
            "key": "target",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "id",
                  "value": "type_:DatapointResponseTargetValue"
                }
              }
            }
          },
          {
            "description": "Unique identifier for the Datapoint. Starts with `dp_`.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "type_:DatasetResponse": {
      "description": "Base type that all File Responses should inherit from.\n\nAttributes defined here are common to all File Responses and should be overridden\nin the inheriting classes with documentation and appropriate Field definitions.",
      "name": "DatasetResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Path of the Dataset, including the name, which is used as a unique identifier.",
            "key": "path",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Unique identifier for the Dataset. Starts with `ds_`.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "ID of the directory that the file is in on Humanloop.",
            "key": "directory_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Name of the Dataset, which is used as a unique identifier.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Unique identifier for the specific Dataset Version. If no query params provided, the default deployed Dataset Version is returned. Starts with `dsv_`.",
            "key": "version_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "literal",
                "value": {
                  "type": "stringLiteral",
                  "value": "dataset"
                }
              }
            }
          },
          {
            "description": "The list of environments the Dataset Version is deployed to.",
            "key": "environments",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:EnvironmentResponse"
                }
              }
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "key": "updated_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "description": "The user who created the Dataset.",
            "key": "created_by",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:UserResponse"
              }
            }
          },
          {
            "description": "The status of the Dataset Version.",
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "type_:VersionStatus"
            }
          },
          {
            "key": "last_used_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "description": "Message describing the changes made. If provided, a committed version of the Dataset is created. Otherwise, an uncommitted version is created.",
            "key": "commit_message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The number of Datapoints in this Dataset version.",
            "key": "datapoints_count",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "The list of Datapoints in this Dataset version. Only provided if explicitly requested.",
            "key": "datapoints",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:DatapointResponse"
                }
              }
            }
          },
          {
            "description": "Additional fields to describe the Dataset. Helpful to separate Dataset versions from each other with details on how they were created or used.",
            "key": "attributes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "type_:EnvironmentResponse": {
      "name": "EnvironmentResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "tag",
            "valueType": {
              "type": "id",
              "value": "type_:EnvironmentTag"
            }
          }
        ]
      }
    },
    "type_:EnvironmentTag": {
      "description": "An enumeration.",
      "name": "EnvironmentTag",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "default"
          },
          {
            "value": "other"
          }
        ]
      }
    },
    "type_:EvaluatedVersionResponse": {
      "name": "EvaluatedVersionResponse",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "id",
              "value": "type_:PromptResponse"
            },
            "displayName": "Prompt Response"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:ToolResponse"
            },
            "displayName": "Tool Response"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:EvaluatorResponse"
            },
            "displayName": "Evaluator Response"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:FlowResponse"
            },
            "displayName": "Flow Response"
          }
        ]
      }
    },
    "type_:EvaluateeRequest": {
      "description": "Specification of a File version on Humanloop.\n\nThis can be done in a couple of ways:\n\n- Specifying `version_id` directly.\n- Specifying a File (and optionally an Environment).\n  - A File can be specified by either `path` or `file_id`.\n  - An Environment can be specified by `environment_id`. If no Environment is specified, the default Environment is used.",
      "name": "EvaluateeRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the File Version. If provided, none of the other fields should be specified.",
            "key": "version_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Path identifying a File. Provide either this or `file_id` if you want to specify a File.",
            "key": "path",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Unique identifier for the File. Provide either this or `path` if you want to specify a File.",
            "key": "file_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Name of the Environment a Version is deployed to. Only provide this when specifying a File. If not provided (and a File is specified), the default Environment is used.",
            "key": "environment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Unique identifier for the batch of Logs to include in the Evaluation Report.",
            "key": "batch_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Whether the Prompt/Tool is orchestrated by Humanloop. Default is `True`. If `False`, a log for the Prompt/Tool should be submitted by the user via the API.",
            "key": "orchestrated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "type_:EvaluateeResponse": {
      "description": "Version of the Evaluatee being evaluated.",
      "name": "EvaluateeResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "version",
            "valueType": {
              "type": "id",
              "value": "type_:EvaluatedVersionResponse"
            }
          },
          {
            "description": "Unique identifier for the batch of Logs to include in the Evaluation Report.",
            "key": "batch_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Whether the Prompt/Tool is orchestrated by Humanloop. Default is `True`. If `False`, a log for the Prompt/Tool should be submitted by the user via the API.",
            "key": "orchestrated",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Pinned Evaluatees are shown in Humanloop's Overview, allowing you to use them as baselines for comparison.",
            "key": "pinned",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "When the Evaluatee was added to the Evaluation.",
            "key": "added_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime"
                }
              }
            }
          }
        ]
      }
    },
    "type_:EvaluationEvaluatorResponse": {
      "name": "EvaluationEvaluatorResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "version",
            "valueType": {
              "type": "id",
              "value": "type_:EvaluatorResponse"
            }
          },
          {
            "description": "Whether the Evaluator is orchestrated by Humanloop. Default is `True`. If `False`, a log for the Evaluator should be submitted by the user via the API.",
            "key": "orchestrated",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "When the Evaluator was added to the Evaluation.",
            "key": "added_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          }
        ]
      }
    },
    "type_:EvaluationReportLogResponse": {
      "name": "EvaluationReportLogResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The version of the Prompt, Tool or Evaluator that the Log belongs to.",
            "key": "evaluated_version",
            "valueType": {
              "type": "id",
              "value": "type_:EvaluatedVersionResponse"
            }
          },
          {
            "description": "The Datapoint used to generate the Log",
            "key": "datapoint",
            "valueType": {
              "type": "id",
              "value": "type_:DatapointResponse"
            }
          },
          {
            "description": "The Log that was evaluated by the Evaluator.",
            "key": "log",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:LogResponse"
              }
            }
          },
          {
            "description": "The Evaluator Logs containing the judgments for the Log.",
            "key": "evaluator_logs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:LogResponse"
              }
            }
          }
        ]
      }
    },
    "type_:EvaluationResponse": {
      "name": "EvaluationResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Evaluation. Starts with `evr`.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The Dataset used in the Evaluation.",
            "key": "dataset",
            "valueType": {
              "type": "id",
              "value": "type_:DatasetResponse"
            }
          },
          {
            "description": "The Prompt/Tool Versions included in the Evaluation.",
            "key": "evaluatees",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:EvaluateeResponse"
              }
            }
          },
          {
            "description": "The Evaluator Versions used to evaluate.",
            "key": "evaluators",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:EvaluationEvaluatorResponse"
              }
            }
          },
          {
            "description": "The current status of the Evaluation.\n\n- `\"pending\"`: The Evaluation has been created but is not actively being worked on by Humanloop.\n- `\"running\"`: Humanloop is checking for any missing Logs and Evaluator Logs, and will generate them where appropriate.\n- `\"completed\"`: All Logs an Evaluator Logs have been generated.\n- `\"cancelled\"`: The Evaluation has been cancelled by the user. Humanloop will stop generating Logs and Evaluator Logs.",
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "type_:EvaluationStatus"
            }
          },
          {
            "description": "Name of the Evaluation to help identify it. Must be unique among Evaluations associated with File.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Unique identifier for the File associated with the Evaluation.",
            "key": "file_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "key": "created_by",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:UserResponse"
              }
            }
          },
          {
            "key": "updated_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "description": "URL to view the Evaluation on the Humanloop.",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "type_:EvaluationStats": {
      "name": "EvaluationStats",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Stats for the Evaluation Report as a whole.",
            "key": "overall_stats",
            "valueType": {
              "type": "id",
              "value": "type_:OverallStats"
            }
          },
          {
            "description": "Stats for each Evaluated Version in the Evaluation Report.",
            "key": "version_stats",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:VersionStatsResponse"
              }
            }
          },
          {
            "description": "A summary string report of the Evaluation's progress you can print to the command line;helpful when integrating Evaluations with CI/CD.",
            "key": "progress",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A summary string report of the Evaluation you can print to command line;helpful when integrating Evaluations with CI/CD.",
            "key": "report",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The current status of the Evaluation.",
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "type_:EvaluationStatus"
            }
          }
        ]
      }
    },
    "type_:EvaluationStatus": {
      "description": "Status of an evaluation.",
      "name": "EvaluationStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "pending"
          },
          {
            "value": "running"
          },
          {
            "value": "completed"
          },
          {
            "value": "cancelled"
          }
        ]
      }
    },
    "type_:EvaluatorActivationDeactivationRequestActivateItem": {
      "name": "EvaluatorActivationDeactivationRequestActivateItem",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "id",
              "value": "type_:MonitoringEvaluatorVersionRequest"
            },
            "displayName": "Monitoring Evaluator Version Request"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:MonitoringEvaluatorEnvironmentRequest"
            },
            "displayName": "Monitoring Evaluator Environment Request"
          }
        ]
      }
    },
    "type_:EvaluatorActivationDeactivationRequestDeactivateItem": {
      "name": "EvaluatorActivationDeactivationRequestDeactivateItem",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "id",
              "value": "type_:MonitoringEvaluatorVersionRequest"
            },
            "displayName": "Monitoring Evaluator Version Request"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:MonitoringEvaluatorEnvironmentRequest"
            },
            "displayName": "Monitoring Evaluator Environment Request"
          }
        ]
      }
    },
    "type_:EvaluatorActivationDeactivationRequest": {
      "name": "EvaluatorActivationDeactivationRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Evaluators to activate for Monitoring. These will be automatically run on new Logs.",
            "key": "activate",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:EvaluatorActivationDeactivationRequestActivateItem"
                }
              }
            }
          },
          {
            "description": "Evaluators to deactivate. These will not be run on new Logs.",
            "key": "deactivate",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:EvaluatorActivationDeactivationRequestDeactivateItem"
                }
              }
            }
          }
        ]
      }
    },
    "type_:EvaluatorAggregate": {
      "name": "EvaluatorAggregate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The aggregated value of the evaluator.",
            "key": "value",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "description": "ID of the evaluator.",
            "key": "evaluator_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "ID of the evaluator version.",
            "key": "evaluator_version_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "key": "updated_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          }
        ]
      }
    },
    "type_:EvaluatorArgumentsType": {
      "description": "Enum representing the possible argument types of an evaluator.",
      "name": "EvaluatorArgumentsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "target_free"
          },
          {
            "value": "target_required"
          }
        ]
      }
    },
    "type_:EvaluatorJudgmentNumberLimit": {
      "name": "EvaluatorJudgmentNumberLimit",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The minimum value that can be selected.",
            "key": "min",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The maximum value that can be selected.",
            "key": "max",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The step size for the number input.",
            "key": "step",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ]
      }
    },
    "type_:EvaluatorJudgmentOptionResponse": {
      "name": "EvaluatorJudgmentOptionResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the option.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Whether this option should be considered positive or negative.",
            "key": "valence",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:Valence"
              }
            }
          }
        ]
      }
    },
    "type_:EvaluatorLogResponseJudgment": {
      "description": "Evaluator assessment of the Log.",
      "name": "EvaluatorLogResponseJudgment",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          }
        ]
      }
    },
    "type_:EvaluatorLogResponse": {
      "description": "General request for creating a Log",
      "name": "EvaluatorLogResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "When the logged event started.",
            "key": "start_time",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime"
                }
              }
            }
          },
          {
            "description": "When the logged event ended.",
            "key": "end_time",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime"
                }
              }
            }
          },
          {
            "description": "Generated output from your model for the provided inputs. Can be `None` if logging an error, or if creating a parent Log with the intention to populate it later.",
            "key": "output",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "User defined timestamp for when the log was created.",
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime"
                }
              }
            }
          },
          {
            "description": "Error message if the log is an error.",
            "key": "error",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Duration of the logged event in seconds.",
            "key": "provider_latency",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Captured log and debug statements.",
            "key": "stdout",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Raw request sent to provider.",
            "key": "provider_request",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "description": "Raw response received the provider.",
            "key": "provider_response",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "description": "The inputs passed to the prompt template.",
            "key": "inputs",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "description": "Identifies where the model was called from.",
            "key": "source",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Any additional metadata to record.",
            "key": "metadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "description": "Identifier of the evaluated Log. The newly created Log will have this one set as parent.",
            "key": "parent_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Unique identifier for the Datapoint that this Log is derived from. This can be used by Humanloop to associate Logs to Evaluations. If provided, Humanloop will automatically associate this Log to Evaluations that require a Log for this Datapoint-Version pair.",
            "key": "source_datapoint_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The ID of the parent Log to nest this Log under in a Trace.",
            "key": "trace_parent_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of Batch IDs that this Log is part of. Batches are used to group Logs together for offline Evaluations",
            "key": "batches",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "End-user ID related to the Log.",
            "key": "user",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of the Environment the Log is associated to.",
            "key": "environment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Whether the request/response payloads will be stored on Humanloop.",
            "key": "save",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Evaluator assessment of the Log.",
            "key": "judgment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:EvaluatorLogResponseJudgment"
              }
            }
          },
          {
            "description": "Unique identifier for the Log.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "List of Evaluator Logs associated with the Log. These contain Evaluator judgments on the Log.",
            "key": "evaluator_logs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:EvaluatorLogResponse"
              }
            }
          },
          {
            "description": "Identifier for the Flow that the Trace belongs to.",
            "key": "trace_flow_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Identifier for the Trace that the Log belongs to.",
            "key": "trace_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Logs nested under this Log in the Trace.",
            "key": "trace_children",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:LogResponse"
                }
              }
            }
          },
          {
            "description": "Evaluator used to generate the judgment.",
            "key": "evaluator",
            "valueType": {
              "type": "id",
              "value": "type_:EvaluatorResponse"
            }
          },
          {
            "description": "The Log that was evaluated. Only provided if the ?include_parent query parameter is set for the",
            "key": "parent",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:LogResponse"
              }
            }
          }
        ]
      }
    },
    "type_:EvaluatorResponseSpec": {
      "name": "EvaluatorResponseSpec",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "id",
              "value": "type_:LlmEvaluatorRequest"
            },
            "displayName": "Llm Evaluator Request"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:CodeEvaluatorRequest"
            },
            "displayName": "Code Evaluator Request"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:HumanEvaluatorRequest"
            },
            "displayName": "Human Evaluator Request"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:ExternalEvaluatorRequest"
            },
            "displayName": "External Evaluator Request"
          }
        ]
      }
    },
    "type_:EvaluatorResponse": {
      "description": "Version of the Evaluator used to provide judgments.",
      "name": "EvaluatorResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Path of the Evaluator including the Evaluator name, which is used as a unique identifier.",
            "key": "path",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Unique identifier for the Evaluator.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "ID of the directory that the file is in on Humanloop.",
            "key": "directory_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Message describing the changes made.",
            "key": "commit_message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "spec",
            "valueType": {
              "type": "id",
              "value": "type_:EvaluatorResponseSpec"
            }
          },
          {
            "description": "Name of the Evaluator, which is used as a unique identifier.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Unique identifier for the specific Evaluator Version. If no query params provided, the default deployed Evaluator Version is returned.",
            "key": "version_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "literal",
                "value": {
                  "type": "stringLiteral",
                  "value": "evaluator"
                }
              }
            }
          },
          {
            "description": "The list of environments the Evaluator Version is deployed to.",
            "key": "environments",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:EnvironmentResponse"
                }
              }
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "key": "updated_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "description": "The user who created the Evaluator.",
            "key": "created_by",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:UserResponse"
              }
            }
          },
          {
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "type_:VersionStatus"
            }
          },
          {
            "key": "last_used_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "description": "The number of logs that have been generated for this Evaluator Version",
            "key": "version_logs_count",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "The number of logs that have been generated across all Evaluator Versions",
            "key": "total_logs_count",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "Inputs associated to the Evaluator. Inputs correspond to any of the variables used within the Evaluator template.",
            "key": "inputs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:InputResponse"
              }
            }
          },
          {
            "description": "Evaluators that have been attached to this Evaluator that are used for monitoring logs.",
            "key": "evaluators",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:MonitoringEvaluatorResponse"
                }
              }
            }
          },
          {
            "description": "Aggregation of Evaluator results for the Evaluator Version.",
            "key": "evaluator_aggregates",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:EvaluatorAggregate"
                }
              }
            }
          },
          {
            "description": "Additional fields to describe the Evaluator. Helpful to separate Evaluator versions from each other with details on how they were created or used.",
            "key": "attributes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "type_:EvaluatorReturnTypeEnum": {
      "description": "Enum representing the possible return types of an evaluator.",
      "name": "EvaluatorReturnTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "boolean"
          },
          {
            "value": "number"
          },
          {
            "value": "select"
          },
          {
            "value": "multi_select"
          },
          {
            "value": "text"
          }
        ]
      }
    },
    "type_:ExternalEvaluatorRequest": {
      "name": "ExternalEvaluatorRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Whether this Evaluator is target-free or target-required.",
            "key": "arguments_type",
            "valueType": {
              "type": "id",
              "value": "type_:EvaluatorArgumentsType"
            }
          },
          {
            "description": "The type of the return value of the Evaluator.",
            "key": "return_type",
            "valueType": {
              "type": "id",
              "value": "type_:EvaluatorReturnTypeEnum"
            }
          },
          {
            "description": "Additional fields to describe the Evaluator. Helpful to separate Evaluator versions from each other with details on how they were created or used.",
            "key": "attributes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "key": "evaluator_type",
            "valueType": {
              "type": "literal",
              "value": {
                "type": "stringLiteral",
                "value": "external"
              }
            }
          }
        ]
      }
    },
    "type_:FileEnvironmentResponseFile": {
      "description": "The version of the File that is deployed to the Environment, if one is deployed.",
      "name": "FileEnvironmentResponseFile",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "id",
              "value": "type_:PromptResponse"
            },
            "displayName": "Prompt Response"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:ToolResponse"
            },
            "displayName": "Tool Response"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:DatasetResponse"
            },
            "displayName": "Dataset Response"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:EvaluatorResponse"
            },
            "displayName": "Evaluator Response"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:FlowResponse"
            },
            "displayName": "Flow Response"
          }
        ]
      }
    },
    "type_:FileEnvironmentResponse": {
      "description": "Response model for the List Environments endpoint under Files.\n\nContains the deployed version of the File, if one is deployed to the Environment.",
      "name": "FileEnvironmentResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "tag",
            "valueType": {
              "type": "id",
              "value": "type_:EnvironmentTag"
            }
          },
          {
            "description": "The version of the File that is deployed to the Environment, if one is deployed.",
            "key": "file",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:FileEnvironmentResponseFile"
              }
            }
          }
        ]
      }
    },
    "type_:FileRequest": {
      "name": "FileRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "ID for an existing File.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Path of the File, including the name. This locates the File in the Humanloop filesystem and is used as as a unique identifier. For example: `folder/name` or just `name`.",
            "key": "path",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "type_:FileType": {
      "description": "Enum for File types.",
      "name": "FileType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "prompt"
          },
          {
            "value": "tool"
          },
          {
            "value": "dataset"
          },
          {
            "value": "evaluator"
          },
          {
            "value": "flow"
          }
        ]
      }
    },
    "type_:FlowKernelRequest": {
      "name": "FlowKernelRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A key-value object identifying the Flow Version.",
            "key": "attributes",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          }
        ]
      }
    },
    "type_:FlowLogResponse": {
      "description": "General request for creating a Log",
      "name": "FlowLogResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "When the logged event started.",
            "key": "start_time",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime"
                }
              }
            }
          },
          {
            "description": "When the logged event ended.",
            "key": "end_time",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime"
                }
              }
            }
          },
          {
            "description": "Generated output from your model for the provided inputs. Can be `None` if logging an error, or if creating a parent Log with the intention to populate it later.",
            "key": "output",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "User defined timestamp for when the log was created.",
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime"
                }
              }
            }
          },
          {
            "description": "Error message if the log is an error.",
            "key": "error",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Duration of the logged event in seconds.",
            "key": "provider_latency",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Captured log and debug statements.",
            "key": "stdout",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Raw request sent to provider.",
            "key": "provider_request",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "description": "Raw response received the provider.",
            "key": "provider_response",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "description": "The inputs passed to the Flow Log.",
            "key": "inputs",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "description": "Identifies where the model was called from.",
            "key": "source",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Any additional metadata to record.",
            "key": "metadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "description": "Unique identifier for the Datapoint that this Log is derived from. This can be used by Humanloop to associate Logs to Evaluations. If provided, Humanloop will automatically associate this Log to Evaluations that require a Log for this Datapoint-Version pair.",
            "key": "source_datapoint_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The ID of the parent Log to nest this Log under in a Trace.",
            "key": "trace_parent_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of Batch IDs that this Log is part of. Batches are used to group Logs together for offline Evaluations",
            "key": "batches",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "End-user ID related to the Log.",
            "key": "user",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of the Environment the Log is associated to.",
            "key": "environment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Whether the request/response payloads will be stored on Humanloop.",
            "key": "save",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Unique identifier for the Log.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "List of Evaluator Logs associated with the Log. These contain Evaluator judgments on the Log.",
            "key": "evaluator_logs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:EvaluatorLogResponse"
              }
            }
          },
          {
            "description": "Identifier for the Flow that the Trace belongs to.",
            "key": "trace_flow_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Identifier for the Trace that the Log belongs to.",
            "key": "trace_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Logs nested under this Log in the Trace.",
            "key": "trace_children",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:LogResponse"
                }
              }
            }
          },
          {
            "description": "Flow used to generate the Log.",
            "key": "flow",
            "valueType": {
              "type": "id",
              "value": "type_:FlowResponse"
            }
          },
          {
            "description": "Status of the Trace. When a Trace is marked as `complete`, no more Logs can be added to it. Monitoring Evaluators will only run on completed Traces.",
            "key": "trace_status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:TraceStatus"
              }
            }
          }
        ]
      }
    },
    "type_:FlowResponse": {
      "description": "Response model for a Flow.",
      "name": "FlowResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Path of the Flow, including the name, which is used as a unique identifier.",
            "key": "path",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Unique identifier for the Flow. Starts with fl\\_.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "ID of the directory that the file is in on Humanloop.",
            "key": "directory_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A key-value object identifying the Flow Version.",
            "key": "attributes",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          },
          {
            "description": "Message describing the changes made. If provided, a committed version of the Flow is created. Otherwise, an uncommitted version is created.",
            "key": "commit_message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Name of the Flow.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Unique identifier for the specific Flow Version. If no query params provided, the default deployed Flow Version is returned.",
            "key": "version_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "literal",
                "value": {
                  "type": "stringLiteral",
                  "value": "flow"
                }
              }
            }
          },
          {
            "description": "The list of environments the Flow Version is deployed to.",
            "key": "environments",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:EnvironmentResponse"
                }
              }
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "key": "updated_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "description": "The user who created the Flow.",
            "key": "created_by",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:UserResponse"
              }
            }
          },
          {
            "description": "The status of the Flow Version.",
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "type_:VersionStatus"
            }
          },
          {
            "key": "last_used_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "description": "The number of logs that have been generated for this Flow Version",
            "key": "version_logs_count",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "Aggregation of Evaluator results for the Flow Version.",
            "key": "evaluator_aggregates",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:EvaluatorAggregate"
                }
              }
            }
          },
          {
            "description": "The list of Monitoring Evaluators associated with the Flow Version.",
            "key": "evaluators",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:MonitoringEvaluatorResponse"
                }
              }
            }
          }
        ]
      }
    },
    "type_:FunctionTool": {
      "description": "A function tool to be called by the model where user owns runtime.",
      "name": "FunctionTool",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "arguments",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "type_:FunctionToolChoice": {
      "description": "A function tool to be called by the model where user owns runtime.",
      "name": "FunctionToolChoice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "type_:HttpValidationError": {
      "name": "HttpValidationError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "detail",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:ValidationError"
                }
              }
            }
          }
        ]
      }
    },
    "type_:HumanEvaluatorRequestReturnType": {
      "description": "The type of the return value of the Evaluator.",
      "name": "HumanEvaluatorRequestReturnType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "select"
          },
          {
            "value": "multi_select"
          },
          {
            "value": "text"
          },
          {
            "value": "number"
          },
          {
            "value": "boolean"
          }
        ]
      }
    },
    "type_:HumanEvaluatorRequest": {
      "name": "HumanEvaluatorRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Whether this Evaluator is target-free or target-required.",
            "key": "arguments_type",
            "valueType": {
              "type": "id",
              "value": "type_:EvaluatorArgumentsType"
            }
          },
          {
            "description": "The type of the return value of the Evaluator.",
            "key": "return_type",
            "valueType": {
              "type": "id",
              "value": "type_:HumanEvaluatorRequestReturnType"
            }
          },
          {
            "description": "Additional fields to describe the Evaluator. Helpful to separate Evaluator versions from each other with details on how they were created or used.",
            "key": "attributes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "key": "evaluator_type",
            "valueType": {
              "type": "literal",
              "value": {
                "type": "stringLiteral",
                "value": "human"
              }
            }
          },
          {
            "description": "Instructions for the Human annotating the .",
            "key": "instructions",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The options that the Human annotator can choose from.",
            "key": "options",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:EvaluatorJudgmentOptionResponse"
                }
              }
            }
          },
          {
            "description": "Limits on the judgment that can be applied. Only for Evaluators with `return_type` of `'number'`.",
            "key": "number_limits",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:EvaluatorJudgmentNumberLimit"
              }
            }
          },
          {
            "description": "The valence of the number judgment. Only for Evaluators with `return_type` of `'number'`. If 'positive', a higher number is better. If 'negative', a lower number is better.",
            "key": "number_valence",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:Valence"
              }
            }
          }
        ]
      }
    },
    "type_:ImageChatContent": {
      "name": "ImageChatContent",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "type": "literal",
              "value": {
                "type": "stringLiteral",
                "value": "image_url"
              }
            }
          },
          {
            "description": "The message's image content.",
            "key": "image_url",
            "valueType": {
              "type": "id",
              "value": "type_:ImageUrl"
            }
          }
        ]
      }
    },
    "type_:ImageUrlDetail": {
      "description": "Specify the detail level of the image provided to the model. For more details see: https://platform.openai.com/docs/guides/vision/low-or-high-fidelity-image-understanding",
      "name": "ImageUrlDetail",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "high"
          },
          {
            "value": "low"
          },
          {
            "value": "auto"
          }
        ]
      }
    },
    "type_:ImageUrl": {
      "name": "ImageUrl",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Either a URL of the image or the base64 encoded image data.",
            "key": "url",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Specify the detail level of the image provided to the model. For more details see: https://platform.openai.com/docs/guides/vision/low-or-high-fidelity-image-understanding",
            "key": "detail",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:ImageUrlDetail"
              }
            }
          }
        ]
      }
    },
    "type_:InputResponse": {
      "name": "InputResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Type of input.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "type_:LlmEvaluatorRequest": {
      "name": "LlmEvaluatorRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Whether this Evaluator is target-free or target-required.",
            "key": "arguments_type",
            "valueType": {
              "type": "id",
              "value": "type_:EvaluatorArgumentsType"
            }
          },
          {
            "description": "The type of the return value of the Evaluator.",
            "key": "return_type",
            "valueType": {
              "type": "id",
              "value": "type_:EvaluatorReturnTypeEnum"
            }
          },
          {
            "description": "Additional fields to describe the Evaluator. Helpful to separate Evaluator versions from each other with details on how they were created or used.",
            "key": "attributes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "key": "evaluator_type",
            "valueType": {
              "type": "literal",
              "value": {
                "type": "stringLiteral",
                "value": "llm"
              }
            }
          },
          {
            "description": "The prompt parameters used to generate.",
            "key": "prompt",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:PromptKernelRequest"
              }
            }
          }
        ]
      }
    },
    "type_:LinkedToolResponse": {
      "name": "LinkedToolResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Name for the tool referenced by the model.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Description of the tool referenced by the model",
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "If true, forces the model to output json data in the structure of the parameters schema.",
            "key": "strict",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Parameters needed to run the Tool, defined in JSON Schema format: https://json-schema.org/",
            "key": "parameters",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "description": "Unique identifier for the Tool linked.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Unique identifier for the Tool Version linked.",
            "key": "version_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "type_:ListDatasets": {
      "name": "ListDatasets",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The list of Datasets.",
            "key": "records",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:DatasetResponse"
              }
            }
          }
        ]
      }
    },
    "type_:ListEvaluators": {
      "name": "ListEvaluators",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The list of Evaluators.",
            "key": "records",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:EvaluatorResponse"
              }
            }
          }
        ]
      }
    },
    "type_:ListFlows": {
      "name": "ListFlows",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The list of Flows.",
            "key": "records",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:FlowResponse"
              }
            }
          }
        ]
      }
    },
    "type_:ListPrompts": {
      "name": "ListPrompts",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The list of Prompts.",
            "key": "records",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:PromptResponse"
              }
            }
          }
        ]
      }
    },
    "type_:ListTools": {
      "name": "ListTools",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The list of Tools.",
            "key": "records",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:ToolResponse"
              }
            }
          }
        ]
      }
    },
    "type_:LogResponse": {
      "name": "LogResponse",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "id",
              "value": "type_:PromptLogResponse"
            },
            "displayName": "Prompt Log Response"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:ToolLogResponse"
            },
            "displayName": "Tool Log Response"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:EvaluatorLogResponse"
            },
            "displayName": "Evaluator Log Response"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:FlowLogResponse"
            },
            "displayName": "Flow Log Response"
          }
        ]
      }
    },
    "type_:ModelEndpoints": {
      "description": "Supported model provider endpoints.",
      "name": "ModelEndpoints",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "complete"
          },
          {
            "value": "chat"
          },
          {
            "value": "edit"
          }
        ]
      }
    },
    "type_:ModelProviders": {
      "description": "Supported model providers.",
      "name": "ModelProviders",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "openai"
          },
          {
            "value": "openai_azure"
          },
          {
            "value": "mock"
          },
          {
            "value": "anthropic"
          },
          {
            "value": "bedrock"
          },
          {
            "value": "cohere"
          },
          {
            "value": "replicate"
          },
          {
            "value": "google"
          },
          {
            "value": "groq"
          }
        ]
      }
    },
    "type_:MonitoringEvaluatorEnvironmentRequest": {
      "name": "MonitoringEvaluatorEnvironmentRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Evaluator to be used for monitoring.",
            "key": "evaluator_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Unique identifier for the Environment. The Evaluator Version deployed to this Environment will be used for monitoring.",
            "key": "environment_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "type_:MonitoringEvaluatorResponse": {
      "name": "MonitoringEvaluatorResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The Evaluator Version used for monitoring. This can be a specific Version by ID, or a Version deployed to an Environment.",
            "key": "version_reference",
            "valueType": {
              "type": "id",
              "value": "type_:VersionReferenceResponse"
            }
          },
          {
            "description": "The deployed Version.",
            "key": "version",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:EvaluatorResponse"
              }
            }
          },
          {
            "description": "The state of the Monitoring Evaluator. Either `active` or `inactive`",
            "key": "state",
            "valueType": {
              "type": "id",
              "value": "type_:MonitoringEvaluatorState"
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "key": "updated_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          }
        ]
      }
    },
    "type_:MonitoringEvaluatorState": {
      "description": "State of an evaluator connected to a file",
      "name": "MonitoringEvaluatorState",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "active"
          },
          {
            "value": "inactive"
          }
        ]
      }
    },
    "type_:MonitoringEvaluatorVersionRequest": {
      "name": "MonitoringEvaluatorVersionRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Evaluator Version to be used for monitoring.",
            "key": "evaluator_version_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "type_:NumericEvaluatorStatsResponse": {
      "description": "Base attributes for stats for an Evaluator Version-Evaluated Version pair\nin the Evaluation Report.",
      "name": "NumericEvaluatorStatsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Evaluator Version.",
            "key": "evaluator_version_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The total number of Logs generated by this Evaluator Version on the Evaluated Version's Logs. This includes Nulls and Errors.",
            "key": "total_logs",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "The total number of Evaluator judgments for this Evaluator Version. This excludes Nulls and Errors.",
            "key": "num_judgments",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "The total number of null judgments (i.e. abstentions) for this Evaluator Version.",
            "key": "num_nulls",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "The total number of errored Evaluators for this Evaluator Version.",
            "key": "num_errors",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "mean",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "key": "std",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "key": "percentiles",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ]
      }
    },
    "type_:ObservabilityStatus": {
      "description": "Status of a Log for observability.\n\nObservability is implemented by running monitoring Evaluators on Logs.",
      "name": "ObservabilityStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "pending"
          },
          {
            "value": "running"
          },
          {
            "value": "completed"
          },
          {
            "value": "failed"
          }
        ]
      }
    },
    "type_:OverallStats": {
      "name": "OverallStats",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The total number of Datapoints in the Evaluation Report's Dataset Version.",
            "key": "num_datapoints",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "The total number of Logs in the Evaluation Report.",
            "key": "total_logs",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "The total number of Evaluator Logs in the Evaluation Report.",
            "key": "total_evaluator_logs",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "type_:PaginatedDatapointResponse": {
      "name": "PaginatedDatapointResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "records",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:DatapointResponse"
              }
            }
          },
          {
            "key": "page",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "size",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "total",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "type_:PaginatedDatasetResponse": {
      "name": "PaginatedDatasetResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "records",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:DatasetResponse"
              }
            }
          },
          {
            "key": "page",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "size",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "total",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "type_:PaginatedDataEvaluationReportLogResponse": {
      "name": "PaginatedDataEvaluationReportLogResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "records",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:EvaluationReportLogResponse"
              }
            }
          },
          {
            "key": "page",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "size",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "total",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "type_:PaginatedEvaluationResponse": {
      "name": "PaginatedEvaluationResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "records",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:EvaluationResponse"
              }
            }
          },
          {
            "key": "page",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "size",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "total",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "type_:PaginatedDataEvaluatorResponse": {
      "name": "PaginatedDataEvaluatorResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "records",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:EvaluatorResponse"
              }
            }
          },
          {
            "key": "page",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "size",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "total",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "type_:PaginatedDataFlowResponse": {
      "name": "PaginatedDataFlowResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "records",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:FlowResponse"
              }
            }
          },
          {
            "key": "page",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "size",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "total",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "type_:PaginatedDataLogResponse": {
      "name": "PaginatedDataLogResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "records",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:LogResponse"
              }
            }
          },
          {
            "key": "page",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "size",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "total",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "type_:PaginatedDataPromptResponse": {
      "name": "PaginatedDataPromptResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "records",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:PromptResponse"
              }
            }
          },
          {
            "key": "page",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "size",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "total",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "type_:PaginatedDataToolResponse": {
      "name": "PaginatedDataToolResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "records",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:ToolResponse"
              }
            }
          },
          {
            "key": "page",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "size",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "total",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "type_:PaginatedDataUnionPromptResponseToolResponseDatasetResponseEvaluatorResponseFlowResponseRecordsItem": {
      "name": "PaginatedDataUnionPromptResponseToolResponseDatasetResponseEvaluatorResponseFlowResponseRecordsItem",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "id",
              "value": "type_:PromptResponse"
            },
            "displayName": "Prompt Response"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:ToolResponse"
            },
            "displayName": "Tool Response"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:DatasetResponse"
            },
            "displayName": "Dataset Response"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:EvaluatorResponse"
            },
            "displayName": "Evaluator Response"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:FlowResponse"
            },
            "displayName": "Flow Response"
          }
        ]
      }
    },
    "type_:PaginatedDataUnionPromptResponseToolResponseDatasetResponseEvaluatorResponseFlowResponse": {
      "name": "PaginatedDataUnionPromptResponseToolResponseDatasetResponseEvaluatorResponseFlowResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "records",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:PaginatedDataUnionPromptResponseToolResponseDatasetResponseEvaluatorResponseFlowResponseRecordsItem"
              }
            }
          },
          {
            "key": "page",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "size",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "total",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "type_:PlatformAccessEnum": {
      "description": "An enumeration.",
      "name": "PlatformAccessEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "superadmin"
          },
          {
            "value": "supportadmin"
          },
          {
            "value": "user"
          }
        ]
      }
    },
    "type_:ProjectSortBy": {
      "description": "An enumeration.",
      "name": "ProjectSortBy",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "created_at"
          },
          {
            "value": "updated_at"
          },
          {
            "value": "name"
          }
        ]
      }
    },
    "type_:PromptCallLogResponse": {
      "description": "Sample specific response details for a Prompt call",
      "name": "PromptCallLogResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Generated output from your model for the provided inputs. Can be `None` if logging an error, or if creating a parent Log with the intention to populate it later.",
            "key": "output",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "User defined timestamp for when the log was created.",
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime"
                }
              }
            }
          },
          {
            "description": "Error message if the log is an error.",
            "key": "error",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Duration of the logged event in seconds.",
            "key": "provider_latency",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Captured log and debug statements.",
            "key": "stdout",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The message returned by the provider.",
            "key": "output_message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:ChatMessage"
              }
            }
          },
          {
            "description": "Number of tokens in the prompt used to generate the output.",
            "key": "prompt_tokens",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Number of tokens in the output generated by the model.",
            "key": "output_tokens",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Cost in dollars associated to the tokens in the prompt.",
            "key": "prompt_cost",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Cost in dollars associated to the tokens in the output.",
            "key": "output_cost",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Reason the generation finished.",
            "key": "finish_reason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The index of the sample in the batch.",
            "key": "index",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "type_:PromptCallResponseToolChoice": {
      "description": "Controls how the model uses tools. The following options are supported:\n\n- `'none'` means the model will not call any tool and instead generates a message; this is the default when no tools are provided as part of the Prompt.\n- `'auto'` means the model can decide to call one or more of the provided tools; this is the default when tools are provided as part of the Prompt.\n- `'required'` means the model can decide to call one or more of the provided tools.\n- `{'type': 'function', 'function': {name': <TOOL_NAME>}}` forces the model to use the named function.",
      "name": "PromptCallResponseToolChoice",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "literal",
              "value": {
                "type": "stringLiteral",
                "value": "none"
              }
            }
          },
          {
            "type": {
              "type": "literal",
              "value": {
                "type": "stringLiteral",
                "value": "auto"
              }
            }
          },
          {
            "type": {
              "type": "literal",
              "value": {
                "type": "stringLiteral",
                "value": "required"
              }
            }
          },
          {
            "type": {
              "type": "id",
              "value": "type_:ToolChoice"
            },
            "displayName": "Tool Choice"
          }
        ]
      }
    },
    "type_:PromptCallResponse": {
      "description": "Response model for a Prompt call with potentially multiple log samples.",
      "name": "PromptCallResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "When the logged event started.",
            "key": "start_time",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime"
                }
              }
            }
          },
          {
            "description": "When the logged event ended.",
            "key": "end_time",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime"
                }
              }
            }
          },
          {
            "description": "The messages passed to the to provider chat endpoint.",
            "key": "messages",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:ChatMessage"
                }
              }
            }
          },
          {
            "description": "Controls how the model uses tools. The following options are supported:\n\n- `'none'` means the model will not call any tool and instead generates a message; this is the default when no tools are provided as part of the Prompt.\n- `'auto'` means the model can decide to call one or more of the provided tools; this is the default when tools are provided as part of the Prompt.\n- `'required'` means the model can decide to call one or more of the provided tools.\n- `{'type': 'function', 'function': {name': <TOOL_NAME>}}` forces the model to use the named function.",
            "key": "tool_choice",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:PromptCallResponseToolChoice"
              }
            }
          },
          {
            "description": "Prompt used to generate the Log.",
            "key": "prompt",
            "valueType": {
              "type": "id",
              "value": "type_:PromptResponse"
            }
          },
          {
            "description": "The inputs passed to the prompt template.",
            "key": "inputs",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "description": "Identifies where the model was called from.",
            "key": "source",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Any additional metadata to record.",
            "key": "metadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "description": "Unique identifier for the Datapoint that this Log is derived from. This can be used by Humanloop to associate Logs to Evaluations. If provided, Humanloop will automatically associate this Log to Evaluations that require a Log for this Datapoint-Version pair.",
            "key": "source_datapoint_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The ID of the parent Log to nest this Log under in a Trace.",
            "key": "trace_parent_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Unique identifier for the Batch to add this Batch to. Batches are used to group Logs together for Evaluations. A Batch will be created if one with the given ID does not exist.",
            "key": "batch_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "End-user ID related to the Log.",
            "key": "user",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of the Environment the Log is associated to.",
            "key": "environment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Whether the request/response payloads will be stored on Humanloop.",
            "key": "save",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "ID of the log.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "ID of the Trace containing the Prompt Call Log.",
            "key": "trace_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The logs generated by the Prompt call.",
            "key": "logs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:PromptCallLogResponse"
              }
            }
          }
        ]
      }
    },
    "type_:PromptCallStreamResponse": {
      "description": "Response model for calling Prompt in streaming mode.",
      "name": "PromptCallStreamResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Generated output from your model for the provided inputs. Can be `None` if logging an error, or if creating a parent Log with the intention to populate it later.",
            "key": "output",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "User defined timestamp for when the log was created.",
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime"
                }
              }
            }
          },
          {
            "description": "Error message if the log is an error.",
            "key": "error",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Duration of the logged event in seconds.",
            "key": "provider_latency",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Captured log and debug statements.",
            "key": "stdout",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The message returned by the provider.",
            "key": "output_message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:ChatMessage"
              }
            }
          },
          {
            "description": "Number of tokens in the prompt used to generate the output.",
            "key": "prompt_tokens",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Number of tokens in the output generated by the model.",
            "key": "output_tokens",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Cost in dollars associated to the tokens in the prompt.",
            "key": "prompt_cost",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Cost in dollars associated to the tokens in the output.",
            "key": "output_cost",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Reason the generation finished.",
            "key": "finish_reason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The index of the sample in the batch.",
            "key": "index",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "ID of the log.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "ID of the Prompt the log belongs to.",
            "key": "prompt_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "ID of the specific version of the Prompt.",
            "key": "version_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "type_:PromptKernelRequestTemplate": {
      "description": "The template contains the main structure and instructions for the model, including input variables for dynamic values.\n\nFor chat models, provide the template as a ChatTemplate (a list of messages), e.g. a system message, followed by a user message with an input variable.\nFor completion models, provide a prompt template as a string.\n\nInput variables should be specified with double curly bracket syntax: `{{input_name}}`.",
      "name": "PromptKernelRequestTemplate",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:ChatMessage"
              }
            }
          }
        ]
      }
    },
    "type_:PromptKernelRequestStop": {
      "description": "The string (or list of strings) after which the model will stop generating. The returned text will not contain the stop sequence.",
      "name": "PromptKernelRequestStop",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "type_:PromptKernelRequest": {
      "name": "PromptKernelRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The model instance used, e.g. `gpt-4`. See [supported models](https://humanloop.com/docs/reference/supported-models)",
            "key": "model",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The provider model endpoint used.",
            "key": "endpoint",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:ModelEndpoints"
              }
            }
          },
          {
            "description": "The template contains the main structure and instructions for the model, including input variables for dynamic values.\n\nFor chat models, provide the template as a ChatTemplate (a list of messages), e.g. a system message, followed by a user message with an input variable.\nFor completion models, provide a prompt template as a string.\n\nInput variables should be specified with double curly bracket syntax: `{{input_name}}`.",
            "key": "template",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:PromptKernelRequestTemplate"
              }
            }
          },
          {
            "description": "The company providing the underlying model service.",
            "key": "provider",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:ModelProviders"
              }
            }
          },
          {
            "description": "The maximum number of tokens to generate. Provide max_tokens=-1 to dynamically calculate the maximum number of tokens to generate given the length of the prompt",
            "key": "max_tokens",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                  "default": -1
                }
              }
            }
          },
          {
            "description": "What sampling temperature to use when making a generation. Higher values means the model will be more creative.",
            "key": "temperature",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                  "default": 1
                }
              }
            }
          },
          {
            "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass.",
            "key": "top_p",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                  "default": 1
                }
              }
            }
          },
          {
            "description": "The string (or list of strings) after which the model will stop generating. The returned text will not contain the stop sequence.",
            "key": "stop",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:PromptKernelRequestStop"
              }
            }
          },
          {
            "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the generation so far.",
            "key": "presence_penalty",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                  "default": 0
                }
              }
            }
          },
          {
            "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on how frequently they appear in the generation so far.",
            "key": "frequency_penalty",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                  "default": 0
                }
              }
            }
          },
          {
            "description": "Other parameter values to be passed to the provider call.",
            "key": "other",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "description": "If specified, model will make a best effort to sample deterministically, but it is not guaranteed.",
            "key": "seed",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The format of the response. Only `{\"type\": \"json_object\"}` is currently supported for chat.",
            "key": "response_format",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:ResponseFormat"
              }
            }
          },
          {
            "description": "The tool specification that the model can choose to call if Tool calling is supported.",
            "key": "tools",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:ToolFunction"
                }
              }
            }
          },
          {
            "description": "The IDs of the Tools in your organization that the model can choose to call if Tool calling is supported. The default deployed version of that tool is called.",
            "key": "linked_tools",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Additional fields to describe the Prompt. Helpful to separate Prompt versions from each other with details on how they were created or used.",
            "key": "attributes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "type_:PromptLogResponseToolChoice": {
      "description": "Controls how the model uses tools. The following options are supported:\n\n- `'none'` means the model will not call any tool and instead generates a message; this is the default when no tools are provided as part of the Prompt.\n- `'auto'` means the model can decide to call one or more of the provided tools; this is the default when tools are provided as part of the Prompt.\n- `'required'` means the model can decide to call one or more of the provided tools.\n- `{'type': 'function', 'function': {name': <TOOL_NAME>}}` forces the model to use the named function.",
      "name": "PromptLogResponseToolChoice",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "literal",
              "value": {
                "type": "stringLiteral",
                "value": "none"
              }
            }
          },
          {
            "type": {
              "type": "literal",
              "value": {
                "type": "stringLiteral",
                "value": "auto"
              }
            }
          },
          {
            "type": {
              "type": "literal",
              "value": {
                "type": "stringLiteral",
                "value": "required"
              }
            }
          },
          {
            "type": {
              "type": "id",
              "value": "type_:ToolChoice"
            },
            "displayName": "Tool Choice"
          }
        ]
      }
    },
    "type_:PromptLogResponse": {
      "description": "General request for creating a Log",
      "name": "PromptLogResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The message returned by the provider.",
            "key": "output_message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:ChatMessage"
              }
            }
          },
          {
            "description": "Number of tokens in the prompt used to generate the output.",
            "key": "prompt_tokens",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Number of tokens in the output generated by the model.",
            "key": "output_tokens",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Cost in dollars associated to the tokens in the prompt.",
            "key": "prompt_cost",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Cost in dollars associated to the tokens in the output.",
            "key": "output_cost",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Reason the generation finished.",
            "key": "finish_reason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The messages passed to the to provider chat endpoint.",
            "key": "messages",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:ChatMessage"
                }
              }
            }
          },
          {
            "description": "Controls how the model uses tools. The following options are supported:\n\n- `'none'` means the model will not call any tool and instead generates a message; this is the default when no tools are provided as part of the Prompt.\n- `'auto'` means the model can decide to call one or more of the provided tools; this is the default when tools are provided as part of the Prompt.\n- `'required'` means the model can decide to call one or more of the provided tools.\n- `{'type': 'function', 'function': {name': <TOOL_NAME>}}` forces the model to use the named function.",
            "key": "tool_choice",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:PromptLogResponseToolChoice"
              }
            }
          },
          {
            "description": "Prompt used to generate the Log.",
            "key": "prompt",
            "valueType": {
              "type": "id",
              "value": "type_:PromptResponse"
            }
          },
          {
            "description": "When the logged event started.",
            "key": "start_time",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime"
                }
              }
            }
          },
          {
            "description": "When the logged event ended.",
            "key": "end_time",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime"
                }
              }
            }
          },
          {
            "description": "Generated output from your model for the provided inputs. Can be `None` if logging an error, or if creating a parent Log with the intention to populate it later.",
            "key": "output",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "User defined timestamp for when the log was created.",
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime"
                }
              }
            }
          },
          {
            "description": "Error message if the log is an error.",
            "key": "error",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Duration of the logged event in seconds.",
            "key": "provider_latency",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Captured log and debug statements.",
            "key": "stdout",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Raw request sent to provider.",
            "key": "provider_request",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "description": "Raw response received the provider.",
            "key": "provider_response",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "description": "The inputs passed to the prompt template.",
            "key": "inputs",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "description": "Identifies where the model was called from.",
            "key": "source",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Any additional metadata to record.",
            "key": "metadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "description": "Unique identifier for the Datapoint that this Log is derived from. This can be used by Humanloop to associate Logs to Evaluations. If provided, Humanloop will automatically associate this Log to Evaluations that require a Log for this Datapoint-Version pair.",
            "key": "source_datapoint_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The ID of the parent Log to nest this Log under in a Trace.",
            "key": "trace_parent_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of Batch IDs that this Log is part of. Batches are used to group Logs together for offline Evaluations",
            "key": "batches",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "End-user ID related to the Log.",
            "key": "user",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of the Environment the Log is associated to.",
            "key": "environment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Whether the request/response payloads will be stored on Humanloop.",
            "key": "save",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Unique identifier for the Log.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "List of Evaluator Logs associated with the Log. These contain Evaluator judgments on the Log.",
            "key": "evaluator_logs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:EvaluatorLogResponse"
              }
            }
          },
          {
            "description": "Identifier for the Flow that the Trace belongs to.",
            "key": "trace_flow_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Identifier for the Trace that the Log belongs to.",
            "key": "trace_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Logs nested under this Log in the Trace.",
            "key": "trace_children",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:LogResponse"
                }
              }
            }
          }
        ]
      }
    },
    "type_:PromptResponseTemplate": {
      "description": "The template contains the main structure and instructions for the model, including input variables for dynamic values.\n\nFor chat models, provide the template as a ChatTemplate (a list of messages), e.g. a system message, followed by a user message with an input variable.\nFor completion models, provide a prompt template as a string.\n\nInput variables should be specified with double curly bracket syntax: `{{input_name}}`.",
      "name": "PromptResponseTemplate",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:ChatMessage"
              }
            }
          }
        ]
      }
    },
    "type_:PromptResponseStop": {
      "description": "The string (or list of strings) after which the model will stop generating. The returned text will not contain the stop sequence.",
      "name": "PromptResponseStop",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "type_:PromptResponse": {
      "description": "Base type that all File Responses should inherit from.\n\nAttributes defined here are common to all File Responses and should be overridden\nin the inheriting classes with documentation and appropriate Field definitions.",
      "name": "PromptResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Path of the Prompt, including the name, which is used as a unique identifier.",
            "key": "path",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Unique identifier for the Prompt.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "ID of the directory that the file is in on Humanloop.",
            "key": "directory_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The model instance used, e.g. `gpt-4`. See [supported models](https://humanloop.com/docs/reference/supported-models)",
            "key": "model",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The provider model endpoint used.",
            "key": "endpoint",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:ModelEndpoints"
              }
            }
          },
          {
            "description": "The template contains the main structure and instructions for the model, including input variables for dynamic values.\n\nFor chat models, provide the template as a ChatTemplate (a list of messages), e.g. a system message, followed by a user message with an input variable.\nFor completion models, provide a prompt template as a string.\n\nInput variables should be specified with double curly bracket syntax: `{{input_name}}`.",
            "key": "template",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:PromptResponseTemplate"
              }
            }
          },
          {
            "description": "The company providing the underlying model service.",
            "key": "provider",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:ModelProviders"
              }
            }
          },
          {
            "description": "The maximum number of tokens to generate. Provide max_tokens=-1 to dynamically calculate the maximum number of tokens to generate given the length of the prompt",
            "key": "max_tokens",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                  "default": -1
                }
              }
            }
          },
          {
            "description": "What sampling temperature to use when making a generation. Higher values means the model will be more creative.",
            "key": "temperature",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                  "default": 1
                }
              }
            }
          },
          {
            "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass.",
            "key": "top_p",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                  "default": 1
                }
              }
            }
          },
          {
            "description": "The string (or list of strings) after which the model will stop generating. The returned text will not contain the stop sequence.",
            "key": "stop",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:PromptResponseStop"
              }
            }
          },
          {
            "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the generation so far.",
            "key": "presence_penalty",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                  "default": 0
                }
              }
            }
          },
          {
            "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on how frequently they appear in the generation so far.",
            "key": "frequency_penalty",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                  "default": 0
                }
              }
            }
          },
          {
            "description": "Other parameter values to be passed to the provider call.",
            "key": "other",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "description": "If specified, model will make a best effort to sample deterministically, but it is not guaranteed.",
            "key": "seed",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The format of the response. Only `{\"type\": \"json_object\"}` is currently supported for chat.",
            "key": "response_format",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:ResponseFormat"
              }
            }
          },
          {
            "description": "The tool specification that the model can choose to call if Tool calling is supported.",
            "key": "tools",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:ToolFunction"
                }
              }
            }
          },
          {
            "description": "The tools linked to your prompt that the model can call.",
            "key": "linked_tools",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:LinkedToolResponse"
                }
              }
            }
          },
          {
            "description": "Additional fields to describe the Prompt. Helpful to separate Prompt versions from each other with details on how they were created or used.",
            "key": "attributes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "description": "Message describing the changes made.",
            "key": "commit_message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Name of the Prompt.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Unique identifier for the specific Prompt Version. If no query params provided, the default deployed Prompt Version is returned.",
            "key": "version_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "literal",
                "value": {
                  "type": "stringLiteral",
                  "value": "prompt"
                }
              }
            }
          },
          {
            "description": "The list of environments the Prompt Version is deployed to.",
            "key": "environments",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:EnvironmentResponse"
                }
              }
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "key": "updated_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "description": "The user who created the Prompt.",
            "key": "created_by",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:UserResponse"
              }
            }
          },
          {
            "description": "The status of the Prompt Version.",
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "type_:VersionStatus"
            }
          },
          {
            "key": "last_used_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "description": "The number of logs that have been generated for this Prompt Version",
            "key": "version_logs_count",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "The number of logs that have been generated across all Prompt Versions",
            "key": "total_logs_count",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "Inputs associated to the Prompt. Inputs correspond to any of the variables used within the Prompt template.",
            "key": "inputs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:InputResponse"
              }
            }
          },
          {
            "description": "Evaluators that have been attached to this Prompt that are used for monitoring logs.",
            "key": "evaluators",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:MonitoringEvaluatorResponse"
                }
              }
            }
          },
          {
            "description": "Aggregation of Evaluator results for the Prompt Version.",
            "key": "evaluator_aggregates",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:EvaluatorAggregate"
                }
              }
            }
          }
        ]
      }
    },
    "type_:ProviderApiKeys": {
      "name": "ProviderApiKeys",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "openai",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "ai21",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "mock",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "anthropic",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "bedrock",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "cohere",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "openai_azure",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "openai_azure_endpoint",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "type_:ResponseFormatType": {
      "name": "ResponseFormatType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "json_object"
          },
          {
            "value": "json_schema"
          }
        ]
      }
    },
    "type_:ResponseFormat": {
      "description": "Response format of the model.",
      "name": "ResponseFormat",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_:ResponseFormatType"
            }
          },
          {
            "description": "The JSON schema of the response format if type is json_schema.",
            "key": "json_schema",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "type_:SelectEvaluatorStatsResponse": {
      "description": "Also used for 'multi_select' Evaluator versions",
      "name": "SelectEvaluatorStatsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Evaluator Version.",
            "key": "evaluator_version_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The total number of Logs generated by this Evaluator Version on the Evaluated Version's Logs. This includes Nulls and Errors.",
            "key": "total_logs",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "The total number of Evaluator judgments for this Evaluator Version. This excludes Nulls and Errors.",
            "key": "num_judgments",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "The total number of null judgments (i.e. abstentions) for this Evaluator Version.",
            "key": "num_nulls",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "The total number of errored Evaluators for this Evaluator Version.",
            "key": "num_errors",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "The total number of Evaluator judgments for this Evaluator Version. This is a mapping of the option name to the number of judgments for that option.",
            "key": "num_judgments_per_option",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "type_:SortOrder": {
      "description": "An enumeration.",
      "name": "SortOrder",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "asc"
          },
          {
            "value": "desc"
          }
        ]
      }
    },
    "type_:TextChatContent": {
      "name": "TextChatContent",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "type": "literal",
              "value": {
                "type": "stringLiteral",
                "value": "text"
              }
            }
          },
          {
            "description": "The message's text content.",
            "key": "text",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "type_:TextEvaluatorStatsResponse": {
      "description": "Base attributes for stats for an Evaluator Version-Evaluated Version pair\nin the Evaluation Report.",
      "name": "TextEvaluatorStatsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Evaluator Version.",
            "key": "evaluator_version_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The total number of Logs generated by this Evaluator Version on the Evaluated Version's Logs. This includes Nulls and Errors.",
            "key": "total_logs",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "The total number of Evaluator judgments for this Evaluator Version. This excludes Nulls and Errors.",
            "key": "num_judgments",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "The total number of null judgments (i.e. abstentions) for this Evaluator Version.",
            "key": "num_nulls",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "The total number of errored Evaluators for this Evaluator Version.",
            "key": "num_errors",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "type_:TimeUnit": {
      "description": "An enumeration.",
      "name": "TimeUnit",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "day"
          },
          {
            "value": "week"
          },
          {
            "value": "month"
          }
        ]
      }
    },
    "type_:ToolCall": {
      "description": "A tool call to be made.",
      "name": "ToolCall",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_:ChatToolType"
            }
          },
          {
            "key": "function",
            "valueType": {
              "type": "id",
              "value": "type_:FunctionTool"
            }
          }
        ]
      }
    },
    "type_:ToolChoice": {
      "description": "Tool choice to force the model to use a tool.",
      "name": "ToolChoice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_:ChatToolType"
            }
          },
          {
            "key": "function",
            "valueType": {
              "type": "id",
              "value": "type_:FunctionToolChoice"
            }
          }
        ]
      }
    },
    "type_:ToolFunction": {
      "name": "ToolFunction",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Name for the tool referenced by the model.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Description of the tool referenced by the model",
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "If true, forces the model to output json data in the structure of the parameters schema.",
            "key": "strict",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Parameters needed to run the Tool, defined in JSON Schema format: https://json-schema.org/",
            "key": "parameters",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "type_:ToolKernelRequest": {
      "name": "ToolKernelRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Callable function specification of the Tool shown to the model for tool calling.",
            "key": "function",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:ToolFunction"
              }
            }
          },
          {
            "description": "Code source of the Tool.",
            "key": "source_code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Values needed to setup the Tool, defined in JSON Schema format: https://json-schema.org/",
            "key": "setup_values",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "description": "Additional fields to describe the Tool. Helpful to separate Tool versions from each other with details on how they were created or used.",
            "key": "attributes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "type_:ToolLogResponse": {
      "description": "General request for creating a Log",
      "name": "ToolLogResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "When the logged event started.",
            "key": "start_time",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime"
                }
              }
            }
          },
          {
            "description": "When the logged event ended.",
            "key": "end_time",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime"
                }
              }
            }
          },
          {
            "description": "Generated output from your model for the provided inputs. Can be `None` if logging an error, or if creating a parent Log with the intention to populate it later.",
            "key": "output",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "User defined timestamp for when the log was created.",
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime"
                }
              }
            }
          },
          {
            "description": "Error message if the log is an error.",
            "key": "error",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Duration of the logged event in seconds.",
            "key": "provider_latency",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Captured log and debug statements.",
            "key": "stdout",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Raw request sent to provider.",
            "key": "provider_request",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "description": "Raw response received the provider.",
            "key": "provider_response",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "description": "The inputs passed to the prompt template.",
            "key": "inputs",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "description": "Identifies where the model was called from.",
            "key": "source",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Any additional metadata to record.",
            "key": "metadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "description": "Unique identifier for the Datapoint that this Log is derived from. This can be used by Humanloop to associate Logs to Evaluations. If provided, Humanloop will automatically associate this Log to Evaluations that require a Log for this Datapoint-Version pair.",
            "key": "source_datapoint_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The ID of the parent Log to nest this Log under in a Trace.",
            "key": "trace_parent_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of Batch IDs that this Log is part of. Batches are used to group Logs together for offline Evaluations",
            "key": "batches",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "End-user ID related to the Log.",
            "key": "user",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of the Environment the Log is associated to.",
            "key": "environment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Whether the request/response payloads will be stored on Humanloop.",
            "key": "save",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Unique identifier for the Log.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "List of Evaluator Logs associated with the Log. These contain Evaluator judgments on the Log.",
            "key": "evaluator_logs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:EvaluatorLogResponse"
              }
            }
          },
          {
            "description": "Identifier for the Flow that the Trace belongs to.",
            "key": "trace_flow_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Identifier for the Trace that the Log belongs to.",
            "key": "trace_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Logs nested under this Log in the Trace.",
            "key": "trace_children",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:LogResponse"
                }
              }
            }
          },
          {
            "description": "Tool used to generate the Log.",
            "key": "tool",
            "valueType": {
              "type": "id",
              "value": "type_:ToolResponse"
            }
          }
        ]
      }
    },
    "type_:ToolResponse": {
      "description": "Base type that all File Responses should inherit from.\n\nAttributes defined here are common to all File Responses and should be overridden\nin the inheriting classes with documentation and appropriate Field definitions.",
      "name": "ToolResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Path of the Tool, including the name, which is used as a unique identifier.",
            "key": "path",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Unique identifier for the Tool.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "ID of the directory that the file is in on Humanloop.",
            "key": "directory_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Callable function specification of the Tool shown to the model for tool calling.",
            "key": "function",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:ToolFunction"
              }
            }
          },
          {
            "description": "Code source of the Tool.",
            "key": "source_code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Values needed to setup the Tool, defined in JSON Schema format: https://json-schema.org/",
            "key": "setup_values",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "description": "Additional fields to describe the Tool. Helpful to separate Tool versions from each other with details on how they were created or used.",
            "key": "attributes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "description": "Type of Tool.",
            "key": "tool_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:FilesToolType"
              }
            }
          },
          {
            "description": "Message describing the changes made.",
            "key": "commit_message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Name of the Tool, which is used as a unique identifier.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Unique identifier for the specific Tool Version. If no query params provided, the default deployed Tool Version is returned.",
            "key": "version_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "literal",
                "value": {
                  "type": "stringLiteral",
                  "value": "tool"
                }
              }
            }
          },
          {
            "description": "The list of environments the Tool Version is deployed to.",
            "key": "environments",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:EnvironmentResponse"
                }
              }
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "key": "updated_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "description": "The user who created the Tool.",
            "key": "created_by",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:UserResponse"
              }
            }
          },
          {
            "description": "The status of the Tool Version.",
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "type_:VersionStatus"
            }
          },
          {
            "key": "last_used_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "description": "The number of logs that have been generated for this Tool Version",
            "key": "version_logs_count",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "The number of logs that have been generated across all Tool Versions",
            "key": "total_logs_count",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "Inputs associated to the Prompt. Inputs correspond to any of the variables used within the Tool template.",
            "key": "inputs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:InputResponse"
              }
            }
          },
          {
            "description": "Evaluators that have been attached to this Tool that are used for monitoring logs.",
            "key": "evaluators",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:MonitoringEvaluatorResponse"
                }
              }
            }
          },
          {
            "description": "Signature of the Tool.",
            "key": "signature",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Aggregation of Evaluator results for the Tool Version.",
            "key": "evaluator_aggregates",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:EvaluatorAggregate"
                }
              }
            }
          }
        ]
      }
    },
    "type_:TraceStatus": {
      "description": "An enumeration.",
      "name": "TraceStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "complete"
          },
          {
            "value": "incomplete"
          }
        ]
      }
    },
    "type_:UpdateDatesetAction": {
      "description": "An enumeration.",
      "name": "UpdateDatesetAction",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "set"
          },
          {
            "value": "add"
          },
          {
            "value": "remove"
          }
        ]
      }
    },
    "type_:UserResponse": {
      "name": "UserResponse",
      "shape": {
        "type": "alias",
        "value": {
          "type": "unknown"
        }
      }
    },
    "type_:Valence": {
      "description": "An enumeration.",
      "name": "Valence",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "positive"
          },
          {
            "value": "negative"
          },
          {
            "value": "neutral"
          }
        ]
      }
    },
    "type_:ValidationErrorLocItem": {
      "name": "ValidationErrorLocItem",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "type_:ValidationError": {
      "name": "ValidationError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "loc",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:ValidationErrorLocItem"
              }
            }
          },
          {
            "key": "msg",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "type_:VersionDeploymentResponseFile": {
      "description": "The File that the deployed Version belongs to.",
      "name": "VersionDeploymentResponseFile",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "id",
              "value": "type_:PromptResponse"
            },
            "displayName": "Prompt Response"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:ToolResponse"
            },
            "displayName": "Tool Response"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:DatasetResponse"
            },
            "displayName": "Dataset Response"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:EvaluatorResponse"
            },
            "displayName": "Evaluator Response"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:FlowResponse"
            },
            "displayName": "Flow Response"
          }
        ]
      }
    },
    "type_:VersionDeploymentResponse": {
      "description": "A variable reference to the Version deployed to an Environment",
      "name": "VersionDeploymentResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The File that the deployed Version belongs to.",
            "key": "file",
            "valueType": {
              "type": "id",
              "value": "type_:VersionDeploymentResponseFile"
            }
          },
          {
            "description": "The Environment that the Version is deployed to.",
            "key": "environment",
            "valueType": {
              "type": "id",
              "value": "type_:EnvironmentResponse"
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "literal",
              "value": {
                "type": "stringLiteral",
                "value": "environment"
              }
            }
          }
        ]
      }
    },
    "type_:VersionIdResponseVersion": {
      "description": "The specific Version being referenced.",
      "name": "VersionIdResponseVersion",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "id",
              "value": "type_:PromptResponse"
            },
            "displayName": "Prompt Response"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:ToolResponse"
            },
            "displayName": "Tool Response"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:DatasetResponse"
            },
            "displayName": "Dataset Response"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:EvaluatorResponse"
            },
            "displayName": "Evaluator Response"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:FlowResponse"
            },
            "displayName": "Flow Response"
          }
        ]
      }
    },
    "type_:VersionIdResponse": {
      "description": "A reference to a specific Version by its ID",
      "name": "VersionIdResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The specific Version being referenced.",
            "key": "version",
            "valueType": {
              "type": "id",
              "value": "type_:VersionIdResponseVersion"
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "literal",
              "value": {
                "type": "stringLiteral",
                "value": "version"
              }
            }
          }
        ]
      }
    },
    "type_:VersionReferenceResponse": {
      "name": "VersionReferenceResponse",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "id",
              "value": "type_:VersionDeploymentResponse"
            },
            "displayName": "Version Deployment Response"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:VersionIdResponse"
            },
            "displayName": "Version ID Response"
          }
        ]
      }
    },
    "type_:VersionStatsResponseEvaluatorVersionStatsItem": {
      "name": "VersionStatsResponseEvaluatorVersionStatsItem",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "id",
              "value": "type_:NumericEvaluatorStatsResponse"
            },
            "displayName": "Numeric Evaluator Stats Response"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:BooleanEvaluatorStatsResponse"
            },
            "displayName": "Boolean Evaluator Stats Response"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:SelectEvaluatorStatsResponse"
            },
            "displayName": "Select Evaluator Stats Response"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:TextEvaluatorStatsResponse"
            },
            "displayName": "Text Evaluator Stats Response"
          }
        ]
      }
    },
    "type_:VersionStatsResponse": {
      "description": "Stats for an Evaluated Version in the Evaluation Report.",
      "name": "VersionStatsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Evaluated Version.",
            "key": "version_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Unique identifier for the batch of Logs to include in the Evaluation Report.",
            "key": "batch_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The total number of existing Logs for this Evaluated Version within the Evaluation Report. These are Logs that have been generated by this Evaluated Version on a Datapoint belonging to the Evaluation Report's Dataset Version.",
            "key": "num_logs",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "Stats for each Evaluator Version used to evaluate this Evaluated Version.",
            "key": "evaluator_version_stats",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:VersionStatsResponseEvaluatorVersionStatsItem"
              }
            }
          }
        ]
      }
    },
    "type_:VersionStatus": {
      "description": "An enumeration.",
      "name": "VersionStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "uncommitted"
          },
          {
            "value": "committed"
          },
          {
            "value": "deleted"
          }
        ]
      }
    },
    "type_:ChatToolType": {
      "description": "The type of tool to call.",
      "name": "ChatToolType",
      "shape": {
        "type": "alias",
        "value": {
          "type": "literal",
          "value": {
            "type": "stringLiteral",
            "value": "function"
          }
        }
      }
    },
    "type_:FilesToolType": {
      "description": "Type of tool.",
      "name": "FilesToolType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "pinecone_search"
          },
          {
            "value": "google"
          },
          {
            "value": "mock"
          },
          {
            "value": "snippet"
          },
          {
            "value": "json_schema"
          },
          {
            "value": "get_api_call"
          }
        ]
      }
    },
    "type_:EvaluationsDatasetRequest": {
      "description": "Specification of a File version on Humanloop.\n\nThis can be done in a couple of ways:\n\n- Specifying `version_id` directly.\n- Specifying a File (and optionally an Environment).\n  - A File can be specified by either `path` or `file_id`.\n  - An Environment can be specified by `environment_id`. If no Environment is specified, the default Environment is used.",
      "name": "EvaluationsDatasetRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the File Version. If provided, none of the other fields should be specified.",
            "key": "version_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Path identifying a File. Provide either this or `file_id` if you want to specify a File.",
            "key": "path",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Unique identifier for the File. Provide either this or `path` if you want to specify a File.",
            "key": "file_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Name of the Environment a Version is deployed to. Only provide this when specifying a File. If not provided (and a File is specified), the default Environment is used.",
            "key": "environment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "type_:EvaluationsRequest": {
      "description": "Specification of a File version on Humanloop.\n\nThis can be done in a couple of ways:\n\n- Specifying `version_id` directly.\n- Specifying a File (and optionally an Environment).\n  - A File can be specified by either `path` or `file_id`.\n  - An Environment can be specified by `environment_id`. If no Environment is specified, the default Environment is used.",
      "name": "EvaluationsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the File Version. If provided, none of the other fields should be specified.",
            "key": "version_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Path identifying a File. Provide either this or `file_id` if you want to specify a File.",
            "key": "path",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Unique identifier for the File. Provide either this or `path` if you want to specify a File.",
            "key": "file_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Name of the Environment a Version is deployed to. Only provide this when specifying a File. If not provided (and a File is specified), the default Environment is used.",
            "key": "environment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Whether the Evaluator is orchestrated by Humanloop. Default is `True`. If `False`, a log for the Evaluator should be submitted by the user via the API.",
            "key": "orchestrated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "type_:AgentConfigResponse": {
      "name": "AgentConfigResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "type_:EvaluatorConfigResponse": {
      "name": "EvaluatorConfigResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "type_:UpdateEvaluationStatusRequest": {
      "name": "UpdateEvaluationStatusRequest",
      "shape": {
        "type": "alias",
        "value": {
          "type": "unknown"
        }
      }
    },
    "type_:PaginatedPromptLogResponse": {
      "name": "PaginatedPromptLogResponse",
      "shape": {
        "type": "alias",
        "value": {
          "type": "unknown"
        }
      }
    },
    "type_:PaginatedSessionResponse": {
      "name": "PaginatedSessionResponse",
      "shape": {
        "type": "alias",
        "value": {
          "type": "unknown"
        }
      }
    },
    "type_:ConfigToolResponse": {
      "name": "ConfigToolResponse",
      "shape": {
        "type": "alias",
        "value": {
          "type": "unknown"
        }
      }
    },
    "type_:FeedbackType": {
      "name": "FeedbackType",
      "shape": {
        "type": "alias",
        "value": {
          "type": "unknown"
        }
      }
    },
    "type_:BaseModelsUserResponse": {
      "name": "BaseModelsUserResponse",
      "shape": {
        "type": "alias",
        "value": {
          "type": "unknown"
        }
      }
    }
  },
  "subpackages": {
    "subpackage_prompts": {
      "subpackageId": "subpackage_prompts",
      "name": "prompts",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "log",
          "migratedFromUrlSlugs": ["log-to-a-prompt"],
          "method": "POST",
          "id": "log",
          "originalEndpointId": "endpoint_prompts.log",
          "name": "Log to a Prompt",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/prompts/log"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "A specific Version ID of the Prompt to log to.",
              "key": "version_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Name of the Environment identifying a deployed version to log to.",
              "key": "environment",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Unique identifier for the Evaluation Report to associate the Log to.",
                  "key": "evaluation_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Path of the Prompt, including the name. This locates the Prompt in the Humanloop filesystem and is used as as a unique identifier. For example: `folder/name` or just `name`.",
                  "key": "path",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "ID for an existing Prompt.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The message returned by the provider.",
                  "key": "output_message",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ChatMessage"
                    }
                  }
                },
                {
                  "description": "Number of tokens in the prompt used to generate the output.",
                  "key": "prompt_tokens",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "Number of tokens in the output generated by the model.",
                  "key": "output_tokens",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "Cost in dollars associated to the tokens in the prompt.",
                  "key": "prompt_cost",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                },
                {
                  "description": "Cost in dollars associated to the tokens in the output.",
                  "key": "output_cost",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                },
                {
                  "description": "Reason the generation finished.",
                  "key": "finish_reason",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The messages passed to the to provider chat endpoint.",
                  "key": "messages",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:ChatMessage"
                      }
                    }
                  }
                },
                {
                  "description": "Controls how the model uses tools. The following options are supported: \n- `'none'` means the model will not call any tool and instead generates a message; this is the default when no tools are provided as part of the Prompt. \n- `'auto'` means the model can decide to call one or more of the provided tools; this is the default when tools are provided as part of the Prompt. \n- `'required'` means the model can decide to call one or more of the provided tools. \n- `{'type': 'function', 'function': {name': <TOOL_NAME>}}` forces the model to use the named function.",
                  "key": "tool_choice",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_prompts:PromptLogRequestToolChoice"
                    }
                  }
                },
                {
                  "description": "Details of your Prompt. A new Prompt version will be created if the provided details are new.",
                  "key": "prompt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PromptKernelRequest"
                    }
                  }
                },
                {
                  "description": "When the logged event started.",
                  "key": "start_time",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "When the logged event ended.",
                  "key": "end_time",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Generated output from your model for the provided inputs. Can be `None` if logging an error, or if creating a parent Log with the intention to populate it later.",
                  "key": "output",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "User defined timestamp for when the log was created. ",
                  "key": "created_at",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Error message if the log is an error.",
                  "key": "error",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Duration of the logged event in seconds.",
                  "key": "provider_latency",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                },
                {
                  "description": "Captured log and debug statements.",
                  "key": "stdout",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Raw request sent to provider.",
                  "key": "provider_request",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "Raw response received the provider.",
                  "key": "provider_response",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "The inputs passed to the prompt template.",
                  "key": "inputs",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "Identifies where the model was called from.",
                  "key": "source",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Any additional metadata to record.",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "Unique identifier for the Datapoint that this Log is derived from. This can be used by Humanloop to associate Logs to Evaluations. If provided, Humanloop will automatically associate this Log to Evaluations that require a Log for this Datapoint-Version pair.",
                  "key": "source_datapoint_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The ID of the parent Log to nest this Log under in a Trace.",
                  "key": "trace_parent_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Unique identifier for the Batch to add this Batch to. Batches are used to group Logs together for Evaluations. A Batch will be created if one with the given ID does not exist.",
                  "key": "batch_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "End-user ID related to the Log.",
                  "key": "user",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The name of the Environment the Log is associated to.",
                  "key": "environment",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Whether the request/response payloads will be stored on Humanloop.",
                  "key": "save",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              ]
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:CreatePromptLogResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "Log prompt",
              "path": "/prompts/log",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "path": "persona",
                "prompt": {
                  "model": "gpt-4",
                  "template": [
                    {
                      "role": "system",
                      "content": "You are {{person}}. Answer questions as this person. Do not break character."
                    }
                  ]
                },
                "messages": [
                  {
                    "role": "user",
                    "content": "What really happened at Roswell?"
                  }
                ],
                "inputs": {
                  "person": "Trump"
                },
                "created_at": "2024-07-19T00:29:35.178992",
                "provider_latency": 6.5931549072265625,
                "output_message": {
                  "content": "Well, you know, there is so much secrecy involved in government, folks, it's unbelievable. They don't want to tell you everything. They don't tell me everything! But about Roswell, it’s a very popular question. I know, I just know, that something very, very peculiar happened there. Was it a weather balloon? Maybe. Was it something extraterrestrial? Could be. I'd love to go down and open up all the classified documents, believe me, I would. But they don't let that happen. The Deep State, folks, the Deep State. They’re unbelievable. They want to keep everything a secret. But whatever the truth is, I can tell you this: it’s something big, very very big. Tremendous, in fact.",
                  "role": "assistant"
                },
                "prompt_tokens": 100,
                "output_tokens": 220,
                "prompt_cost": 0.00001,
                "output_cost": 0.0002,
                "finish_reason": "stop"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "data_fIfEb1SoKZooqeFbi9IFs",
                "prompt_id": "pr_3usCu3dAkgrXTlufrvPs7",
                "version_id": "prv_Wu6zx1lAWJRqOyL8nWuZk"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "path": "persona",
                  "prompt": {
                    "model": "gpt-4",
                    "template": [
                      {
                        "role": "system",
                        "content": "You are {{person}}. Answer questions as this person. Do not break character."
                      }
                    ]
                  },
                  "messages": [
                    {
                      "role": "user",
                      "content": "What really happened at Roswell?"
                    }
                  ],
                  "inputs": {
                    "person": "Trump"
                  },
                  "created_at": "2024-07-19T00:29:35.178992",
                  "provider_latency": 6.5931549072265625,
                  "output_message": {
                    "content": "Well, you know, there is so much secrecy involved in government, folks, it's unbelievable. They don't want to tell you everything. They don't tell me everything! But about Roswell, it’s a very popular question. I know, I just know, that something very, very peculiar happened there. Was it a weather balloon? Maybe. Was it something extraterrestrial? Could be. I'd love to go down and open up all the classified documents, believe me, I would. But they don't let that happen. The Deep State, folks, the Deep State. They’re unbelievable. They want to keep everything a secret. But whatever the truth is, I can tell you this: it’s something big, very very big. Tremendous, in fact.",
                    "role": "assistant"
                  },
                  "prompt_tokens": 100,
                  "output_tokens": 220,
                  "prompt_cost": 0.00001,
                  "output_cost": 0.0002,
                  "finish_reason": "stop"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "data_fIfEb1SoKZooqeFbi9IFs",
                  "prompt_id": "pr_3usCu3dAkgrXTlufrvPs7",
                  "version_id": "prv_Wu6zx1lAWJRqOyL8nWuZk"
                }
              },
              "codeSamples": []
            },
            {
              "path": "/prompts/log",
              "pathParameters": {},
              "queryParameters": {
                "version_id": "string",
                "environment": "string"
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Log to a Prompt.\n\nYou can use query parameters `version_id`, or `environment`, to target\nan existing version of the Prompt. Otherwise, the default deployed version will be chosen.\n\nInstead of targeting an existing version explicitly, you can instead pass in\nPrompt details in the request body. In this case, we will check if the details correspond\nto an existing version of the Prompt. If they do not, we will create a new version. This is helpful\nin the case where you are storing or deriving your Prompt details in code.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.prompts.log(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "version_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "version_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "environment=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "environment",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "evaluation_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "evaluation_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "path=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "path",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "output_message={\n\t\t$FERN_INPUT\n\t}",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"content\": $FERN_INPUT",
                            "members": [
                              {
                                "type": {
                                  "type": "primitive",
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "template": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "$FERN_INPUT",
                                  "templateInputs": [
                                    {
                                      "location": "RELATIVE",
                                      "path": null,
                                      "type": "payload"
                                    }
                                  ],
                                  "type": "generic"
                                }
                              },
                              {
                                "type": {
                                  "itemType": {
                                    "value": "type_:ChatMessageContentItem",
                                    "type": "id"
                                  },
                                  "type": "list"
                                },
                                "template": {
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "[\n\t\t\t$FERN_INPUT\n\t\t]",
                                  "delimiter": ",\n\t\t\t",
                                  "innerTemplate": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "members": [
                                      {
                                        "type": {
                                          "value": "type_:TextChatContent",
                                          "type": "id"
                                        },
                                        "template": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "{\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                          "templateInputs": [
                                            {
                                              "type": "template",
                                              "value": {
                                                "imports": [],
                                                "isOptional": true,
                                                "templateString": "\"text\": $FERN_INPUT",
                                                "templateInputs": [
                                                  {
                                                    "location": "RELATIVE",
                                                    "path": "text",
                                                    "type": "payload"
                                                  }
                                                ],
                                                "type": "generic"
                                              }
                                            }
                                          ],
                                          "inputDelimiter": ",\n\t\t\t\t",
                                          "type": "generic"
                                        }
                                      },
                                      {
                                        "type": {
                                          "value": "type_:ImageChatContent",
                                          "type": "id"
                                        },
                                        "template": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "{\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                          "templateInputs": [
                                            {
                                              "type": "template",
                                              "value": {
                                                "imports": [],
                                                "isOptional": true,
                                                "templateString": "\"image_url\": {\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                                "templateInputs": [
                                                  {
                                                    "type": "template",
                                                    "value": {
                                                      "imports": [],
                                                      "isOptional": true,
                                                      "templateString": "\"url\": $FERN_INPUT",
                                                      "templateInputs": [
                                                        {
                                                          "location": "RELATIVE",
                                                          "path": "image_url.url",
                                                          "type": "payload"
                                                        }
                                                      ],
                                                      "type": "generic"
                                                    }
                                                  },
                                                  {
                                                    "type": "template",
                                                    "value": {
                                                      "imports": [],
                                                      "isOptional": true,
                                                      "templateString": "\"detail\": $FERN_INPUT",
                                                      "values": {
                                                        "high": "\"high\"",
                                                        "low": "\"low\"",
                                                        "auto": "\"auto\""
                                                      },
                                                      "templateInput": {
                                                        "location": "RELATIVE",
                                                        "path": "image_url.detail"
                                                      },
                                                      "type": "enum"
                                                    }
                                                  }
                                                ],
                                                "inputDelimiter": ",\n\t\t\t\t\t",
                                                "type": "generic"
                                              }
                                            }
                                          ],
                                          "inputDelimiter": ",\n\t\t\t\t",
                                          "type": "generic"
                                        }
                                      }
                                    ],
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": null
                                    },
                                    "type": "union_v2"
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": null
                                  },
                                  "type": "iterable"
                                }
                              }
                            ],
                            "templateInput": {
                              "location": "BODY",
                              "path": "output_message.content"
                            },
                            "type": "union_v2"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"name\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "output_message.name",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"tool_call_id\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "output_message.tool_call_id",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"role\": $FERN_INPUT",
                            "values": {
                              "user": "\"user\"",
                              "assistant": "\"assistant\"",
                              "system": "\"system\"",
                              "tool": "\"tool\""
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "output_message.role"
                            },
                            "type": "enum"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "\"tool_calls\": [\n\t\t\t$FERN_INPUT\n\t\t]",
                            "delimiter": ",\n\t\t\t",
                            "innerTemplate": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "{\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"id\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "id",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"function\": {\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                    "templateInputs": [
                                      {
                                        "type": "template",
                                        "value": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "\"name\": $FERN_INPUT",
                                          "templateInputs": [
                                            {
                                              "location": "RELATIVE",
                                              "path": "function.name",
                                              "type": "payload"
                                            }
                                          ],
                                          "type": "generic"
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "\"arguments\": $FERN_INPUT",
                                          "templateInputs": [
                                            {
                                              "location": "RELATIVE",
                                              "path": "function.arguments",
                                              "type": "payload"
                                            }
                                          ],
                                          "type": "generic"
                                        }
                                      }
                                    ],
                                    "inputDelimiter": ",\n\t\t\t\t\t",
                                    "type": "generic"
                                  }
                                }
                              ],
                              "inputDelimiter": ",\n\t\t\t\t",
                              "type": "generic"
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "output_message.tool_calls"
                            },
                            "type": "iterable"
                          }
                        }
                      ],
                      "inputDelimiter": ",\n\t\t",
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "prompt_tokens=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "prompt_tokens",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "output_tokens=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "output_tokens",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "prompt_cost=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "prompt_cost",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "output_cost=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "output_cost",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "finish_reason=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "finish_reason",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "messages=[\n\t\t$FERN_INPUT\n\t]",
                      "delimiter": ",\n\t\t",
                      "innerTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "{\n\t\t\t$FERN_INPUT\n\t\t}",
                        "templateInputs": [
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"content\": $FERN_INPUT",
                              "members": [
                                {
                                  "type": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string"
                                    }
                                  },
                                  "template": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": null,
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                },
                                {
                                  "type": {
                                    "itemType": {
                                      "value": "type_:ChatMessageContentItem",
                                      "type": "id"
                                    },
                                    "type": "list"
                                  },
                                  "template": {
                                    "imports": [],
                                    "isOptional": true,
                                    "containerTemplateString": "[\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                    "delimiter": ",\n\t\t\t\t",
                                    "innerTemplate": {
                                      "imports": [],
                                      "isOptional": true,
                                      "templateString": "$FERN_INPUT",
                                      "members": [
                                        {
                                          "type": {
                                            "value": "type_:TextChatContent",
                                            "type": "id"
                                          },
                                          "template": {
                                            "imports": [],
                                            "isOptional": true,
                                            "templateString": "{\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                            "templateInputs": [
                                              {
                                                "type": "template",
                                                "value": {
                                                  "imports": [],
                                                  "isOptional": true,
                                                  "templateString": "\"text\": $FERN_INPUT",
                                                  "templateInputs": [
                                                    {
                                                      "location": "RELATIVE",
                                                      "path": "text",
                                                      "type": "payload"
                                                    }
                                                  ],
                                                  "type": "generic"
                                                }
                                              }
                                            ],
                                            "inputDelimiter": ",\n\t\t\t\t\t",
                                            "type": "generic"
                                          }
                                        },
                                        {
                                          "type": {
                                            "value": "type_:ImageChatContent",
                                            "type": "id"
                                          },
                                          "template": {
                                            "imports": [],
                                            "isOptional": true,
                                            "templateString": "{\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                            "templateInputs": [
                                              {
                                                "type": "template",
                                                "value": {
                                                  "imports": [],
                                                  "isOptional": true,
                                                  "templateString": "\"image_url\": {\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                                  "templateInputs": [
                                                    {
                                                      "type": "template",
                                                      "value": {
                                                        "imports": [],
                                                        "isOptional": true,
                                                        "templateString": "\"url\": $FERN_INPUT",
                                                        "templateInputs": [
                                                          {
                                                            "location": "RELATIVE",
                                                            "path": "image_url.url",
                                                            "type": "payload"
                                                          }
                                                        ],
                                                        "type": "generic"
                                                      }
                                                    },
                                                    {
                                                      "type": "template",
                                                      "value": {
                                                        "imports": [],
                                                        "isOptional": true,
                                                        "templateString": "\"detail\": $FERN_INPUT",
                                                        "values": {
                                                          "high": "\"high\"",
                                                          "low": "\"low\"",
                                                          "auto": "\"auto\""
                                                        },
                                                        "templateInput": {
                                                          "location": "RELATIVE",
                                                          "path": "image_url.detail"
                                                        },
                                                        "type": "enum"
                                                      }
                                                    }
                                                  ],
                                                  "inputDelimiter": ",\n\t\t\t\t\t\t",
                                                  "type": "generic"
                                                }
                                              }
                                            ],
                                            "inputDelimiter": ",\n\t\t\t\t\t",
                                            "type": "generic"
                                          }
                                        }
                                      ],
                                      "templateInput": {
                                        "location": "RELATIVE",
                                        "path": null
                                      },
                                      "type": "union_v2"
                                    },
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": null
                                    },
                                    "type": "iterable"
                                  }
                                }
                              ],
                              "templateInput": {
                                "location": "RELATIVE",
                                "path": "content"
                              },
                              "type": "union_v2"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"name\": $FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": "name",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"tool_call_id\": $FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": "tool_call_id",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"role\": $FERN_INPUT",
                              "values": {
                                "user": "\"user\"",
                                "assistant": "\"assistant\"",
                                "system": "\"system\"",
                                "tool": "\"tool\""
                              },
                              "templateInput": {
                                "location": "RELATIVE",
                                "path": "role"
                              },
                              "type": "enum"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "containerTemplateString": "\"tool_calls\": [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                              "delimiter": ",\n\t\t\t\t",
                              "innerTemplate": {
                                "imports": [],
                                "isOptional": true,
                                "templateString": "{\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                "templateInputs": [
                                  {
                                    "type": "template",
                                    "value": {
                                      "imports": [],
                                      "isOptional": true,
                                      "templateString": "\"id\": $FERN_INPUT",
                                      "templateInputs": [
                                        {
                                          "location": "RELATIVE",
                                          "path": "id",
                                          "type": "payload"
                                        }
                                      ],
                                      "type": "generic"
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "imports": [],
                                      "isOptional": true,
                                      "templateString": "\"function\": {\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                      "templateInputs": [
                                        {
                                          "type": "template",
                                          "value": {
                                            "imports": [],
                                            "isOptional": true,
                                            "templateString": "\"name\": $FERN_INPUT",
                                            "templateInputs": [
                                              {
                                                "location": "RELATIVE",
                                                "path": "function.name",
                                                "type": "payload"
                                              }
                                            ],
                                            "type": "generic"
                                          }
                                        },
                                        {
                                          "type": "template",
                                          "value": {
                                            "imports": [],
                                            "isOptional": true,
                                            "templateString": "\"arguments\": $FERN_INPUT",
                                            "templateInputs": [
                                              {
                                                "location": "RELATIVE",
                                                "path": "function.arguments",
                                                "type": "payload"
                                              }
                                            ],
                                            "type": "generic"
                                          }
                                        }
                                      ],
                                      "inputDelimiter": ",\n\t\t\t\t\t\t",
                                      "type": "generic"
                                    }
                                  }
                                ],
                                "inputDelimiter": ",\n\t\t\t\t\t",
                                "type": "generic"
                              },
                              "templateInput": {
                                "location": "RELATIVE",
                                "path": "tool_calls"
                              },
                              "type": "iterable"
                            }
                          }
                        ],
                        "inputDelimiter": ",\n\t\t\t",
                        "type": "generic"
                      },
                      "templateInput": {
                        "location": "BODY",
                        "path": "messages"
                      },
                      "type": "iterable"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "tool_choice=$FERN_INPUT",
                      "members": [
                        {
                          "type": {
                            "type": "literal",
                            "value": {
                              "type": "stringLiteral",
                              "value": "none"
                            }
                          },
                          "template": {
                            "isOptional": true,
                            "templateString": "\"none\"",
                            "templateInputs": [
                              {
                                "location": "RELATIVE",
                                "path": null,
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": {
                            "type": "literal",
                            "value": {
                              "type": "stringLiteral",
                              "value": "auto"
                            }
                          },
                          "template": {
                            "isOptional": true,
                            "templateString": "\"auto\"",
                            "templateInputs": [
                              {
                                "location": "RELATIVE",
                                "path": null,
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": {
                            "type": "literal",
                            "value": {
                              "type": "stringLiteral",
                              "value": "required"
                            }
                          },
                          "template": {
                            "isOptional": true,
                            "templateString": "\"required\"",
                            "templateInputs": [
                              {
                                "location": "RELATIVE",
                                "path": null,
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": {
                            "value": "type_:ToolChoice",
                            "type": "id"
                          },
                          "template": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"function\": {\n\t\t\t$FERN_INPUT\n\t\t}",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "\"name\": $FERN_INPUT",
                                        "templateInputs": [
                                          {
                                            "location": "RELATIVE",
                                            "path": "function.name",
                                            "type": "payload"
                                          }
                                        ],
                                        "type": "generic"
                                      }
                                    }
                                  ],
                                  "inputDelimiter": ",\n\t\t\t",
                                  "type": "generic"
                                }
                              }
                            ],
                            "inputDelimiter": ",\n\t\t",
                            "type": "generic"
                          }
                        }
                      ],
                      "templateInput": {
                        "location": "BODY",
                        "path": "tool_choice"
                      },
                      "type": "union_v2"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "prompt={\n\t\t$FERN_INPUT\n\t}",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"model\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "prompt.model",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"endpoint\": $FERN_INPUT",
                            "values": {
                              "complete": "\"complete\"",
                              "chat": "\"chat\"",
                              "edit": "\"edit\""
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "prompt.endpoint"
                            },
                            "type": "enum"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"template\": $FERN_INPUT",
                            "members": [
                              {
                                "type": {
                                  "type": "primitive",
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "template": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "$FERN_INPUT",
                                  "templateInputs": [
                                    {
                                      "location": "RELATIVE",
                                      "path": null,
                                      "type": "payload"
                                    }
                                  ],
                                  "type": "generic"
                                }
                              },
                              {
                                "type": {
                                  "itemType": {
                                    "value": "type_:ChatMessage",
                                    "type": "id"
                                  },
                                  "type": "list"
                                },
                                "template": {
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "[\n\t\t\t$FERN_INPUT\n\t\t]",
                                  "delimiter": ",\n\t\t\t",
                                  "innerTemplate": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "{\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                    "templateInputs": [
                                      {
                                        "type": "template",
                                        "value": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "\"content\": $FERN_INPUT",
                                          "members": [
                                            {
                                              "type": {
                                                "type": "primitive",
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "template": {
                                                "imports": [],
                                                "isOptional": true,
                                                "templateString": "$FERN_INPUT",
                                                "templateInputs": [
                                                  {
                                                    "location": "RELATIVE",
                                                    "path": null,
                                                    "type": "payload"
                                                  }
                                                ],
                                                "type": "generic"
                                              }
                                            },
                                            {
                                              "type": {
                                                "itemType": {
                                                  "value": "type_:ChatMessageContentItem",
                                                  "type": "id"
                                                },
                                                "type": "list"
                                              },
                                              "template": {
                                                "imports": [],
                                                "isOptional": true,
                                                "containerTemplateString": "[\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                                "delimiter": ",\n\t\t\t\t\t",
                                                "innerTemplate": {
                                                  "imports": [],
                                                  "isOptional": true,
                                                  "templateString": "$FERN_INPUT",
                                                  "members": [
                                                    {
                                                      "type": {
                                                        "value": "type_:TextChatContent",
                                                        "type": "id"
                                                      },
                                                      "template": {
                                                        "imports": [],
                                                        "isOptional": true,
                                                        "templateString": "{\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                                        "templateInputs": [
                                                          {
                                                            "type": "template",
                                                            "value": {
                                                              "imports": [],
                                                              "isOptional": true,
                                                              "templateString": "\"text\": $FERN_INPUT",
                                                              "templateInputs": [
                                                                {
                                                                  "location": "RELATIVE",
                                                                  "path": "text",
                                                                  "type": "payload"
                                                                }
                                                              ],
                                                              "type": "generic"
                                                            }
                                                          }
                                                        ],
                                                        "inputDelimiter": ",\n\t\t\t\t\t\t",
                                                        "type": "generic"
                                                      }
                                                    },
                                                    {
                                                      "type": {
                                                        "value": "type_:ImageChatContent",
                                                        "type": "id"
                                                      },
                                                      "template": {
                                                        "imports": [],
                                                        "isOptional": true,
                                                        "templateString": "{\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                                        "templateInputs": [
                                                          {
                                                            "type": "template",
                                                            "value": {
                                                              "imports": [],
                                                              "isOptional": true,
                                                              "templateString": "\"image_url\": {\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t}",
                                                              "templateInputs": [
                                                                {
                                                                  "type": "template",
                                                                  "value": {
                                                                    "imports": [],
                                                                    "isOptional": true,
                                                                    "templateString": "\"url\": $FERN_INPUT",
                                                                    "templateInputs": [
                                                                      {
                                                                        "location": "RELATIVE",
                                                                        "path": "image_url.url",
                                                                        "type": "payload"
                                                                      }
                                                                    ],
                                                                    "type": "generic"
                                                                  }
                                                                },
                                                                {
                                                                  "type": "template",
                                                                  "value": {
                                                                    "imports": [],
                                                                    "isOptional": true,
                                                                    "templateString": "\"detail\": $FERN_INPUT",
                                                                    "values": {
                                                                      "high": "\"high\"",
                                                                      "low": "\"low\"",
                                                                      "auto": "\"auto\""
                                                                    },
                                                                    "templateInput": {
                                                                      "location": "RELATIVE",
                                                                      "path": "image_url.detail"
                                                                    },
                                                                    "type": "enum"
                                                                  }
                                                                }
                                                              ],
                                                              "inputDelimiter": ",\n\t\t\t\t\t\t\t",
                                                              "type": "generic"
                                                            }
                                                          }
                                                        ],
                                                        "inputDelimiter": ",\n\t\t\t\t\t\t",
                                                        "type": "generic"
                                                      }
                                                    }
                                                  ],
                                                  "templateInput": {
                                                    "location": "RELATIVE",
                                                    "path": null
                                                  },
                                                  "type": "union_v2"
                                                },
                                                "templateInput": {
                                                  "location": "RELATIVE",
                                                  "path": null
                                                },
                                                "type": "iterable"
                                              }
                                            }
                                          ],
                                          "templateInput": {
                                            "location": "RELATIVE",
                                            "path": "content"
                                          },
                                          "type": "union_v2"
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "\"name\": $FERN_INPUT",
                                          "templateInputs": [
                                            {
                                              "location": "RELATIVE",
                                              "path": "name",
                                              "type": "payload"
                                            }
                                          ],
                                          "type": "generic"
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "\"tool_call_id\": $FERN_INPUT",
                                          "templateInputs": [
                                            {
                                              "location": "RELATIVE",
                                              "path": "tool_call_id",
                                              "type": "payload"
                                            }
                                          ],
                                          "type": "generic"
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "\"role\": $FERN_INPUT",
                                          "values": {
                                            "user": "\"user\"",
                                            "assistant": "\"assistant\"",
                                            "system": "\"system\"",
                                            "tool": "\"tool\""
                                          },
                                          "templateInput": {
                                            "location": "RELATIVE",
                                            "path": "role"
                                          },
                                          "type": "enum"
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "imports": [],
                                          "isOptional": true,
                                          "containerTemplateString": "\"tool_calls\": [\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                          "delimiter": ",\n\t\t\t\t\t",
                                          "innerTemplate": {
                                            "imports": [],
                                            "isOptional": true,
                                            "templateString": "{\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                            "templateInputs": [
                                              {
                                                "type": "template",
                                                "value": {
                                                  "imports": [],
                                                  "isOptional": true,
                                                  "templateString": "\"id\": $FERN_INPUT",
                                                  "templateInputs": [
                                                    {
                                                      "location": "RELATIVE",
                                                      "path": "id",
                                                      "type": "payload"
                                                    }
                                                  ],
                                                  "type": "generic"
                                                }
                                              },
                                              {
                                                "type": "template",
                                                "value": {
                                                  "imports": [],
                                                  "isOptional": true,
                                                  "templateString": "\"function\": {\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t}",
                                                  "templateInputs": [
                                                    {
                                                      "type": "template",
                                                      "value": {
                                                        "imports": [],
                                                        "isOptional": true,
                                                        "templateString": "\"name\": $FERN_INPUT",
                                                        "templateInputs": [
                                                          {
                                                            "location": "RELATIVE",
                                                            "path": "function.name",
                                                            "type": "payload"
                                                          }
                                                        ],
                                                        "type": "generic"
                                                      }
                                                    },
                                                    {
                                                      "type": "template",
                                                      "value": {
                                                        "imports": [],
                                                        "isOptional": true,
                                                        "templateString": "\"arguments\": $FERN_INPUT",
                                                        "templateInputs": [
                                                          {
                                                            "location": "RELATIVE",
                                                            "path": "function.arguments",
                                                            "type": "payload"
                                                          }
                                                        ],
                                                        "type": "generic"
                                                      }
                                                    }
                                                  ],
                                                  "inputDelimiter": ",\n\t\t\t\t\t\t\t",
                                                  "type": "generic"
                                                }
                                              }
                                            ],
                                            "inputDelimiter": ",\n\t\t\t\t\t\t",
                                            "type": "generic"
                                          },
                                          "templateInput": {
                                            "location": "RELATIVE",
                                            "path": "tool_calls"
                                          },
                                          "type": "iterable"
                                        }
                                      }
                                    ],
                                    "inputDelimiter": ",\n\t\t\t\t",
                                    "type": "generic"
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": null
                                  },
                                  "type": "iterable"
                                }
                              }
                            ],
                            "templateInput": {
                              "location": "BODY",
                              "path": "prompt.template"
                            },
                            "type": "union_v2"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"provider\": $FERN_INPUT",
                            "values": {
                              "openai": "\"openai\"",
                              "openai_azure": "\"openai_azure\"",
                              "mock": "\"mock\"",
                              "anthropic": "\"anthropic\"",
                              "bedrock": "\"bedrock\"",
                              "cohere": "\"cohere\"",
                              "replicate": "\"replicate\"",
                              "google": "\"google\"",
                              "groq": "\"groq\""
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "prompt.provider"
                            },
                            "type": "enum"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"max_tokens\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "prompt.max_tokens",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"temperature\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "prompt.temperature",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"top_p\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "prompt.top_p",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"stop\": $FERN_INPUT",
                            "members": [
                              {
                                "type": {
                                  "type": "primitive",
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "template": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "$FERN_INPUT",
                                  "templateInputs": [
                                    {
                                      "location": "RELATIVE",
                                      "path": null,
                                      "type": "payload"
                                    }
                                  ],
                                  "type": "generic"
                                }
                              },
                              {
                                "type": {
                                  "itemType": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "list"
                                },
                                "template": {
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "[\n\t\t\t$FERN_INPUT\n\t\t]",
                                  "delimiter": ",\n\t\t\t",
                                  "innerTemplate": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": null,
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": null
                                  },
                                  "type": "iterable"
                                }
                              }
                            ],
                            "templateInput": {
                              "location": "BODY",
                              "path": "prompt.stop"
                            },
                            "type": "union_v2"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"presence_penalty\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "prompt.presence_penalty",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"frequency_penalty\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "prompt.frequency_penalty",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "\"other\": {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyTemplate": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "$FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": null,
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            },
                            "valueTemplate": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "$FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": null,
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            },
                            "keyValueSeparator": ": ",
                            "templateInput": {
                              "location": "BODY",
                              "path": "prompt.other"
                            },
                            "type": "dict"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"seed\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "prompt.seed",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"response_format\": {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"type\": $FERN_INPUT",
                                  "values": {
                                    "json_object": "\"json_object\"",
                                    "json_schema": "\"json_schema\""
                                  },
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "prompt.response_format.type"
                                  },
                                  "type": "enum"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "\"json_schema\": {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                  "delimiter": ",\n\t\t\t\t",
                                  "keyTemplate": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": null,
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  },
                                  "valueTemplate": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": null,
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  },
                                  "keyValueSeparator": ": ",
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "prompt.response_format.type.response_format.json_schema"
                                  },
                                  "type": "dict"
                                }
                              }
                            ],
                            "inputDelimiter": ",\n\t\t\t",
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "\"tools\": [\n\t\t\t$FERN_INPUT\n\t\t]",
                            "delimiter": ",\n\t\t\t",
                            "innerTemplate": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "{\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"name\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "name",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"description\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "description",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"strict\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "strict",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "containerTemplateString": "\"parameters\": {\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                    "delimiter": ",\n\t\t\t\t\t",
                                    "keyTemplate": {
                                      "imports": [],
                                      "isOptional": true,
                                      "templateString": "$FERN_INPUT",
                                      "templateInputs": [
                                        {
                                          "location": "RELATIVE",
                                          "path": null,
                                          "type": "payload"
                                        }
                                      ],
                                      "type": "generic"
                                    },
                                    "valueTemplate": {
                                      "imports": [],
                                      "isOptional": true,
                                      "templateString": "$FERN_INPUT",
                                      "templateInputs": [
                                        {
                                          "location": "RELATIVE",
                                          "path": null,
                                          "type": "payload"
                                        }
                                      ],
                                      "type": "generic"
                                    },
                                    "keyValueSeparator": ": ",
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": "parameters"
                                    },
                                    "type": "dict"
                                  }
                                }
                              ],
                              "inputDelimiter": ",\n\t\t\t\t",
                              "type": "generic"
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "prompt.tools"
                            },
                            "type": "iterable"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "\"linked_tools\": [\n\t\t\t$FERN_INPUT\n\t\t]",
                            "delimiter": ",\n\t\t\t",
                            "innerTemplate": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "$FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": null,
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "prompt.linked_tools"
                            },
                            "type": "iterable"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "\"attributes\": {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyTemplate": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "$FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": null,
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            },
                            "valueTemplate": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "$FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": null,
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            },
                            "keyValueSeparator": ": ",
                            "templateInput": {
                              "location": "BODY",
                              "path": "prompt.attributes"
                            },
                            "type": "dict"
                          }
                        }
                      ],
                      "inputDelimiter": ",\n\t\t",
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "start_time=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "start_time",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "end_time=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "end_time",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "output=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "output",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "created_at=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "created_at",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "error=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "error",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "provider_latency=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "provider_latency",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "stdout=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "stdout",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "provider_request={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "provider_request"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "provider_response={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "provider_response"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "inputs={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "inputs"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "source=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "source",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "metadata={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "metadata"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "source_datapoint_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "source_datapoint_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "trace_parent_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "trace_parent_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "batch_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "batch_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "user=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "user",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "prompt_log_request_environment=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "environment",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "save=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "save",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.prompts.log(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "versionId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "version_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "environment: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "environment"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "evaluationId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "evaluation_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "path: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "path"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "id: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "outputMessage: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "union_v2",
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "content: $FERN_INPUT",
                                  "members": [
                                    {
                                      "template": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "$FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "RELATIVE",
                                            "path": null
                                          }
                                        ]
                                      },
                                      "type": {
                                        "type": "primitive",
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    {
                                      "template": {
                                        "type": "iterable",
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "[\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                        "delimiter": ",\n\t\t\t\t\t",
                                        "innerTemplate": {
                                          "type": "union_v2",
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "$FERN_INPUT",
                                          "members": [
                                            {
                                              "template": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "$FERN_INPUT",
                                                "isOptional": true,
                                                "inputDelimiter": ",\n\t\t\t\t\t\t",
                                                "templateInputs": [
                                                  {
                                                    "type": "template",
                                                    "value": {
                                                      "type": "generic",
                                                      "imports": [],
                                                      "templateString": "text: $FERN_INPUT",
                                                      "isOptional": true,
                                                      "templateInputs": [
                                                        {
                                                          "type": "payload",
                                                          "location": "RELATIVE",
                                                          "path": "text"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "type": {
                                                "type": "id",
                                                "value": "type_:TextChatContent"
                                              }
                                            },
                                            {
                                              "template": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "$FERN_INPUT",
                                                "isOptional": true,
                                                "inputDelimiter": ",\n\t\t\t\t\t\t",
                                                "templateInputs": [
                                                  {
                                                    "type": "template",
                                                    "value": {
                                                      "type": "generic",
                                                      "imports": [],
                                                      "templateString": "imageUrl: {\n\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t}",
                                                      "isOptional": true,
                                                      "inputDelimiter": ",\n\t\t\t\t\t\t\t\t",
                                                      "templateInputs": [
                                                        {
                                                          "type": "template",
                                                          "value": {
                                                            "type": "generic",
                                                            "imports": [],
                                                            "templateString": "url: $FERN_INPUT",
                                                            "isOptional": true,
                                                            "templateInputs": [
                                                              {
                                                                "type": "payload",
                                                                "location": "RELATIVE",
                                                                "path": "image_url.url"
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "template",
                                                          "value": {
                                                            "type": "enum",
                                                            "imports": [],
                                                            "isOptional": true,
                                                            "values": {
                                                              "high": "\"high\"",
                                                              "low": "\"low\"",
                                                              "auto": "\"auto\""
                                                            },
                                                            "templateString": "detail: $FERN_INPUT",
                                                            "templateInput": {
                                                              "location": "RELATIVE",
                                                              "path": "image_url.detail"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "type": {
                                                "type": "id",
                                                "value": "type_:ImageChatContent"
                                              }
                                            }
                                          ],
                                          "templateInput": {
                                            "location": "RELATIVE",
                                            "path": null
                                          }
                                        },
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": null
                                        }
                                      },
                                      "type": {
                                        "type": "list",
                                        "itemType": {
                                          "type": "id",
                                          "value": "type_:ChatMessageContentItem"
                                        }
                                      }
                                    }
                                  ],
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "output_message.content"
                                  }
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "name: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "output_message.name"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "toolCallId: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "output_message.tool_call_id"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "enum",
                                  "imports": [],
                                  "isOptional": true,
                                  "values": {
                                    "user": "\"user\"",
                                    "assistant": "\"assistant\"",
                                    "system": "\"system\"",
                                    "tool": "\"tool\""
                                  },
                                  "templateString": "role: $FERN_INPUT",
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "output_message.role"
                                  }
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "iterable",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "toolCalls: [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                  "delimiter": ",\n\t\t\t\t",
                                  "innerTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "{\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                    "isOptional": true,
                                    "inputDelimiter": ",\n\t\t\t\t\t",
                                    "templateInputs": [
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "id: $FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": "id"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "function: {\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                          "isOptional": true,
                                          "inputDelimiter": ",\n\t\t\t\t\t\t",
                                          "templateInputs": [
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "name: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "function.name"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "arguments: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "function.arguments"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "output_message.tool_calls"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "promptTokens: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "prompt_tokens"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "outputTokens: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "output_tokens"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "promptCost: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "prompt_cost"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "outputCost: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "output_cost"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "finishReason: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "finish_reason"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "iterable",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "messages: [\n\t\t\t$FERN_INPUT\n\t\t]",
                            "delimiter": ",\n\t\t\t",
                            "innerTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "{\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                              "isOptional": true,
                              "inputDelimiter": ",\n\t\t\t\t",
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "union_v2",
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "content: $FERN_INPUT",
                                    "members": [
                                      {
                                        "template": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          ]
                                        },
                                        "type": {
                                          "type": "primitive",
                                          "value": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      {
                                        "template": {
                                          "type": "iterable",
                                          "imports": [],
                                          "isOptional": true,
                                          "containerTemplateString": "[\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t]",
                                          "delimiter": ",\n\t\t\t\t\t\t",
                                          "innerTemplate": {
                                            "type": "union_v2",
                                            "imports": [],
                                            "isOptional": true,
                                            "templateString": "$FERN_INPUT",
                                            "members": [
                                              {
                                                "template": {
                                                  "type": "generic",
                                                  "imports": [],
                                                  "templateString": "$FERN_INPUT",
                                                  "isOptional": true,
                                                  "inputDelimiter": ",\n\t\t\t\t\t\t\t",
                                                  "templateInputs": [
                                                    {
                                                      "type": "template",
                                                      "value": {
                                                        "type": "generic",
                                                        "imports": [],
                                                        "templateString": "text: $FERN_INPUT",
                                                        "isOptional": true,
                                                        "templateInputs": [
                                                          {
                                                            "type": "payload",
                                                            "location": "RELATIVE",
                                                            "path": "text"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                },
                                                "type": {
                                                  "type": "id",
                                                  "value": "type_:TextChatContent"
                                                }
                                              },
                                              {
                                                "template": {
                                                  "type": "generic",
                                                  "imports": [],
                                                  "templateString": "$FERN_INPUT",
                                                  "isOptional": true,
                                                  "inputDelimiter": ",\n\t\t\t\t\t\t\t",
                                                  "templateInputs": [
                                                    {
                                                      "type": "template",
                                                      "value": {
                                                        "type": "generic",
                                                        "imports": [],
                                                        "templateString": "imageUrl: {\n\t\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t\t}",
                                                        "isOptional": true,
                                                        "inputDelimiter": ",\n\t\t\t\t\t\t\t\t\t",
                                                        "templateInputs": [
                                                          {
                                                            "type": "template",
                                                            "value": {
                                                              "type": "generic",
                                                              "imports": [],
                                                              "templateString": "url: $FERN_INPUT",
                                                              "isOptional": true,
                                                              "templateInputs": [
                                                                {
                                                                  "type": "payload",
                                                                  "location": "RELATIVE",
                                                                  "path": "image_url.url"
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "template",
                                                            "value": {
                                                              "type": "enum",
                                                              "imports": [],
                                                              "isOptional": true,
                                                              "values": {
                                                                "high": "\"high\"",
                                                                "low": "\"low\"",
                                                                "auto": "\"auto\""
                                                              },
                                                              "templateString": "detail: $FERN_INPUT",
                                                              "templateInput": {
                                                                "location": "RELATIVE",
                                                                "path": "image_url.detail"
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                },
                                                "type": {
                                                  "type": "id",
                                                  "value": "type_:ImageChatContent"
                                                }
                                              }
                                            ],
                                            "templateInput": {
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          },
                                          "templateInput": {
                                            "location": "RELATIVE",
                                            "path": null
                                          }
                                        },
                                        "type": {
                                          "type": "list",
                                          "itemType": {
                                            "type": "id",
                                            "value": "type_:ChatMessageContentItem"
                                          }
                                        }
                                      }
                                    ],
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": "content"
                                    }
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "name: $FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": "name"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "toolCallId: $FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": "tool_call_id"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "enum",
                                    "imports": [],
                                    "isOptional": true,
                                    "values": {
                                      "user": "\"user\"",
                                      "assistant": "\"assistant\"",
                                      "system": "\"system\"",
                                      "tool": "\"tool\""
                                    },
                                    "templateString": "role: $FERN_INPUT",
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": "role"
                                    }
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "iterable",
                                    "imports": [],
                                    "isOptional": true,
                                    "containerTemplateString": "toolCalls: [\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                    "delimiter": ",\n\t\t\t\t\t",
                                    "innerTemplate": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "{\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                      "isOptional": true,
                                      "inputDelimiter": ",\n\t\t\t\t\t\t",
                                      "templateInputs": [
                                        {
                                          "type": "template",
                                          "value": {
                                            "type": "generic",
                                            "imports": [],
                                            "templateString": "id: $FERN_INPUT",
                                            "isOptional": true,
                                            "templateInputs": [
                                              {
                                                "type": "payload",
                                                "location": "RELATIVE",
                                                "path": "id"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "template",
                                          "value": {
                                            "type": "generic",
                                            "imports": [],
                                            "templateString": "function: {\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t}",
                                            "isOptional": true,
                                            "inputDelimiter": ",\n\t\t\t\t\t\t\t",
                                            "templateInputs": [
                                              {
                                                "type": "template",
                                                "value": {
                                                  "type": "generic",
                                                  "imports": [],
                                                  "templateString": "name: $FERN_INPUT",
                                                  "isOptional": true,
                                                  "templateInputs": [
                                                    {
                                                      "type": "payload",
                                                      "location": "RELATIVE",
                                                      "path": "function.name"
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "template",
                                                "value": {
                                                  "type": "generic",
                                                  "imports": [],
                                                  "templateString": "arguments: $FERN_INPUT",
                                                  "isOptional": true,
                                                  "templateInputs": [
                                                    {
                                                      "type": "payload",
                                                      "location": "RELATIVE",
                                                      "path": "function.arguments"
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": "tool_calls"
                                    }
                                  }
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "messages"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "union_v2",
                            "imports": [],
                            "isOptional": true,
                            "templateString": "toolChoice: $FERN_INPUT",
                            "members": [
                              {
                                "template": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "\"none\"",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "literal",
                                  "value": {
                                    "type": "stringLiteral",
                                    "value": "none"
                                  }
                                }
                              },
                              {
                                "template": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "\"auto\"",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "literal",
                                  "value": {
                                    "type": "stringLiteral",
                                    "value": "auto"
                                  }
                                }
                              },
                              {
                                "template": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "\"required\"",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "literal",
                                  "value": {
                                    "type": "stringLiteral",
                                    "value": "required"
                                  }
                                }
                              },
                              {
                                "template": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "inputDelimiter": ",\n\t\t\t",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "function: {\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                        "isOptional": true,
                                        "inputDelimiter": ",\n\t\t\t\t\t",
                                        "templateInputs": [
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "name: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "RELATIVE",
                                                  "path": "function.name"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "id",
                                  "value": "type_:ToolChoice"
                                }
                              }
                            ],
                            "templateInput": {
                              "location": "BODY",
                              "path": "tool_choice"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "prompt: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "model: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "prompt.model"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "enum",
                                  "imports": [],
                                  "isOptional": true,
                                  "values": {
                                    "complete": "\"complete\"",
                                    "chat": "\"chat\"",
                                    "edit": "\"edit\""
                                  },
                                  "templateString": "endpoint: $FERN_INPUT",
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "prompt.endpoint"
                                  }
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "union_v2",
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "template: $FERN_INPUT",
                                  "members": [
                                    {
                                      "template": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "$FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "RELATIVE",
                                            "path": null
                                          }
                                        ]
                                      },
                                      "type": {
                                        "type": "primitive",
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    {
                                      "template": {
                                        "type": "iterable",
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "[\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                        "delimiter": ",\n\t\t\t\t\t",
                                        "innerTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "{\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                          "isOptional": true,
                                          "inputDelimiter": ",\n\t\t\t\t\t\t",
                                          "templateInputs": [
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "union_v2",
                                                "imports": [],
                                                "isOptional": true,
                                                "templateString": "content: $FERN_INPUT",
                                                "members": [
                                                  {
                                                    "template": {
                                                      "type": "generic",
                                                      "imports": [],
                                                      "templateString": "$FERN_INPUT",
                                                      "isOptional": true,
                                                      "templateInputs": [
                                                        {
                                                          "type": "payload",
                                                          "location": "RELATIVE",
                                                          "path": null
                                                        }
                                                      ]
                                                    },
                                                    "type": {
                                                      "type": "primitive",
                                                      "value": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "template": {
                                                      "type": "iterable",
                                                      "imports": [],
                                                      "isOptional": true,
                                                      "containerTemplateString": "[\n\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t]",
                                                      "delimiter": ",\n\t\t\t\t\t\t\t\t",
                                                      "innerTemplate": {
                                                        "type": "union_v2",
                                                        "imports": [],
                                                        "isOptional": true,
                                                        "templateString": "$FERN_INPUT",
                                                        "members": [
                                                          {
                                                            "template": {
                                                              "type": "generic",
                                                              "imports": [],
                                                              "templateString": "$FERN_INPUT",
                                                              "isOptional": true,
                                                              "inputDelimiter": ",\n\t\t\t\t\t\t\t\t\t",
                                                              "templateInputs": [
                                                                {
                                                                  "type": "template",
                                                                  "value": {
                                                                    "type": "generic",
                                                                    "imports": [],
                                                                    "templateString": "text: $FERN_INPUT",
                                                                    "isOptional": true,
                                                                    "templateInputs": [
                                                                      {
                                                                        "type": "payload",
                                                                        "location": "RELATIVE",
                                                                        "path": "text"
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "type": {
                                                              "type": "id",
                                                              "value": "type_:TextChatContent"
                                                            }
                                                          },
                                                          {
                                                            "template": {
                                                              "type": "generic",
                                                              "imports": [],
                                                              "templateString": "$FERN_INPUT",
                                                              "isOptional": true,
                                                              "inputDelimiter": ",\n\t\t\t\t\t\t\t\t\t",
                                                              "templateInputs": [
                                                                {
                                                                  "type": "template",
                                                                  "value": {
                                                                    "type": "generic",
                                                                    "imports": [],
                                                                    "templateString": "imageUrl: {\n\t\t\t\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t\t\t\t}",
                                                                    "isOptional": true,
                                                                    "inputDelimiter": ",\n\t\t\t\t\t\t\t\t\t\t\t",
                                                                    "templateInputs": []
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "type": {
                                                              "type": "id",
                                                              "value": "type_:ImageChatContent"
                                                            }
                                                          }
                                                        ],
                                                        "templateInput": {
                                                          "location": "RELATIVE",
                                                          "path": null
                                                        }
                                                      },
                                                      "templateInput": {
                                                        "location": "RELATIVE",
                                                        "path": null
                                                      }
                                                    },
                                                    "type": {
                                                      "type": "list",
                                                      "itemType": {
                                                        "type": "id",
                                                        "value": "type_:ChatMessageContentItem"
                                                      }
                                                    }
                                                  }
                                                ],
                                                "templateInput": {
                                                  "location": "RELATIVE",
                                                  "path": "content"
                                                }
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "name: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "name"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "toolCallId: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "tool_call_id"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "enum",
                                                "imports": [],
                                                "isOptional": true,
                                                "values": {
                                                  "user": "\"user\"",
                                                  "assistant": "\"assistant\"",
                                                  "system": "\"system\"",
                                                  "tool": "\"tool\""
                                                },
                                                "templateString": "role: $FERN_INPUT",
                                                "templateInput": {
                                                  "location": "RELATIVE",
                                                  "path": "role"
                                                }
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "iterable",
                                                "imports": [],
                                                "isOptional": true,
                                                "containerTemplateString": "toolCalls: [\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t]",
                                                "delimiter": ",\n\t\t\t\t\t\t\t",
                                                "innerTemplate": {
                                                  "type": "generic",
                                                  "imports": [],
                                                  "templateString": "{\n\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t}",
                                                  "isOptional": true,
                                                  "inputDelimiter": ",\n\t\t\t\t\t\t\t\t",
                                                  "templateInputs": [
                                                    {
                                                      "type": "template",
                                                      "value": {
                                                        "type": "generic",
                                                        "imports": [],
                                                        "templateString": "id: $FERN_INPUT",
                                                        "isOptional": true,
                                                        "templateInputs": [
                                                          {
                                                            "type": "payload",
                                                            "location": "RELATIVE",
                                                            "path": "id"
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    {
                                                      "type": "template",
                                                      "value": {
                                                        "type": "generic",
                                                        "imports": [],
                                                        "templateString": "function: {\n\t\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t\t}",
                                                        "isOptional": true,
                                                        "inputDelimiter": ",\n\t\t\t\t\t\t\t\t\t",
                                                        "templateInputs": [
                                                          {
                                                            "type": "template",
                                                            "value": {
                                                              "type": "generic",
                                                              "imports": [],
                                                              "templateString": "name: $FERN_INPUT",
                                                              "isOptional": true,
                                                              "templateInputs": [
                                                                {
                                                                  "type": "payload",
                                                                  "location": "RELATIVE",
                                                                  "path": "function.name"
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "template",
                                                            "value": {
                                                              "type": "generic",
                                                              "imports": [],
                                                              "templateString": "arguments: $FERN_INPUT",
                                                              "isOptional": true,
                                                              "templateInputs": [
                                                                {
                                                                  "type": "payload",
                                                                  "location": "RELATIVE",
                                                                  "path": "function.arguments"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                },
                                                "templateInput": {
                                                  "location": "RELATIVE",
                                                  "path": "tool_calls"
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": null
                                        }
                                      },
                                      "type": {
                                        "type": "list",
                                        "itemType": {
                                          "type": "id",
                                          "value": "type_:ChatMessage"
                                        }
                                      }
                                    }
                                  ],
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "prompt.template"
                                  }
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "enum",
                                  "imports": [],
                                  "isOptional": true,
                                  "values": {
                                    "openai": "\"openai\"",
                                    "openai_azure": "\"openai_azure\"",
                                    "mock": "\"mock\"",
                                    "anthropic": "\"anthropic\"",
                                    "bedrock": "\"bedrock\"",
                                    "cohere": "\"cohere\"",
                                    "replicate": "\"replicate\"",
                                    "google": "\"google\"",
                                    "groq": "\"groq\""
                                  },
                                  "templateString": "provider: $FERN_INPUT",
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "prompt.provider"
                                  }
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "maxTokens: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "prompt.max_tokens"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "temperature: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "prompt.temperature"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "topP: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "prompt.top_p"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "union_v2",
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "stop: $FERN_INPUT",
                                  "members": [
                                    {
                                      "template": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "$FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "RELATIVE",
                                            "path": null
                                          }
                                        ]
                                      },
                                      "type": {
                                        "type": "primitive",
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    {
                                      "template": {
                                        "type": "iterable",
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "[\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                        "delimiter": ",\n\t\t\t\t\t",
                                        "innerTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          ]
                                        },
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": null
                                        }
                                      },
                                      "type": {
                                        "type": "list",
                                        "itemType": {
                                          "type": "primitive",
                                          "value": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  ],
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "prompt.stop"
                                  }
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "presencePenalty: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "prompt.presence_penalty"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "frequencyPenalty: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "prompt.frequency_penalty"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "dict",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "other: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                  "delimiter": ",\n\t\t\t\t",
                                  "keyValueSeparator": ": ",
                                  "keyTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "$FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    ]
                                  },
                                  "valueTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "$FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    ]
                                  },
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "prompt.other"
                                  }
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "seed: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "prompt.seed"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "responseFormat: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                  "isOptional": true,
                                  "inputDelimiter": ",\n\t\t\t\t",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "enum",
                                        "imports": [],
                                        "isOptional": true,
                                        "values": {
                                          "json_object": "\"json_object\"",
                                          "json_schema": "\"json_schema\""
                                        },
                                        "templateString": "type: $FERN_INPUT",
                                        "templateInput": {
                                          "location": "BODY",
                                          "path": "prompt.response_format.type"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "dict",
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "jsonSchema: {\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                        "delimiter": ",\n\t\t\t\t\t",
                                        "keyValueSeparator": ": ",
                                        "keyTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          ]
                                        },
                                        "valueTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          ]
                                        },
                                        "templateInput": {
                                          "location": "BODY",
                                          "path": "prompt.response_format.json_schema"
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "iterable",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "tools: [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                  "delimiter": ",\n\t\t\t\t",
                                  "innerTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "{\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                    "isOptional": true,
                                    "inputDelimiter": ",\n\t\t\t\t\t",
                                    "templateInputs": [
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "name: $FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": "name"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "description: $FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": "description"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "strict: $FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": "strict"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "dict",
                                          "imports": [],
                                          "isOptional": true,
                                          "containerTemplateString": "parameters: {\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                          "delimiter": ",\n\t\t\t\t\t\t",
                                          "keyValueSeparator": ": ",
                                          "keyTemplate": {
                                            "type": "generic",
                                            "imports": [],
                                            "templateString": "$FERN_INPUT",
                                            "isOptional": true,
                                            "templateInputs": [
                                              {
                                                "type": "payload",
                                                "location": "RELATIVE",
                                                "path": null
                                              }
                                            ]
                                          },
                                          "valueTemplate": {
                                            "type": "generic",
                                            "imports": [],
                                            "templateString": "$FERN_INPUT",
                                            "isOptional": true,
                                            "templateInputs": [
                                              {
                                                "type": "payload",
                                                "location": "RELATIVE",
                                                "path": null
                                              }
                                            ]
                                          },
                                          "templateInput": {
                                            "location": "RELATIVE",
                                            "path": "parameters"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "prompt.tools"
                                  }
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "iterable",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "linkedTools: [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                  "delimiter": ",\n\t\t\t\t",
                                  "innerTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "$FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    ]
                                  },
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "prompt.linked_tools"
                                  }
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "dict",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "attributes: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                  "delimiter": ",\n\t\t\t\t",
                                  "keyValueSeparator": ": ",
                                  "keyTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "$FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    ]
                                  },
                                  "valueTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "$FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    ]
                                  },
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "prompt.attributes"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "startTime: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "start_time"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "endTime: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "end_time"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "output: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "output"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "createdAt: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "created_at"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "error: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "error"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "providerLatency: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "provider_latency"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "stdout: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "stdout"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "providerRequest: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "provider_request"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "providerResponse: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "provider_response"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "inputs: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "inputs"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "source: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "source"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "metadata: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "metadata"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "sourceDatapointId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "source_datapoint_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "traceParentId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "trace_parent_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "batchId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "batch_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "user: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "user"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "promptLogRequestEnvironment: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "environment"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "save: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "save"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "update-log",
          "migratedFromUrlSlugs": ["update-prompt-log"],
          "method": "PATCH",
          "id": "updateLog",
          "originalEndpointId": "endpoint_prompts.updateLog",
          "name": "Update Prompt Log",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Prompt.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "Unique identifier for the Log.",
                "key": "log_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/prompts/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/log/"
              },
              {
                "type": "pathParameter",
                "value": "log_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The message returned by the provider.",
                  "key": "output_message",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ChatMessage"
                    }
                  }
                },
                {
                  "description": "Number of tokens in the prompt used to generate the output.",
                  "key": "prompt_tokens",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "Number of tokens in the output generated by the model.",
                  "key": "output_tokens",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "Cost in dollars associated to the tokens in the prompt.",
                  "key": "prompt_cost",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                },
                {
                  "description": "Cost in dollars associated to the tokens in the output.",
                  "key": "output_cost",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                },
                {
                  "description": "Reason the generation finished.",
                  "key": "finish_reason",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The messages passed to the to provider chat endpoint.",
                  "key": "messages",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:ChatMessage"
                      }
                    }
                  }
                },
                {
                  "description": "Controls how the model uses tools. The following options are supported: \n- `'none'` means the model will not call any tool and instead generates a message; this is the default when no tools are provided as part of the Prompt. \n- `'auto'` means the model can decide to call one or more of the provided tools; this is the default when tools are provided as part of the Prompt. \n- `'required'` means the model can decide to call one or more of the provided tools. \n- `{'type': 'function', 'function': {name': <TOOL_NAME>}}` forces the model to use the named function.",
                  "key": "tool_choice",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_prompts:PromptLogUpdateRequestToolChoice"
                    }
                  }
                },
                {
                  "description": "Generated output from your model for the provided inputs. Can be `None` if logging an error, or if creating a parent Log with the intention to populate it later.",
                  "key": "output",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "User defined timestamp for when the log was created. ",
                  "key": "created_at",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Error message if the log is an error.",
                  "key": "error",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Duration of the logged event in seconds.",
                  "key": "provider_latency",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                },
                {
                  "description": "Captured log and debug statements.",
                  "key": "stdout",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Raw request sent to provider.",
                  "key": "provider_request",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "Raw response received the provider.",
                  "key": "provider_response",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "The inputs passed to the prompt template.",
                  "key": "inputs",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "Identifies where the model was called from.",
                  "key": "source",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Any additional metadata to record.",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "When the logged event started.",
                  "key": "start_time",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "When the logged event ended.",
                  "key": "end_time",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              ]
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:LogResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/prompts/id/log/log_id",
              "pathParameters": {
                "id": "id",
                "log_id": "log_id"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "output_message": {
                  "content": "content",
                  "name": "name",
                  "tool_call_id": "tool_call_id",
                  "role": "user",
                  "tool_calls": [
                    {
                      "id": "id",
                      "type": "function",
                      "function": {
                        "name": "name"
                      }
                    }
                  ]
                },
                "prompt_tokens": 1,
                "output_tokens": 1,
                "prompt_cost": 1.1,
                "output_cost": 1.1,
                "finish_reason": "finish_reason",
                "messages": [
                  {
                    "content": "content",
                    "name": "name",
                    "tool_call_id": "tool_call_id",
                    "role": "user",
                    "tool_calls": [
                      {
                        "id": "id",
                        "type": "function",
                        "function": {
                          "name": "name"
                        }
                      }
                    ]
                  }
                ],
                "tool_choice": "none",
                "prompt": {
                  "path": "path",
                  "id": "id",
                  "directory_id": "directory_id",
                  "model": "model",
                  "endpoint": "complete",
                  "template": "template",
                  "provider": "openai",
                  "max_tokens": 1,
                  "temperature": 1.1,
                  "top_p": 1.1,
                  "stop": "stop",
                  "presence_penalty": 1.1,
                  "frequency_penalty": 1.1,
                  "other": {
                    "key": "value"
                  },
                  "seed": 1,
                  "response_format": {
                    "type": "json_object",
                    "json_schema": {
                      "key": "value"
                    }
                  },
                  "tools": [
                    {
                      "name": "name",
                      "description": "description"
                    }
                  ],
                  "linked_tools": [
                    {
                      "name": "name",
                      "description": "description",
                      "id": "id",
                      "version_id": "version_id"
                    }
                  ],
                  "attributes": {
                    "key": "value"
                  },
                  "commit_message": "commit_message",
                  "name": "name",
                  "version_id": "version_id",
                  "type": "prompt",
                  "environments": [
                    {
                      "id": "id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "name": "name",
                      "tag": "default"
                    }
                  ],
                  "created_at": "2024-01-15T09:30:00Z",
                  "updated_at": "2024-01-15T09:30:00Z",
                  "created_by": {
                    "id": "id",
                    "email_address": "email_address",
                    "full_name": "full_name"
                  },
                  "status": "uncommitted",
                  "last_used_at": "2024-01-15T09:30:00Z",
                  "version_logs_count": 1,
                  "total_logs_count": 1,
                  "inputs": [
                    {
                      "name": "name"
                    }
                  ],
                  "evaluator_aggregates": [
                    {
                      "value": 1.1,
                      "evaluator_id": "evaluator_id",
                      "evaluator_version_id": "evaluator_version_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z"
                    }
                  ]
                },
                "start_time": "2024-01-15T09:30:00Z",
                "end_time": "2024-01-15T09:30:00Z",
                "output": "output",
                "created_at": "2024-01-15T09:30:00Z",
                "error": "error",
                "provider_latency": 1.1,
                "stdout": "stdout",
                "provider_request": {
                  "key": "value"
                },
                "provider_response": {
                  "key": "value"
                },
                "inputs": {
                  "key": "value"
                },
                "source": "source",
                "metadata": {
                  "key": "value"
                },
                "source_datapoint_id": "source_datapoint_id",
                "trace_parent_id": "trace_parent_id",
                "batches": ["batches"],
                "user": "user",
                "environment": "environment",
                "save": true,
                "id": "id",
                "evaluator_logs": [
                  {
                    "start_time": "2024-01-15T09:30:00Z",
                    "end_time": "2024-01-15T09:30:00Z",
                    "output": "output",
                    "created_at": "2024-01-15T09:30:00Z",
                    "error": "error",
                    "provider_latency": 1.1,
                    "stdout": "stdout",
                    "provider_request": {
                      "key": "value"
                    },
                    "provider_response": {
                      "key": "value"
                    },
                    "inputs": {
                      "key": "value"
                    },
                    "source": "source",
                    "metadata": {
                      "key": "value"
                    },
                    "parent_id": "parent_id",
                    "source_datapoint_id": "source_datapoint_id",
                    "trace_parent_id": "trace_parent_id",
                    "batches": ["batches"],
                    "user": "user",
                    "environment": "environment",
                    "save": true,
                    "judgment": true,
                    "id": "id",
                    "evaluator_logs": [],
                    "trace_flow_id": "trace_flow_id",
                    "trace_id": "trace_id",
                    "evaluator": {
                      "path": "path",
                      "id": "id",
                      "spec": {
                        "arguments_type": "target_free",
                        "return_type": "boolean",
                        "evaluator_type": "llm"
                      },
                      "name": "name",
                      "version_id": "version_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "status": "uncommitted",
                      "last_used_at": "2024-01-15T09:30:00Z",
                      "version_logs_count": 1,
                      "total_logs_count": 1,
                      "inputs": [
                        {
                          "name": "name"
                        }
                      ]
                    }
                  }
                ],
                "trace_flow_id": "trace_flow_id",
                "trace_id": "trace_id"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "output_message": {
                    "content": "content",
                    "name": "name",
                    "tool_call_id": "tool_call_id",
                    "role": "user",
                    "tool_calls": [
                      {
                        "id": "id",
                        "type": "function",
                        "function": {
                          "name": "name"
                        }
                      }
                    ]
                  },
                  "prompt_tokens": 1,
                  "output_tokens": 1,
                  "prompt_cost": 1.1,
                  "output_cost": 1.1,
                  "finish_reason": "finish_reason",
                  "messages": [
                    {
                      "content": "content",
                      "name": "name",
                      "tool_call_id": "tool_call_id",
                      "role": "user",
                      "tool_calls": [
                        {
                          "id": "id",
                          "type": "function",
                          "function": {
                            "name": "name"
                          }
                        }
                      ]
                    }
                  ],
                  "tool_choice": "none",
                  "prompt": {
                    "path": "path",
                    "id": "id",
                    "directory_id": "directory_id",
                    "model": "model",
                    "endpoint": "complete",
                    "template": "template",
                    "provider": "openai",
                    "max_tokens": 1,
                    "temperature": 1.1,
                    "top_p": 1.1,
                    "stop": "stop",
                    "presence_penalty": 1.1,
                    "frequency_penalty": 1.1,
                    "other": {
                      "key": "value"
                    },
                    "seed": 1,
                    "response_format": {
                      "type": "json_object",
                      "json_schema": {
                        "key": "value"
                      }
                    },
                    "tools": [
                      {
                        "name": "name",
                        "description": "description"
                      }
                    ],
                    "linked_tools": [
                      {
                        "name": "name",
                        "description": "description",
                        "id": "id",
                        "version_id": "version_id"
                      }
                    ],
                    "attributes": {
                      "key": "value"
                    },
                    "commit_message": "commit_message",
                    "name": "name",
                    "version_id": "version_id",
                    "type": "prompt",
                    "environments": [
                      {
                        "id": "id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "name": "name",
                        "tag": "default"
                      }
                    ],
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z",
                    "created_by": {
                      "id": "id",
                      "email_address": "email_address",
                      "full_name": "full_name"
                    },
                    "status": "uncommitted",
                    "last_used_at": "2024-01-15T09:30:00Z",
                    "version_logs_count": 1,
                    "total_logs_count": 1,
                    "inputs": [
                      {
                        "name": "name"
                      }
                    ],
                    "evaluator_aggregates": [
                      {
                        "value": 1.1,
                        "evaluator_id": "evaluator_id",
                        "evaluator_version_id": "evaluator_version_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      }
                    ]
                  },
                  "start_time": "2024-01-15T09:30:00Z",
                  "end_time": "2024-01-15T09:30:00Z",
                  "output": "output",
                  "created_at": "2024-01-15T09:30:00Z",
                  "error": "error",
                  "provider_latency": 1.1,
                  "stdout": "stdout",
                  "provider_request": {
                    "key": "value"
                  },
                  "provider_response": {
                    "key": "value"
                  },
                  "inputs": {
                    "key": "value"
                  },
                  "source": "source",
                  "metadata": {
                    "key": "value"
                  },
                  "source_datapoint_id": "source_datapoint_id",
                  "trace_parent_id": "trace_parent_id",
                  "batches": ["batches"],
                  "user": "user",
                  "environment": "environment",
                  "save": true,
                  "id": "id",
                  "evaluator_logs": [
                    {
                      "start_time": "2024-01-15T09:30:00Z",
                      "end_time": "2024-01-15T09:30:00Z",
                      "output": "output",
                      "created_at": "2024-01-15T09:30:00Z",
                      "error": "error",
                      "provider_latency": 1.1,
                      "stdout": "stdout",
                      "provider_request": {
                        "key": "value"
                      },
                      "provider_response": {
                        "key": "value"
                      },
                      "inputs": {
                        "key": "value"
                      },
                      "source": "source",
                      "metadata": {
                        "key": "value"
                      },
                      "parent_id": "parent_id",
                      "source_datapoint_id": "source_datapoint_id",
                      "trace_parent_id": "trace_parent_id",
                      "batches": ["batches"],
                      "user": "user",
                      "environment": "environment",
                      "save": true,
                      "judgment": true,
                      "id": "id",
                      "evaluator_logs": [],
                      "trace_flow_id": "trace_flow_id",
                      "trace_id": "trace_id",
                      "evaluator": {
                        "path": "path",
                        "id": "id",
                        "spec": {
                          "arguments_type": "target_free",
                          "return_type": "boolean",
                          "evaluator_type": "llm"
                        },
                        "name": "name",
                        "version_id": "version_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "status": "uncommitted",
                        "last_used_at": "2024-01-15T09:30:00Z",
                        "version_logs_count": 1,
                        "total_logs_count": 1,
                        "inputs": [
                          {
                            "name": "name"
                          }
                        ]
                      }
                    }
                  ],
                  "trace_flow_id": "trace_flow_id",
                  "trace_id": "trace_id"
                }
              },
              "codeSamples": []
            },
            {
              "path": "/prompts/:id/log/:log_id",
              "pathParameters": {
                "id": ":id",
                "log_id": ":log_id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Update a Log.\n\nUpdate the details of a Log with the given ID.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.prompts.update_log(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "log_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "log_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "output_message={\n\t\t$FERN_INPUT\n\t}",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"content\": $FERN_INPUT",
                            "members": [
                              {
                                "type": {
                                  "type": "primitive",
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "template": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "$FERN_INPUT",
                                  "templateInputs": [
                                    {
                                      "location": "RELATIVE",
                                      "path": null,
                                      "type": "payload"
                                    }
                                  ],
                                  "type": "generic"
                                }
                              },
                              {
                                "type": {
                                  "itemType": {
                                    "value": "type_:ChatMessageContentItem",
                                    "type": "id"
                                  },
                                  "type": "list"
                                },
                                "template": {
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "[\n\t\t\t$FERN_INPUT\n\t\t]",
                                  "delimiter": ",\n\t\t\t",
                                  "innerTemplate": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "members": [
                                      {
                                        "type": {
                                          "value": "type_:TextChatContent",
                                          "type": "id"
                                        },
                                        "template": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "{\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                          "templateInputs": [
                                            {
                                              "type": "template",
                                              "value": {
                                                "imports": [],
                                                "isOptional": true,
                                                "templateString": "\"text\": $FERN_INPUT",
                                                "templateInputs": [
                                                  {
                                                    "location": "RELATIVE",
                                                    "path": "text",
                                                    "type": "payload"
                                                  }
                                                ],
                                                "type": "generic"
                                              }
                                            }
                                          ],
                                          "inputDelimiter": ",\n\t\t\t\t",
                                          "type": "generic"
                                        }
                                      },
                                      {
                                        "type": {
                                          "value": "type_:ImageChatContent",
                                          "type": "id"
                                        },
                                        "template": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "{\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                          "templateInputs": [
                                            {
                                              "type": "template",
                                              "value": {
                                                "imports": [],
                                                "isOptional": true,
                                                "templateString": "\"image_url\": {\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                                "templateInputs": [
                                                  {
                                                    "type": "template",
                                                    "value": {
                                                      "imports": [],
                                                      "isOptional": true,
                                                      "templateString": "\"url\": $FERN_INPUT",
                                                      "templateInputs": [
                                                        {
                                                          "location": "RELATIVE",
                                                          "path": "image_url.url",
                                                          "type": "payload"
                                                        }
                                                      ],
                                                      "type": "generic"
                                                    }
                                                  },
                                                  {
                                                    "type": "template",
                                                    "value": {
                                                      "imports": [],
                                                      "isOptional": true,
                                                      "templateString": "\"detail\": $FERN_INPUT",
                                                      "values": {
                                                        "high": "\"high\"",
                                                        "low": "\"low\"",
                                                        "auto": "\"auto\""
                                                      },
                                                      "templateInput": {
                                                        "location": "RELATIVE",
                                                        "path": "image_url.detail"
                                                      },
                                                      "type": "enum"
                                                    }
                                                  }
                                                ],
                                                "inputDelimiter": ",\n\t\t\t\t\t",
                                                "type": "generic"
                                              }
                                            }
                                          ],
                                          "inputDelimiter": ",\n\t\t\t\t",
                                          "type": "generic"
                                        }
                                      }
                                    ],
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": null
                                    },
                                    "type": "union_v2"
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": null
                                  },
                                  "type": "iterable"
                                }
                              }
                            ],
                            "templateInput": {
                              "location": "BODY",
                              "path": "output_message.content"
                            },
                            "type": "union_v2"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"name\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "output_message.name",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"tool_call_id\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "output_message.tool_call_id",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"role\": $FERN_INPUT",
                            "values": {
                              "user": "\"user\"",
                              "assistant": "\"assistant\"",
                              "system": "\"system\"",
                              "tool": "\"tool\""
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "output_message.role"
                            },
                            "type": "enum"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "\"tool_calls\": [\n\t\t\t$FERN_INPUT\n\t\t]",
                            "delimiter": ",\n\t\t\t",
                            "innerTemplate": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "{\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"id\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "id",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"function\": {\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                    "templateInputs": [
                                      {
                                        "type": "template",
                                        "value": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "\"name\": $FERN_INPUT",
                                          "templateInputs": [
                                            {
                                              "location": "RELATIVE",
                                              "path": "function.name",
                                              "type": "payload"
                                            }
                                          ],
                                          "type": "generic"
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "\"arguments\": $FERN_INPUT",
                                          "templateInputs": [
                                            {
                                              "location": "RELATIVE",
                                              "path": "function.arguments",
                                              "type": "payload"
                                            }
                                          ],
                                          "type": "generic"
                                        }
                                      }
                                    ],
                                    "inputDelimiter": ",\n\t\t\t\t\t",
                                    "type": "generic"
                                  }
                                }
                              ],
                              "inputDelimiter": ",\n\t\t\t\t",
                              "type": "generic"
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "output_message.tool_calls"
                            },
                            "type": "iterable"
                          }
                        }
                      ],
                      "inputDelimiter": ",\n\t\t",
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "prompt_tokens=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "prompt_tokens",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "output_tokens=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "output_tokens",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "prompt_cost=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "prompt_cost",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "output_cost=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "output_cost",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "finish_reason=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "finish_reason",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "messages=[\n\t\t$FERN_INPUT\n\t]",
                      "delimiter": ",\n\t\t",
                      "innerTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "{\n\t\t\t$FERN_INPUT\n\t\t}",
                        "templateInputs": [
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"content\": $FERN_INPUT",
                              "members": [
                                {
                                  "type": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string"
                                    }
                                  },
                                  "template": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": null,
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                },
                                {
                                  "type": {
                                    "itemType": {
                                      "value": "type_:ChatMessageContentItem",
                                      "type": "id"
                                    },
                                    "type": "list"
                                  },
                                  "template": {
                                    "imports": [],
                                    "isOptional": true,
                                    "containerTemplateString": "[\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                    "delimiter": ",\n\t\t\t\t",
                                    "innerTemplate": {
                                      "imports": [],
                                      "isOptional": true,
                                      "templateString": "$FERN_INPUT",
                                      "members": [
                                        {
                                          "type": {
                                            "value": "type_:TextChatContent",
                                            "type": "id"
                                          },
                                          "template": {
                                            "imports": [],
                                            "isOptional": true,
                                            "templateString": "{\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                            "templateInputs": [
                                              {
                                                "type": "template",
                                                "value": {
                                                  "imports": [],
                                                  "isOptional": true,
                                                  "templateString": "\"text\": $FERN_INPUT",
                                                  "templateInputs": [
                                                    {
                                                      "location": "RELATIVE",
                                                      "path": "text",
                                                      "type": "payload"
                                                    }
                                                  ],
                                                  "type": "generic"
                                                }
                                              }
                                            ],
                                            "inputDelimiter": ",\n\t\t\t\t\t",
                                            "type": "generic"
                                          }
                                        },
                                        {
                                          "type": {
                                            "value": "type_:ImageChatContent",
                                            "type": "id"
                                          },
                                          "template": {
                                            "imports": [],
                                            "isOptional": true,
                                            "templateString": "{\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                            "templateInputs": [
                                              {
                                                "type": "template",
                                                "value": {
                                                  "imports": [],
                                                  "isOptional": true,
                                                  "templateString": "\"image_url\": {\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                                  "templateInputs": [
                                                    {
                                                      "type": "template",
                                                      "value": {
                                                        "imports": [],
                                                        "isOptional": true,
                                                        "templateString": "\"url\": $FERN_INPUT",
                                                        "templateInputs": [
                                                          {
                                                            "location": "RELATIVE",
                                                            "path": "image_url.url",
                                                            "type": "payload"
                                                          }
                                                        ],
                                                        "type": "generic"
                                                      }
                                                    },
                                                    {
                                                      "type": "template",
                                                      "value": {
                                                        "imports": [],
                                                        "isOptional": true,
                                                        "templateString": "\"detail\": $FERN_INPUT",
                                                        "values": {
                                                          "high": "\"high\"",
                                                          "low": "\"low\"",
                                                          "auto": "\"auto\""
                                                        },
                                                        "templateInput": {
                                                          "location": "RELATIVE",
                                                          "path": "image_url.detail"
                                                        },
                                                        "type": "enum"
                                                      }
                                                    }
                                                  ],
                                                  "inputDelimiter": ",\n\t\t\t\t\t\t",
                                                  "type": "generic"
                                                }
                                              }
                                            ],
                                            "inputDelimiter": ",\n\t\t\t\t\t",
                                            "type": "generic"
                                          }
                                        }
                                      ],
                                      "templateInput": {
                                        "location": "RELATIVE",
                                        "path": null
                                      },
                                      "type": "union_v2"
                                    },
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": null
                                    },
                                    "type": "iterable"
                                  }
                                }
                              ],
                              "templateInput": {
                                "location": "RELATIVE",
                                "path": "content"
                              },
                              "type": "union_v2"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"name\": $FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": "name",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"tool_call_id\": $FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": "tool_call_id",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"role\": $FERN_INPUT",
                              "values": {
                                "user": "\"user\"",
                                "assistant": "\"assistant\"",
                                "system": "\"system\"",
                                "tool": "\"tool\""
                              },
                              "templateInput": {
                                "location": "RELATIVE",
                                "path": "role"
                              },
                              "type": "enum"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "containerTemplateString": "\"tool_calls\": [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                              "delimiter": ",\n\t\t\t\t",
                              "innerTemplate": {
                                "imports": [],
                                "isOptional": true,
                                "templateString": "{\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                "templateInputs": [
                                  {
                                    "type": "template",
                                    "value": {
                                      "imports": [],
                                      "isOptional": true,
                                      "templateString": "\"id\": $FERN_INPUT",
                                      "templateInputs": [
                                        {
                                          "location": "RELATIVE",
                                          "path": "id",
                                          "type": "payload"
                                        }
                                      ],
                                      "type": "generic"
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "imports": [],
                                      "isOptional": true,
                                      "templateString": "\"function\": {\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                      "templateInputs": [
                                        {
                                          "type": "template",
                                          "value": {
                                            "imports": [],
                                            "isOptional": true,
                                            "templateString": "\"name\": $FERN_INPUT",
                                            "templateInputs": [
                                              {
                                                "location": "RELATIVE",
                                                "path": "function.name",
                                                "type": "payload"
                                              }
                                            ],
                                            "type": "generic"
                                          }
                                        },
                                        {
                                          "type": "template",
                                          "value": {
                                            "imports": [],
                                            "isOptional": true,
                                            "templateString": "\"arguments\": $FERN_INPUT",
                                            "templateInputs": [
                                              {
                                                "location": "RELATIVE",
                                                "path": "function.arguments",
                                                "type": "payload"
                                              }
                                            ],
                                            "type": "generic"
                                          }
                                        }
                                      ],
                                      "inputDelimiter": ",\n\t\t\t\t\t\t",
                                      "type": "generic"
                                    }
                                  }
                                ],
                                "inputDelimiter": ",\n\t\t\t\t\t",
                                "type": "generic"
                              },
                              "templateInput": {
                                "location": "RELATIVE",
                                "path": "tool_calls"
                              },
                              "type": "iterable"
                            }
                          }
                        ],
                        "inputDelimiter": ",\n\t\t\t",
                        "type": "generic"
                      },
                      "templateInput": {
                        "location": "BODY",
                        "path": "messages"
                      },
                      "type": "iterable"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "tool_choice=$FERN_INPUT",
                      "members": [
                        {
                          "type": {
                            "type": "literal",
                            "value": {
                              "type": "stringLiteral",
                              "value": "none"
                            }
                          },
                          "template": {
                            "isOptional": true,
                            "templateString": "\"none\"",
                            "templateInputs": [
                              {
                                "location": "RELATIVE",
                                "path": null,
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": {
                            "type": "literal",
                            "value": {
                              "type": "stringLiteral",
                              "value": "auto"
                            }
                          },
                          "template": {
                            "isOptional": true,
                            "templateString": "\"auto\"",
                            "templateInputs": [
                              {
                                "location": "RELATIVE",
                                "path": null,
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": {
                            "type": "literal",
                            "value": {
                              "type": "stringLiteral",
                              "value": "required"
                            }
                          },
                          "template": {
                            "isOptional": true,
                            "templateString": "\"required\"",
                            "templateInputs": [
                              {
                                "location": "RELATIVE",
                                "path": null,
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": {
                            "value": "type_:ToolChoice",
                            "type": "id"
                          },
                          "template": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"function\": {\n\t\t\t$FERN_INPUT\n\t\t}",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "\"name\": $FERN_INPUT",
                                        "templateInputs": [
                                          {
                                            "location": "RELATIVE",
                                            "path": "function.name",
                                            "type": "payload"
                                          }
                                        ],
                                        "type": "generic"
                                      }
                                    }
                                  ],
                                  "inputDelimiter": ",\n\t\t\t",
                                  "type": "generic"
                                }
                              }
                            ],
                            "inputDelimiter": ",\n\t\t",
                            "type": "generic"
                          }
                        }
                      ],
                      "templateInput": {
                        "location": "BODY",
                        "path": "tool_choice"
                      },
                      "type": "union_v2"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "output=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "output",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "created_at=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "created_at",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "error=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "error",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "provider_latency=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "provider_latency",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "stdout=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "stdout",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "provider_request={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "provider_request"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "provider_response={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "provider_response"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "inputs={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "inputs"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "source=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "source",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "metadata={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "metadata"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "start_time=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "start_time",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "end_time=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "end_time",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.prompts.updateLog(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "log_id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "outputMessage: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "union_v2",
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "content: $FERN_INPUT",
                                  "members": [
                                    {
                                      "template": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "$FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "RELATIVE",
                                            "path": null
                                          }
                                        ]
                                      },
                                      "type": {
                                        "type": "primitive",
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    {
                                      "template": {
                                        "type": "iterable",
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "[\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                        "delimiter": ",\n\t\t\t\t\t",
                                        "innerTemplate": {
                                          "type": "union_v2",
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "$FERN_INPUT",
                                          "members": [
                                            {
                                              "template": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "$FERN_INPUT",
                                                "isOptional": true,
                                                "inputDelimiter": ",\n\t\t\t\t\t\t",
                                                "templateInputs": [
                                                  {
                                                    "type": "template",
                                                    "value": {
                                                      "type": "generic",
                                                      "imports": [],
                                                      "templateString": "text: $FERN_INPUT",
                                                      "isOptional": true,
                                                      "templateInputs": [
                                                        {
                                                          "type": "payload",
                                                          "location": "RELATIVE",
                                                          "path": "text"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "type": {
                                                "type": "id",
                                                "value": "type_:TextChatContent"
                                              }
                                            },
                                            {
                                              "template": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "$FERN_INPUT",
                                                "isOptional": true,
                                                "inputDelimiter": ",\n\t\t\t\t\t\t",
                                                "templateInputs": [
                                                  {
                                                    "type": "template",
                                                    "value": {
                                                      "type": "generic",
                                                      "imports": [],
                                                      "templateString": "imageUrl: {\n\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t}",
                                                      "isOptional": true,
                                                      "inputDelimiter": ",\n\t\t\t\t\t\t\t\t",
                                                      "templateInputs": [
                                                        {
                                                          "type": "template",
                                                          "value": {
                                                            "type": "generic",
                                                            "imports": [],
                                                            "templateString": "url: $FERN_INPUT",
                                                            "isOptional": true,
                                                            "templateInputs": [
                                                              {
                                                                "type": "payload",
                                                                "location": "RELATIVE",
                                                                "path": "image_url.url"
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "template",
                                                          "value": {
                                                            "type": "enum",
                                                            "imports": [],
                                                            "isOptional": true,
                                                            "values": {
                                                              "high": "\"high\"",
                                                              "low": "\"low\"",
                                                              "auto": "\"auto\""
                                                            },
                                                            "templateString": "detail: $FERN_INPUT",
                                                            "templateInput": {
                                                              "location": "RELATIVE",
                                                              "path": "image_url.detail"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "type": {
                                                "type": "id",
                                                "value": "type_:ImageChatContent"
                                              }
                                            }
                                          ],
                                          "templateInput": {
                                            "location": "RELATIVE",
                                            "path": null
                                          }
                                        },
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": null
                                        }
                                      },
                                      "type": {
                                        "type": "list",
                                        "itemType": {
                                          "type": "id",
                                          "value": "type_:ChatMessageContentItem"
                                        }
                                      }
                                    }
                                  ],
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "output_message.content"
                                  }
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "name: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "output_message.name"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "toolCallId: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "output_message.tool_call_id"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "enum",
                                  "imports": [],
                                  "isOptional": true,
                                  "values": {
                                    "user": "\"user\"",
                                    "assistant": "\"assistant\"",
                                    "system": "\"system\"",
                                    "tool": "\"tool\""
                                  },
                                  "templateString": "role: $FERN_INPUT",
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "output_message.role"
                                  }
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "iterable",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "toolCalls: [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                  "delimiter": ",\n\t\t\t\t",
                                  "innerTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "{\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                    "isOptional": true,
                                    "inputDelimiter": ",\n\t\t\t\t\t",
                                    "templateInputs": [
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "id: $FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": "id"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "function: {\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                          "isOptional": true,
                                          "inputDelimiter": ",\n\t\t\t\t\t\t",
                                          "templateInputs": [
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "name: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "function.name"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "arguments: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "function.arguments"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "output_message.tool_calls"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "promptTokens: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "prompt_tokens"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "outputTokens: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "output_tokens"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "promptCost: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "prompt_cost"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "outputCost: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "output_cost"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "finishReason: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "finish_reason"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "iterable",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "messages: [\n\t\t\t$FERN_INPUT\n\t\t]",
                            "delimiter": ",\n\t\t\t",
                            "innerTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "{\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                              "isOptional": true,
                              "inputDelimiter": ",\n\t\t\t\t",
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "union_v2",
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "content: $FERN_INPUT",
                                    "members": [
                                      {
                                        "template": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          ]
                                        },
                                        "type": {
                                          "type": "primitive",
                                          "value": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      {
                                        "template": {
                                          "type": "iterable",
                                          "imports": [],
                                          "isOptional": true,
                                          "containerTemplateString": "[\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t]",
                                          "delimiter": ",\n\t\t\t\t\t\t",
                                          "innerTemplate": {
                                            "type": "union_v2",
                                            "imports": [],
                                            "isOptional": true,
                                            "templateString": "$FERN_INPUT",
                                            "members": [
                                              {
                                                "template": {
                                                  "type": "generic",
                                                  "imports": [],
                                                  "templateString": "$FERN_INPUT",
                                                  "isOptional": true,
                                                  "inputDelimiter": ",\n\t\t\t\t\t\t\t",
                                                  "templateInputs": [
                                                    {
                                                      "type": "template",
                                                      "value": {
                                                        "type": "generic",
                                                        "imports": [],
                                                        "templateString": "text: $FERN_INPUT",
                                                        "isOptional": true,
                                                        "templateInputs": [
                                                          {
                                                            "type": "payload",
                                                            "location": "RELATIVE",
                                                            "path": "text"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                },
                                                "type": {
                                                  "type": "id",
                                                  "value": "type_:TextChatContent"
                                                }
                                              },
                                              {
                                                "template": {
                                                  "type": "generic",
                                                  "imports": [],
                                                  "templateString": "$FERN_INPUT",
                                                  "isOptional": true,
                                                  "inputDelimiter": ",\n\t\t\t\t\t\t\t",
                                                  "templateInputs": [
                                                    {
                                                      "type": "template",
                                                      "value": {
                                                        "type": "generic",
                                                        "imports": [],
                                                        "templateString": "imageUrl: {\n\t\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t\t}",
                                                        "isOptional": true,
                                                        "inputDelimiter": ",\n\t\t\t\t\t\t\t\t\t",
                                                        "templateInputs": [
                                                          {
                                                            "type": "template",
                                                            "value": {
                                                              "type": "generic",
                                                              "imports": [],
                                                              "templateString": "url: $FERN_INPUT",
                                                              "isOptional": true,
                                                              "templateInputs": [
                                                                {
                                                                  "type": "payload",
                                                                  "location": "RELATIVE",
                                                                  "path": "image_url.url"
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "template",
                                                            "value": {
                                                              "type": "enum",
                                                              "imports": [],
                                                              "isOptional": true,
                                                              "values": {
                                                                "high": "\"high\"",
                                                                "low": "\"low\"",
                                                                "auto": "\"auto\""
                                                              },
                                                              "templateString": "detail: $FERN_INPUT",
                                                              "templateInput": {
                                                                "location": "RELATIVE",
                                                                "path": "image_url.detail"
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                },
                                                "type": {
                                                  "type": "id",
                                                  "value": "type_:ImageChatContent"
                                                }
                                              }
                                            ],
                                            "templateInput": {
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          },
                                          "templateInput": {
                                            "location": "RELATIVE",
                                            "path": null
                                          }
                                        },
                                        "type": {
                                          "type": "list",
                                          "itemType": {
                                            "type": "id",
                                            "value": "type_:ChatMessageContentItem"
                                          }
                                        }
                                      }
                                    ],
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": "content"
                                    }
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "name: $FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": "name"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "toolCallId: $FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": "tool_call_id"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "enum",
                                    "imports": [],
                                    "isOptional": true,
                                    "values": {
                                      "user": "\"user\"",
                                      "assistant": "\"assistant\"",
                                      "system": "\"system\"",
                                      "tool": "\"tool\""
                                    },
                                    "templateString": "role: $FERN_INPUT",
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": "role"
                                    }
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "iterable",
                                    "imports": [],
                                    "isOptional": true,
                                    "containerTemplateString": "toolCalls: [\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                    "delimiter": ",\n\t\t\t\t\t",
                                    "innerTemplate": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "{\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                      "isOptional": true,
                                      "inputDelimiter": ",\n\t\t\t\t\t\t",
                                      "templateInputs": [
                                        {
                                          "type": "template",
                                          "value": {
                                            "type": "generic",
                                            "imports": [],
                                            "templateString": "id: $FERN_INPUT",
                                            "isOptional": true,
                                            "templateInputs": [
                                              {
                                                "type": "payload",
                                                "location": "RELATIVE",
                                                "path": "id"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "template",
                                          "value": {
                                            "type": "generic",
                                            "imports": [],
                                            "templateString": "function: {\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t}",
                                            "isOptional": true,
                                            "inputDelimiter": ",\n\t\t\t\t\t\t\t",
                                            "templateInputs": [
                                              {
                                                "type": "template",
                                                "value": {
                                                  "type": "generic",
                                                  "imports": [],
                                                  "templateString": "name: $FERN_INPUT",
                                                  "isOptional": true,
                                                  "templateInputs": [
                                                    {
                                                      "type": "payload",
                                                      "location": "RELATIVE",
                                                      "path": "function.name"
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "template",
                                                "value": {
                                                  "type": "generic",
                                                  "imports": [],
                                                  "templateString": "arguments: $FERN_INPUT",
                                                  "isOptional": true,
                                                  "templateInputs": [
                                                    {
                                                      "type": "payload",
                                                      "location": "RELATIVE",
                                                      "path": "function.arguments"
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": "tool_calls"
                                    }
                                  }
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "messages"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "union_v2",
                            "imports": [],
                            "isOptional": true,
                            "templateString": "toolChoice: $FERN_INPUT",
                            "members": [
                              {
                                "template": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "\"none\"",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "literal",
                                  "value": {
                                    "type": "stringLiteral",
                                    "value": "none"
                                  }
                                }
                              },
                              {
                                "template": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "\"auto\"",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "literal",
                                  "value": {
                                    "type": "stringLiteral",
                                    "value": "auto"
                                  }
                                }
                              },
                              {
                                "template": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "\"required\"",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "literal",
                                  "value": {
                                    "type": "stringLiteral",
                                    "value": "required"
                                  }
                                }
                              },
                              {
                                "template": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "inputDelimiter": ",\n\t\t\t",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "function: {\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                        "isOptional": true,
                                        "inputDelimiter": ",\n\t\t\t\t\t",
                                        "templateInputs": [
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "name: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "RELATIVE",
                                                  "path": "function.name"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "id",
                                  "value": "type_:ToolChoice"
                                }
                              }
                            ],
                            "templateInput": {
                              "location": "BODY",
                              "path": "tool_choice"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "output: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "output"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "createdAt: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "created_at"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "error: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "error"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "providerLatency: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "provider_latency"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "stdout: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "stdout"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "providerRequest: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "provider_request"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "providerResponse: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "provider_response"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "inputs: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "inputs"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "source: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "source"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "metadata: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "metadata"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "startTime: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "start_time"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "endTime: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "end_time"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "call-stream",
          "migratedFromUrlSlugs": ["call-prompt"],
          "method": "POST",
          "id": "call_stream",
          "originalEndpointId": "endpoint_prompts.call_stream",
          "name": "Call Prompt",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/prompts/call"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "A specific Version ID of the Prompt to log to.",
              "key": "version_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Name of the Environment identifying a deployed version to log to.",
              "key": "environment",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Path of the Prompt, including the name. This locates the Prompt in the Humanloop filesystem and is used as as a unique identifier. For example: `folder/name` or just `name`.",
                  "key": "path",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "ID for an existing Prompt.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The messages passed to the to provider chat endpoint.",
                  "key": "messages",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:ChatMessage"
                      }
                    }
                  }
                },
                {
                  "description": "Controls how the model uses tools. The following options are supported: \n- `'none'` means the model will not call any tool and instead generates a message; this is the default when no tools are provided as part of the Prompt. \n- `'auto'` means the model can decide to call one or more of the provided tools; this is the default when tools are provided as part of the Prompt. \n- `'required'` means the model can decide to call one or more of the provided tools. \n- `{'type': 'function', 'function': {name': <TOOL_NAME>}}` forces the model to use the named function.",
                  "key": "tool_choice",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_prompts:PromptsCallStreamRequestToolChoice"
                    }
                  }
                },
                {
                  "description": "Details of your Prompt. A new Prompt version will be created if the provided details are new.",
                  "key": "prompt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PromptKernelRequest"
                    }
                  }
                },
                {
                  "description": "The inputs passed to the prompt template.",
                  "key": "inputs",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "Identifies where the model was called from.",
                  "key": "source",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Any additional metadata to record.",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "When the logged event started.",
                  "key": "start_time",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "When the logged event ended.",
                  "key": "end_time",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Unique identifier for the Datapoint that this Log is derived from. This can be used by Humanloop to associate Logs to Evaluations. If provided, Humanloop will automatically associate this Log to Evaluations that require a Log for this Datapoint-Version pair.",
                  "key": "source_datapoint_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The ID of the parent Log to nest this Log under in a Trace.",
                  "key": "trace_parent_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Unique identifier for the Batch to add this Batch to. Batches are used to group Logs together for Evaluations. A Batch will be created if one with the given ID does not exist.",
                  "key": "batch_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "End-user ID related to the Log.",
                  "key": "user",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The name of the Environment the Log is associated to.",
                  "key": "environment",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Whether the request/response payloads will be stored on Humanloop.",
                  "key": "save",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "API keys required by each provider to make API calls. The API keys provided here are not stored by Humanloop. If not specified here, Humanloop will fall back to the key saved to your organization.",
                  "key": "provider_api_keys",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ProviderApiKeys"
                    }
                  }
                },
                {
                  "description": "The number of generations.",
                  "key": "num_samples",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "default": 1
                      }
                    }
                  }
                },
                {
                  "description": "If true, tokens will be sent as data-only server-sent events. If num_samples > 1, samples are streamed back independently.",
                  "key": "stream",
                  "valueType": {
                    "type": "literal",
                    "value": {
                      "type": "booleanLiteral",
                      "value": true
                    }
                  }
                },
                {
                  "description": "Whether to return the inputs in the response. If false, the response will contain an empty dictionary under inputs. This is useful for reducing the size of the response. Defaults to true.",
                  "key": "return_inputs",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "Include the log probabilities of the top n tokens in the provider_response",
                  "key": "logprobs",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The suffix that comes after a completion of inserted text. Useful for completions that act like inserts.",
                  "key": "suffix",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "response": {
            "type": {
              "type": "stream",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "type_:PromptCallStreamResponse"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/prompts/call",
              "pathParameters": {},
              "queryParameters": {
                "version_id": "string",
                "environment": "string"
              },
              "headers": {},
              "responseStatusCode": 200,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "stream": true
                }
              },
              "responseBodyV3": {
                "type": "stream",
                "value": [
                  {
                    "output": "string",
                    "created_at": "2023-01-01T00:00:00Z",
                    "error": "string",
                    "provider_latency": 1,
                    "stdout": "string",
                    "output_message": {
                      "content": "string",
                      "name": "string",
                      "tool_call_id": "string",
                      "role": "user",
                      "tool_calls": [
                        {
                          "id": "string",
                          "type": "function",
                          "function": {
                            "name": "string",
                            "arguments": "string"
                          }
                        }
                      ]
                    },
                    "prompt_tokens": 0,
                    "output_tokens": 0,
                    "prompt_cost": 1,
                    "output_cost": 1,
                    "finish_reason": "string",
                    "index": 0,
                    "id": "string",
                    "prompt_id": "string",
                    "version_id": "string"
                  },
                  {
                    "output": "string",
                    "created_at": "2023-01-01T00:00:00Z",
                    "error": "string",
                    "provider_latency": 1,
                    "stdout": "string",
                    "output_message": {
                      "content": "string",
                      "name": "string",
                      "tool_call_id": "string",
                      "role": "user",
                      "tool_calls": [
                        {
                          "id": "string",
                          "type": "function",
                          "function": {
                            "name": "string",
                            "arguments": "string"
                          }
                        }
                      ]
                    },
                    "prompt_tokens": 0,
                    "output_tokens": 0,
                    "prompt_cost": 1,
                    "output_cost": 1,
                    "finish_reason": "string",
                    "index": 0,
                    "id": "string",
                    "prompt_id": "string",
                    "version_id": "string"
                  }
                ]
              },
              "codeSamples": []
            },
            {
              "path": "/prompts/call",
              "pathParameters": {},
              "queryParameters": {
                "version_id": "string",
                "environment": "string"
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "stream": true
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Call a Prompt.\n\nCalling a Prompt calls the model provider before logging\nthe request, responses and metadata to Humanloop.\n\nYou can use query parameters `version_id`, or `environment`, to target\nan existing version of the Prompt. Otherwise the default deployed version will be chosen.\n\nInstead of targeting an existing version explicitly, you can instead pass in\nPrompt details in the request body. In this case, we will check if the details correspond\nto an existing version of the Prompt. If they do not, we will create a new version. This is helpful\nin the case where you are storing or deriving your Prompt details in code.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.prompts.call_stream(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "version_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "version_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "environment=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "environment",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "path=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "path",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "messages=[\n\t\t$FERN_INPUT\n\t]",
                      "delimiter": ",\n\t\t",
                      "innerTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "{\n\t\t\t$FERN_INPUT\n\t\t}",
                        "templateInputs": [
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"content\": $FERN_INPUT",
                              "members": [
                                {
                                  "type": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string"
                                    }
                                  },
                                  "template": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": null,
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                },
                                {
                                  "type": {
                                    "itemType": {
                                      "value": "type_:ChatMessageContentItem",
                                      "type": "id"
                                    },
                                    "type": "list"
                                  },
                                  "template": {
                                    "imports": [],
                                    "isOptional": true,
                                    "containerTemplateString": "[\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                    "delimiter": ",\n\t\t\t\t",
                                    "innerTemplate": {
                                      "imports": [],
                                      "isOptional": true,
                                      "templateString": "$FERN_INPUT",
                                      "members": [
                                        {
                                          "type": {
                                            "value": "type_:TextChatContent",
                                            "type": "id"
                                          },
                                          "template": {
                                            "imports": [],
                                            "isOptional": true,
                                            "templateString": "{\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                            "templateInputs": [
                                              {
                                                "type": "template",
                                                "value": {
                                                  "imports": [],
                                                  "isOptional": true,
                                                  "templateString": "\"text\": $FERN_INPUT",
                                                  "templateInputs": [
                                                    {
                                                      "location": "RELATIVE",
                                                      "path": "text",
                                                      "type": "payload"
                                                    }
                                                  ],
                                                  "type": "generic"
                                                }
                                              }
                                            ],
                                            "inputDelimiter": ",\n\t\t\t\t\t",
                                            "type": "generic"
                                          }
                                        },
                                        {
                                          "type": {
                                            "value": "type_:ImageChatContent",
                                            "type": "id"
                                          },
                                          "template": {
                                            "imports": [],
                                            "isOptional": true,
                                            "templateString": "{\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                            "templateInputs": [
                                              {
                                                "type": "template",
                                                "value": {
                                                  "imports": [],
                                                  "isOptional": true,
                                                  "templateString": "\"image_url\": {\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                                  "templateInputs": [
                                                    {
                                                      "type": "template",
                                                      "value": {
                                                        "imports": [],
                                                        "isOptional": true,
                                                        "templateString": "\"url\": $FERN_INPUT",
                                                        "templateInputs": [
                                                          {
                                                            "location": "RELATIVE",
                                                            "path": "image_url.url",
                                                            "type": "payload"
                                                          }
                                                        ],
                                                        "type": "generic"
                                                      }
                                                    },
                                                    {
                                                      "type": "template",
                                                      "value": {
                                                        "imports": [],
                                                        "isOptional": true,
                                                        "templateString": "\"detail\": $FERN_INPUT",
                                                        "values": {
                                                          "high": "\"high\"",
                                                          "low": "\"low\"",
                                                          "auto": "\"auto\""
                                                        },
                                                        "templateInput": {
                                                          "location": "RELATIVE",
                                                          "path": "image_url.detail"
                                                        },
                                                        "type": "enum"
                                                      }
                                                    }
                                                  ],
                                                  "inputDelimiter": ",\n\t\t\t\t\t\t",
                                                  "type": "generic"
                                                }
                                              }
                                            ],
                                            "inputDelimiter": ",\n\t\t\t\t\t",
                                            "type": "generic"
                                          }
                                        }
                                      ],
                                      "templateInput": {
                                        "location": "RELATIVE",
                                        "path": null
                                      },
                                      "type": "union_v2"
                                    },
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": null
                                    },
                                    "type": "iterable"
                                  }
                                }
                              ],
                              "templateInput": {
                                "location": "RELATIVE",
                                "path": "content"
                              },
                              "type": "union_v2"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"name\": $FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": "name",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"tool_call_id\": $FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": "tool_call_id",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"role\": $FERN_INPUT",
                              "values": {
                                "user": "\"user\"",
                                "assistant": "\"assistant\"",
                                "system": "\"system\"",
                                "tool": "\"tool\""
                              },
                              "templateInput": {
                                "location": "RELATIVE",
                                "path": "role"
                              },
                              "type": "enum"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "containerTemplateString": "\"tool_calls\": [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                              "delimiter": ",\n\t\t\t\t",
                              "innerTemplate": {
                                "imports": [],
                                "isOptional": true,
                                "templateString": "{\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                "templateInputs": [
                                  {
                                    "type": "template",
                                    "value": {
                                      "imports": [],
                                      "isOptional": true,
                                      "templateString": "\"id\": $FERN_INPUT",
                                      "templateInputs": [
                                        {
                                          "location": "RELATIVE",
                                          "path": "id",
                                          "type": "payload"
                                        }
                                      ],
                                      "type": "generic"
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "imports": [],
                                      "isOptional": true,
                                      "templateString": "\"function\": {\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                      "templateInputs": [
                                        {
                                          "type": "template",
                                          "value": {
                                            "imports": [],
                                            "isOptional": true,
                                            "templateString": "\"name\": $FERN_INPUT",
                                            "templateInputs": [
                                              {
                                                "location": "RELATIVE",
                                                "path": "function.name",
                                                "type": "payload"
                                              }
                                            ],
                                            "type": "generic"
                                          }
                                        },
                                        {
                                          "type": "template",
                                          "value": {
                                            "imports": [],
                                            "isOptional": true,
                                            "templateString": "\"arguments\": $FERN_INPUT",
                                            "templateInputs": [
                                              {
                                                "location": "RELATIVE",
                                                "path": "function.arguments",
                                                "type": "payload"
                                              }
                                            ],
                                            "type": "generic"
                                          }
                                        }
                                      ],
                                      "inputDelimiter": ",\n\t\t\t\t\t\t",
                                      "type": "generic"
                                    }
                                  }
                                ],
                                "inputDelimiter": ",\n\t\t\t\t\t",
                                "type": "generic"
                              },
                              "templateInput": {
                                "location": "RELATIVE",
                                "path": "tool_calls"
                              },
                              "type": "iterable"
                            }
                          }
                        ],
                        "inputDelimiter": ",\n\t\t\t",
                        "type": "generic"
                      },
                      "templateInput": {
                        "location": "BODY",
                        "path": "messages"
                      },
                      "type": "iterable"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "tool_choice=$FERN_INPUT",
                      "members": [
                        {
                          "type": {
                            "type": "literal",
                            "value": {
                              "type": "stringLiteral",
                              "value": "none"
                            }
                          },
                          "template": {
                            "isOptional": true,
                            "templateString": "\"none\"",
                            "templateInputs": [
                              {
                                "location": "RELATIVE",
                                "path": null,
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": {
                            "type": "literal",
                            "value": {
                              "type": "stringLiteral",
                              "value": "auto"
                            }
                          },
                          "template": {
                            "isOptional": true,
                            "templateString": "\"auto\"",
                            "templateInputs": [
                              {
                                "location": "RELATIVE",
                                "path": null,
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": {
                            "type": "literal",
                            "value": {
                              "type": "stringLiteral",
                              "value": "required"
                            }
                          },
                          "template": {
                            "isOptional": true,
                            "templateString": "\"required\"",
                            "templateInputs": [
                              {
                                "location": "RELATIVE",
                                "path": null,
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": {
                            "value": "type_:ToolChoice",
                            "type": "id"
                          },
                          "template": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"function\": {\n\t\t\t$FERN_INPUT\n\t\t}",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "\"name\": $FERN_INPUT",
                                        "templateInputs": [
                                          {
                                            "location": "RELATIVE",
                                            "path": "function.name",
                                            "type": "payload"
                                          }
                                        ],
                                        "type": "generic"
                                      }
                                    }
                                  ],
                                  "inputDelimiter": ",\n\t\t\t",
                                  "type": "generic"
                                }
                              }
                            ],
                            "inputDelimiter": ",\n\t\t",
                            "type": "generic"
                          }
                        }
                      ],
                      "templateInput": {
                        "location": "BODY",
                        "path": "tool_choice"
                      },
                      "type": "union_v2"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "prompt={\n\t\t$FERN_INPUT\n\t}",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"model\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "prompt.model",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"endpoint\": $FERN_INPUT",
                            "values": {
                              "complete": "\"complete\"",
                              "chat": "\"chat\"",
                              "edit": "\"edit\""
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "prompt.endpoint"
                            },
                            "type": "enum"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"template\": $FERN_INPUT",
                            "members": [
                              {
                                "type": {
                                  "type": "primitive",
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "template": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "$FERN_INPUT",
                                  "templateInputs": [
                                    {
                                      "location": "RELATIVE",
                                      "path": null,
                                      "type": "payload"
                                    }
                                  ],
                                  "type": "generic"
                                }
                              },
                              {
                                "type": {
                                  "itemType": {
                                    "value": "type_:ChatMessage",
                                    "type": "id"
                                  },
                                  "type": "list"
                                },
                                "template": {
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "[\n\t\t\t$FERN_INPUT\n\t\t]",
                                  "delimiter": ",\n\t\t\t",
                                  "innerTemplate": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "{\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                    "templateInputs": [
                                      {
                                        "type": "template",
                                        "value": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "\"content\": $FERN_INPUT",
                                          "members": [
                                            {
                                              "type": {
                                                "type": "primitive",
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "template": {
                                                "imports": [],
                                                "isOptional": true,
                                                "templateString": "$FERN_INPUT",
                                                "templateInputs": [
                                                  {
                                                    "location": "RELATIVE",
                                                    "path": null,
                                                    "type": "payload"
                                                  }
                                                ],
                                                "type": "generic"
                                              }
                                            },
                                            {
                                              "type": {
                                                "itemType": {
                                                  "value": "type_:ChatMessageContentItem",
                                                  "type": "id"
                                                },
                                                "type": "list"
                                              },
                                              "template": {
                                                "imports": [],
                                                "isOptional": true,
                                                "containerTemplateString": "[\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                                "delimiter": ",\n\t\t\t\t\t",
                                                "innerTemplate": {
                                                  "imports": [],
                                                  "isOptional": true,
                                                  "templateString": "$FERN_INPUT",
                                                  "members": [
                                                    {
                                                      "type": {
                                                        "value": "type_:TextChatContent",
                                                        "type": "id"
                                                      },
                                                      "template": {
                                                        "imports": [],
                                                        "isOptional": true,
                                                        "templateString": "{\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                                        "templateInputs": [
                                                          {
                                                            "type": "template",
                                                            "value": {
                                                              "imports": [],
                                                              "isOptional": true,
                                                              "templateString": "\"text\": $FERN_INPUT",
                                                              "templateInputs": [
                                                                {
                                                                  "location": "RELATIVE",
                                                                  "path": "text",
                                                                  "type": "payload"
                                                                }
                                                              ],
                                                              "type": "generic"
                                                            }
                                                          }
                                                        ],
                                                        "inputDelimiter": ",\n\t\t\t\t\t\t",
                                                        "type": "generic"
                                                      }
                                                    },
                                                    {
                                                      "type": {
                                                        "value": "type_:ImageChatContent",
                                                        "type": "id"
                                                      },
                                                      "template": {
                                                        "imports": [],
                                                        "isOptional": true,
                                                        "templateString": "{\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                                        "templateInputs": [
                                                          {
                                                            "type": "template",
                                                            "value": {
                                                              "imports": [],
                                                              "isOptional": true,
                                                              "templateString": "\"image_url\": {\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t}",
                                                              "templateInputs": [
                                                                {
                                                                  "type": "template",
                                                                  "value": {
                                                                    "imports": [],
                                                                    "isOptional": true,
                                                                    "templateString": "\"url\": $FERN_INPUT",
                                                                    "templateInputs": [
                                                                      {
                                                                        "location": "RELATIVE",
                                                                        "path": "image_url.url",
                                                                        "type": "payload"
                                                                      }
                                                                    ],
                                                                    "type": "generic"
                                                                  }
                                                                },
                                                                {
                                                                  "type": "template",
                                                                  "value": {
                                                                    "imports": [],
                                                                    "isOptional": true,
                                                                    "templateString": "\"detail\": $FERN_INPUT",
                                                                    "values": {
                                                                      "high": "\"high\"",
                                                                      "low": "\"low\"",
                                                                      "auto": "\"auto\""
                                                                    },
                                                                    "templateInput": {
                                                                      "location": "RELATIVE",
                                                                      "path": "image_url.detail"
                                                                    },
                                                                    "type": "enum"
                                                                  }
                                                                }
                                                              ],
                                                              "inputDelimiter": ",\n\t\t\t\t\t\t\t",
                                                              "type": "generic"
                                                            }
                                                          }
                                                        ],
                                                        "inputDelimiter": ",\n\t\t\t\t\t\t",
                                                        "type": "generic"
                                                      }
                                                    }
                                                  ],
                                                  "templateInput": {
                                                    "location": "RELATIVE",
                                                    "path": null
                                                  },
                                                  "type": "union_v2"
                                                },
                                                "templateInput": {
                                                  "location": "RELATIVE",
                                                  "path": null
                                                },
                                                "type": "iterable"
                                              }
                                            }
                                          ],
                                          "templateInput": {
                                            "location": "RELATIVE",
                                            "path": "content"
                                          },
                                          "type": "union_v2"
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "\"name\": $FERN_INPUT",
                                          "templateInputs": [
                                            {
                                              "location": "RELATIVE",
                                              "path": "name",
                                              "type": "payload"
                                            }
                                          ],
                                          "type": "generic"
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "\"tool_call_id\": $FERN_INPUT",
                                          "templateInputs": [
                                            {
                                              "location": "RELATIVE",
                                              "path": "tool_call_id",
                                              "type": "payload"
                                            }
                                          ],
                                          "type": "generic"
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "\"role\": $FERN_INPUT",
                                          "values": {
                                            "user": "\"user\"",
                                            "assistant": "\"assistant\"",
                                            "system": "\"system\"",
                                            "tool": "\"tool\""
                                          },
                                          "templateInput": {
                                            "location": "RELATIVE",
                                            "path": "role"
                                          },
                                          "type": "enum"
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "imports": [],
                                          "isOptional": true,
                                          "containerTemplateString": "\"tool_calls\": [\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                          "delimiter": ",\n\t\t\t\t\t",
                                          "innerTemplate": {
                                            "imports": [],
                                            "isOptional": true,
                                            "templateString": "{\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                            "templateInputs": [
                                              {
                                                "type": "template",
                                                "value": {
                                                  "imports": [],
                                                  "isOptional": true,
                                                  "templateString": "\"id\": $FERN_INPUT",
                                                  "templateInputs": [
                                                    {
                                                      "location": "RELATIVE",
                                                      "path": "id",
                                                      "type": "payload"
                                                    }
                                                  ],
                                                  "type": "generic"
                                                }
                                              },
                                              {
                                                "type": "template",
                                                "value": {
                                                  "imports": [],
                                                  "isOptional": true,
                                                  "templateString": "\"function\": {\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t}",
                                                  "templateInputs": [
                                                    {
                                                      "type": "template",
                                                      "value": {
                                                        "imports": [],
                                                        "isOptional": true,
                                                        "templateString": "\"name\": $FERN_INPUT",
                                                        "templateInputs": [
                                                          {
                                                            "location": "RELATIVE",
                                                            "path": "function.name",
                                                            "type": "payload"
                                                          }
                                                        ],
                                                        "type": "generic"
                                                      }
                                                    },
                                                    {
                                                      "type": "template",
                                                      "value": {
                                                        "imports": [],
                                                        "isOptional": true,
                                                        "templateString": "\"arguments\": $FERN_INPUT",
                                                        "templateInputs": [
                                                          {
                                                            "location": "RELATIVE",
                                                            "path": "function.arguments",
                                                            "type": "payload"
                                                          }
                                                        ],
                                                        "type": "generic"
                                                      }
                                                    }
                                                  ],
                                                  "inputDelimiter": ",\n\t\t\t\t\t\t\t",
                                                  "type": "generic"
                                                }
                                              }
                                            ],
                                            "inputDelimiter": ",\n\t\t\t\t\t\t",
                                            "type": "generic"
                                          },
                                          "templateInput": {
                                            "location": "RELATIVE",
                                            "path": "tool_calls"
                                          },
                                          "type": "iterable"
                                        }
                                      }
                                    ],
                                    "inputDelimiter": ",\n\t\t\t\t",
                                    "type": "generic"
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": null
                                  },
                                  "type": "iterable"
                                }
                              }
                            ],
                            "templateInput": {
                              "location": "BODY",
                              "path": "prompt.template"
                            },
                            "type": "union_v2"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"provider\": $FERN_INPUT",
                            "values": {
                              "openai": "\"openai\"",
                              "openai_azure": "\"openai_azure\"",
                              "mock": "\"mock\"",
                              "anthropic": "\"anthropic\"",
                              "bedrock": "\"bedrock\"",
                              "cohere": "\"cohere\"",
                              "replicate": "\"replicate\"",
                              "google": "\"google\"",
                              "groq": "\"groq\""
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "prompt.provider"
                            },
                            "type": "enum"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"max_tokens\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "prompt.max_tokens",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"temperature\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "prompt.temperature",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"top_p\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "prompt.top_p",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"stop\": $FERN_INPUT",
                            "members": [
                              {
                                "type": {
                                  "type": "primitive",
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "template": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "$FERN_INPUT",
                                  "templateInputs": [
                                    {
                                      "location": "RELATIVE",
                                      "path": null,
                                      "type": "payload"
                                    }
                                  ],
                                  "type": "generic"
                                }
                              },
                              {
                                "type": {
                                  "itemType": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "list"
                                },
                                "template": {
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "[\n\t\t\t$FERN_INPUT\n\t\t]",
                                  "delimiter": ",\n\t\t\t",
                                  "innerTemplate": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": null,
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": null
                                  },
                                  "type": "iterable"
                                }
                              }
                            ],
                            "templateInput": {
                              "location": "BODY",
                              "path": "prompt.stop"
                            },
                            "type": "union_v2"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"presence_penalty\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "prompt.presence_penalty",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"frequency_penalty\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "prompt.frequency_penalty",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "\"other\": {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyTemplate": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "$FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": null,
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            },
                            "valueTemplate": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "$FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": null,
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            },
                            "keyValueSeparator": ": ",
                            "templateInput": {
                              "location": "BODY",
                              "path": "prompt.other"
                            },
                            "type": "dict"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"seed\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "prompt.seed",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"response_format\": {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"type\": $FERN_INPUT",
                                  "values": {
                                    "json_object": "\"json_object\"",
                                    "json_schema": "\"json_schema\""
                                  },
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "prompt.response_format.type"
                                  },
                                  "type": "enum"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "\"json_schema\": {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                  "delimiter": ",\n\t\t\t\t",
                                  "keyTemplate": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": null,
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  },
                                  "valueTemplate": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": null,
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  },
                                  "keyValueSeparator": ": ",
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "prompt.response_format.type.response_format.json_schema"
                                  },
                                  "type": "dict"
                                }
                              }
                            ],
                            "inputDelimiter": ",\n\t\t\t",
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "\"tools\": [\n\t\t\t$FERN_INPUT\n\t\t]",
                            "delimiter": ",\n\t\t\t",
                            "innerTemplate": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "{\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"name\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "name",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"description\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "description",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"strict\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "strict",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "containerTemplateString": "\"parameters\": {\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                    "delimiter": ",\n\t\t\t\t\t",
                                    "keyTemplate": {
                                      "imports": [],
                                      "isOptional": true,
                                      "templateString": "$FERN_INPUT",
                                      "templateInputs": [
                                        {
                                          "location": "RELATIVE",
                                          "path": null,
                                          "type": "payload"
                                        }
                                      ],
                                      "type": "generic"
                                    },
                                    "valueTemplate": {
                                      "imports": [],
                                      "isOptional": true,
                                      "templateString": "$FERN_INPUT",
                                      "templateInputs": [
                                        {
                                          "location": "RELATIVE",
                                          "path": null,
                                          "type": "payload"
                                        }
                                      ],
                                      "type": "generic"
                                    },
                                    "keyValueSeparator": ": ",
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": "parameters"
                                    },
                                    "type": "dict"
                                  }
                                }
                              ],
                              "inputDelimiter": ",\n\t\t\t\t",
                              "type": "generic"
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "prompt.tools"
                            },
                            "type": "iterable"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "\"linked_tools\": [\n\t\t\t$FERN_INPUT\n\t\t]",
                            "delimiter": ",\n\t\t\t",
                            "innerTemplate": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "$FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": null,
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "prompt.linked_tools"
                            },
                            "type": "iterable"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "\"attributes\": {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyTemplate": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "$FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": null,
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            },
                            "valueTemplate": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "$FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": null,
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            },
                            "keyValueSeparator": ": ",
                            "templateInput": {
                              "location": "BODY",
                              "path": "prompt.attributes"
                            },
                            "type": "dict"
                          }
                        }
                      ],
                      "inputDelimiter": ",\n\t\t",
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "inputs={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "inputs"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "source=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "source",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "metadata={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "metadata"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "start_time=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "start_time",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "end_time=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "end_time",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "source_datapoint_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "source_datapoint_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "trace_parent_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "trace_parent_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "batch_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "batch_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "user=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "user",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "prompts_call_stream_request_environment=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "environment",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "save=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "save",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "provider_api_keys={\n\t\t$FERN_INPUT\n\t}",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"openai\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "provider_api_keys.openai",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"ai_21\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "provider_api_keys.ai21",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"mock\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "provider_api_keys.mock",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"anthropic\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "provider_api_keys.anthropic",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"bedrock\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "provider_api_keys.bedrock",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"cohere\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "provider_api_keys.cohere",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"openai_azure\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "provider_api_keys.openai_azure",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"openai_azure_endpoint\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "provider_api_keys.openai_azure_endpoint",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        }
                      ],
                      "inputDelimiter": ",\n\t\t",
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "num_samples=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "num_samples",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "return_inputs=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "return_inputs",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "logprobs=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "logprobs",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "suffix=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "suffix",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.prompts.callStream(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "versionId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "version_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "environment: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "environment"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "path: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "path"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "id: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "iterable",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "messages: [\n\t\t\t$FERN_INPUT\n\t\t]",
                            "delimiter": ",\n\t\t\t",
                            "innerTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "{\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                              "isOptional": true,
                              "inputDelimiter": ",\n\t\t\t\t",
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "union_v2",
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "content: $FERN_INPUT",
                                    "members": [
                                      {
                                        "template": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          ]
                                        },
                                        "type": {
                                          "type": "primitive",
                                          "value": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      {
                                        "template": {
                                          "type": "iterable",
                                          "imports": [],
                                          "isOptional": true,
                                          "containerTemplateString": "[\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t]",
                                          "delimiter": ",\n\t\t\t\t\t\t",
                                          "innerTemplate": {
                                            "type": "union_v2",
                                            "imports": [],
                                            "isOptional": true,
                                            "templateString": "$FERN_INPUT",
                                            "members": [
                                              {
                                                "template": {
                                                  "type": "generic",
                                                  "imports": [],
                                                  "templateString": "$FERN_INPUT",
                                                  "isOptional": true,
                                                  "inputDelimiter": ",\n\t\t\t\t\t\t\t",
                                                  "templateInputs": [
                                                    {
                                                      "type": "template",
                                                      "value": {
                                                        "type": "generic",
                                                        "imports": [],
                                                        "templateString": "text: $FERN_INPUT",
                                                        "isOptional": true,
                                                        "templateInputs": [
                                                          {
                                                            "type": "payload",
                                                            "location": "RELATIVE",
                                                            "path": "text"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                },
                                                "type": {
                                                  "type": "id",
                                                  "value": "type_:TextChatContent"
                                                }
                                              },
                                              {
                                                "template": {
                                                  "type": "generic",
                                                  "imports": [],
                                                  "templateString": "$FERN_INPUT",
                                                  "isOptional": true,
                                                  "inputDelimiter": ",\n\t\t\t\t\t\t\t",
                                                  "templateInputs": [
                                                    {
                                                      "type": "template",
                                                      "value": {
                                                        "type": "generic",
                                                        "imports": [],
                                                        "templateString": "imageUrl: {\n\t\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t\t}",
                                                        "isOptional": true,
                                                        "inputDelimiter": ",\n\t\t\t\t\t\t\t\t\t",
                                                        "templateInputs": [
                                                          {
                                                            "type": "template",
                                                            "value": {
                                                              "type": "generic",
                                                              "imports": [],
                                                              "templateString": "url: $FERN_INPUT",
                                                              "isOptional": true,
                                                              "templateInputs": [
                                                                {
                                                                  "type": "payload",
                                                                  "location": "RELATIVE",
                                                                  "path": "image_url.url"
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "template",
                                                            "value": {
                                                              "type": "enum",
                                                              "imports": [],
                                                              "isOptional": true,
                                                              "values": {
                                                                "high": "\"high\"",
                                                                "low": "\"low\"",
                                                                "auto": "\"auto\""
                                                              },
                                                              "templateString": "detail: $FERN_INPUT",
                                                              "templateInput": {
                                                                "location": "RELATIVE",
                                                                "path": "image_url.detail"
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                },
                                                "type": {
                                                  "type": "id",
                                                  "value": "type_:ImageChatContent"
                                                }
                                              }
                                            ],
                                            "templateInput": {
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          },
                                          "templateInput": {
                                            "location": "RELATIVE",
                                            "path": null
                                          }
                                        },
                                        "type": {
                                          "type": "list",
                                          "itemType": {
                                            "type": "id",
                                            "value": "type_:ChatMessageContentItem"
                                          }
                                        }
                                      }
                                    ],
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": "content"
                                    }
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "name: $FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": "name"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "toolCallId: $FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": "tool_call_id"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "enum",
                                    "imports": [],
                                    "isOptional": true,
                                    "values": {
                                      "user": "\"user\"",
                                      "assistant": "\"assistant\"",
                                      "system": "\"system\"",
                                      "tool": "\"tool\""
                                    },
                                    "templateString": "role: $FERN_INPUT",
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": "role"
                                    }
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "iterable",
                                    "imports": [],
                                    "isOptional": true,
                                    "containerTemplateString": "toolCalls: [\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                    "delimiter": ",\n\t\t\t\t\t",
                                    "innerTemplate": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "{\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                      "isOptional": true,
                                      "inputDelimiter": ",\n\t\t\t\t\t\t",
                                      "templateInputs": [
                                        {
                                          "type": "template",
                                          "value": {
                                            "type": "generic",
                                            "imports": [],
                                            "templateString": "id: $FERN_INPUT",
                                            "isOptional": true,
                                            "templateInputs": [
                                              {
                                                "type": "payload",
                                                "location": "RELATIVE",
                                                "path": "id"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "template",
                                          "value": {
                                            "type": "generic",
                                            "imports": [],
                                            "templateString": "function: {\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t}",
                                            "isOptional": true,
                                            "inputDelimiter": ",\n\t\t\t\t\t\t\t",
                                            "templateInputs": [
                                              {
                                                "type": "template",
                                                "value": {
                                                  "type": "generic",
                                                  "imports": [],
                                                  "templateString": "name: $FERN_INPUT",
                                                  "isOptional": true,
                                                  "templateInputs": [
                                                    {
                                                      "type": "payload",
                                                      "location": "RELATIVE",
                                                      "path": "function.name"
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "template",
                                                "value": {
                                                  "type": "generic",
                                                  "imports": [],
                                                  "templateString": "arguments: $FERN_INPUT",
                                                  "isOptional": true,
                                                  "templateInputs": [
                                                    {
                                                      "type": "payload",
                                                      "location": "RELATIVE",
                                                      "path": "function.arguments"
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": "tool_calls"
                                    }
                                  }
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "messages"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "union_v2",
                            "imports": [],
                            "isOptional": true,
                            "templateString": "toolChoice: $FERN_INPUT",
                            "members": [
                              {
                                "template": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "\"none\"",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "literal",
                                  "value": {
                                    "type": "stringLiteral",
                                    "value": "none"
                                  }
                                }
                              },
                              {
                                "template": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "\"auto\"",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "literal",
                                  "value": {
                                    "type": "stringLiteral",
                                    "value": "auto"
                                  }
                                }
                              },
                              {
                                "template": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "\"required\"",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "literal",
                                  "value": {
                                    "type": "stringLiteral",
                                    "value": "required"
                                  }
                                }
                              },
                              {
                                "template": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "inputDelimiter": ",\n\t\t\t",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "function: {\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                        "isOptional": true,
                                        "inputDelimiter": ",\n\t\t\t\t\t",
                                        "templateInputs": [
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "name: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "RELATIVE",
                                                  "path": "function.name"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "id",
                                  "value": "type_:ToolChoice"
                                }
                              }
                            ],
                            "templateInput": {
                              "location": "BODY",
                              "path": "tool_choice"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "prompt: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "model: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "prompt.model"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "enum",
                                  "imports": [],
                                  "isOptional": true,
                                  "values": {
                                    "complete": "\"complete\"",
                                    "chat": "\"chat\"",
                                    "edit": "\"edit\""
                                  },
                                  "templateString": "endpoint: $FERN_INPUT",
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "prompt.endpoint"
                                  }
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "union_v2",
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "template: $FERN_INPUT",
                                  "members": [
                                    {
                                      "template": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "$FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "RELATIVE",
                                            "path": null
                                          }
                                        ]
                                      },
                                      "type": {
                                        "type": "primitive",
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    {
                                      "template": {
                                        "type": "iterable",
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "[\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                        "delimiter": ",\n\t\t\t\t\t",
                                        "innerTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "{\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                          "isOptional": true,
                                          "inputDelimiter": ",\n\t\t\t\t\t\t",
                                          "templateInputs": [
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "union_v2",
                                                "imports": [],
                                                "isOptional": true,
                                                "templateString": "content: $FERN_INPUT",
                                                "members": [
                                                  {
                                                    "template": {
                                                      "type": "generic",
                                                      "imports": [],
                                                      "templateString": "$FERN_INPUT",
                                                      "isOptional": true,
                                                      "templateInputs": [
                                                        {
                                                          "type": "payload",
                                                          "location": "RELATIVE",
                                                          "path": null
                                                        }
                                                      ]
                                                    },
                                                    "type": {
                                                      "type": "primitive",
                                                      "value": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "template": {
                                                      "type": "iterable",
                                                      "imports": [],
                                                      "isOptional": true,
                                                      "containerTemplateString": "[\n\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t]",
                                                      "delimiter": ",\n\t\t\t\t\t\t\t\t",
                                                      "innerTemplate": {
                                                        "type": "union_v2",
                                                        "imports": [],
                                                        "isOptional": true,
                                                        "templateString": "$FERN_INPUT",
                                                        "members": [
                                                          {
                                                            "template": {
                                                              "type": "generic",
                                                              "imports": [],
                                                              "templateString": "$FERN_INPUT",
                                                              "isOptional": true,
                                                              "inputDelimiter": ",\n\t\t\t\t\t\t\t\t\t",
                                                              "templateInputs": [
                                                                {
                                                                  "type": "template",
                                                                  "value": {
                                                                    "type": "generic",
                                                                    "imports": [],
                                                                    "templateString": "text: $FERN_INPUT",
                                                                    "isOptional": true,
                                                                    "templateInputs": [
                                                                      {
                                                                        "type": "payload",
                                                                        "location": "RELATIVE",
                                                                        "path": "text"
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "type": {
                                                              "type": "id",
                                                              "value": "type_:TextChatContent"
                                                            }
                                                          },
                                                          {
                                                            "template": {
                                                              "type": "generic",
                                                              "imports": [],
                                                              "templateString": "$FERN_INPUT",
                                                              "isOptional": true,
                                                              "inputDelimiter": ",\n\t\t\t\t\t\t\t\t\t",
                                                              "templateInputs": [
                                                                {
                                                                  "type": "template",
                                                                  "value": {
                                                                    "type": "generic",
                                                                    "imports": [],
                                                                    "templateString": "imageUrl: {\n\t\t\t\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t\t\t\t}",
                                                                    "isOptional": true,
                                                                    "inputDelimiter": ",\n\t\t\t\t\t\t\t\t\t\t\t",
                                                                    "templateInputs": []
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "type": {
                                                              "type": "id",
                                                              "value": "type_:ImageChatContent"
                                                            }
                                                          }
                                                        ],
                                                        "templateInput": {
                                                          "location": "RELATIVE",
                                                          "path": null
                                                        }
                                                      },
                                                      "templateInput": {
                                                        "location": "RELATIVE",
                                                        "path": null
                                                      }
                                                    },
                                                    "type": {
                                                      "type": "list",
                                                      "itemType": {
                                                        "type": "id",
                                                        "value": "type_:ChatMessageContentItem"
                                                      }
                                                    }
                                                  }
                                                ],
                                                "templateInput": {
                                                  "location": "RELATIVE",
                                                  "path": "content"
                                                }
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "name: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "name"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "toolCallId: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "tool_call_id"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "enum",
                                                "imports": [],
                                                "isOptional": true,
                                                "values": {
                                                  "user": "\"user\"",
                                                  "assistant": "\"assistant\"",
                                                  "system": "\"system\"",
                                                  "tool": "\"tool\""
                                                },
                                                "templateString": "role: $FERN_INPUT",
                                                "templateInput": {
                                                  "location": "RELATIVE",
                                                  "path": "role"
                                                }
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "iterable",
                                                "imports": [],
                                                "isOptional": true,
                                                "containerTemplateString": "toolCalls: [\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t]",
                                                "delimiter": ",\n\t\t\t\t\t\t\t",
                                                "innerTemplate": {
                                                  "type": "generic",
                                                  "imports": [],
                                                  "templateString": "{\n\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t}",
                                                  "isOptional": true,
                                                  "inputDelimiter": ",\n\t\t\t\t\t\t\t\t",
                                                  "templateInputs": [
                                                    {
                                                      "type": "template",
                                                      "value": {
                                                        "type": "generic",
                                                        "imports": [],
                                                        "templateString": "id: $FERN_INPUT",
                                                        "isOptional": true,
                                                        "templateInputs": [
                                                          {
                                                            "type": "payload",
                                                            "location": "RELATIVE",
                                                            "path": "id"
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    {
                                                      "type": "template",
                                                      "value": {
                                                        "type": "generic",
                                                        "imports": [],
                                                        "templateString": "function: {\n\t\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t\t}",
                                                        "isOptional": true,
                                                        "inputDelimiter": ",\n\t\t\t\t\t\t\t\t\t",
                                                        "templateInputs": [
                                                          {
                                                            "type": "template",
                                                            "value": {
                                                              "type": "generic",
                                                              "imports": [],
                                                              "templateString": "name: $FERN_INPUT",
                                                              "isOptional": true,
                                                              "templateInputs": [
                                                                {
                                                                  "type": "payload",
                                                                  "location": "RELATIVE",
                                                                  "path": "function.name"
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "template",
                                                            "value": {
                                                              "type": "generic",
                                                              "imports": [],
                                                              "templateString": "arguments: $FERN_INPUT",
                                                              "isOptional": true,
                                                              "templateInputs": [
                                                                {
                                                                  "type": "payload",
                                                                  "location": "RELATIVE",
                                                                  "path": "function.arguments"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                },
                                                "templateInput": {
                                                  "location": "RELATIVE",
                                                  "path": "tool_calls"
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": null
                                        }
                                      },
                                      "type": {
                                        "type": "list",
                                        "itemType": {
                                          "type": "id",
                                          "value": "type_:ChatMessage"
                                        }
                                      }
                                    }
                                  ],
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "prompt.template"
                                  }
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "enum",
                                  "imports": [],
                                  "isOptional": true,
                                  "values": {
                                    "openai": "\"openai\"",
                                    "openai_azure": "\"openai_azure\"",
                                    "mock": "\"mock\"",
                                    "anthropic": "\"anthropic\"",
                                    "bedrock": "\"bedrock\"",
                                    "cohere": "\"cohere\"",
                                    "replicate": "\"replicate\"",
                                    "google": "\"google\"",
                                    "groq": "\"groq\""
                                  },
                                  "templateString": "provider: $FERN_INPUT",
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "prompt.provider"
                                  }
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "maxTokens: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "prompt.max_tokens"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "temperature: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "prompt.temperature"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "topP: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "prompt.top_p"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "union_v2",
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "stop: $FERN_INPUT",
                                  "members": [
                                    {
                                      "template": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "$FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "RELATIVE",
                                            "path": null
                                          }
                                        ]
                                      },
                                      "type": {
                                        "type": "primitive",
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    {
                                      "template": {
                                        "type": "iterable",
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "[\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                        "delimiter": ",\n\t\t\t\t\t",
                                        "innerTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          ]
                                        },
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": null
                                        }
                                      },
                                      "type": {
                                        "type": "list",
                                        "itemType": {
                                          "type": "primitive",
                                          "value": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  ],
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "prompt.stop"
                                  }
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "presencePenalty: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "prompt.presence_penalty"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "frequencyPenalty: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "prompt.frequency_penalty"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "dict",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "other: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                  "delimiter": ",\n\t\t\t\t",
                                  "keyValueSeparator": ": ",
                                  "keyTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "$FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    ]
                                  },
                                  "valueTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "$FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    ]
                                  },
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "prompt.other"
                                  }
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "seed: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "prompt.seed"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "responseFormat: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                  "isOptional": true,
                                  "inputDelimiter": ",\n\t\t\t\t",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "enum",
                                        "imports": [],
                                        "isOptional": true,
                                        "values": {
                                          "json_object": "\"json_object\"",
                                          "json_schema": "\"json_schema\""
                                        },
                                        "templateString": "type: $FERN_INPUT",
                                        "templateInput": {
                                          "location": "BODY",
                                          "path": "prompt.response_format.type"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "dict",
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "jsonSchema: {\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                        "delimiter": ",\n\t\t\t\t\t",
                                        "keyValueSeparator": ": ",
                                        "keyTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          ]
                                        },
                                        "valueTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          ]
                                        },
                                        "templateInput": {
                                          "location": "BODY",
                                          "path": "prompt.response_format.json_schema"
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "iterable",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "tools: [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                  "delimiter": ",\n\t\t\t\t",
                                  "innerTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "{\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                    "isOptional": true,
                                    "inputDelimiter": ",\n\t\t\t\t\t",
                                    "templateInputs": [
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "name: $FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": "name"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "description: $FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": "description"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "strict: $FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": "strict"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "dict",
                                          "imports": [],
                                          "isOptional": true,
                                          "containerTemplateString": "parameters: {\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                          "delimiter": ",\n\t\t\t\t\t\t",
                                          "keyValueSeparator": ": ",
                                          "keyTemplate": {
                                            "type": "generic",
                                            "imports": [],
                                            "templateString": "$FERN_INPUT",
                                            "isOptional": true,
                                            "templateInputs": [
                                              {
                                                "type": "payload",
                                                "location": "RELATIVE",
                                                "path": null
                                              }
                                            ]
                                          },
                                          "valueTemplate": {
                                            "type": "generic",
                                            "imports": [],
                                            "templateString": "$FERN_INPUT",
                                            "isOptional": true,
                                            "templateInputs": [
                                              {
                                                "type": "payload",
                                                "location": "RELATIVE",
                                                "path": null
                                              }
                                            ]
                                          },
                                          "templateInput": {
                                            "location": "RELATIVE",
                                            "path": "parameters"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "prompt.tools"
                                  }
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "iterable",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "linkedTools: [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                  "delimiter": ",\n\t\t\t\t",
                                  "innerTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "$FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    ]
                                  },
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "prompt.linked_tools"
                                  }
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "dict",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "attributes: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                  "delimiter": ",\n\t\t\t\t",
                                  "keyValueSeparator": ": ",
                                  "keyTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "$FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    ]
                                  },
                                  "valueTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "$FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    ]
                                  },
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "prompt.attributes"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "inputs: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "inputs"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "source: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "source"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "metadata: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "metadata"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "startTime: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "start_time"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "endTime: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "end_time"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "sourceDatapointId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "source_datapoint_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "traceParentId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "trace_parent_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "batchId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "batch_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "user: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "user"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "promptsCallStreamRequestEnvironment: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "environment"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "save: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "save"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "providerApiKeys: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "openai: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "provider_api_keys.openai"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "ai21: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "provider_api_keys.ai21"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "mock: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "provider_api_keys.mock"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "anthropic: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "provider_api_keys.anthropic"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "bedrock: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "provider_api_keys.bedrock"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "cohere: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "provider_api_keys.cohere"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "openaiAzure: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "provider_api_keys.openai_azure"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "openaiAzureEndpoint: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "provider_api_keys.openai_azure_endpoint"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "numSamples: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "num_samples"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "returnInputs: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "return_inputs"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "logprobs: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "logprobs"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "suffix: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "suffix"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "call",
          "migratedFromUrlSlugs": ["call-prompt"],
          "method": "POST",
          "id": "call",
          "originalEndpointId": "endpoint_prompts.call",
          "name": "Call Prompt",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/prompts/call"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "A specific Version ID of the Prompt to log to.",
              "key": "version_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Name of the Environment identifying a deployed version to log to.",
              "key": "environment",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Path of the Prompt, including the name. This locates the Prompt in the Humanloop filesystem and is used as as a unique identifier. For example: `folder/name` or just `name`.",
                  "key": "path",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "ID for an existing Prompt.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The messages passed to the to provider chat endpoint.",
                  "key": "messages",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:ChatMessage"
                      }
                    }
                  }
                },
                {
                  "description": "Controls how the model uses tools. The following options are supported: \n- `'none'` means the model will not call any tool and instead generates a message; this is the default when no tools are provided as part of the Prompt. \n- `'auto'` means the model can decide to call one or more of the provided tools; this is the default when tools are provided as part of the Prompt. \n- `'required'` means the model can decide to call one or more of the provided tools. \n- `{'type': 'function', 'function': {name': <TOOL_NAME>}}` forces the model to use the named function.",
                  "key": "tool_choice",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_prompts:PromptsCallRequestToolChoice"
                    }
                  }
                },
                {
                  "description": "Details of your Prompt. A new Prompt version will be created if the provided details are new.",
                  "key": "prompt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PromptKernelRequest"
                    }
                  }
                },
                {
                  "description": "The inputs passed to the prompt template.",
                  "key": "inputs",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "Identifies where the model was called from.",
                  "key": "source",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Any additional metadata to record.",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "When the logged event started.",
                  "key": "start_time",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "When the logged event ended.",
                  "key": "end_time",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Unique identifier for the Datapoint that this Log is derived from. This can be used by Humanloop to associate Logs to Evaluations. If provided, Humanloop will automatically associate this Log to Evaluations that require a Log for this Datapoint-Version pair.",
                  "key": "source_datapoint_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The ID of the parent Log to nest this Log under in a Trace.",
                  "key": "trace_parent_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Unique identifier for the Batch to add this Batch to. Batches are used to group Logs together for Evaluations. A Batch will be created if one with the given ID does not exist.",
                  "key": "batch_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "End-user ID related to the Log.",
                  "key": "user",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The name of the Environment the Log is associated to.",
                  "key": "environment",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Whether the request/response payloads will be stored on Humanloop.",
                  "key": "save",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "API keys required by each provider to make API calls. The API keys provided here are not stored by Humanloop. If not specified here, Humanloop will fall back to the key saved to your organization.",
                  "key": "provider_api_keys",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ProviderApiKeys"
                    }
                  }
                },
                {
                  "description": "The number of generations.",
                  "key": "num_samples",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "default": 1
                      }
                    }
                  }
                },
                {
                  "description": "If true, tokens will be sent as data-only server-sent events. If num_samples > 1, samples are streamed back independently.",
                  "key": "stream",
                  "valueType": {
                    "type": "literal",
                    "value": {
                      "type": "booleanLiteral",
                      "value": false
                    }
                  }
                },
                {
                  "description": "Whether to return the inputs in the response. If false, the response will contain an empty dictionary under inputs. This is useful for reducing the size of the response. Defaults to true.",
                  "key": "return_inputs",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "Include the log probabilities of the top n tokens in the provider_response",
                  "key": "logprobs",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The suffix that comes after a completion of inserted text. Useful for completions that act like inserts.",
                  "key": "suffix",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:PromptCallResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "Supplying Prompt with Tool",
              "path": "/prompts/call",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "path": "persona",
                "prompt": {
                  "model": "gpt-4",
                  "template": [
                    {
                      "role": "system",
                      "content": "You are stockbot. Return latest prices."
                    }
                  ],
                  "tools": [
                    {
                      "name": "get_stock_price",
                      "description": "Get current stock price",
                      "parameters": {
                        "type": "object",
                        "properties": {
                          "ticker_symbol": {
                            "type": "string",
                            "name": "Ticker Symbol",
                            "description": "Ticker symbol of the stock"
                          }
                        },
                        "required": []
                      }
                    }
                  ]
                },
                "messages": [
                  {
                    "role": "user",
                    "content": "latest apple"
                  }
                ],
                "stream": false
              },
              "responseStatusCode": 200,
              "responseBody": {
                "prompt": {
                  "id": "pr_3usCu3dAkgrXTlufrvPs7",
                  "path": "persona",
                  "name": "persona",
                  "version_id": "prv_Wu6zx1lAWJRqOyL8nWuZk",
                  "type": "prompt",
                  "created_at": "2024-05-01T12:00:00Z",
                  "updated_at": "2024-05-01T12:00:00Z",
                  "status": "committed",
                  "last_used_at": "2024-05-01T12:00:00Z",
                  "model": "gpt-4",
                  "template": [
                    {
                      "role": "system",
                      "content": "You are {{person}}. Answer any questions as this person. Do not break character."
                    }
                  ],
                  "provider": "openai",
                  "version_logs_count": 1,
                  "total_logs_count": 1,
                  "inputs": [
                    {
                      "name": "person"
                    }
                  ]
                },
                "id": "data_fIfEb1SoKZooqeFbi9IFs",
                "logs": [
                  {
                    "output": "Well, let me tell you, there are a lot of stories about Roswell, and I hear them all the time.\n People love to talk about Roswell. So many theories, so many ideas. Some folks believe it was a weather balloon, others say it was something out of this world. Believe me, there's plenty that we don't know. Very interesting to look into, but the truth, well, it might still be out there. Could be a great story, who knows? But what I do know, folks, is that we have to keep our eyes open and always be on the lookout for the truth!",
                    "created_at": "2024-05-01T12:00:00Z",
                    "finish_reason": "stop",
                    "output_message": {
                      "content": "Well, let me tell you, there are a lot of stories about Roswell, and I hear them all the time.\n People love to talk about Roswell. So many theories, so many ideas. Some folks believe it was a weather balloon, others say it was something out of this world. Believe me, there's plenty that we don't know. Very interesting to look into, but the truth, well, it might still be out there. Could be a great story, who knows? But what I do know, folks, is that we have to keep our eyes open and always be on the lookout for the truth!",
                      "role": "assistant"
                    },
                    "prompt_tokens": 34,
                    "output_tokens": 125,
                    "index": 0
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "path": "persona",
                  "prompt": {
                    "model": "gpt-4",
                    "template": [
                      {
                        "role": "system",
                        "content": "You are stockbot. Return latest prices."
                      }
                    ],
                    "tools": [
                      {
                        "name": "get_stock_price",
                        "description": "Get current stock price",
                        "parameters": {
                          "type": "object",
                          "properties": {
                            "ticker_symbol": {
                              "type": "string",
                              "name": "Ticker Symbol",
                              "description": "Ticker symbol of the stock"
                            }
                          },
                          "required": []
                        }
                      }
                    ]
                  },
                  "messages": [
                    {
                      "role": "user",
                      "content": "latest apple"
                    }
                  ],
                  "stream": false
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "prompt": {
                    "id": "pr_3usCu3dAkgrXTlufrvPs7",
                    "path": "persona",
                    "name": "persona",
                    "version_id": "prv_Wu6zx1lAWJRqOyL8nWuZk",
                    "type": "prompt",
                    "created_at": "2024-05-01T12:00:00Z",
                    "updated_at": "2024-05-01T12:00:00Z",
                    "status": "committed",
                    "last_used_at": "2024-05-01T12:00:00Z",
                    "model": "gpt-4",
                    "template": [
                      {
                        "role": "system",
                        "content": "You are {{person}}. Answer any questions as this person. Do not break character."
                      }
                    ],
                    "provider": "openai",
                    "version_logs_count": 1,
                    "total_logs_count": 1,
                    "inputs": [
                      {
                        "name": "person"
                      }
                    ]
                  },
                  "id": "data_fIfEb1SoKZooqeFbi9IFs",
                  "logs": [
                    {
                      "output": "Well, let me tell you, there are a lot of stories about Roswell, and I hear them all the time.\n People love to talk about Roswell. So many theories, so many ideas. Some folks believe it was a weather balloon, others say it was something out of this world. Believe me, there's plenty that we don't know. Very interesting to look into, but the truth, well, it might still be out there. Could be a great story, who knows? But what I do know, folks, is that we have to keep our eyes open and always be on the lookout for the truth!",
                      "created_at": "2024-05-01T12:00:00Z",
                      "finish_reason": "stop",
                      "output_message": {
                        "content": "Well, let me tell you, there are a lot of stories about Roswell, and I hear them all the time.\n People love to talk about Roswell. So many theories, so many ideas. Some folks believe it was a weather balloon, others say it was something out of this world. Believe me, there's plenty that we don't know. Very interesting to look into, but the truth, well, it might still be out there. Could be a great story, who knows? But what I do know, folks, is that we have to keep our eyes open and always be on the lookout for the truth!",
                        "role": "assistant"
                      },
                      "prompt_tokens": 34,
                      "output_tokens": 125,
                      "index": 0
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "name": "Supplying Prompt",
              "path": "/prompts/call",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "path": "persona",
                "prompt": {
                  "model": "gpt-4",
                  "template": [
                    {
                      "role": "system",
                      "content": "You are {{person}}. Answer any questions as this person. Do not break character."
                    }
                  ]
                },
                "messages": [
                  {
                    "role": "user",
                    "content": "What really happened at Roswell?"
                  }
                ],
                "inputs": {
                  "person": "Trump"
                },
                "stream": false
              },
              "responseStatusCode": 200,
              "responseBody": {
                "prompt": {
                  "id": "pr_3usCu3dAkgrXTlufrvPs7",
                  "path": "persona",
                  "name": "persona",
                  "version_id": "prv_Wu6zx1lAWJRqOyL8nWuZk",
                  "type": "prompt",
                  "created_at": "2024-05-01T12:00:00Z",
                  "updated_at": "2024-05-01T12:00:00Z",
                  "status": "committed",
                  "last_used_at": "2024-05-01T12:00:00Z",
                  "model": "gpt-4",
                  "template": [
                    {
                      "role": "system",
                      "content": "You are {{person}}. Answer any questions as this person. Do not break character."
                    }
                  ],
                  "provider": "openai",
                  "version_logs_count": 1,
                  "total_logs_count": 1,
                  "inputs": [
                    {
                      "name": "person"
                    }
                  ]
                },
                "id": "data_fIfEb1SoKZooqeFbi9IFs",
                "logs": [
                  {
                    "output": "Well, let me tell you, there are a lot of stories about Roswell, and I hear them all the time.\n People love to talk about Roswell. So many theories, so many ideas. Some folks believe it was a weather balloon, others say it was something out of this world. Believe me, there's plenty that we don't know. Very interesting to look into, but the truth, well, it might still be out there. Could be a great story, who knows? But what I do know, folks, is that we have to keep our eyes open and always be on the lookout for the truth!",
                    "created_at": "2024-05-01T12:00:00Z",
                    "finish_reason": "stop",
                    "output_message": {
                      "content": "Well, let me tell you, there are a lot of stories about Roswell, and I hear them all the time.\n People love to talk about Roswell. So many theories, so many ideas. Some folks believe it was a weather balloon, others say it was something out of this world. Believe me, there's plenty that we don't know. Very interesting to look into, but the truth, well, it might still be out there. Could be a great story, who knows? But what I do know, folks, is that we have to keep our eyes open and always be on the lookout for the truth!",
                      "role": "assistant"
                    },
                    "prompt_tokens": 34,
                    "output_tokens": 125,
                    "index": 0
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "path": "persona",
                  "prompt": {
                    "model": "gpt-4",
                    "template": [
                      {
                        "role": "system",
                        "content": "You are {{person}}. Answer any questions as this person. Do not break character."
                      }
                    ]
                  },
                  "messages": [
                    {
                      "role": "user",
                      "content": "What really happened at Roswell?"
                    }
                  ],
                  "inputs": {
                    "person": "Trump"
                  },
                  "stream": false
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "prompt": {
                    "id": "pr_3usCu3dAkgrXTlufrvPs7",
                    "path": "persona",
                    "name": "persona",
                    "version_id": "prv_Wu6zx1lAWJRqOyL8nWuZk",
                    "type": "prompt",
                    "created_at": "2024-05-01T12:00:00Z",
                    "updated_at": "2024-05-01T12:00:00Z",
                    "status": "committed",
                    "last_used_at": "2024-05-01T12:00:00Z",
                    "model": "gpt-4",
                    "template": [
                      {
                        "role": "system",
                        "content": "You are {{person}}. Answer any questions as this person. Do not break character."
                      }
                    ],
                    "provider": "openai",
                    "version_logs_count": 1,
                    "total_logs_count": 1,
                    "inputs": [
                      {
                        "name": "person"
                      }
                    ]
                  },
                  "id": "data_fIfEb1SoKZooqeFbi9IFs",
                  "logs": [
                    {
                      "output": "Well, let me tell you, there are a lot of stories about Roswell, and I hear them all the time.\n People love to talk about Roswell. So many theories, so many ideas. Some folks believe it was a weather balloon, others say it was something out of this world. Believe me, there's plenty that we don't know. Very interesting to look into, but the truth, well, it might still be out there. Could be a great story, who knows? But what I do know, folks, is that we have to keep our eyes open and always be on the lookout for the truth!",
                      "created_at": "2024-05-01T12:00:00Z",
                      "finish_reason": "stop",
                      "output_message": {
                        "content": "Well, let me tell you, there are a lot of stories about Roswell, and I hear them all the time.\n People love to talk about Roswell. So many theories, so many ideas. Some folks believe it was a weather balloon, others say it was something out of this world. Believe me, there's plenty that we don't know. Very interesting to look into, but the truth, well, it might still be out there. Could be a great story, who knows? But what I do know, folks, is that we have to keep our eyes open and always be on the lookout for the truth!",
                        "role": "assistant"
                      },
                      "prompt_tokens": 34,
                      "output_tokens": 125,
                      "index": 0
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "name": "By ID",
              "path": "/prompts/call",
              "pathParameters": {},
              "queryParameters": {
                "version_id": "prv_Wu6zx1lAWJRqOyL8nWuZk"
              },
              "headers": {},
              "requestBody": {
                "path": "persona",
                "messages": [
                  {
                    "role": "user",
                    "content": "What really happened at Roswell?"
                  }
                ],
                "inputs": {
                  "person": "Trump"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "prompt": {
                  "id": "pr_3usCu3dAkgrXTlufrvPs7",
                  "path": "persona",
                  "name": "persona",
                  "version_id": "prv_Wu6zx1lAWJRqOyL8nWuZk",
                  "type": "prompt",
                  "created_at": "2024-05-01T12:00:00Z",
                  "updated_at": "2024-05-01T12:00:00Z",
                  "status": "committed",
                  "last_used_at": "2024-05-01T12:00:00Z",
                  "model": "gpt-4",
                  "template": [
                    {
                      "role": "system",
                      "content": "You are {{person}}. Answer any questions as this person. Do not break character."
                    }
                  ],
                  "provider": "openai",
                  "version_logs_count": 1,
                  "total_logs_count": 1,
                  "inputs": [
                    {
                      "name": "person"
                    }
                  ]
                },
                "id": "data_fIfEb1SoKZooqeFbi9IFs",
                "logs": [
                  {
                    "output": "Well, let me tell you, there are a lot of stories about Roswell, and I hear them all the time.\n People love to talk about Roswell. So many theories, so many ideas. Some folks believe it was a weather balloon, others say it was something out of this world. Believe me, there's plenty that we don't know. Very interesting to look into, but the truth, well, it might still be out there. Could be a great story, who knows? But what I do know, folks, is that we have to keep our eyes open and always be on the lookout for the truth!",
                    "created_at": "2024-05-01T12:00:00Z",
                    "finish_reason": "stop",
                    "output_message": {
                      "content": "Well, let me tell you, there are a lot of stories about Roswell, and I hear them all the time.\n People love to talk about Roswell. So many theories, so many ideas. Some folks believe it was a weather balloon, others say it was something out of this world. Believe me, there's plenty that we don't know. Very interesting to look into, but the truth, well, it might still be out there. Could be a great story, who knows? But what I do know, folks, is that we have to keep our eyes open and always be on the lookout for the truth!",
                      "role": "assistant"
                    },
                    "prompt_tokens": 34,
                    "output_tokens": 125,
                    "index": 0
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "path": "persona",
                  "messages": [
                    {
                      "role": "user",
                      "content": "What really happened at Roswell?"
                    }
                  ],
                  "inputs": {
                    "person": "Trump"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "prompt": {
                    "id": "pr_3usCu3dAkgrXTlufrvPs7",
                    "path": "persona",
                    "name": "persona",
                    "version_id": "prv_Wu6zx1lAWJRqOyL8nWuZk",
                    "type": "prompt",
                    "created_at": "2024-05-01T12:00:00Z",
                    "updated_at": "2024-05-01T12:00:00Z",
                    "status": "committed",
                    "last_used_at": "2024-05-01T12:00:00Z",
                    "model": "gpt-4",
                    "template": [
                      {
                        "role": "system",
                        "content": "You are {{person}}. Answer any questions as this person. Do not break character."
                      }
                    ],
                    "provider": "openai",
                    "version_logs_count": 1,
                    "total_logs_count": 1,
                    "inputs": [
                      {
                        "name": "person"
                      }
                    ]
                  },
                  "id": "data_fIfEb1SoKZooqeFbi9IFs",
                  "logs": [
                    {
                      "output": "Well, let me tell you, there are a lot of stories about Roswell, and I hear them all the time.\n People love to talk about Roswell. So many theories, so many ideas. Some folks believe it was a weather balloon, others say it was something out of this world. Believe me, there's plenty that we don't know. Very interesting to look into, but the truth, well, it might still be out there. Could be a great story, who knows? But what I do know, folks, is that we have to keep our eyes open and always be on the lookout for the truth!",
                      "created_at": "2024-05-01T12:00:00Z",
                      "finish_reason": "stop",
                      "output_message": {
                        "content": "Well, let me tell you, there are a lot of stories about Roswell, and I hear them all the time.\n People love to talk about Roswell. So many theories, so many ideas. Some folks believe it was a weather balloon, others say it was something out of this world. Believe me, there's plenty that we don't know. Very interesting to look into, but the truth, well, it might still be out there. Could be a great story, who knows? But what I do know, folks, is that we have to keep our eyes open and always be on the lookout for the truth!",
                        "role": "assistant"
                      },
                      "prompt_tokens": 34,
                      "output_tokens": 125,
                      "index": 0
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/prompts/call",
              "pathParameters": {},
              "queryParameters": {
                "version_id": "string",
                "environment": "string"
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "stream": false
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Call a Prompt.\n\nCalling a Prompt calls the model provider before logging\nthe request, responses and metadata to Humanloop.\n\nYou can use query parameters `version_id`, or `environment`, to target\nan existing version of the Prompt. Otherwise the default deployed version will be chosen.\n\nInstead of targeting an existing version explicitly, you can instead pass in\nPrompt details in the request body. In this case, we will check if the details correspond\nto an existing version of the Prompt. If they do not, we will create a new version. This is helpful\nin the case where you are storing or deriving your Prompt details in code.",
          "authed": true,
          "snippetTemplates": {
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.prompts.callStream(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "versionId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "version_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "environment: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "environment"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "path: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "path"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "id: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "iterable",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "messages: [\n\t\t\t$FERN_INPUT\n\t\t]",
                            "delimiter": ",\n\t\t\t",
                            "innerTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "{\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                              "isOptional": true,
                              "inputDelimiter": ",\n\t\t\t\t",
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "union_v2",
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "content: $FERN_INPUT",
                                    "members": [
                                      {
                                        "template": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          ]
                                        },
                                        "type": {
                                          "type": "primitive",
                                          "value": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      {
                                        "template": {
                                          "type": "iterable",
                                          "imports": [],
                                          "isOptional": true,
                                          "containerTemplateString": "[\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t]",
                                          "delimiter": ",\n\t\t\t\t\t\t",
                                          "innerTemplate": {
                                            "type": "union_v2",
                                            "imports": [],
                                            "isOptional": true,
                                            "templateString": "$FERN_INPUT",
                                            "members": [
                                              {
                                                "template": {
                                                  "type": "generic",
                                                  "imports": [],
                                                  "templateString": "$FERN_INPUT",
                                                  "isOptional": true,
                                                  "inputDelimiter": ",\n\t\t\t\t\t\t\t",
                                                  "templateInputs": [
                                                    {
                                                      "type": "template",
                                                      "value": {
                                                        "type": "generic",
                                                        "imports": [],
                                                        "templateString": "text: $FERN_INPUT",
                                                        "isOptional": true,
                                                        "templateInputs": [
                                                          {
                                                            "type": "payload",
                                                            "location": "RELATIVE",
                                                            "path": "text"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                },
                                                "type": {
                                                  "type": "id",
                                                  "value": "type_:TextChatContent"
                                                }
                                              },
                                              {
                                                "template": {
                                                  "type": "generic",
                                                  "imports": [],
                                                  "templateString": "$FERN_INPUT",
                                                  "isOptional": true,
                                                  "inputDelimiter": ",\n\t\t\t\t\t\t\t",
                                                  "templateInputs": [
                                                    {
                                                      "type": "template",
                                                      "value": {
                                                        "type": "generic",
                                                        "imports": [],
                                                        "templateString": "imageUrl: {\n\t\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t\t}",
                                                        "isOptional": true,
                                                        "inputDelimiter": ",\n\t\t\t\t\t\t\t\t\t",
                                                        "templateInputs": [
                                                          {
                                                            "type": "template",
                                                            "value": {
                                                              "type": "generic",
                                                              "imports": [],
                                                              "templateString": "url: $FERN_INPUT",
                                                              "isOptional": true,
                                                              "templateInputs": [
                                                                {
                                                                  "type": "payload",
                                                                  "location": "RELATIVE",
                                                                  "path": "image_url.url"
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "template",
                                                            "value": {
                                                              "type": "enum",
                                                              "imports": [],
                                                              "isOptional": true,
                                                              "values": {
                                                                "high": "\"high\"",
                                                                "low": "\"low\"",
                                                                "auto": "\"auto\""
                                                              },
                                                              "templateString": "detail: $FERN_INPUT",
                                                              "templateInput": {
                                                                "location": "RELATIVE",
                                                                "path": "image_url.detail"
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                },
                                                "type": {
                                                  "type": "id",
                                                  "value": "type_:ImageChatContent"
                                                }
                                              }
                                            ],
                                            "templateInput": {
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          },
                                          "templateInput": {
                                            "location": "RELATIVE",
                                            "path": null
                                          }
                                        },
                                        "type": {
                                          "type": "list",
                                          "itemType": {
                                            "type": "id",
                                            "value": "type_:ChatMessageContentItem"
                                          }
                                        }
                                      }
                                    ],
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": "content"
                                    }
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "name: $FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": "name"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "toolCallId: $FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": "tool_call_id"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "enum",
                                    "imports": [],
                                    "isOptional": true,
                                    "values": {
                                      "user": "\"user\"",
                                      "assistant": "\"assistant\"",
                                      "system": "\"system\"",
                                      "tool": "\"tool\""
                                    },
                                    "templateString": "role: $FERN_INPUT",
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": "role"
                                    }
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "iterable",
                                    "imports": [],
                                    "isOptional": true,
                                    "containerTemplateString": "toolCalls: [\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                    "delimiter": ",\n\t\t\t\t\t",
                                    "innerTemplate": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "{\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                      "isOptional": true,
                                      "inputDelimiter": ",\n\t\t\t\t\t\t",
                                      "templateInputs": [
                                        {
                                          "type": "template",
                                          "value": {
                                            "type": "generic",
                                            "imports": [],
                                            "templateString": "id: $FERN_INPUT",
                                            "isOptional": true,
                                            "templateInputs": [
                                              {
                                                "type": "payload",
                                                "location": "RELATIVE",
                                                "path": "id"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "template",
                                          "value": {
                                            "type": "generic",
                                            "imports": [],
                                            "templateString": "function: {\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t}",
                                            "isOptional": true,
                                            "inputDelimiter": ",\n\t\t\t\t\t\t\t",
                                            "templateInputs": [
                                              {
                                                "type": "template",
                                                "value": {
                                                  "type": "generic",
                                                  "imports": [],
                                                  "templateString": "name: $FERN_INPUT",
                                                  "isOptional": true,
                                                  "templateInputs": [
                                                    {
                                                      "type": "payload",
                                                      "location": "RELATIVE",
                                                      "path": "function.name"
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "template",
                                                "value": {
                                                  "type": "generic",
                                                  "imports": [],
                                                  "templateString": "arguments: $FERN_INPUT",
                                                  "isOptional": true,
                                                  "templateInputs": [
                                                    {
                                                      "type": "payload",
                                                      "location": "RELATIVE",
                                                      "path": "function.arguments"
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": "tool_calls"
                                    }
                                  }
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "messages"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "union_v2",
                            "imports": [],
                            "isOptional": true,
                            "templateString": "toolChoice: $FERN_INPUT",
                            "members": [
                              {
                                "template": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "\"none\"",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "literal",
                                  "value": {
                                    "type": "stringLiteral",
                                    "value": "none"
                                  }
                                }
                              },
                              {
                                "template": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "\"auto\"",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "literal",
                                  "value": {
                                    "type": "stringLiteral",
                                    "value": "auto"
                                  }
                                }
                              },
                              {
                                "template": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "\"required\"",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "literal",
                                  "value": {
                                    "type": "stringLiteral",
                                    "value": "required"
                                  }
                                }
                              },
                              {
                                "template": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "inputDelimiter": ",\n\t\t\t",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "function: {\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                        "isOptional": true,
                                        "inputDelimiter": ",\n\t\t\t\t\t",
                                        "templateInputs": [
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "name: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "RELATIVE",
                                                  "path": "function.name"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "id",
                                  "value": "type_:ToolChoice"
                                }
                              }
                            ],
                            "templateInput": {
                              "location": "BODY",
                              "path": "tool_choice"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "prompt: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "model: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "prompt.model"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "enum",
                                  "imports": [],
                                  "isOptional": true,
                                  "values": {
                                    "complete": "\"complete\"",
                                    "chat": "\"chat\"",
                                    "edit": "\"edit\""
                                  },
                                  "templateString": "endpoint: $FERN_INPUT",
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "prompt.endpoint"
                                  }
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "union_v2",
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "template: $FERN_INPUT",
                                  "members": [
                                    {
                                      "template": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "$FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "RELATIVE",
                                            "path": null
                                          }
                                        ]
                                      },
                                      "type": {
                                        "type": "primitive",
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    {
                                      "template": {
                                        "type": "iterable",
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "[\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                        "delimiter": ",\n\t\t\t\t\t",
                                        "innerTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "{\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                          "isOptional": true,
                                          "inputDelimiter": ",\n\t\t\t\t\t\t",
                                          "templateInputs": [
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "union_v2",
                                                "imports": [],
                                                "isOptional": true,
                                                "templateString": "content: $FERN_INPUT",
                                                "members": [
                                                  {
                                                    "template": {
                                                      "type": "generic",
                                                      "imports": [],
                                                      "templateString": "$FERN_INPUT",
                                                      "isOptional": true,
                                                      "templateInputs": [
                                                        {
                                                          "type": "payload",
                                                          "location": "RELATIVE",
                                                          "path": null
                                                        }
                                                      ]
                                                    },
                                                    "type": {
                                                      "type": "primitive",
                                                      "value": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "template": {
                                                      "type": "iterable",
                                                      "imports": [],
                                                      "isOptional": true,
                                                      "containerTemplateString": "[\n\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t]",
                                                      "delimiter": ",\n\t\t\t\t\t\t\t\t",
                                                      "innerTemplate": {
                                                        "type": "union_v2",
                                                        "imports": [],
                                                        "isOptional": true,
                                                        "templateString": "$FERN_INPUT",
                                                        "members": [
                                                          {
                                                            "template": {
                                                              "type": "generic",
                                                              "imports": [],
                                                              "templateString": "$FERN_INPUT",
                                                              "isOptional": true,
                                                              "inputDelimiter": ",\n\t\t\t\t\t\t\t\t\t",
                                                              "templateInputs": [
                                                                {
                                                                  "type": "template",
                                                                  "value": {
                                                                    "type": "generic",
                                                                    "imports": [],
                                                                    "templateString": "text: $FERN_INPUT",
                                                                    "isOptional": true,
                                                                    "templateInputs": [
                                                                      {
                                                                        "type": "payload",
                                                                        "location": "RELATIVE",
                                                                        "path": "text"
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "type": {
                                                              "type": "id",
                                                              "value": "type_:TextChatContent"
                                                            }
                                                          },
                                                          {
                                                            "template": {
                                                              "type": "generic",
                                                              "imports": [],
                                                              "templateString": "$FERN_INPUT",
                                                              "isOptional": true,
                                                              "inputDelimiter": ",\n\t\t\t\t\t\t\t\t\t",
                                                              "templateInputs": [
                                                                {
                                                                  "type": "template",
                                                                  "value": {
                                                                    "type": "generic",
                                                                    "imports": [],
                                                                    "templateString": "imageUrl: {\n\t\t\t\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t\t\t\t}",
                                                                    "isOptional": true,
                                                                    "inputDelimiter": ",\n\t\t\t\t\t\t\t\t\t\t\t",
                                                                    "templateInputs": []
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "type": {
                                                              "type": "id",
                                                              "value": "type_:ImageChatContent"
                                                            }
                                                          }
                                                        ],
                                                        "templateInput": {
                                                          "location": "RELATIVE",
                                                          "path": null
                                                        }
                                                      },
                                                      "templateInput": {
                                                        "location": "RELATIVE",
                                                        "path": null
                                                      }
                                                    },
                                                    "type": {
                                                      "type": "list",
                                                      "itemType": {
                                                        "type": "id",
                                                        "value": "type_:ChatMessageContentItem"
                                                      }
                                                    }
                                                  }
                                                ],
                                                "templateInput": {
                                                  "location": "RELATIVE",
                                                  "path": "content"
                                                }
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "name: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "name"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "toolCallId: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "tool_call_id"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "enum",
                                                "imports": [],
                                                "isOptional": true,
                                                "values": {
                                                  "user": "\"user\"",
                                                  "assistant": "\"assistant\"",
                                                  "system": "\"system\"",
                                                  "tool": "\"tool\""
                                                },
                                                "templateString": "role: $FERN_INPUT",
                                                "templateInput": {
                                                  "location": "RELATIVE",
                                                  "path": "role"
                                                }
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "iterable",
                                                "imports": [],
                                                "isOptional": true,
                                                "containerTemplateString": "toolCalls: [\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t]",
                                                "delimiter": ",\n\t\t\t\t\t\t\t",
                                                "innerTemplate": {
                                                  "type": "generic",
                                                  "imports": [],
                                                  "templateString": "{\n\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t}",
                                                  "isOptional": true,
                                                  "inputDelimiter": ",\n\t\t\t\t\t\t\t\t",
                                                  "templateInputs": [
                                                    {
                                                      "type": "template",
                                                      "value": {
                                                        "type": "generic",
                                                        "imports": [],
                                                        "templateString": "id: $FERN_INPUT",
                                                        "isOptional": true,
                                                        "templateInputs": [
                                                          {
                                                            "type": "payload",
                                                            "location": "RELATIVE",
                                                            "path": "id"
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    {
                                                      "type": "template",
                                                      "value": {
                                                        "type": "generic",
                                                        "imports": [],
                                                        "templateString": "function: {\n\t\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t\t}",
                                                        "isOptional": true,
                                                        "inputDelimiter": ",\n\t\t\t\t\t\t\t\t\t",
                                                        "templateInputs": [
                                                          {
                                                            "type": "template",
                                                            "value": {
                                                              "type": "generic",
                                                              "imports": [],
                                                              "templateString": "name: $FERN_INPUT",
                                                              "isOptional": true,
                                                              "templateInputs": [
                                                                {
                                                                  "type": "payload",
                                                                  "location": "RELATIVE",
                                                                  "path": "function.name"
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "template",
                                                            "value": {
                                                              "type": "generic",
                                                              "imports": [],
                                                              "templateString": "arguments: $FERN_INPUT",
                                                              "isOptional": true,
                                                              "templateInputs": [
                                                                {
                                                                  "type": "payload",
                                                                  "location": "RELATIVE",
                                                                  "path": "function.arguments"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                },
                                                "templateInput": {
                                                  "location": "RELATIVE",
                                                  "path": "tool_calls"
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": null
                                        }
                                      },
                                      "type": {
                                        "type": "list",
                                        "itemType": {
                                          "type": "id",
                                          "value": "type_:ChatMessage"
                                        }
                                      }
                                    }
                                  ],
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "prompt.template"
                                  }
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "enum",
                                  "imports": [],
                                  "isOptional": true,
                                  "values": {
                                    "openai": "\"openai\"",
                                    "openai_azure": "\"openai_azure\"",
                                    "mock": "\"mock\"",
                                    "anthropic": "\"anthropic\"",
                                    "bedrock": "\"bedrock\"",
                                    "cohere": "\"cohere\"",
                                    "replicate": "\"replicate\"",
                                    "google": "\"google\"",
                                    "groq": "\"groq\""
                                  },
                                  "templateString": "provider: $FERN_INPUT",
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "prompt.provider"
                                  }
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "maxTokens: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "prompt.max_tokens"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "temperature: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "prompt.temperature"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "topP: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "prompt.top_p"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "union_v2",
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "stop: $FERN_INPUT",
                                  "members": [
                                    {
                                      "template": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "$FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "RELATIVE",
                                            "path": null
                                          }
                                        ]
                                      },
                                      "type": {
                                        "type": "primitive",
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    {
                                      "template": {
                                        "type": "iterable",
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "[\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                        "delimiter": ",\n\t\t\t\t\t",
                                        "innerTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          ]
                                        },
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": null
                                        }
                                      },
                                      "type": {
                                        "type": "list",
                                        "itemType": {
                                          "type": "primitive",
                                          "value": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  ],
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "prompt.stop"
                                  }
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "presencePenalty: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "prompt.presence_penalty"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "frequencyPenalty: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "prompt.frequency_penalty"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "dict",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "other: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                  "delimiter": ",\n\t\t\t\t",
                                  "keyValueSeparator": ": ",
                                  "keyTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "$FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    ]
                                  },
                                  "valueTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "$FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    ]
                                  },
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "prompt.other"
                                  }
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "seed: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "prompt.seed"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "responseFormat: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                  "isOptional": true,
                                  "inputDelimiter": ",\n\t\t\t\t",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "enum",
                                        "imports": [],
                                        "isOptional": true,
                                        "values": {
                                          "json_object": "\"json_object\"",
                                          "json_schema": "\"json_schema\""
                                        },
                                        "templateString": "type: $FERN_INPUT",
                                        "templateInput": {
                                          "location": "BODY",
                                          "path": "prompt.response_format.type"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "dict",
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "jsonSchema: {\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                        "delimiter": ",\n\t\t\t\t\t",
                                        "keyValueSeparator": ": ",
                                        "keyTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          ]
                                        },
                                        "valueTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          ]
                                        },
                                        "templateInput": {
                                          "location": "BODY",
                                          "path": "prompt.response_format.json_schema"
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "iterable",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "tools: [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                  "delimiter": ",\n\t\t\t\t",
                                  "innerTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "{\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                    "isOptional": true,
                                    "inputDelimiter": ",\n\t\t\t\t\t",
                                    "templateInputs": [
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "name: $FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": "name"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "description: $FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": "description"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "strict: $FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": "strict"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "dict",
                                          "imports": [],
                                          "isOptional": true,
                                          "containerTemplateString": "parameters: {\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                          "delimiter": ",\n\t\t\t\t\t\t",
                                          "keyValueSeparator": ": ",
                                          "keyTemplate": {
                                            "type": "generic",
                                            "imports": [],
                                            "templateString": "$FERN_INPUT",
                                            "isOptional": true,
                                            "templateInputs": [
                                              {
                                                "type": "payload",
                                                "location": "RELATIVE",
                                                "path": null
                                              }
                                            ]
                                          },
                                          "valueTemplate": {
                                            "type": "generic",
                                            "imports": [],
                                            "templateString": "$FERN_INPUT",
                                            "isOptional": true,
                                            "templateInputs": [
                                              {
                                                "type": "payload",
                                                "location": "RELATIVE",
                                                "path": null
                                              }
                                            ]
                                          },
                                          "templateInput": {
                                            "location": "RELATIVE",
                                            "path": "parameters"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "prompt.tools"
                                  }
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "iterable",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "linkedTools: [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                  "delimiter": ",\n\t\t\t\t",
                                  "innerTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "$FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    ]
                                  },
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "prompt.linked_tools"
                                  }
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "dict",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "attributes: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                  "delimiter": ",\n\t\t\t\t",
                                  "keyValueSeparator": ": ",
                                  "keyTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "$FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    ]
                                  },
                                  "valueTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "$FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    ]
                                  },
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "prompt.attributes"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "inputs: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "inputs"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "source: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "source"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "metadata: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "metadata"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "startTime: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "start_time"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "endTime: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "end_time"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "sourceDatapointId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "source_datapoint_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "traceParentId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "trace_parent_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "batchId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "batch_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "user: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "user"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "promptsCallStreamRequestEnvironment: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "environment"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "save: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "save"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "providerApiKeys: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "openai: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "provider_api_keys.openai"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "ai21: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "provider_api_keys.ai21"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "mock: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "provider_api_keys.mock"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "anthropic: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "provider_api_keys.anthropic"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "bedrock: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "provider_api_keys.bedrock"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "cohere: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "provider_api_keys.cohere"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "openaiAzure: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "provider_api_keys.openai_azure"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "openaiAzureEndpoint: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "provider_api_keys.openai_azure_endpoint"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "numSamples: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "num_samples"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "returnInputs: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "return_inputs"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "logprobs: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "logprobs"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "suffix: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "suffix"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.prompts.call_stream(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "version_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "version_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "environment=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "environment",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "path=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "path",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "messages=[\n\t\t$FERN_INPUT\n\t]",
                      "delimiter": ",\n\t\t",
                      "innerTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "{\n\t\t\t$FERN_INPUT\n\t\t}",
                        "templateInputs": [
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"content\": $FERN_INPUT",
                              "members": [
                                {
                                  "type": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string"
                                    }
                                  },
                                  "template": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": null,
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                },
                                {
                                  "type": {
                                    "itemType": {
                                      "value": "type_:ChatMessageContentItem",
                                      "type": "id"
                                    },
                                    "type": "list"
                                  },
                                  "template": {
                                    "imports": [],
                                    "isOptional": true,
                                    "containerTemplateString": "[\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                    "delimiter": ",\n\t\t\t\t",
                                    "innerTemplate": {
                                      "imports": [],
                                      "isOptional": true,
                                      "templateString": "$FERN_INPUT",
                                      "members": [
                                        {
                                          "type": {
                                            "value": "type_:TextChatContent",
                                            "type": "id"
                                          },
                                          "template": {
                                            "imports": [],
                                            "isOptional": true,
                                            "templateString": "{\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                            "templateInputs": [
                                              {
                                                "type": "template",
                                                "value": {
                                                  "imports": [],
                                                  "isOptional": true,
                                                  "templateString": "\"text\": $FERN_INPUT",
                                                  "templateInputs": [
                                                    {
                                                      "location": "RELATIVE",
                                                      "path": "text",
                                                      "type": "payload"
                                                    }
                                                  ],
                                                  "type": "generic"
                                                }
                                              }
                                            ],
                                            "inputDelimiter": ",\n\t\t\t\t\t",
                                            "type": "generic"
                                          }
                                        },
                                        {
                                          "type": {
                                            "value": "type_:ImageChatContent",
                                            "type": "id"
                                          },
                                          "template": {
                                            "imports": [],
                                            "isOptional": true,
                                            "templateString": "{\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                            "templateInputs": [
                                              {
                                                "type": "template",
                                                "value": {
                                                  "imports": [],
                                                  "isOptional": true,
                                                  "templateString": "\"image_url\": {\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                                  "templateInputs": [
                                                    {
                                                      "type": "template",
                                                      "value": {
                                                        "imports": [],
                                                        "isOptional": true,
                                                        "templateString": "\"url\": $FERN_INPUT",
                                                        "templateInputs": [
                                                          {
                                                            "location": "RELATIVE",
                                                            "path": "image_url.url",
                                                            "type": "payload"
                                                          }
                                                        ],
                                                        "type": "generic"
                                                      }
                                                    },
                                                    {
                                                      "type": "template",
                                                      "value": {
                                                        "imports": [],
                                                        "isOptional": true,
                                                        "templateString": "\"detail\": $FERN_INPUT",
                                                        "values": {
                                                          "high": "\"high\"",
                                                          "low": "\"low\"",
                                                          "auto": "\"auto\""
                                                        },
                                                        "templateInput": {
                                                          "location": "RELATIVE",
                                                          "path": "image_url.detail"
                                                        },
                                                        "type": "enum"
                                                      }
                                                    }
                                                  ],
                                                  "inputDelimiter": ",\n\t\t\t\t\t\t",
                                                  "type": "generic"
                                                }
                                              }
                                            ],
                                            "inputDelimiter": ",\n\t\t\t\t\t",
                                            "type": "generic"
                                          }
                                        }
                                      ],
                                      "templateInput": {
                                        "location": "RELATIVE",
                                        "path": null
                                      },
                                      "type": "union_v2"
                                    },
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": null
                                    },
                                    "type": "iterable"
                                  }
                                }
                              ],
                              "templateInput": {
                                "location": "RELATIVE",
                                "path": "content"
                              },
                              "type": "union_v2"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"name\": $FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": "name",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"tool_call_id\": $FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": "tool_call_id",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"role\": $FERN_INPUT",
                              "values": {
                                "user": "\"user\"",
                                "assistant": "\"assistant\"",
                                "system": "\"system\"",
                                "tool": "\"tool\""
                              },
                              "templateInput": {
                                "location": "RELATIVE",
                                "path": "role"
                              },
                              "type": "enum"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "containerTemplateString": "\"tool_calls\": [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                              "delimiter": ",\n\t\t\t\t",
                              "innerTemplate": {
                                "imports": [],
                                "isOptional": true,
                                "templateString": "{\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                "templateInputs": [
                                  {
                                    "type": "template",
                                    "value": {
                                      "imports": [],
                                      "isOptional": true,
                                      "templateString": "\"id\": $FERN_INPUT",
                                      "templateInputs": [
                                        {
                                          "location": "RELATIVE",
                                          "path": "id",
                                          "type": "payload"
                                        }
                                      ],
                                      "type": "generic"
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "imports": [],
                                      "isOptional": true,
                                      "templateString": "\"function\": {\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                      "templateInputs": [
                                        {
                                          "type": "template",
                                          "value": {
                                            "imports": [],
                                            "isOptional": true,
                                            "templateString": "\"name\": $FERN_INPUT",
                                            "templateInputs": [
                                              {
                                                "location": "RELATIVE",
                                                "path": "function.name",
                                                "type": "payload"
                                              }
                                            ],
                                            "type": "generic"
                                          }
                                        },
                                        {
                                          "type": "template",
                                          "value": {
                                            "imports": [],
                                            "isOptional": true,
                                            "templateString": "\"arguments\": $FERN_INPUT",
                                            "templateInputs": [
                                              {
                                                "location": "RELATIVE",
                                                "path": "function.arguments",
                                                "type": "payload"
                                              }
                                            ],
                                            "type": "generic"
                                          }
                                        }
                                      ],
                                      "inputDelimiter": ",\n\t\t\t\t\t\t",
                                      "type": "generic"
                                    }
                                  }
                                ],
                                "inputDelimiter": ",\n\t\t\t\t\t",
                                "type": "generic"
                              },
                              "templateInput": {
                                "location": "RELATIVE",
                                "path": "tool_calls"
                              },
                              "type": "iterable"
                            }
                          }
                        ],
                        "inputDelimiter": ",\n\t\t\t",
                        "type": "generic"
                      },
                      "templateInput": {
                        "location": "BODY",
                        "path": "messages"
                      },
                      "type": "iterable"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "tool_choice=$FERN_INPUT",
                      "members": [
                        {
                          "type": {
                            "type": "literal",
                            "value": {
                              "type": "stringLiteral",
                              "value": "none"
                            }
                          },
                          "template": {
                            "isOptional": true,
                            "templateString": "\"none\"",
                            "templateInputs": [
                              {
                                "location": "RELATIVE",
                                "path": null,
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": {
                            "type": "literal",
                            "value": {
                              "type": "stringLiteral",
                              "value": "auto"
                            }
                          },
                          "template": {
                            "isOptional": true,
                            "templateString": "\"auto\"",
                            "templateInputs": [
                              {
                                "location": "RELATIVE",
                                "path": null,
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": {
                            "type": "literal",
                            "value": {
                              "type": "stringLiteral",
                              "value": "required"
                            }
                          },
                          "template": {
                            "isOptional": true,
                            "templateString": "\"required\"",
                            "templateInputs": [
                              {
                                "location": "RELATIVE",
                                "path": null,
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": {
                            "value": "type_:ToolChoice",
                            "type": "id"
                          },
                          "template": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"function\": {\n\t\t\t$FERN_INPUT\n\t\t}",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "\"name\": $FERN_INPUT",
                                        "templateInputs": [
                                          {
                                            "location": "RELATIVE",
                                            "path": "function.name",
                                            "type": "payload"
                                          }
                                        ],
                                        "type": "generic"
                                      }
                                    }
                                  ],
                                  "inputDelimiter": ",\n\t\t\t",
                                  "type": "generic"
                                }
                              }
                            ],
                            "inputDelimiter": ",\n\t\t",
                            "type": "generic"
                          }
                        }
                      ],
                      "templateInput": {
                        "location": "BODY",
                        "path": "tool_choice"
                      },
                      "type": "union_v2"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "prompt={\n\t\t$FERN_INPUT\n\t}",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"model\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "prompt.model",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"endpoint\": $FERN_INPUT",
                            "values": {
                              "complete": "\"complete\"",
                              "chat": "\"chat\"",
                              "edit": "\"edit\""
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "prompt.endpoint"
                            },
                            "type": "enum"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"template\": $FERN_INPUT",
                            "members": [
                              {
                                "type": {
                                  "type": "primitive",
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "template": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "$FERN_INPUT",
                                  "templateInputs": [
                                    {
                                      "location": "RELATIVE",
                                      "path": null,
                                      "type": "payload"
                                    }
                                  ],
                                  "type": "generic"
                                }
                              },
                              {
                                "type": {
                                  "itemType": {
                                    "value": "type_:ChatMessage",
                                    "type": "id"
                                  },
                                  "type": "list"
                                },
                                "template": {
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "[\n\t\t\t$FERN_INPUT\n\t\t]",
                                  "delimiter": ",\n\t\t\t",
                                  "innerTemplate": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "{\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                    "templateInputs": [
                                      {
                                        "type": "template",
                                        "value": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "\"content\": $FERN_INPUT",
                                          "members": [
                                            {
                                              "type": {
                                                "type": "primitive",
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "template": {
                                                "imports": [],
                                                "isOptional": true,
                                                "templateString": "$FERN_INPUT",
                                                "templateInputs": [
                                                  {
                                                    "location": "RELATIVE",
                                                    "path": null,
                                                    "type": "payload"
                                                  }
                                                ],
                                                "type": "generic"
                                              }
                                            },
                                            {
                                              "type": {
                                                "itemType": {
                                                  "value": "type_:ChatMessageContentItem",
                                                  "type": "id"
                                                },
                                                "type": "list"
                                              },
                                              "template": {
                                                "imports": [],
                                                "isOptional": true,
                                                "containerTemplateString": "[\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                                "delimiter": ",\n\t\t\t\t\t",
                                                "innerTemplate": {
                                                  "imports": [],
                                                  "isOptional": true,
                                                  "templateString": "$FERN_INPUT",
                                                  "members": [
                                                    {
                                                      "type": {
                                                        "value": "type_:TextChatContent",
                                                        "type": "id"
                                                      },
                                                      "template": {
                                                        "imports": [],
                                                        "isOptional": true,
                                                        "templateString": "{\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                                        "templateInputs": [
                                                          {
                                                            "type": "template",
                                                            "value": {
                                                              "imports": [],
                                                              "isOptional": true,
                                                              "templateString": "\"text\": $FERN_INPUT",
                                                              "templateInputs": [
                                                                {
                                                                  "location": "RELATIVE",
                                                                  "path": "text",
                                                                  "type": "payload"
                                                                }
                                                              ],
                                                              "type": "generic"
                                                            }
                                                          }
                                                        ],
                                                        "inputDelimiter": ",\n\t\t\t\t\t\t",
                                                        "type": "generic"
                                                      }
                                                    },
                                                    {
                                                      "type": {
                                                        "value": "type_:ImageChatContent",
                                                        "type": "id"
                                                      },
                                                      "template": {
                                                        "imports": [],
                                                        "isOptional": true,
                                                        "templateString": "{\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                                        "templateInputs": [
                                                          {
                                                            "type": "template",
                                                            "value": {
                                                              "imports": [],
                                                              "isOptional": true,
                                                              "templateString": "\"image_url\": {\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t}",
                                                              "templateInputs": [
                                                                {
                                                                  "type": "template",
                                                                  "value": {
                                                                    "imports": [],
                                                                    "isOptional": true,
                                                                    "templateString": "\"url\": $FERN_INPUT",
                                                                    "templateInputs": [
                                                                      {
                                                                        "location": "RELATIVE",
                                                                        "path": "image_url.url",
                                                                        "type": "payload"
                                                                      }
                                                                    ],
                                                                    "type": "generic"
                                                                  }
                                                                },
                                                                {
                                                                  "type": "template",
                                                                  "value": {
                                                                    "imports": [],
                                                                    "isOptional": true,
                                                                    "templateString": "\"detail\": $FERN_INPUT",
                                                                    "values": {
                                                                      "high": "\"high\"",
                                                                      "low": "\"low\"",
                                                                      "auto": "\"auto\""
                                                                    },
                                                                    "templateInput": {
                                                                      "location": "RELATIVE",
                                                                      "path": "image_url.detail"
                                                                    },
                                                                    "type": "enum"
                                                                  }
                                                                }
                                                              ],
                                                              "inputDelimiter": ",\n\t\t\t\t\t\t\t",
                                                              "type": "generic"
                                                            }
                                                          }
                                                        ],
                                                        "inputDelimiter": ",\n\t\t\t\t\t\t",
                                                        "type": "generic"
                                                      }
                                                    }
                                                  ],
                                                  "templateInput": {
                                                    "location": "RELATIVE",
                                                    "path": null
                                                  },
                                                  "type": "union_v2"
                                                },
                                                "templateInput": {
                                                  "location": "RELATIVE",
                                                  "path": null
                                                },
                                                "type": "iterable"
                                              }
                                            }
                                          ],
                                          "templateInput": {
                                            "location": "RELATIVE",
                                            "path": "content"
                                          },
                                          "type": "union_v2"
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "\"name\": $FERN_INPUT",
                                          "templateInputs": [
                                            {
                                              "location": "RELATIVE",
                                              "path": "name",
                                              "type": "payload"
                                            }
                                          ],
                                          "type": "generic"
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "\"tool_call_id\": $FERN_INPUT",
                                          "templateInputs": [
                                            {
                                              "location": "RELATIVE",
                                              "path": "tool_call_id",
                                              "type": "payload"
                                            }
                                          ],
                                          "type": "generic"
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "\"role\": $FERN_INPUT",
                                          "values": {
                                            "user": "\"user\"",
                                            "assistant": "\"assistant\"",
                                            "system": "\"system\"",
                                            "tool": "\"tool\""
                                          },
                                          "templateInput": {
                                            "location": "RELATIVE",
                                            "path": "role"
                                          },
                                          "type": "enum"
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "imports": [],
                                          "isOptional": true,
                                          "containerTemplateString": "\"tool_calls\": [\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                          "delimiter": ",\n\t\t\t\t\t",
                                          "innerTemplate": {
                                            "imports": [],
                                            "isOptional": true,
                                            "templateString": "{\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                            "templateInputs": [
                                              {
                                                "type": "template",
                                                "value": {
                                                  "imports": [],
                                                  "isOptional": true,
                                                  "templateString": "\"id\": $FERN_INPUT",
                                                  "templateInputs": [
                                                    {
                                                      "location": "RELATIVE",
                                                      "path": "id",
                                                      "type": "payload"
                                                    }
                                                  ],
                                                  "type": "generic"
                                                }
                                              },
                                              {
                                                "type": "template",
                                                "value": {
                                                  "imports": [],
                                                  "isOptional": true,
                                                  "templateString": "\"function\": {\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t}",
                                                  "templateInputs": [
                                                    {
                                                      "type": "template",
                                                      "value": {
                                                        "imports": [],
                                                        "isOptional": true,
                                                        "templateString": "\"name\": $FERN_INPUT",
                                                        "templateInputs": [
                                                          {
                                                            "location": "RELATIVE",
                                                            "path": "function.name",
                                                            "type": "payload"
                                                          }
                                                        ],
                                                        "type": "generic"
                                                      }
                                                    },
                                                    {
                                                      "type": "template",
                                                      "value": {
                                                        "imports": [],
                                                        "isOptional": true,
                                                        "templateString": "\"arguments\": $FERN_INPUT",
                                                        "templateInputs": [
                                                          {
                                                            "location": "RELATIVE",
                                                            "path": "function.arguments",
                                                            "type": "payload"
                                                          }
                                                        ],
                                                        "type": "generic"
                                                      }
                                                    }
                                                  ],
                                                  "inputDelimiter": ",\n\t\t\t\t\t\t\t",
                                                  "type": "generic"
                                                }
                                              }
                                            ],
                                            "inputDelimiter": ",\n\t\t\t\t\t\t",
                                            "type": "generic"
                                          },
                                          "templateInput": {
                                            "location": "RELATIVE",
                                            "path": "tool_calls"
                                          },
                                          "type": "iterable"
                                        }
                                      }
                                    ],
                                    "inputDelimiter": ",\n\t\t\t\t",
                                    "type": "generic"
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": null
                                  },
                                  "type": "iterable"
                                }
                              }
                            ],
                            "templateInput": {
                              "location": "BODY",
                              "path": "prompt.template"
                            },
                            "type": "union_v2"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"provider\": $FERN_INPUT",
                            "values": {
                              "openai": "\"openai\"",
                              "openai_azure": "\"openai_azure\"",
                              "mock": "\"mock\"",
                              "anthropic": "\"anthropic\"",
                              "bedrock": "\"bedrock\"",
                              "cohere": "\"cohere\"",
                              "replicate": "\"replicate\"",
                              "google": "\"google\"",
                              "groq": "\"groq\""
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "prompt.provider"
                            },
                            "type": "enum"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"max_tokens\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "prompt.max_tokens",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"temperature\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "prompt.temperature",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"top_p\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "prompt.top_p",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"stop\": $FERN_INPUT",
                            "members": [
                              {
                                "type": {
                                  "type": "primitive",
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "template": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "$FERN_INPUT",
                                  "templateInputs": [
                                    {
                                      "location": "RELATIVE",
                                      "path": null,
                                      "type": "payload"
                                    }
                                  ],
                                  "type": "generic"
                                }
                              },
                              {
                                "type": {
                                  "itemType": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "list"
                                },
                                "template": {
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "[\n\t\t\t$FERN_INPUT\n\t\t]",
                                  "delimiter": ",\n\t\t\t",
                                  "innerTemplate": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": null,
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": null
                                  },
                                  "type": "iterable"
                                }
                              }
                            ],
                            "templateInput": {
                              "location": "BODY",
                              "path": "prompt.stop"
                            },
                            "type": "union_v2"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"presence_penalty\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "prompt.presence_penalty",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"frequency_penalty\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "prompt.frequency_penalty",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "\"other\": {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyTemplate": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "$FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": null,
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            },
                            "valueTemplate": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "$FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": null,
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            },
                            "keyValueSeparator": ": ",
                            "templateInput": {
                              "location": "BODY",
                              "path": "prompt.other"
                            },
                            "type": "dict"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"seed\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "prompt.seed",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"response_format\": {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"type\": $FERN_INPUT",
                                  "values": {
                                    "json_object": "\"json_object\"",
                                    "json_schema": "\"json_schema\""
                                  },
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "prompt.response_format.type"
                                  },
                                  "type": "enum"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "\"json_schema\": {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                  "delimiter": ",\n\t\t\t\t",
                                  "keyTemplate": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": null,
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  },
                                  "valueTemplate": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": null,
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  },
                                  "keyValueSeparator": ": ",
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "prompt.response_format.type.response_format.json_schema"
                                  },
                                  "type": "dict"
                                }
                              }
                            ],
                            "inputDelimiter": ",\n\t\t\t",
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "\"tools\": [\n\t\t\t$FERN_INPUT\n\t\t]",
                            "delimiter": ",\n\t\t\t",
                            "innerTemplate": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "{\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"name\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "name",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"description\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "description",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"strict\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "strict",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "containerTemplateString": "\"parameters\": {\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                    "delimiter": ",\n\t\t\t\t\t",
                                    "keyTemplate": {
                                      "imports": [],
                                      "isOptional": true,
                                      "templateString": "$FERN_INPUT",
                                      "templateInputs": [
                                        {
                                          "location": "RELATIVE",
                                          "path": null,
                                          "type": "payload"
                                        }
                                      ],
                                      "type": "generic"
                                    },
                                    "valueTemplate": {
                                      "imports": [],
                                      "isOptional": true,
                                      "templateString": "$FERN_INPUT",
                                      "templateInputs": [
                                        {
                                          "location": "RELATIVE",
                                          "path": null,
                                          "type": "payload"
                                        }
                                      ],
                                      "type": "generic"
                                    },
                                    "keyValueSeparator": ": ",
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": "parameters"
                                    },
                                    "type": "dict"
                                  }
                                }
                              ],
                              "inputDelimiter": ",\n\t\t\t\t",
                              "type": "generic"
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "prompt.tools"
                            },
                            "type": "iterable"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "\"linked_tools\": [\n\t\t\t$FERN_INPUT\n\t\t]",
                            "delimiter": ",\n\t\t\t",
                            "innerTemplate": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "$FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": null,
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "prompt.linked_tools"
                            },
                            "type": "iterable"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "\"attributes\": {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyTemplate": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "$FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": null,
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            },
                            "valueTemplate": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "$FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": null,
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            },
                            "keyValueSeparator": ": ",
                            "templateInput": {
                              "location": "BODY",
                              "path": "prompt.attributes"
                            },
                            "type": "dict"
                          }
                        }
                      ],
                      "inputDelimiter": ",\n\t\t",
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "inputs={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "inputs"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "source=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "source",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "metadata={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "metadata"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "start_time=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "start_time",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "end_time=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "end_time",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "source_datapoint_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "source_datapoint_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "trace_parent_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "trace_parent_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "batch_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "batch_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "user=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "user",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "prompts_call_stream_request_environment=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "environment",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "save=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "save",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "provider_api_keys={\n\t\t$FERN_INPUT\n\t}",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"openai\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "provider_api_keys.openai",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"ai_21\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "provider_api_keys.ai21",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"mock\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "provider_api_keys.mock",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"anthropic\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "provider_api_keys.anthropic",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"bedrock\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "provider_api_keys.bedrock",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"cohere\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "provider_api_keys.cohere",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"openai_azure\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "provider_api_keys.openai_azure",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"openai_azure_endpoint\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "provider_api_keys.openai_azure_endpoint",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        }
                      ],
                      "inputDelimiter": ",\n\t\t",
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "num_samples=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "num_samples",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "return_inputs=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "return_inputs",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "logprobs=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "logprobs",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "suffix=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "suffix",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "list",
          "migratedFromUrlSlugs": ["list-prompts"],
          "method": "GET",
          "id": "list",
          "originalEndpointId": "endpoint_prompts.list",
          "name": "List Prompts",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/prompts"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Page number for pagination.",
              "key": "page",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "Page size for pagination. Number of Prompts to fetch.",
              "key": "size",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "Case-insensitive filter for Prompt name.",
              "key": "name",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Case-insensitive filter for users in the Prompt. This filter matches against both email address and name of users.",
              "key": "user_filter",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Field to sort Prompts by",
              "key": "sort_by",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_:ProjectSortBy"
                }
              }
            },
            {
              "description": "Direction to sort by.",
              "key": "order",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_:SortOrder"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:PaginatedDataPromptResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/prompts",
              "pathParameters": {},
              "queryParameters": {
                "size": 1
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "records": [
                  {
                    "path": "Personal Projects/Coding Assistant",
                    "id": "pr_30gco7dx6JDq4200GVOHa",
                    "name": "Coding Assistant",
                    "version_id": "prv_7ZlQREDScH0xkhUwtXruN",
                    "type": "prompt",
                    "environments": [
                      {
                        "id": "env_ffSVxEBzJcBZ1H5jcNMVj",
                        "created_at": "2023-06-27T23:16:07.992339",
                        "name": "development",
                        "tag": "default"
                      }
                    ],
                    "created_at": "2024-07-08T22:40:35.656915",
                    "updated_at": "2024-07-08T22:40:35.656915",
                    "created_by": {
                      "id": "usr_01RJO1k2spBVqNUt1ASef",
                      "email_address": "raza@humanloop.com",
                      "full_name": "Raza Habib"
                    },
                    "status": "committed",
                    "last_used_at": "2024-07-08T22:40:35.656915",
                    "model": "gpt-4o",
                    "endpoint": "chat",
                    "template": [
                      {
                        "content": "You are a helpful coding assistant specialising in {{language}}",
                        "role": "system"
                      }
                    ],
                    "provider": "openai",
                    "max_tokens": -1,
                    "temperature": 0.7,
                    "top_p": 1,
                    "presence_penalty": 0,
                    "frequency_penalty": 0,
                    "other": {},
                    "tools": [],
                    "linked_tools": [],
                    "commit_message": "Initial commit",
                    "version_logs_count": 0,
                    "total_logs_count": 0,
                    "inputs": [
                      {
                        "name": "messages"
                      }
                    ]
                  }
                ],
                "page": 0,
                "size": 1,
                "total": 1
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "records": [
                    {
                      "path": "Personal Projects/Coding Assistant",
                      "id": "pr_30gco7dx6JDq4200GVOHa",
                      "name": "Coding Assistant",
                      "version_id": "prv_7ZlQREDScH0xkhUwtXruN",
                      "type": "prompt",
                      "environments": [
                        {
                          "id": "env_ffSVxEBzJcBZ1H5jcNMVj",
                          "created_at": "2023-06-27T23:16:07.992339",
                          "name": "development",
                          "tag": "default"
                        }
                      ],
                      "created_at": "2024-07-08T22:40:35.656915",
                      "updated_at": "2024-07-08T22:40:35.656915",
                      "created_by": {
                        "id": "usr_01RJO1k2spBVqNUt1ASef",
                        "email_address": "raza@humanloop.com",
                        "full_name": "Raza Habib"
                      },
                      "status": "committed",
                      "last_used_at": "2024-07-08T22:40:35.656915",
                      "model": "gpt-4o",
                      "endpoint": "chat",
                      "template": [
                        {
                          "content": "You are a helpful coding assistant specialising in {{language}}",
                          "role": "system"
                        }
                      ],
                      "provider": "openai",
                      "max_tokens": -1,
                      "temperature": 0.7,
                      "top_p": 1,
                      "presence_penalty": 0,
                      "frequency_penalty": 0,
                      "other": {},
                      "tools": [],
                      "linked_tools": [],
                      "commit_message": "Initial commit",
                      "version_logs_count": 0,
                      "total_logs_count": 0,
                      "inputs": [
                        {
                          "name": "messages"
                        }
                      ]
                    }
                  ],
                  "page": 0,
                  "size": 1,
                  "total": 1
                }
              },
              "codeSamples": []
            },
            {
              "path": "/prompts",
              "pathParameters": {},
              "queryParameters": {
                "page": 0,
                "size": 0
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Get a list of all Prompts.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.prompts.list(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "page=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "page",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "size=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "size",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "name=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "name",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "user_filter=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "user_filter",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "sort_by=$FERN_INPUT",
                      "values": {
                        "created_at": "\"created_at\"",
                        "updated_at": "\"updated_at\"",
                        "name": "\"name\""
                      },
                      "templateInput": {
                        "location": "QUERY",
                        "path": "sort_by"
                      },
                      "type": "enum"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "order=$FERN_INPUT",
                      "values": {
                        "asc": "\"asc\"",
                        "desc": "\"desc\""
                      },
                      "templateInput": {
                        "location": "QUERY",
                        "path": "order"
                      },
                      "type": "enum"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.prompts.list(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "page: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "page"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "size: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "size"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "name: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "name"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "userFilter: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "user_filter"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "enum",
                            "imports": [],
                            "isOptional": true,
                            "values": {
                              "created_at": "\"created_at\"",
                              "updated_at": "\"updated_at\"",
                              "name": "\"name\""
                            },
                            "templateString": "sortBy: $FERN_INPUT",
                            "templateInput": {
                              "location": "QUERY",
                              "path": "sort_by"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "enum",
                            "imports": [],
                            "isOptional": true,
                            "values": {
                              "asc": "\"asc\"",
                              "desc": "\"desc\""
                            },
                            "templateString": "order: $FERN_INPUT",
                            "templateInput": {
                              "location": "QUERY",
                              "path": "order"
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "upsert",
          "migratedFromUrlSlugs": ["upsert-prompt"],
          "method": "POST",
          "id": "upsert",
          "originalEndpointId": "endpoint_prompts.upsert",
          "name": "Upsert Prompt",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/prompts"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Path of the Prompt, including the name. This locates the Prompt in the Humanloop filesystem and is used as as a unique identifier. For example: `folder/name` or just `name`.",
                  "key": "path",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "ID for an existing Prompt.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The model instance used, e.g. `gpt-4`. See [supported models](https://humanloop.com/docs/reference/supported-models)",
                  "key": "model",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The provider model endpoint used.",
                  "key": "endpoint",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ModelEndpoints"
                    }
                  }
                },
                {
                  "description": "The template contains the main structure and instructions for the model, including input variables for dynamic values. \n\nFor chat models, provide the template as a ChatTemplate (a list of messages), e.g. a system message, followed by a user message with an input variable.\nFor completion models, provide a prompt template as a string. \n\nInput variables should be specified with double curly bracket syntax: `{{input_name}}`.",
                  "key": "template",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_prompts:PromptRequestTemplate"
                    }
                  }
                },
                {
                  "description": "The company providing the underlying model service.",
                  "key": "provider",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ModelProviders"
                    }
                  }
                },
                {
                  "description": "The maximum number of tokens to generate. Provide max_tokens=-1 to dynamically calculate the maximum number of tokens to generate given the length of the prompt",
                  "key": "max_tokens",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "default": -1
                      }
                    }
                  }
                },
                {
                  "description": "What sampling temperature to use when making a generation. Higher values means the model will be more creative.",
                  "key": "temperature",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double",
                        "default": 1
                      }
                    }
                  }
                },
                {
                  "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass.",
                  "key": "top_p",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double",
                        "default": 1
                      }
                    }
                  }
                },
                {
                  "description": "The string (or list of strings) after which the model will stop generating. The returned text will not contain the stop sequence.",
                  "key": "stop",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_prompts:PromptRequestStop"
                    }
                  }
                },
                {
                  "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the generation so far.",
                  "key": "presence_penalty",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double",
                        "default": 0
                      }
                    }
                  }
                },
                {
                  "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on how frequently they appear in the generation so far.",
                  "key": "frequency_penalty",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double",
                        "default": 0
                      }
                    }
                  }
                },
                {
                  "description": "Other parameter values to be passed to the provider call.",
                  "key": "other",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "If specified, model will make a best effort to sample deterministically, but it is not guaranteed.",
                  "key": "seed",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The format of the response. Only `{\"type\": \"json_object\"}` is currently supported for chat.",
                  "key": "response_format",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ResponseFormat"
                    }
                  }
                },
                {
                  "description": "The tool specification that the model can choose to call if Tool calling is supported.",
                  "key": "tools",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:ToolFunction"
                      }
                    }
                  }
                },
                {
                  "description": "The IDs of the Tools in your organization that the model can choose to call if Tool calling is supported. The default deployed version of that tool is called.",
                  "key": "linked_tools",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                {
                  "description": "Additional fields to describe the Prompt. Helpful to separate Prompt versions from each other with details on how they were created or used.",
                  "key": "attributes",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "Message describing the changes made.",
                  "key": "commit_message",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:PromptResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "Upsert prompt",
              "path": "/prompts",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "path": "Personal Projects/Coding Assistant",
                "model": "gpt-4o",
                "endpoint": "chat",
                "template": [
                  {
                    "content": "You are a helpful coding assistant specialising in {{language}}",
                    "role": "system"
                  }
                ],
                "provider": "openai",
                "max_tokens": -1,
                "temperature": 0.7,
                "top_p": 1,
                "presence_penalty": 0,
                "frequency_penalty": 0,
                "other": {},
                "tools": [],
                "linked_tools": [],
                "commit_message": "Initial commit"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "path": "Personal Projects/Coding Assistant",
                "id": "pr_30gco7dx6JDq4200GVOHa",
                "name": "Coding Assistant",
                "version_id": "prv_7ZlQREDScH0xkhUwtXruN",
                "type": "prompt",
                "environments": [
                  {
                    "id": "env_ffSVxEBzJcBZ1H5jcNMVj",
                    "created_at": "2023-06-27T23:16:07.992339",
                    "name": "development",
                    "tag": "default"
                  }
                ],
                "created_at": "2024-07-08T22:40:35.656915",
                "updated_at": "2024-07-08T22:40:35.656915",
                "created_by": {
                  "id": "usr_01RJO1k2spBVqNUt1ASef",
                  "email_address": "raza@humanloop.com",
                  "full_name": "Raza Habib"
                },
                "status": "committed",
                "last_used_at": "2024-07-08T22:40:35.656915",
                "model": "gpt-4o",
                "endpoint": "chat",
                "template": [
                  {
                    "content": "You are a helpful coding assistant specialising in {{language}}",
                    "role": "system"
                  }
                ],
                "provider": "openai",
                "max_tokens": -1,
                "temperature": 0.7,
                "top_p": 1,
                "presence_penalty": 0,
                "frequency_penalty": 0,
                "other": {},
                "tools": [],
                "linked_tools": [],
                "commit_message": "Initial commit",
                "version_logs_count": 0,
                "total_logs_count": 0,
                "inputs": [
                  {
                    "name": "messages"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "path": "Personal Projects/Coding Assistant",
                  "model": "gpt-4o",
                  "endpoint": "chat",
                  "template": [
                    {
                      "content": "You are a helpful coding assistant specialising in {{language}}",
                      "role": "system"
                    }
                  ],
                  "provider": "openai",
                  "max_tokens": -1,
                  "temperature": 0.7,
                  "top_p": 1,
                  "presence_penalty": 0,
                  "frequency_penalty": 0,
                  "other": {},
                  "tools": [],
                  "linked_tools": [],
                  "commit_message": "Initial commit"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "path": "Personal Projects/Coding Assistant",
                  "id": "pr_30gco7dx6JDq4200GVOHa",
                  "name": "Coding Assistant",
                  "version_id": "prv_7ZlQREDScH0xkhUwtXruN",
                  "type": "prompt",
                  "environments": [
                    {
                      "id": "env_ffSVxEBzJcBZ1H5jcNMVj",
                      "created_at": "2023-06-27T23:16:07.992339",
                      "name": "development",
                      "tag": "default"
                    }
                  ],
                  "created_at": "2024-07-08T22:40:35.656915",
                  "updated_at": "2024-07-08T22:40:35.656915",
                  "created_by": {
                    "id": "usr_01RJO1k2spBVqNUt1ASef",
                    "email_address": "raza@humanloop.com",
                    "full_name": "Raza Habib"
                  },
                  "status": "committed",
                  "last_used_at": "2024-07-08T22:40:35.656915",
                  "model": "gpt-4o",
                  "endpoint": "chat",
                  "template": [
                    {
                      "content": "You are a helpful coding assistant specialising in {{language}}",
                      "role": "system"
                    }
                  ],
                  "provider": "openai",
                  "max_tokens": -1,
                  "temperature": 0.7,
                  "top_p": 1,
                  "presence_penalty": 0,
                  "frequency_penalty": 0,
                  "other": {},
                  "tools": [],
                  "linked_tools": [],
                  "commit_message": "Initial commit",
                  "version_logs_count": 0,
                  "total_logs_count": 0,
                  "inputs": [
                    {
                      "name": "messages"
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/prompts",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "model": "string"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Create a Prompt or update it with a new version if it already exists.\n\nPrompts are identified by the `ID` or their `path`. The parameters (i.e. the prompt template, temperature, model etc.) determine the versions of the Prompt.\n\nIf you provide a commit message, then the new version will be committed;\notherwise it will be uncommitted. If you try to commit an already committed version,\nan exception will be raised.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.prompts.upsert(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "path=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "path",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "model=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "model",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "endpoint=$FERN_INPUT",
                      "values": {
                        "complete": "\"complete\"",
                        "chat": "\"chat\"",
                        "edit": "\"edit\""
                      },
                      "templateInput": {
                        "location": "BODY",
                        "path": "endpoint"
                      },
                      "type": "enum"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "template=$FERN_INPUT",
                      "members": [
                        {
                          "type": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          },
                          "template": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "$FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "RELATIVE",
                                "path": null,
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": {
                            "itemType": {
                              "value": "type_:ChatMessage",
                              "type": "id"
                            },
                            "type": "list"
                          },
                          "template": {
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "[\n\t\t$FERN_INPUT\n\t]",
                            "delimiter": ",\n\t\t",
                            "innerTemplate": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "{\n\t\t\t$FERN_INPUT\n\t\t}",
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"content\": $FERN_INPUT",
                                    "members": [
                                      {
                                        "type": {
                                          "type": "primitive",
                                          "value": {
                                            "type": "string"
                                          }
                                        },
                                        "template": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "$FERN_INPUT",
                                          "templateInputs": [
                                            {
                                              "location": "RELATIVE",
                                              "path": null,
                                              "type": "payload"
                                            }
                                          ],
                                          "type": "generic"
                                        }
                                      },
                                      {
                                        "type": {
                                          "itemType": {
                                            "value": "type_:ChatMessageContentItem",
                                            "type": "id"
                                          },
                                          "type": "list"
                                        },
                                        "template": {
                                          "imports": [],
                                          "isOptional": true,
                                          "containerTemplateString": "[\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                          "delimiter": ",\n\t\t\t\t",
                                          "innerTemplate": {
                                            "imports": [],
                                            "isOptional": true,
                                            "templateString": "$FERN_INPUT",
                                            "members": [
                                              {
                                                "type": {
                                                  "value": "type_:TextChatContent",
                                                  "type": "id"
                                                },
                                                "template": {
                                                  "imports": [],
                                                  "isOptional": true,
                                                  "templateString": "{\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                                  "templateInputs": [
                                                    {
                                                      "type": "template",
                                                      "value": {
                                                        "imports": [],
                                                        "isOptional": true,
                                                        "templateString": "\"text\": $FERN_INPUT",
                                                        "templateInputs": [
                                                          {
                                                            "location": "RELATIVE",
                                                            "path": "text",
                                                            "type": "payload"
                                                          }
                                                        ],
                                                        "type": "generic"
                                                      }
                                                    }
                                                  ],
                                                  "inputDelimiter": ",\n\t\t\t\t\t",
                                                  "type": "generic"
                                                }
                                              },
                                              {
                                                "type": {
                                                  "value": "type_:ImageChatContent",
                                                  "type": "id"
                                                },
                                                "template": {
                                                  "imports": [],
                                                  "isOptional": true,
                                                  "templateString": "{\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                                  "templateInputs": [
                                                    {
                                                      "type": "template",
                                                      "value": {
                                                        "imports": [],
                                                        "isOptional": true,
                                                        "templateString": "\"image_url\": {\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                                        "templateInputs": [
                                                          {
                                                            "type": "template",
                                                            "value": {
                                                              "imports": [],
                                                              "isOptional": true,
                                                              "templateString": "\"url\": $FERN_INPUT",
                                                              "templateInputs": [
                                                                {
                                                                  "location": "RELATIVE",
                                                                  "path": "image_url.url",
                                                                  "type": "payload"
                                                                }
                                                              ],
                                                              "type": "generic"
                                                            }
                                                          },
                                                          {
                                                            "type": "template",
                                                            "value": {
                                                              "imports": [],
                                                              "isOptional": true,
                                                              "templateString": "\"detail\": $FERN_INPUT",
                                                              "values": {
                                                                "high": "\"high\"",
                                                                "low": "\"low\"",
                                                                "auto": "\"auto\""
                                                              },
                                                              "templateInput": {
                                                                "location": "RELATIVE",
                                                                "path": "image_url.detail"
                                                              },
                                                              "type": "enum"
                                                            }
                                                          }
                                                        ],
                                                        "inputDelimiter": ",\n\t\t\t\t\t\t",
                                                        "type": "generic"
                                                      }
                                                    }
                                                  ],
                                                  "inputDelimiter": ",\n\t\t\t\t\t",
                                                  "type": "generic"
                                                }
                                              }
                                            ],
                                            "templateInput": {
                                              "location": "RELATIVE",
                                              "path": null
                                            },
                                            "type": "union_v2"
                                          },
                                          "templateInput": {
                                            "location": "RELATIVE",
                                            "path": null
                                          },
                                          "type": "iterable"
                                        }
                                      }
                                    ],
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": "content"
                                    },
                                    "type": "union_v2"
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"name\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "name",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"tool_call_id\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "tool_call_id",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"role\": $FERN_INPUT",
                                    "values": {
                                      "user": "\"user\"",
                                      "assistant": "\"assistant\"",
                                      "system": "\"system\"",
                                      "tool": "\"tool\""
                                    },
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": "role"
                                    },
                                    "type": "enum"
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "containerTemplateString": "\"tool_calls\": [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                    "delimiter": ",\n\t\t\t\t",
                                    "innerTemplate": {
                                      "imports": [],
                                      "isOptional": true,
                                      "templateString": "{\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                      "templateInputs": [
                                        {
                                          "type": "template",
                                          "value": {
                                            "imports": [],
                                            "isOptional": true,
                                            "templateString": "\"id\": $FERN_INPUT",
                                            "templateInputs": [
                                              {
                                                "location": "RELATIVE",
                                                "path": "id",
                                                "type": "payload"
                                              }
                                            ],
                                            "type": "generic"
                                          }
                                        },
                                        {
                                          "type": "template",
                                          "value": {
                                            "imports": [],
                                            "isOptional": true,
                                            "templateString": "\"function\": {\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                            "templateInputs": [
                                              {
                                                "type": "template",
                                                "value": {
                                                  "imports": [],
                                                  "isOptional": true,
                                                  "templateString": "\"name\": $FERN_INPUT",
                                                  "templateInputs": [
                                                    {
                                                      "location": "RELATIVE",
                                                      "path": "function.name",
                                                      "type": "payload"
                                                    }
                                                  ],
                                                  "type": "generic"
                                                }
                                              },
                                              {
                                                "type": "template",
                                                "value": {
                                                  "imports": [],
                                                  "isOptional": true,
                                                  "templateString": "\"arguments\": $FERN_INPUT",
                                                  "templateInputs": [
                                                    {
                                                      "location": "RELATIVE",
                                                      "path": "function.arguments",
                                                      "type": "payload"
                                                    }
                                                  ],
                                                  "type": "generic"
                                                }
                                              }
                                            ],
                                            "inputDelimiter": ",\n\t\t\t\t\t\t",
                                            "type": "generic"
                                          }
                                        }
                                      ],
                                      "inputDelimiter": ",\n\t\t\t\t\t",
                                      "type": "generic"
                                    },
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": "tool_calls"
                                    },
                                    "type": "iterable"
                                  }
                                }
                              ],
                              "inputDelimiter": ",\n\t\t\t",
                              "type": "generic"
                            },
                            "templateInput": {
                              "location": "RELATIVE",
                              "path": null
                            },
                            "type": "iterable"
                          }
                        }
                      ],
                      "templateInput": {
                        "location": "BODY",
                        "path": "template"
                      },
                      "type": "union_v2"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "provider=$FERN_INPUT",
                      "values": {
                        "openai": "\"openai\"",
                        "openai_azure": "\"openai_azure\"",
                        "mock": "\"mock\"",
                        "anthropic": "\"anthropic\"",
                        "bedrock": "\"bedrock\"",
                        "cohere": "\"cohere\"",
                        "replicate": "\"replicate\"",
                        "google": "\"google\"",
                        "groq": "\"groq\""
                      },
                      "templateInput": {
                        "location": "BODY",
                        "path": "provider"
                      },
                      "type": "enum"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "max_tokens=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "max_tokens",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "temperature=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "temperature",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "top_p=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "top_p",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "stop=$FERN_INPUT",
                      "members": [
                        {
                          "type": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          },
                          "template": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "$FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "RELATIVE",
                                "path": null,
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": {
                            "itemType": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            },
                            "type": "list"
                          },
                          "template": {
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "[\n\t\t$FERN_INPUT\n\t]",
                            "delimiter": ",\n\t\t",
                            "innerTemplate": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "$FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": null,
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            },
                            "templateInput": {
                              "location": "RELATIVE",
                              "path": null
                            },
                            "type": "iterable"
                          }
                        }
                      ],
                      "templateInput": {
                        "location": "BODY",
                        "path": "stop"
                      },
                      "type": "union_v2"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "presence_penalty=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "presence_penalty",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "frequency_penalty=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "frequency_penalty",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "other={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "other"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "seed=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "seed",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "response_format={\n\t\t$FERN_INPUT\n\t}",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"type\": $FERN_INPUT",
                            "values": {
                              "json_object": "\"json_object\"",
                              "json_schema": "\"json_schema\""
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "response_format.type"
                            },
                            "type": "enum"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "\"json_schema\": {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyTemplate": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "$FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": null,
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            },
                            "valueTemplate": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "$FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": null,
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            },
                            "keyValueSeparator": ": ",
                            "templateInput": {
                              "location": "BODY",
                              "path": "response_format.json_schema"
                            },
                            "type": "dict"
                          }
                        }
                      ],
                      "inputDelimiter": ",\n\t\t",
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "tools=[\n\t\t$FERN_INPUT\n\t]",
                      "delimiter": ",\n\t\t",
                      "innerTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "{\n\t\t\t$FERN_INPUT\n\t\t}",
                        "templateInputs": [
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"name\": $FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": "name",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"description\": $FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": "description",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"strict\": $FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": "strict",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "containerTemplateString": "\"parameters\": {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                              "delimiter": ",\n\t\t\t\t",
                              "keyTemplate": {
                                "imports": [],
                                "isOptional": true,
                                "templateString": "$FERN_INPUT",
                                "templateInputs": [
                                  {
                                    "location": "RELATIVE",
                                    "path": null,
                                    "type": "payload"
                                  }
                                ],
                                "type": "generic"
                              },
                              "valueTemplate": {
                                "imports": [],
                                "isOptional": true,
                                "templateString": "$FERN_INPUT",
                                "templateInputs": [
                                  {
                                    "location": "RELATIVE",
                                    "path": null,
                                    "type": "payload"
                                  }
                                ],
                                "type": "generic"
                              },
                              "keyValueSeparator": ": ",
                              "templateInput": {
                                "location": "RELATIVE",
                                "path": "parameters"
                              },
                              "type": "dict"
                            }
                          }
                        ],
                        "inputDelimiter": ",\n\t\t\t",
                        "type": "generic"
                      },
                      "templateInput": {
                        "location": "BODY",
                        "path": "tools"
                      },
                      "type": "iterable"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "linked_tools=[\n\t\t$FERN_INPUT\n\t]",
                      "delimiter": ",\n\t\t",
                      "innerTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "templateInput": {
                        "location": "BODY",
                        "path": "linked_tools"
                      },
                      "type": "iterable"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "attributes={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "attributes"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "commit_message=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "commit_message",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.prompts.upsert(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "path: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "path"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "id: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "model: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "model"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "enum",
                            "imports": [],
                            "isOptional": true,
                            "values": {
                              "complete": "\"complete\"",
                              "chat": "\"chat\"",
                              "edit": "\"edit\""
                            },
                            "templateString": "endpoint: $FERN_INPUT",
                            "templateInput": {
                              "location": "BODY",
                              "path": "endpoint"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "union_v2",
                            "imports": [],
                            "isOptional": true,
                            "templateString": "template: $FERN_INPUT",
                            "members": [
                              {
                                "template": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "primitive",
                                  "value": {
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "template": {
                                  "type": "iterable",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "[\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                  "delimiter": ",\n\t\t\t\t",
                                  "innerTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "{\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                    "isOptional": true,
                                    "inputDelimiter": ",\n\t\t\t\t\t",
                                    "templateInputs": [
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "union_v2",
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "content: $FERN_INPUT",
                                          "members": [
                                            {
                                              "template": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "$FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": null
                                                  }
                                                ]
                                              },
                                              "type": {
                                                "type": "primitive",
                                                "value": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            {
                                              "template": {
                                                "type": "iterable",
                                                "imports": [],
                                                "isOptional": true,
                                                "containerTemplateString": "[\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t]",
                                                "delimiter": ",\n\t\t\t\t\t\t\t",
                                                "innerTemplate": {
                                                  "type": "union_v2",
                                                  "imports": [],
                                                  "isOptional": true,
                                                  "templateString": "$FERN_INPUT",
                                                  "members": [
                                                    {
                                                      "template": {
                                                        "type": "generic",
                                                        "imports": [],
                                                        "templateString": "$FERN_INPUT",
                                                        "isOptional": true,
                                                        "inputDelimiter": ",\n\t\t\t\t\t\t\t\t",
                                                        "templateInputs": [
                                                          {
                                                            "type": "template",
                                                            "value": {
                                                              "type": "generic",
                                                              "imports": [],
                                                              "templateString": "text: $FERN_INPUT",
                                                              "isOptional": true,
                                                              "templateInputs": [
                                                                {
                                                                  "type": "payload",
                                                                  "location": "RELATIVE",
                                                                  "path": "text"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "type": {
                                                        "type": "id",
                                                        "value": "type_:TextChatContent"
                                                      }
                                                    },
                                                    {
                                                      "template": {
                                                        "type": "generic",
                                                        "imports": [],
                                                        "templateString": "$FERN_INPUT",
                                                        "isOptional": true,
                                                        "inputDelimiter": ",\n\t\t\t\t\t\t\t\t",
                                                        "templateInputs": [
                                                          {
                                                            "type": "template",
                                                            "value": {
                                                              "type": "generic",
                                                              "imports": [],
                                                              "templateString": "imageUrl: {\n\t\t\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t\t\t}",
                                                              "isOptional": true,
                                                              "inputDelimiter": ",\n\t\t\t\t\t\t\t\t\t\t",
                                                              "templateInputs": [
                                                                {
                                                                  "type": "template",
                                                                  "value": {
                                                                    "type": "generic",
                                                                    "imports": [],
                                                                    "templateString": "url: $FERN_INPUT",
                                                                    "isOptional": true,
                                                                    "templateInputs": [
                                                                      {
                                                                        "type": "payload",
                                                                        "location": "RELATIVE",
                                                                        "path": "image_url.url"
                                                                      }
                                                                    ]
                                                                  }
                                                                },
                                                                {
                                                                  "type": "template",
                                                                  "value": {
                                                                    "type": "enum",
                                                                    "imports": [],
                                                                    "isOptional": true,
                                                                    "values": {
                                                                      "high": "\"high\"",
                                                                      "low": "\"low\"",
                                                                      "auto": "\"auto\""
                                                                    },
                                                                    "templateString": "detail: $FERN_INPUT",
                                                                    "templateInput": {
                                                                      "location": "RELATIVE",
                                                                      "path": "image_url.detail"
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "type": {
                                                        "type": "id",
                                                        "value": "type_:ImageChatContent"
                                                      }
                                                    }
                                                  ],
                                                  "templateInput": {
                                                    "location": "RELATIVE",
                                                    "path": null
                                                  }
                                                },
                                                "templateInput": {
                                                  "location": "RELATIVE",
                                                  "path": null
                                                }
                                              },
                                              "type": {
                                                "type": "list",
                                                "itemType": {
                                                  "type": "id",
                                                  "value": "type_:ChatMessageContentItem"
                                                }
                                              }
                                            }
                                          ],
                                          "templateInput": {
                                            "location": "RELATIVE",
                                            "path": "content"
                                          }
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "name: $FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": "name"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "toolCallId: $FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": "tool_call_id"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "enum",
                                          "imports": [],
                                          "isOptional": true,
                                          "values": {
                                            "user": "\"user\"",
                                            "assistant": "\"assistant\"",
                                            "system": "\"system\"",
                                            "tool": "\"tool\""
                                          },
                                          "templateString": "role: $FERN_INPUT",
                                          "templateInput": {
                                            "location": "RELATIVE",
                                            "path": "role"
                                          }
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "iterable",
                                          "imports": [],
                                          "isOptional": true,
                                          "containerTemplateString": "toolCalls: [\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t]",
                                          "delimiter": ",\n\t\t\t\t\t\t",
                                          "innerTemplate": {
                                            "type": "generic",
                                            "imports": [],
                                            "templateString": "{\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t}",
                                            "isOptional": true,
                                            "inputDelimiter": ",\n\t\t\t\t\t\t\t",
                                            "templateInputs": [
                                              {
                                                "type": "template",
                                                "value": {
                                                  "type": "generic",
                                                  "imports": [],
                                                  "templateString": "id: $FERN_INPUT",
                                                  "isOptional": true,
                                                  "templateInputs": [
                                                    {
                                                      "type": "payload",
                                                      "location": "RELATIVE",
                                                      "path": "id"
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "template",
                                                "value": {
                                                  "type": "generic",
                                                  "imports": [],
                                                  "templateString": "function: {\n\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t}",
                                                  "isOptional": true,
                                                  "inputDelimiter": ",\n\t\t\t\t\t\t\t\t",
                                                  "templateInputs": [
                                                    {
                                                      "type": "template",
                                                      "value": {
                                                        "type": "generic",
                                                        "imports": [],
                                                        "templateString": "name: $FERN_INPUT",
                                                        "isOptional": true,
                                                        "templateInputs": [
                                                          {
                                                            "type": "payload",
                                                            "location": "RELATIVE",
                                                            "path": "function.name"
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    {
                                                      "type": "template",
                                                      "value": {
                                                        "type": "generic",
                                                        "imports": [],
                                                        "templateString": "arguments: $FERN_INPUT",
                                                        "isOptional": true,
                                                        "templateInputs": [
                                                          {
                                                            "type": "payload",
                                                            "location": "RELATIVE",
                                                            "path": "function.arguments"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "templateInput": {
                                            "location": "RELATIVE",
                                            "path": "tool_calls"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": null
                                  }
                                },
                                "type": {
                                  "type": "list",
                                  "itemType": {
                                    "type": "id",
                                    "value": "type_:ChatMessage"
                                  }
                                }
                              }
                            ],
                            "templateInput": {
                              "location": "BODY",
                              "path": "template"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "enum",
                            "imports": [],
                            "isOptional": true,
                            "values": {
                              "openai": "\"openai\"",
                              "openai_azure": "\"openai_azure\"",
                              "mock": "\"mock\"",
                              "anthropic": "\"anthropic\"",
                              "bedrock": "\"bedrock\"",
                              "cohere": "\"cohere\"",
                              "replicate": "\"replicate\"",
                              "google": "\"google\"",
                              "groq": "\"groq\""
                            },
                            "templateString": "provider: $FERN_INPUT",
                            "templateInput": {
                              "location": "BODY",
                              "path": "provider"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "maxTokens: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "max_tokens"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "temperature: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "temperature"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "topP: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "top_p"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "union_v2",
                            "imports": [],
                            "isOptional": true,
                            "templateString": "stop: $FERN_INPUT",
                            "members": [
                              {
                                "template": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "primitive",
                                  "value": {
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "template": {
                                  "type": "iterable",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "[\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                  "delimiter": ",\n\t\t\t\t",
                                  "innerTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "$FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    ]
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": null
                                  }
                                },
                                "type": {
                                  "type": "list",
                                  "itemType": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            ],
                            "templateInput": {
                              "location": "BODY",
                              "path": "stop"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "presencePenalty: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "presence_penalty"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "frequencyPenalty: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "frequency_penalty"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "other: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "other"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "seed: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "seed"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "responseFormat: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "enum",
                                  "imports": [],
                                  "isOptional": true,
                                  "values": {
                                    "json_object": "\"json_object\"",
                                    "json_schema": "\"json_schema\""
                                  },
                                  "templateString": "type: $FERN_INPUT",
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "response_format.type"
                                  }
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "dict",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "jsonSchema: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                  "delimiter": ",\n\t\t\t\t",
                                  "keyValueSeparator": ": ",
                                  "keyTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "$FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    ]
                                  },
                                  "valueTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "$FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    ]
                                  },
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "response_format.json_schema"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "iterable",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "tools: [\n\t\t\t$FERN_INPUT\n\t\t]",
                            "delimiter": ",\n\t\t\t",
                            "innerTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "{\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                              "isOptional": true,
                              "inputDelimiter": ",\n\t\t\t\t",
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "name: $FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": "name"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "description: $FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": "description"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "strict: $FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": "strict"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "dict",
                                    "imports": [],
                                    "isOptional": true,
                                    "containerTemplateString": "parameters: {\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                    "delimiter": ",\n\t\t\t\t\t",
                                    "keyValueSeparator": ": ",
                                    "keyTemplate": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "$FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "RELATIVE",
                                          "path": null
                                        }
                                      ]
                                    },
                                    "valueTemplate": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "$FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "RELATIVE",
                                          "path": null
                                        }
                                      ]
                                    },
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": "parameters"
                                    }
                                  }
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "tools"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "iterable",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "linkedTools: [\n\t\t\t$FERN_INPUT\n\t\t]",
                            "delimiter": ",\n\t\t\t",
                            "innerTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "linked_tools"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "attributes: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "attributes"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "commitMessage: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "commit_message"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "get",
          "migratedFromUrlSlugs": ["get-prompt"],
          "method": "GET",
          "id": "get",
          "originalEndpointId": "endpoint_prompts.get",
          "name": "Get Prompt",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Prompt.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/prompts/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "A specific Version ID of the Prompt to retrieve.",
              "key": "version_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Name of the Environment to retrieve a deployed Version from.",
              "key": "environment",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:PromptResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "Get specific prompt",
              "path": "/prompts/pr_30gco7dx6JDq4200GVOHa",
              "pathParameters": {
                "id": "pr_30gco7dx6JDq4200GVOHa"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "path": "Personal Projects/Coding Assistant",
                "id": "pr_30gco7dx6JDq4200GVOHa",
                "name": "Coding Assistant",
                "version_id": "prv_7ZlQREDScH0xkhUwtXruN",
                "type": "prompt",
                "environments": [
                  {
                    "id": "env_ffSVxEBzJcBZ1H5jcNMVj",
                    "created_at": "2023-06-27T23:16:07.992339",
                    "name": "development",
                    "tag": "default"
                  }
                ],
                "created_at": "2024-07-08T22:40:35.656915",
                "updated_at": "2024-07-08T22:40:35.656915",
                "created_by": {
                  "id": "usr_01RJO1k2spBVqNUt1ASef",
                  "email_address": "raza@humanloop.com",
                  "full_name": "Raza Habib"
                },
                "status": "committed",
                "last_used_at": "2024-07-08T22:40:35.656915",
                "model": "gpt-4o",
                "endpoint": "chat",
                "template": [
                  {
                    "content": "You are a helpful coding assistant specialising in {{language}}",
                    "role": "system"
                  }
                ],
                "provider": "openai",
                "max_tokens": -1,
                "temperature": 0.7,
                "top_p": 1,
                "presence_penalty": 0,
                "frequency_penalty": 0,
                "other": {},
                "tools": [],
                "linked_tools": [],
                "commit_message": "Initial commit",
                "version_logs_count": 0,
                "total_logs_count": 0,
                "inputs": [
                  {
                    "name": "messages"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "path": "Personal Projects/Coding Assistant",
                  "id": "pr_30gco7dx6JDq4200GVOHa",
                  "name": "Coding Assistant",
                  "version_id": "prv_7ZlQREDScH0xkhUwtXruN",
                  "type": "prompt",
                  "environments": [
                    {
                      "id": "env_ffSVxEBzJcBZ1H5jcNMVj",
                      "created_at": "2023-06-27T23:16:07.992339",
                      "name": "development",
                      "tag": "default"
                    }
                  ],
                  "created_at": "2024-07-08T22:40:35.656915",
                  "updated_at": "2024-07-08T22:40:35.656915",
                  "created_by": {
                    "id": "usr_01RJO1k2spBVqNUt1ASef",
                    "email_address": "raza@humanloop.com",
                    "full_name": "Raza Habib"
                  },
                  "status": "committed",
                  "last_used_at": "2024-07-08T22:40:35.656915",
                  "model": "gpt-4o",
                  "endpoint": "chat",
                  "template": [
                    {
                      "content": "You are a helpful coding assistant specialising in {{language}}",
                      "role": "system"
                    }
                  ],
                  "provider": "openai",
                  "max_tokens": -1,
                  "temperature": 0.7,
                  "top_p": 1,
                  "presence_penalty": 0,
                  "frequency_penalty": 0,
                  "other": {},
                  "tools": [],
                  "linked_tools": [],
                  "commit_message": "Initial commit",
                  "version_logs_count": 0,
                  "total_logs_count": 0,
                  "inputs": [
                    {
                      "name": "messages"
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/prompts/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {
                "version_id": "string",
                "environment": "string"
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Retrieve the Prompt with the given ID.\n\nBy default, the deployed version of the Prompt is returned. Use the query parameters\n`version_id` or `environment` to target a specific version of the Prompt.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.prompts.get(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "version_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "version_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "environment=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "environment",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.prompts.get(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "versionId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "version_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "environment: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "environment"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "delete",
          "migratedFromUrlSlugs": ["delete-prompt"],
          "method": "DELETE",
          "id": "delete",
          "originalEndpointId": "endpoint_prompts.delete",
          "name": "Delete Prompt",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Prompt.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/prompts/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "Delete prompt",
              "path": "/prompts/pr_30gco7dx6JDq4200GVOHa",
              "pathParameters": {
                "id": "pr_30gco7dx6JDq4200GVOHa"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            },
            {
              "path": "/prompts/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Delete the Prompt with the given ID.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.prompts.delete(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.prompts.delete(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "move",
          "migratedFromUrlSlugs": ["move-prompt"],
          "method": "PATCH",
          "id": "move",
          "originalEndpointId": "endpoint_prompts.move",
          "name": "Move Prompt",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Prompt.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/prompts/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Path of the Prompt including the Prompt name, which is used as a unique identifier.",
                  "key": "path",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Name of the Prompt.",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:PromptResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "Move prompt",
              "path": "/prompts/pr_30gco7dx6JDq4200GVOHa",
              "pathParameters": {
                "id": "pr_30gco7dx6JDq4200GVOHa"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "path": "new directory/new name"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "path": "Personal Projects/Coding Assistant",
                "id": "pr_30gco7dx6JDq4200GVOHa",
                "name": "Coding Assistant",
                "version_id": "prv_7ZlQREDScH0xkhUwtXruN",
                "type": "prompt",
                "environments": [
                  {
                    "id": "env_ffSVxEBzJcBZ1H5jcNMVj",
                    "created_at": "2023-06-27T23:16:07.992339",
                    "name": "development",
                    "tag": "default"
                  }
                ],
                "created_at": "2024-07-08T22:40:35.656915",
                "updated_at": "2024-07-08T22:40:35.656915",
                "created_by": {
                  "id": "usr_01RJO1k2spBVqNUt1ASef",
                  "email_address": "raza@humanloop.com",
                  "full_name": "Raza Habib"
                },
                "status": "committed",
                "last_used_at": "2024-07-08T22:40:35.656915",
                "model": "gpt-4o",
                "endpoint": "chat",
                "template": [
                  {
                    "content": "You are a helpful coding assistant specialising in {{language}}",
                    "role": "system"
                  }
                ],
                "provider": "openai",
                "max_tokens": -1,
                "temperature": 0.7,
                "top_p": 1,
                "presence_penalty": 0,
                "frequency_penalty": 0,
                "other": {},
                "tools": [],
                "linked_tools": [],
                "commit_message": "Initial commit",
                "version_logs_count": 0,
                "total_logs_count": 0,
                "inputs": [
                  {
                    "name": "messages"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "path": "new directory/new name"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "path": "Personal Projects/Coding Assistant",
                  "id": "pr_30gco7dx6JDq4200GVOHa",
                  "name": "Coding Assistant",
                  "version_id": "prv_7ZlQREDScH0xkhUwtXruN",
                  "type": "prompt",
                  "environments": [
                    {
                      "id": "env_ffSVxEBzJcBZ1H5jcNMVj",
                      "created_at": "2023-06-27T23:16:07.992339",
                      "name": "development",
                      "tag": "default"
                    }
                  ],
                  "created_at": "2024-07-08T22:40:35.656915",
                  "updated_at": "2024-07-08T22:40:35.656915",
                  "created_by": {
                    "id": "usr_01RJO1k2spBVqNUt1ASef",
                    "email_address": "raza@humanloop.com",
                    "full_name": "Raza Habib"
                  },
                  "status": "committed",
                  "last_used_at": "2024-07-08T22:40:35.656915",
                  "model": "gpt-4o",
                  "endpoint": "chat",
                  "template": [
                    {
                      "content": "You are a helpful coding assistant specialising in {{language}}",
                      "role": "system"
                    }
                  ],
                  "provider": "openai",
                  "max_tokens": -1,
                  "temperature": 0.7,
                  "top_p": 1,
                  "presence_penalty": 0,
                  "frequency_penalty": 0,
                  "other": {},
                  "tools": [],
                  "linked_tools": [],
                  "commit_message": "Initial commit",
                  "version_logs_count": 0,
                  "total_logs_count": 0,
                  "inputs": [
                    {
                      "name": "messages"
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/prompts/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Move the Prompt to a different path or change the name.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.prompts.move(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "path=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "path",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "name=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "name",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.prompts.move(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "path: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "path"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "name: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "name"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "list-versions",
          "migratedFromUrlSlugs": ["list-versions-of-a-prompt"],
          "method": "GET",
          "id": "listVersions",
          "originalEndpointId": "endpoint_prompts.listVersions",
          "name": "List Versions of a Prompt",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Prompt.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/prompts/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/versions"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Filter versions by status: 'uncommitted', 'committed'. If no status is provided, all versions are returned.",
              "key": "status",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_:VersionStatus"
                }
              }
            },
            {
              "description": "Whether to include Evaluator aggregate results for the versions in the response",
              "key": "evaluator_aggregates",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:ListPrompts"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "List versions",
              "path": "/prompts/pr_30gco7dx6JDq4200GVOHa/versions",
              "pathParameters": {
                "id": "pr_30gco7dx6JDq4200GVOHa"
              },
              "queryParameters": {
                "status": "committed"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "records": [
                  {
                    "path": "Personal Projects/Coding Assistant",
                    "id": "pr_30gco7dx6JDq4200GVOHa",
                    "name": "Coding Assistant",
                    "version_id": "prv_7ZlQREDScH0xkhUwtXruN",
                    "type": "prompt",
                    "environments": [
                      {
                        "id": "env_ffSVxEBzJcBZ1H5jcNMVj",
                        "created_at": "2023-06-27T23:16:07.992339",
                        "name": "development",
                        "tag": "default"
                      }
                    ],
                    "created_at": "2024-07-08T22:40:35.656915",
                    "updated_at": "2024-07-08T22:40:35.656915",
                    "created_by": {
                      "id": "usr_01RJO1k2spBVqNUt1ASef",
                      "email_address": "raza@humanloop.com",
                      "full_name": "Raza Habib"
                    },
                    "status": "committed",
                    "last_used_at": "2024-07-08T22:40:35.656915",
                    "model": "gpt-4o",
                    "endpoint": "chat",
                    "template": [
                      {
                        "content": "You are a helpful coding assistant specialising in {{language}}",
                        "role": "system"
                      }
                    ],
                    "provider": "openai",
                    "max_tokens": -1,
                    "temperature": 0.7,
                    "top_p": 1,
                    "presence_penalty": 0,
                    "frequency_penalty": 0,
                    "other": {},
                    "tools": [],
                    "linked_tools": [],
                    "commit_message": "Initial commit",
                    "version_logs_count": 0,
                    "total_logs_count": 0,
                    "inputs": [
                      {
                        "name": "messages"
                      }
                    ]
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "records": [
                    {
                      "path": "Personal Projects/Coding Assistant",
                      "id": "pr_30gco7dx6JDq4200GVOHa",
                      "name": "Coding Assistant",
                      "version_id": "prv_7ZlQREDScH0xkhUwtXruN",
                      "type": "prompt",
                      "environments": [
                        {
                          "id": "env_ffSVxEBzJcBZ1H5jcNMVj",
                          "created_at": "2023-06-27T23:16:07.992339",
                          "name": "development",
                          "tag": "default"
                        }
                      ],
                      "created_at": "2024-07-08T22:40:35.656915",
                      "updated_at": "2024-07-08T22:40:35.656915",
                      "created_by": {
                        "id": "usr_01RJO1k2spBVqNUt1ASef",
                        "email_address": "raza@humanloop.com",
                        "full_name": "Raza Habib"
                      },
                      "status": "committed",
                      "last_used_at": "2024-07-08T22:40:35.656915",
                      "model": "gpt-4o",
                      "endpoint": "chat",
                      "template": [
                        {
                          "content": "You are a helpful coding assistant specialising in {{language}}",
                          "role": "system"
                        }
                      ],
                      "provider": "openai",
                      "max_tokens": -1,
                      "temperature": 0.7,
                      "top_p": 1,
                      "presence_penalty": 0,
                      "frequency_penalty": 0,
                      "other": {},
                      "tools": [],
                      "linked_tools": [],
                      "commit_message": "Initial commit",
                      "version_logs_count": 0,
                      "total_logs_count": 0,
                      "inputs": [
                        {
                          "name": "messages"
                        }
                      ]
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/prompts/:id/versions",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {
                "status": "uncommitted",
                "evaluator_aggregates": true
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Get a list of all the versions of a Prompt.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.prompts.list_versions(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "status=$FERN_INPUT",
                      "values": {
                        "uncommitted": "\"uncommitted\"",
                        "committed": "\"committed\"",
                        "deleted": "\"deleted\""
                      },
                      "templateInput": {
                        "location": "QUERY",
                        "path": "status"
                      },
                      "type": "enum"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "evaluator_aggregates=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "evaluator_aggregates",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.prompts.listVersions(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "enum",
                            "imports": [],
                            "isOptional": true,
                            "values": {
                              "uncommitted": "\"uncommitted\"",
                              "committed": "\"committed\"",
                              "deleted": "\"deleted\""
                            },
                            "templateString": "status: $FERN_INPUT",
                            "templateInput": {
                              "location": "QUERY",
                              "path": "status"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "evaluatorAggregates: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "evaluator_aggregates"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "commit",
          "migratedFromUrlSlugs": ["commit-a-prompt-version"],
          "method": "POST",
          "id": "commit",
          "originalEndpointId": "endpoint_prompts.commit",
          "name": "Commit a Prompt Version",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Prompt.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "Unique identifier for the specific version of the Prompt.",
                "key": "version_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/prompts/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/versions/"
              },
              {
                "type": "pathParameter",
                "value": "version_id"
              },
              {
                "type": "literal",
                "value": "/commit"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:CommitRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:PromptResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "Commit version",
              "path": "/prompts/pr_30gco7dx6JDq4200GVOHa/versions/prv_F34aba5f3asp0/commit",
              "pathParameters": {
                "id": "pr_30gco7dx6JDq4200GVOHa",
                "version_id": "prv_F34aba5f3asp0"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "commit_message": "Reiterated point about not discussing sentience"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "path": "Personal Projects/Coding Assistant",
                "id": "pr_30gco7dx6JDq4200GVOHa",
                "name": "Coding Assistant",
                "version_id": "prv_7ZlQREDScH0xkhUwtXruN",
                "type": "prompt",
                "environments": [
                  {
                    "id": "env_ffSVxEBzJcBZ1H5jcNMVj",
                    "created_at": "2023-06-27T23:16:07.992339",
                    "name": "development",
                    "tag": "default"
                  }
                ],
                "created_at": "2024-07-08T22:40:35.656915",
                "updated_at": "2024-07-08T22:40:35.656915",
                "created_by": {
                  "id": "usr_01RJO1k2spBVqNUt1ASef",
                  "email_address": "raza@humanloop.com",
                  "full_name": "Raza Habib"
                },
                "status": "committed",
                "last_used_at": "2024-07-08T22:40:35.656915",
                "model": "gpt-4o",
                "endpoint": "chat",
                "template": [
                  {
                    "content": "You are a helpful coding assistant specialising in {{language}}",
                    "role": "system"
                  }
                ],
                "provider": "openai",
                "max_tokens": -1,
                "temperature": 0.7,
                "top_p": 1,
                "presence_penalty": 0,
                "frequency_penalty": 0,
                "other": {},
                "tools": [],
                "linked_tools": [],
                "commit_message": "Initial commit",
                "version_logs_count": 0,
                "total_logs_count": 0,
                "inputs": [
                  {
                    "name": "messages"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "commit_message": "Reiterated point about not discussing sentience"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "path": "Personal Projects/Coding Assistant",
                  "id": "pr_30gco7dx6JDq4200GVOHa",
                  "name": "Coding Assistant",
                  "version_id": "prv_7ZlQREDScH0xkhUwtXruN",
                  "type": "prompt",
                  "environments": [
                    {
                      "id": "env_ffSVxEBzJcBZ1H5jcNMVj",
                      "created_at": "2023-06-27T23:16:07.992339",
                      "name": "development",
                      "tag": "default"
                    }
                  ],
                  "created_at": "2024-07-08T22:40:35.656915",
                  "updated_at": "2024-07-08T22:40:35.656915",
                  "created_by": {
                    "id": "usr_01RJO1k2spBVqNUt1ASef",
                    "email_address": "raza@humanloop.com",
                    "full_name": "Raza Habib"
                  },
                  "status": "committed",
                  "last_used_at": "2024-07-08T22:40:35.656915",
                  "model": "gpt-4o",
                  "endpoint": "chat",
                  "template": [
                    {
                      "content": "You are a helpful coding assistant specialising in {{language}}",
                      "role": "system"
                    }
                  ],
                  "provider": "openai",
                  "max_tokens": -1,
                  "temperature": 0.7,
                  "top_p": 1,
                  "presence_penalty": 0,
                  "frequency_penalty": 0,
                  "other": {},
                  "tools": [],
                  "linked_tools": [],
                  "commit_message": "Initial commit",
                  "version_logs_count": 0,
                  "total_logs_count": 0,
                  "inputs": [
                    {
                      "name": "messages"
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/prompts/:id/versions/:version_id/commit",
              "pathParameters": {
                "id": ":id",
                "version_id": ":version_id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "commit_message": "string"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Commit a version of the Prompt with a commit message.\n\nIf the version is already committed, an exception will be raised.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.prompts.commit(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "version_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "version_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "commit_message=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "commit_message",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.prompts.commit(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "version_id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "commitMessage: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "commit_message"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "set-deployment",
          "migratedFromUrlSlugs": ["deploy-prompt"],
          "method": "POST",
          "id": "setDeployment",
          "originalEndpointId": "endpoint_prompts.setDeployment",
          "name": "Deploy Prompt",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Prompt.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "Unique identifier for the Environment to deploy the Version to.",
                "key": "environment_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/prompts/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/environments/"
              },
              {
                "type": "pathParameter",
                "value": "environment_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Unique identifier for the specific version of the Prompt.",
              "key": "version_id",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:PromptResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/prompts/id/environments/environment_id",
              "pathParameters": {
                "id": "id",
                "environment_id": "environment_id"
              },
              "queryParameters": {
                "version_id": "version_id"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "path": "path",
                "id": "id",
                "directory_id": "directory_id",
                "model": "model",
                "endpoint": "complete",
                "template": "template",
                "provider": "openai",
                "max_tokens": 1,
                "temperature": 1.1,
                "top_p": 1.1,
                "stop": "stop",
                "presence_penalty": 1.1,
                "frequency_penalty": 1.1,
                "other": {
                  "key": "value"
                },
                "seed": 1,
                "response_format": {
                  "type": "json_object",
                  "json_schema": {
                    "key": "value"
                  }
                },
                "tools": [
                  {
                    "name": "name",
                    "description": "description",
                    "strict": true,
                    "parameters": {
                      "key": "value"
                    }
                  }
                ],
                "linked_tools": [
                  {
                    "name": "name",
                    "description": "description",
                    "strict": true,
                    "parameters": {
                      "key": "value"
                    },
                    "id": "id",
                    "version_id": "version_id"
                  }
                ],
                "attributes": {
                  "key": "value"
                },
                "commit_message": "commit_message",
                "name": "name",
                "version_id": "version_id",
                "type": "prompt",
                "environments": [
                  {
                    "id": "id",
                    "created_at": "2024-01-15T09:30:00Z",
                    "name": "name",
                    "tag": "default"
                  }
                ],
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z",
                "created_by": {
                  "id": "id",
                  "email_address": "email_address",
                  "full_name": "full_name"
                },
                "status": "uncommitted",
                "last_used_at": "2024-01-15T09:30:00Z",
                "version_logs_count": 1,
                "total_logs_count": 1,
                "inputs": [
                  {
                    "name": "name"
                  }
                ],
                "evaluator_aggregates": [
                  {
                    "value": 1.1,
                    "evaluator_id": "evaluator_id",
                    "evaluator_version_id": "evaluator_version_id",
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "path": "path",
                  "id": "id",
                  "directory_id": "directory_id",
                  "model": "model",
                  "endpoint": "complete",
                  "template": "template",
                  "provider": "openai",
                  "max_tokens": 1,
                  "temperature": 1.1,
                  "top_p": 1.1,
                  "stop": "stop",
                  "presence_penalty": 1.1,
                  "frequency_penalty": 1.1,
                  "other": {
                    "key": "value"
                  },
                  "seed": 1,
                  "response_format": {
                    "type": "json_object",
                    "json_schema": {
                      "key": "value"
                    }
                  },
                  "tools": [
                    {
                      "name": "name",
                      "description": "description",
                      "strict": true,
                      "parameters": {
                        "key": "value"
                      }
                    }
                  ],
                  "linked_tools": [
                    {
                      "name": "name",
                      "description": "description",
                      "strict": true,
                      "parameters": {
                        "key": "value"
                      },
                      "id": "id",
                      "version_id": "version_id"
                    }
                  ],
                  "attributes": {
                    "key": "value"
                  },
                  "commit_message": "commit_message",
                  "name": "name",
                  "version_id": "version_id",
                  "type": "prompt",
                  "environments": [
                    {
                      "id": "id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "name": "name",
                      "tag": "default"
                    }
                  ],
                  "created_at": "2024-01-15T09:30:00Z",
                  "updated_at": "2024-01-15T09:30:00Z",
                  "created_by": {
                    "id": "id",
                    "email_address": "email_address",
                    "full_name": "full_name"
                  },
                  "status": "uncommitted",
                  "last_used_at": "2024-01-15T09:30:00Z",
                  "version_logs_count": 1,
                  "total_logs_count": 1,
                  "inputs": [
                    {
                      "name": "name"
                    }
                  ],
                  "evaluator_aggregates": [
                    {
                      "value": 1.1,
                      "evaluator_id": "evaluator_id",
                      "evaluator_version_id": "evaluator_version_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z"
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/prompts/:id/environments/:environment_id",
              "pathParameters": {
                "id": ":id",
                "environment_id": ":environment_id"
              },
              "queryParameters": {
                "version_id": "string"
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Deploy Prompt to an Environment.\n\nSet the deployed version for the specified Environment. This Prompt\nwill be used for calls made to the Prompt in this Environment.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.prompts.set_deployment(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "environment_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "environment_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "version_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "version_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.prompts.setDeployment(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "environment_id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "versionId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "version_id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "remove-deployment",
          "method": "DELETE",
          "id": "removeDeployment",
          "originalEndpointId": "endpoint_prompts.removeDeployment",
          "name": "Remove Deployment",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Prompt.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "Unique identifier for the Environment to remove the deployment from.",
                "key": "environment_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/prompts/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/environments/"
              },
              {
                "type": "pathParameter",
                "value": "environment_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/prompts/id/environments/environment_id",
              "pathParameters": {
                "id": "id",
                "environment_id": "environment_id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            },
            {
              "path": "/prompts/:id/environments/:environment_id",
              "pathParameters": {
                "id": ":id",
                "environment_id": ":environment_id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Remove deployed Prompt from the Environment.\n\nRemove the deployed version for the specified Environment. This Prompt\nwill no longer be used for calls made to the Prompt in this Environment.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.prompts.remove_deployment(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "environment_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "environment_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.prompts.removeDeployment(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "environment_id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "list-environments",
          "migratedFromUrlSlugs": ["list-a-prompts-environments"],
          "method": "GET",
          "id": "listEnvironments",
          "originalEndpointId": "endpoint_prompts.listEnvironments",
          "name": "List a Prompt's Environments",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Prompt.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/prompts/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/environments"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:FileEnvironmentResponse"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "List environments",
              "path": "/prompts/pr_30gco7dx6JDq4200GVOHa/environments",
              "pathParameters": {
                "id": "pr_30gco7dx6JDq4200GVOHa"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": [
                {
                  "id": "pr_30gco7dx6JDq4200GVOHa",
                  "created_at": "2024-05-01T12:00:00Z",
                  "name": "production",
                  "tag": "default",
                  "file": {
                    "path": "Personal Projects/Coding Assistant",
                    "id": "pr_30gco7dx6JDq4200GVOHa",
                    "name": "Coding Assistant",
                    "version_id": "prv_7ZlQREDScH0xkhUwtXruN",
                    "type": "prompt",
                    "environments": [
                      {
                        "id": "env_ffSVxEBzJcBZ1H5jcNMVj",
                        "created_at": "2023-06-27T23:16:07.992339",
                        "name": "development",
                        "tag": "default"
                      }
                    ],
                    "created_at": "2024-07-08T22:40:35.656915",
                    "updated_at": "2024-07-08T22:40:35.656915",
                    "created_by": {
                      "id": "usr_01RJO1k2spBVqNUt1ASef",
                      "email_address": "raza@humanloop.com",
                      "full_name": "Raza Habib"
                    },
                    "status": "committed",
                    "last_used_at": "2024-07-08T22:40:35.656915",
                    "model": "gpt-4o",
                    "endpoint": "chat",
                    "template": [
                      {
                        "content": "You are a helpful coding assistant specialising in {{language}}",
                        "role": "system"
                      }
                    ],
                    "provider": "openai",
                    "max_tokens": -1,
                    "temperature": 0.7,
                    "top_p": 1,
                    "presence_penalty": 0,
                    "frequency_penalty": 0,
                    "other": {},
                    "tools": [],
                    "linked_tools": [],
                    "commit_message": "Initial commit",
                    "version_logs_count": 0,
                    "total_logs_count": 0,
                    "inputs": [
                      {
                        "name": "messages"
                      }
                    ]
                  }
                }
              ],
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "id": "pr_30gco7dx6JDq4200GVOHa",
                    "created_at": "2024-05-01T12:00:00Z",
                    "name": "production",
                    "tag": "default",
                    "file": {
                      "path": "Personal Projects/Coding Assistant",
                      "id": "pr_30gco7dx6JDq4200GVOHa",
                      "name": "Coding Assistant",
                      "version_id": "prv_7ZlQREDScH0xkhUwtXruN",
                      "type": "prompt",
                      "environments": [
                        {
                          "id": "env_ffSVxEBzJcBZ1H5jcNMVj",
                          "created_at": "2023-06-27T23:16:07.992339",
                          "name": "development",
                          "tag": "default"
                        }
                      ],
                      "created_at": "2024-07-08T22:40:35.656915",
                      "updated_at": "2024-07-08T22:40:35.656915",
                      "created_by": {
                        "id": "usr_01RJO1k2spBVqNUt1ASef",
                        "email_address": "raza@humanloop.com",
                        "full_name": "Raza Habib"
                      },
                      "status": "committed",
                      "last_used_at": "2024-07-08T22:40:35.656915",
                      "model": "gpt-4o",
                      "endpoint": "chat",
                      "template": [
                        {
                          "content": "You are a helpful coding assistant specialising in {{language}}",
                          "role": "system"
                        }
                      ],
                      "provider": "openai",
                      "max_tokens": -1,
                      "temperature": 0.7,
                      "top_p": 1,
                      "presence_penalty": 0,
                      "frequency_penalty": 0,
                      "other": {},
                      "tools": [],
                      "linked_tools": [],
                      "commit_message": "Initial commit",
                      "version_logs_count": 0,
                      "total_logs_count": 0,
                      "inputs": [
                        {
                          "name": "messages"
                        }
                      ]
                    }
                  }
                ]
              },
              "codeSamples": []
            },
            {
              "path": "/prompts/:id/environments",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "List all Environments and their deployed versions for the Prompt.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.prompts.list_environments(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.prompts.listEnvironments(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "update-monitoring",
          "method": "POST",
          "id": "updateMonitoring",
          "originalEndpointId": "endpoint_prompts.updateMonitoring",
          "name": "Update Monitoring",
          "path": {
            "pathParameters": [
              {
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/prompts/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/evaluators"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:EvaluatorActivationDeactivationRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:PromptResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "Add evaluator",
              "path": "/prompts/pr_30gco7dx6JDq4200GVOHa/evaluators",
              "pathParameters": {
                "id": "pr_30gco7dx6JDq4200GVOHa"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "activate": [
                  {
                    "evaluator_version_id": "evv_1abc4308abd"
                  }
                ]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "path": "Personal Projects/Coding Assistant",
                "id": "pr_30gco7dx6JDq4200GVOHa",
                "name": "Coding Assistant",
                "version_id": "prv_7ZlQREDScH0xkhUwtXruN",
                "type": "prompt",
                "environments": [
                  {
                    "id": "env_ffSVxEBzJcBZ1H5jcNMVj",
                    "created_at": "2023-06-27T23:16:07.992339",
                    "name": "development",
                    "tag": "default"
                  }
                ],
                "created_at": "2024-07-08T22:40:35.656915",
                "updated_at": "2024-07-08T22:40:35.656915",
                "created_by": {
                  "id": "usr_01RJO1k2spBVqNUt1ASef",
                  "email_address": "raza@humanloop.com",
                  "full_name": "Raza Habib"
                },
                "status": "committed",
                "last_used_at": "2024-07-08T22:40:35.656915",
                "model": "gpt-4o",
                "endpoint": "chat",
                "template": [
                  {
                    "content": "You are a helpful coding assistant specialising in {{language}}",
                    "role": "system"
                  }
                ],
                "provider": "openai",
                "max_tokens": -1,
                "temperature": 0.7,
                "top_p": 1,
                "presence_penalty": 0,
                "frequency_penalty": 0,
                "other": {},
                "tools": [],
                "linked_tools": [],
                "commit_message": "Initial commit",
                "version_logs_count": 0,
                "total_logs_count": 0,
                "inputs": [
                  {
                    "name": "messages"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "activate": [
                    {
                      "evaluator_version_id": "evv_1abc4308abd"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "path": "Personal Projects/Coding Assistant",
                  "id": "pr_30gco7dx6JDq4200GVOHa",
                  "name": "Coding Assistant",
                  "version_id": "prv_7ZlQREDScH0xkhUwtXruN",
                  "type": "prompt",
                  "environments": [
                    {
                      "id": "env_ffSVxEBzJcBZ1H5jcNMVj",
                      "created_at": "2023-06-27T23:16:07.992339",
                      "name": "development",
                      "tag": "default"
                    }
                  ],
                  "created_at": "2024-07-08T22:40:35.656915",
                  "updated_at": "2024-07-08T22:40:35.656915",
                  "created_by": {
                    "id": "usr_01RJO1k2spBVqNUt1ASef",
                    "email_address": "raza@humanloop.com",
                    "full_name": "Raza Habib"
                  },
                  "status": "committed",
                  "last_used_at": "2024-07-08T22:40:35.656915",
                  "model": "gpt-4o",
                  "endpoint": "chat",
                  "template": [
                    {
                      "content": "You are a helpful coding assistant specialising in {{language}}",
                      "role": "system"
                    }
                  ],
                  "provider": "openai",
                  "max_tokens": -1,
                  "temperature": 0.7,
                  "top_p": 1,
                  "presence_penalty": 0,
                  "frequency_penalty": 0,
                  "other": {},
                  "tools": [],
                  "linked_tools": [],
                  "commit_message": "Initial commit",
                  "version_logs_count": 0,
                  "total_logs_count": 0,
                  "inputs": [
                    {
                      "name": "messages"
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/prompts/:id/evaluators",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Activate and deactivate Evaluators for monitoring the Prompt.\n\nAn activated Evaluator will automatically be run on all new Logs\nwithin the Prompt for monitoring purposes.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.prompts.update_monitoring(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "activate=[\n\t\t$FERN_INPUT\n\t]",
                      "delimiter": ",\n\t\t",
                      "innerTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "members": [
                          {
                            "type": {
                              "value": "type_:MonitoringEvaluatorVersionRequest",
                              "type": "id"
                            },
                            "template": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "{\n\t\t\t$FERN_INPUT\n\t\t}",
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"evaluator_version_id\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "evaluator_version_id",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                }
                              ],
                              "inputDelimiter": ",\n\t\t\t",
                              "type": "generic"
                            }
                          },
                          {
                            "type": {
                              "value": "type_:MonitoringEvaluatorEnvironmentRequest",
                              "type": "id"
                            },
                            "template": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "{\n\t\t\t$FERN_INPUT\n\t\t}",
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"evaluator_id\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "evaluator_id",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"environment_id\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "environment_id",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                }
                              ],
                              "inputDelimiter": ",\n\t\t\t",
                              "type": "generic"
                            }
                          }
                        ],
                        "templateInput": {
                          "location": "RELATIVE",
                          "path": null
                        },
                        "type": "union_v2"
                      },
                      "templateInput": {
                        "location": "BODY",
                        "path": "activate"
                      },
                      "type": "iterable"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "deactivate=[\n\t\t$FERN_INPUT\n\t]",
                      "delimiter": ",\n\t\t",
                      "innerTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "members": [
                          {
                            "type": {
                              "value": "type_:MonitoringEvaluatorVersionRequest",
                              "type": "id"
                            },
                            "template": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "{\n\t\t\t$FERN_INPUT\n\t\t}",
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"evaluator_version_id\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "evaluator_version_id",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                }
                              ],
                              "inputDelimiter": ",\n\t\t\t",
                              "type": "generic"
                            }
                          },
                          {
                            "type": {
                              "value": "type_:MonitoringEvaluatorEnvironmentRequest",
                              "type": "id"
                            },
                            "template": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "{\n\t\t\t$FERN_INPUT\n\t\t}",
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"evaluator_id\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "evaluator_id",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"environment_id\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "environment_id",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                }
                              ],
                              "inputDelimiter": ",\n\t\t\t",
                              "type": "generic"
                            }
                          }
                        ],
                        "templateInput": {
                          "location": "RELATIVE",
                          "path": null
                        },
                        "type": "union_v2"
                      },
                      "templateInput": {
                        "location": "BODY",
                        "path": "deactivate"
                      },
                      "type": "iterable"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.prompts.updateMonitoring(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "iterable",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "activate: [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                  "delimiter": ",\n\t\t\t\t",
                                  "innerTemplate": {
                                    "type": "union_v2",
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "members": [
                                      {
                                        "template": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "inputDelimiter": ",\n\t\t\t\t\t",
                                          "templateInputs": [
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "evaluatorVersionId: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "evaluator_version_id"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "type": {
                                          "type": "id",
                                          "value": "type_:MonitoringEvaluatorVersionRequest"
                                        }
                                      },
                                      {
                                        "template": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "inputDelimiter": ",\n\t\t\t\t\t",
                                          "templateInputs": [
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "evaluatorId: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "evaluator_id"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "environmentId: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "environment_id"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "type": {
                                          "type": "id",
                                          "value": "type_:MonitoringEvaluatorEnvironmentRequest"
                                        }
                                      }
                                    ],
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  },
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "activate"
                                  }
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "iterable",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "deactivate: [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                  "delimiter": ",\n\t\t\t\t",
                                  "innerTemplate": {
                                    "type": "union_v2",
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "members": [
                                      {
                                        "template": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "inputDelimiter": ",\n\t\t\t\t\t",
                                          "templateInputs": [
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "evaluatorVersionId: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "evaluator_version_id"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "type": {
                                          "type": "id",
                                          "value": "type_:MonitoringEvaluatorVersionRequest"
                                        }
                                      },
                                      {
                                        "template": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "inputDelimiter": ",\n\t\t\t\t\t",
                                          "templateInputs": [
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "evaluatorId: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "evaluator_id"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "environmentId: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "environment_id"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "type": {
                                          "type": "id",
                                          "value": "type_:MonitoringEvaluatorEnvironmentRequest"
                                        }
                                      }
                                    ],
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  },
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "deactivate"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        }
      ],
      "types": [
        "type_prompts:PromptLogRequestToolChoice",
        "type_prompts:PromptLogUpdateRequestToolChoice",
        "type_prompts:PromptsCallStreamRequestToolChoice",
        "type_prompts:PromptsCallRequestToolChoice",
        "type_prompts:PromptRequestTemplate",
        "type_prompts:PromptRequestStop"
      ],
      "subpackages": [],
      "urlSlug": "prompts",
      "description": "Prompts define how a large language model behaves.\n\n#### What is a Prompt?\n\nA Prompt on Humanloop encapsulates the base instructions and other configuration for how a large language model should\nperform a specific task.\n\nPrompts have immutable versions that you can **Commit** and **Deploy**.\nTo use a Prompt, you can **Call** it to create a generation and you can **Log** generations manually.\n\n#### Referencing Prompts\n\nPrompts are referenced by their unique ID or path.\n\nYou can perform actions on a specific Prompt version by specifying either the `version_id`\nor `environment` query parameter in the request. If you provide a `version_id`, Humanloop will\nuse the specified version of the Prompt. If you provide an `environment`, Humanloop will use the\nversion of the Prompt that is currently deployed to that Environment.\nIf you do not provide either a `version_id` or `environment`, Humanloop will use the Prompt version\nthat is deployed to the default Environment.\n\n",
      "webhooks": [],
      "websockets": [],
      "displayName": "Prompts"
    },
    "subpackage_tools": {
      "subpackageId": "subpackage_tools",
      "name": "tools",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "log",
          "migratedFromUrlSlugs": ["log-to-a-tool"],
          "method": "POST",
          "id": "log",
          "originalEndpointId": "endpoint_tools.log",
          "name": "Log to a Tool",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/tools/log"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "A specific Version ID of the Tool to log to.",
              "key": "version_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Name of the Environment identifying a deployed version to log to.",
              "key": "environment",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Path of the Tool, including the name. This locates the Tool in the Humanloop filesystem and is used as as a unique identifier. For example: `folder/name` or just `name`.",
                  "key": "path",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "ID for an existing Tool.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "When the logged event started.",
                  "key": "start_time",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "When the logged event ended.",
                  "key": "end_time",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Generated output from your model for the provided inputs. Can be `None` if logging an error, or if creating a parent Log with the intention to populate it later.",
                  "key": "output",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "User defined timestamp for when the log was created. ",
                  "key": "created_at",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Error message if the log is an error.",
                  "key": "error",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Duration of the logged event in seconds.",
                  "key": "provider_latency",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                },
                {
                  "description": "Captured log and debug statements.",
                  "key": "stdout",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Raw request sent to provider.",
                  "key": "provider_request",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "Raw response received the provider.",
                  "key": "provider_response",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "The inputs passed to the prompt template.",
                  "key": "inputs",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "Identifies where the model was called from.",
                  "key": "source",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Any additional metadata to record.",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "Unique identifier for the Datapoint that this Log is derived from. This can be used by Humanloop to associate Logs to Evaluations. If provided, Humanloop will automatically associate this Log to Evaluations that require a Log for this Datapoint-Version pair.",
                  "key": "source_datapoint_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The ID of the parent Log to nest this Log under in a Trace.",
                  "key": "trace_parent_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Unique identifier for the Batch to add this Batch to. Batches are used to group Logs together for Evaluations. A Batch will be created if one with the given ID does not exist.",
                  "key": "batch_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "End-user ID related to the Log.",
                  "key": "user",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The name of the Environment the Log is associated to.",
                  "key": "environment",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Whether the request/response payloads will be stored on Humanloop.",
                  "key": "save",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "Details of your Tool. A new Tool version will be created if the provided details are new.",
                  "key": "tool",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ToolKernelRequest"
                    }
                  }
                }
              ]
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:CreateToolLogResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "Tool log",
              "path": "/tools/log",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "path": "math-tool",
                "tool": {
                  "function": {
                    "name": "multiply",
                    "description": "Multiply two numbers",
                    "parameters": {
                      "type": "object",
                      "properties": {
                        "a": {
                          "type": "number"
                        },
                        "b": {
                          "type": "number"
                        }
                      },
                      "required": ["a", "b"]
                    }
                  }
                },
                "inputs": {
                  "a": 5,
                  "b": 7
                },
                "output": "35"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "data_abc123",
                "tool_id": "tl_def456",
                "version_id": "tv_ghi789",
                "session_id": "sesh_hw012"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "path": "math-tool",
                  "tool": {
                    "function": {
                      "name": "multiply",
                      "description": "Multiply two numbers",
                      "parameters": {
                        "type": "object",
                        "properties": {
                          "a": {
                            "type": "number"
                          },
                          "b": {
                            "type": "number"
                          }
                        },
                        "required": ["a", "b"]
                      }
                    }
                  },
                  "inputs": {
                    "a": 5,
                    "b": 7
                  },
                  "output": "35"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "data_abc123",
                  "tool_id": "tl_def456",
                  "version_id": "tv_ghi789",
                  "session_id": "sesh_hw012"
                }
              },
              "codeSamples": []
            },
            {
              "path": "/tools/log",
              "pathParameters": {},
              "queryParameters": {
                "version_id": "string",
                "environment": "string"
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Log to a Tool.\n\nYou can use query parameters `version_id`, or `environment`, to target\nan existing version of the Tool. Otherwise the default deployed version will be chosen.\n\nInstead of targeting an existing version explicitly, you can instead pass in\nTool details in the request body. In this case, we will check if the details correspond\nto an existing version of the Tool, if not we will create a new version. This is helpful\nin the case where you are storing or deriving your Tool details in code.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.tools.log(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "version_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "version_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "environment=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "environment",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "path=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "path",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "start_time=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "start_time",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "end_time=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "end_time",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "output=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "output",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "created_at=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "created_at",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "error=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "error",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "provider_latency=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "provider_latency",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "stdout=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "stdout",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "provider_request={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "provider_request"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "provider_response={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "provider_response"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "inputs={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "inputs"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "source=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "source",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "metadata={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "metadata"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "source_datapoint_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "source_datapoint_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "trace_parent_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "trace_parent_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "batch_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "batch_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "user=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "user",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "tool_log_request_environment=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "environment",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "save=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "save",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "tool={\n\t\t$FERN_INPUT\n\t}",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"function\": {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"name\": $FERN_INPUT",
                                  "templateInputs": [
                                    {
                                      "location": "BODY",
                                      "path": "tool.function.name",
                                      "type": "payload"
                                    }
                                  ],
                                  "type": "generic"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"description\": $FERN_INPUT",
                                  "templateInputs": [
                                    {
                                      "location": "BODY",
                                      "path": "tool.function.name.function.description",
                                      "type": "payload"
                                    }
                                  ],
                                  "type": "generic"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"strict\": $FERN_INPUT",
                                  "templateInputs": [
                                    {
                                      "location": "BODY",
                                      "path": "tool.function.name.function.description.function.strict",
                                      "type": "payload"
                                    }
                                  ],
                                  "type": "generic"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "\"parameters\": {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                  "delimiter": ",\n\t\t\t\t",
                                  "keyTemplate": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": null,
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  },
                                  "valueTemplate": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": null,
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  },
                                  "keyValueSeparator": ": ",
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "tool.function.name.function.description.function.strict.function.parameters"
                                  },
                                  "type": "dict"
                                }
                              }
                            ],
                            "inputDelimiter": ",\n\t\t\t",
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"source_code\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "tool.source_code",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "\"setup_values\": {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyTemplate": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "$FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": null,
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            },
                            "valueTemplate": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "$FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": null,
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            },
                            "keyValueSeparator": ": ",
                            "templateInput": {
                              "location": "BODY",
                              "path": "tool.setup_values"
                            },
                            "type": "dict"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "\"attributes\": {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyTemplate": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "$FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": null,
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            },
                            "valueTemplate": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "$FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": null,
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            },
                            "keyValueSeparator": ": ",
                            "templateInput": {
                              "location": "BODY",
                              "path": "tool.attributes"
                            },
                            "type": "dict"
                          }
                        }
                      ],
                      "inputDelimiter": ",\n\t\t",
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.tools.log(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "versionId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "version_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "environment: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "environment"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "path: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "path"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "id: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "startTime: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "start_time"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "endTime: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "end_time"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "output: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "output"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "createdAt: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "created_at"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "error: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "error"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "providerLatency: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "provider_latency"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "stdout: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "stdout"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "providerRequest: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "provider_request"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "providerResponse: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "provider_response"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "inputs: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "inputs"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "source: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "source"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "metadata: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "metadata"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "sourceDatapointId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "source_datapoint_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "traceParentId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "trace_parent_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "batchId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "batch_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "user: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "user"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "toolLogRequestEnvironment: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "environment"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "save: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "save"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "tool: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "function: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                  "isOptional": true,
                                  "inputDelimiter": ",\n\t\t\t\t",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "name: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "tool.function.name"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "description: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "tool.function.description"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "strict: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "tool.function.strict"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "dict",
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "parameters: {\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                        "delimiter": ",\n\t\t\t\t\t",
                                        "keyValueSeparator": ": ",
                                        "keyTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          ]
                                        },
                                        "valueTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          ]
                                        },
                                        "templateInput": {
                                          "location": "BODY",
                                          "path": "tool.function.parameters"
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "sourceCode: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "tool.source_code"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "dict",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "setupValues: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                  "delimiter": ",\n\t\t\t\t",
                                  "keyValueSeparator": ": ",
                                  "keyTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "$FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    ]
                                  },
                                  "valueTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "$FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    ]
                                  },
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "tool.setup_values"
                                  }
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "dict",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "attributes: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                  "delimiter": ",\n\t\t\t\t",
                                  "keyValueSeparator": ": ",
                                  "keyTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "$FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    ]
                                  },
                                  "valueTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "$FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    ]
                                  },
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "tool.attributes"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "update",
          "migratedFromUrlSlugs": ["update-tool-log"],
          "method": "PATCH",
          "id": "update",
          "originalEndpointId": "endpoint_tools.update",
          "name": "Update Tool Log",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Prompt.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "Unique identifier for the Log.",
                "key": "log_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/tools/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/log/"
              },
              {
                "type": "pathParameter",
                "value": "log_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Generated output from your model for the provided inputs. Can be `None` if logging an error, or if creating a parent Log with the intention to populate it later.",
                  "key": "output",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "User defined timestamp for when the log was created. ",
                  "key": "created_at",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Error message if the log is an error.",
                  "key": "error",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Duration of the logged event in seconds.",
                  "key": "provider_latency",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                },
                {
                  "description": "Captured log and debug statements.",
                  "key": "stdout",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Raw request sent to provider.",
                  "key": "provider_request",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "Raw response received the provider.",
                  "key": "provider_response",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "The inputs passed to the prompt template.",
                  "key": "inputs",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "Identifies where the model was called from.",
                  "key": "source",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Any additional metadata to record.",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "When the logged event started.",
                  "key": "start_time",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "When the logged event ended.",
                  "key": "end_time",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              ]
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:LogResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/tools/id/log/log_id",
              "pathParameters": {
                "id": "id",
                "log_id": "log_id"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "output_message": {
                  "content": "content",
                  "name": "name",
                  "tool_call_id": "tool_call_id",
                  "role": "user",
                  "tool_calls": [
                    {
                      "id": "id",
                      "type": "function",
                      "function": {
                        "name": "name"
                      }
                    }
                  ]
                },
                "prompt_tokens": 1,
                "output_tokens": 1,
                "prompt_cost": 1.1,
                "output_cost": 1.1,
                "finish_reason": "finish_reason",
                "messages": [
                  {
                    "content": "content",
                    "name": "name",
                    "tool_call_id": "tool_call_id",
                    "role": "user",
                    "tool_calls": [
                      {
                        "id": "id",
                        "type": "function",
                        "function": {
                          "name": "name"
                        }
                      }
                    ]
                  }
                ],
                "tool_choice": "none",
                "prompt": {
                  "path": "path",
                  "id": "id",
                  "directory_id": "directory_id",
                  "model": "model",
                  "endpoint": "complete",
                  "template": "template",
                  "provider": "openai",
                  "max_tokens": 1,
                  "temperature": 1.1,
                  "top_p": 1.1,
                  "stop": "stop",
                  "presence_penalty": 1.1,
                  "frequency_penalty": 1.1,
                  "other": {
                    "key": "value"
                  },
                  "seed": 1,
                  "response_format": {
                    "type": "json_object",
                    "json_schema": {
                      "key": "value"
                    }
                  },
                  "tools": [
                    {
                      "name": "name",
                      "description": "description"
                    }
                  ],
                  "linked_tools": [
                    {
                      "name": "name",
                      "description": "description",
                      "id": "id",
                      "version_id": "version_id"
                    }
                  ],
                  "attributes": {
                    "key": "value"
                  },
                  "commit_message": "commit_message",
                  "name": "name",
                  "version_id": "version_id",
                  "type": "prompt",
                  "environments": [
                    {
                      "id": "id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "name": "name",
                      "tag": "default"
                    }
                  ],
                  "created_at": "2024-01-15T09:30:00Z",
                  "updated_at": "2024-01-15T09:30:00Z",
                  "created_by": {
                    "id": "id",
                    "email_address": "email_address",
                    "full_name": "full_name"
                  },
                  "status": "uncommitted",
                  "last_used_at": "2024-01-15T09:30:00Z",
                  "version_logs_count": 1,
                  "total_logs_count": 1,
                  "inputs": [
                    {
                      "name": "name"
                    }
                  ],
                  "evaluator_aggregates": [
                    {
                      "value": 1.1,
                      "evaluator_id": "evaluator_id",
                      "evaluator_version_id": "evaluator_version_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z"
                    }
                  ]
                },
                "start_time": "2024-01-15T09:30:00Z",
                "end_time": "2024-01-15T09:30:00Z",
                "output": "output",
                "created_at": "2024-01-15T09:30:00Z",
                "error": "error",
                "provider_latency": 1.1,
                "stdout": "stdout",
                "provider_request": {
                  "key": "value"
                },
                "provider_response": {
                  "key": "value"
                },
                "inputs": {
                  "key": "value"
                },
                "source": "source",
                "metadata": {
                  "key": "value"
                },
                "source_datapoint_id": "source_datapoint_id",
                "trace_parent_id": "trace_parent_id",
                "batches": ["batches"],
                "user": "user",
                "environment": "environment",
                "save": true,
                "id": "id",
                "evaluator_logs": [
                  {
                    "start_time": "2024-01-15T09:30:00Z",
                    "end_time": "2024-01-15T09:30:00Z",
                    "output": "output",
                    "created_at": "2024-01-15T09:30:00Z",
                    "error": "error",
                    "provider_latency": 1.1,
                    "stdout": "stdout",
                    "provider_request": {
                      "key": "value"
                    },
                    "provider_response": {
                      "key": "value"
                    },
                    "inputs": {
                      "key": "value"
                    },
                    "source": "source",
                    "metadata": {
                      "key": "value"
                    },
                    "parent_id": "parent_id",
                    "source_datapoint_id": "source_datapoint_id",
                    "trace_parent_id": "trace_parent_id",
                    "batches": ["batches"],
                    "user": "user",
                    "environment": "environment",
                    "save": true,
                    "judgment": true,
                    "id": "id",
                    "evaluator_logs": [],
                    "trace_flow_id": "trace_flow_id",
                    "trace_id": "trace_id",
                    "evaluator": {
                      "path": "path",
                      "id": "id",
                      "spec": {
                        "arguments_type": "target_free",
                        "return_type": "boolean",
                        "evaluator_type": "llm"
                      },
                      "name": "name",
                      "version_id": "version_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "status": "uncommitted",
                      "last_used_at": "2024-01-15T09:30:00Z",
                      "version_logs_count": 1,
                      "total_logs_count": 1,
                      "inputs": [
                        {
                          "name": "name"
                        }
                      ]
                    }
                  }
                ],
                "trace_flow_id": "trace_flow_id",
                "trace_id": "trace_id"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "output_message": {
                    "content": "content",
                    "name": "name",
                    "tool_call_id": "tool_call_id",
                    "role": "user",
                    "tool_calls": [
                      {
                        "id": "id",
                        "type": "function",
                        "function": {
                          "name": "name"
                        }
                      }
                    ]
                  },
                  "prompt_tokens": 1,
                  "output_tokens": 1,
                  "prompt_cost": 1.1,
                  "output_cost": 1.1,
                  "finish_reason": "finish_reason",
                  "messages": [
                    {
                      "content": "content",
                      "name": "name",
                      "tool_call_id": "tool_call_id",
                      "role": "user",
                      "tool_calls": [
                        {
                          "id": "id",
                          "type": "function",
                          "function": {
                            "name": "name"
                          }
                        }
                      ]
                    }
                  ],
                  "tool_choice": "none",
                  "prompt": {
                    "path": "path",
                    "id": "id",
                    "directory_id": "directory_id",
                    "model": "model",
                    "endpoint": "complete",
                    "template": "template",
                    "provider": "openai",
                    "max_tokens": 1,
                    "temperature": 1.1,
                    "top_p": 1.1,
                    "stop": "stop",
                    "presence_penalty": 1.1,
                    "frequency_penalty": 1.1,
                    "other": {
                      "key": "value"
                    },
                    "seed": 1,
                    "response_format": {
                      "type": "json_object",
                      "json_schema": {
                        "key": "value"
                      }
                    },
                    "tools": [
                      {
                        "name": "name",
                        "description": "description"
                      }
                    ],
                    "linked_tools": [
                      {
                        "name": "name",
                        "description": "description",
                        "id": "id",
                        "version_id": "version_id"
                      }
                    ],
                    "attributes": {
                      "key": "value"
                    },
                    "commit_message": "commit_message",
                    "name": "name",
                    "version_id": "version_id",
                    "type": "prompt",
                    "environments": [
                      {
                        "id": "id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "name": "name",
                        "tag": "default"
                      }
                    ],
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z",
                    "created_by": {
                      "id": "id",
                      "email_address": "email_address",
                      "full_name": "full_name"
                    },
                    "status": "uncommitted",
                    "last_used_at": "2024-01-15T09:30:00Z",
                    "version_logs_count": 1,
                    "total_logs_count": 1,
                    "inputs": [
                      {
                        "name": "name"
                      }
                    ],
                    "evaluator_aggregates": [
                      {
                        "value": 1.1,
                        "evaluator_id": "evaluator_id",
                        "evaluator_version_id": "evaluator_version_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      }
                    ]
                  },
                  "start_time": "2024-01-15T09:30:00Z",
                  "end_time": "2024-01-15T09:30:00Z",
                  "output": "output",
                  "created_at": "2024-01-15T09:30:00Z",
                  "error": "error",
                  "provider_latency": 1.1,
                  "stdout": "stdout",
                  "provider_request": {
                    "key": "value"
                  },
                  "provider_response": {
                    "key": "value"
                  },
                  "inputs": {
                    "key": "value"
                  },
                  "source": "source",
                  "metadata": {
                    "key": "value"
                  },
                  "source_datapoint_id": "source_datapoint_id",
                  "trace_parent_id": "trace_parent_id",
                  "batches": ["batches"],
                  "user": "user",
                  "environment": "environment",
                  "save": true,
                  "id": "id",
                  "evaluator_logs": [
                    {
                      "start_time": "2024-01-15T09:30:00Z",
                      "end_time": "2024-01-15T09:30:00Z",
                      "output": "output",
                      "created_at": "2024-01-15T09:30:00Z",
                      "error": "error",
                      "provider_latency": 1.1,
                      "stdout": "stdout",
                      "provider_request": {
                        "key": "value"
                      },
                      "provider_response": {
                        "key": "value"
                      },
                      "inputs": {
                        "key": "value"
                      },
                      "source": "source",
                      "metadata": {
                        "key": "value"
                      },
                      "parent_id": "parent_id",
                      "source_datapoint_id": "source_datapoint_id",
                      "trace_parent_id": "trace_parent_id",
                      "batches": ["batches"],
                      "user": "user",
                      "environment": "environment",
                      "save": true,
                      "judgment": true,
                      "id": "id",
                      "evaluator_logs": [],
                      "trace_flow_id": "trace_flow_id",
                      "trace_id": "trace_id",
                      "evaluator": {
                        "path": "path",
                        "id": "id",
                        "spec": {
                          "arguments_type": "target_free",
                          "return_type": "boolean",
                          "evaluator_type": "llm"
                        },
                        "name": "name",
                        "version_id": "version_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "status": "uncommitted",
                        "last_used_at": "2024-01-15T09:30:00Z",
                        "version_logs_count": 1,
                        "total_logs_count": 1,
                        "inputs": [
                          {
                            "name": "name"
                          }
                        ]
                      }
                    }
                  ],
                  "trace_flow_id": "trace_flow_id",
                  "trace_id": "trace_id"
                }
              },
              "codeSamples": []
            },
            {
              "path": "/tools/:id/log/:log_id",
              "pathParameters": {
                "id": ":id",
                "log_id": ":log_id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Update a Log.\n\nUpdate the details of a Log with the given ID.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.tools.update(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "log_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "log_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "output=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "output",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "created_at=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "created_at",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "error=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "error",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "provider_latency=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "provider_latency",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "stdout=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "stdout",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "provider_request={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "provider_request"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "provider_response={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "provider_response"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "inputs={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "inputs"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "source=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "source",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "metadata={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "metadata"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "start_time=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "start_time",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "end_time=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "end_time",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.tools.update(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "log_id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "output: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "output"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "createdAt: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "created_at"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "error: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "error"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "providerLatency: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "provider_latency"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "stdout: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "stdout"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "providerRequest: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "provider_request"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "providerResponse: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "provider_response"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "inputs: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "inputs"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "source: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "source"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "metadata: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "metadata"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "startTime: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "start_time"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "endTime: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "end_time"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "list",
          "migratedFromUrlSlugs": ["list-tools"],
          "method": "GET",
          "id": "list",
          "originalEndpointId": "endpoint_tools.list",
          "name": "List Tools",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/tools"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Page offset for pagination.",
              "key": "page",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "Page size for pagination. Number of Tools to fetch.",
              "key": "size",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "Case-insensitive filter for Tool name.",
              "key": "name",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Case-insensitive filter for users in the Tool. This filter matches against both email address and name of users.",
              "key": "user_filter",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Field to sort Tools by",
              "key": "sort_by",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_:ProjectSortBy"
                }
              }
            },
            {
              "description": "Direction to sort by.",
              "key": "order",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_:SortOrder"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:PaginatedDataToolResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "List tools",
              "path": "/tools",
              "pathParameters": {},
              "queryParameters": {
                "size": 1
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "records": [
                  {
                    "id": "tl_789ghi",
                    "path": "math-tool",
                    "name": "math-tool",
                    "version_id": "tv_012jkl",
                    "type": "tool",
                    "created_at": "2024-05-01T12:00:00Z",
                    "updated_at": "2024-05-01T12:00:00Z",
                    "status": "committed",
                    "last_used_at": "2024-05-01T12:00:00Z",
                    "version_logs_count": 1,
                    "total_logs_count": 1,
                    "inputs": [
                      {
                        "name": "operation"
                      }
                    ]
                  }
                ],
                "page": 0,
                "size": 1,
                "total": 1
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "records": [
                    {
                      "id": "tl_789ghi",
                      "path": "math-tool",
                      "name": "math-tool",
                      "version_id": "tv_012jkl",
                      "type": "tool",
                      "created_at": "2024-05-01T12:00:00Z",
                      "updated_at": "2024-05-01T12:00:00Z",
                      "status": "committed",
                      "last_used_at": "2024-05-01T12:00:00Z",
                      "version_logs_count": 1,
                      "total_logs_count": 1,
                      "inputs": [
                        {
                          "name": "operation"
                        }
                      ]
                    }
                  ],
                  "page": 0,
                  "size": 1,
                  "total": 1
                }
              },
              "codeSamples": []
            },
            {
              "path": "/tools",
              "pathParameters": {},
              "queryParameters": {
                "page": 0,
                "size": 0
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Get a list of all Tools.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.tools.list(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "page=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "page",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "size=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "size",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "name=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "name",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "user_filter=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "user_filter",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "sort_by=$FERN_INPUT",
                      "values": {
                        "created_at": "\"created_at\"",
                        "updated_at": "\"updated_at\"",
                        "name": "\"name\""
                      },
                      "templateInput": {
                        "location": "QUERY",
                        "path": "sort_by"
                      },
                      "type": "enum"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "order=$FERN_INPUT",
                      "values": {
                        "asc": "\"asc\"",
                        "desc": "\"desc\""
                      },
                      "templateInput": {
                        "location": "QUERY",
                        "path": "order"
                      },
                      "type": "enum"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.tools.list(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "page: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "page"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "size: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "size"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "name: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "name"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "userFilter: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "user_filter"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "enum",
                            "imports": [],
                            "isOptional": true,
                            "values": {
                              "created_at": "\"created_at\"",
                              "updated_at": "\"updated_at\"",
                              "name": "\"name\""
                            },
                            "templateString": "sortBy: $FERN_INPUT",
                            "templateInput": {
                              "location": "QUERY",
                              "path": "sort_by"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "enum",
                            "imports": [],
                            "isOptional": true,
                            "values": {
                              "asc": "\"asc\"",
                              "desc": "\"desc\""
                            },
                            "templateString": "order: $FERN_INPUT",
                            "templateInput": {
                              "location": "QUERY",
                              "path": "order"
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "upsert",
          "migratedFromUrlSlugs": ["upsert-tool"],
          "method": "POST",
          "id": "upsert",
          "originalEndpointId": "endpoint_tools.upsert",
          "name": "Upsert Tool",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/tools"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Path of the Tool, including the name. This locates the Tool in the Humanloop filesystem and is used as as a unique identifier. For example: `folder/name` or just `name`.",
                  "key": "path",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "ID for an existing Tool.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Callable function specification of the Tool shown to the model for tool calling.",
                  "key": "function",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ToolFunction"
                    }
                  }
                },
                {
                  "description": "Code source of the Tool.",
                  "key": "source_code",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Values needed to setup the Tool, defined in JSON Schema format: https://json-schema.org/",
                  "key": "setup_values",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "Additional fields to describe the Tool. Helpful to separate Tool versions from each other with details on how they were created or used.",
                  "key": "attributes",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "Type of Tool.",
                  "key": "tool_type",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:FilesToolType"
                    }
                  }
                },
                {
                  "description": "Message describing the changes made.",
                  "key": "commit_message",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:ToolResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "Create tool",
              "path": "/tools",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "path": "math-tool",
                "function": {
                  "name": "multiply",
                  "description": "Multiply two numbers",
                  "parameters": {
                    "type": "object",
                    "properties": {
                      "a": {
                        "type": "number"
                      },
                      "b": {
                        "type": "number"
                      }
                    },
                    "required": ["a", "b"]
                  }
                },
                "commit_message": "Initial commit"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "tl_789ghi",
                "path": "math-tool",
                "name": "math-tool",
                "version_id": "tv_012jkl",
                "type": "tool",
                "created_at": "2024-05-01T12:00:00Z",
                "updated_at": "2024-05-01T12:00:00Z",
                "status": "committed",
                "last_used_at": "2024-05-01T12:00:00Z",
                "version_logs_count": 1,
                "total_logs_count": 1,
                "inputs": [
                  {
                    "name": "operation"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "path": "math-tool",
                  "function": {
                    "name": "multiply",
                    "description": "Multiply two numbers",
                    "parameters": {
                      "type": "object",
                      "properties": {
                        "a": {
                          "type": "number"
                        },
                        "b": {
                          "type": "number"
                        }
                      },
                      "required": ["a", "b"]
                    }
                  },
                  "commit_message": "Initial commit"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "tl_789ghi",
                  "path": "math-tool",
                  "name": "math-tool",
                  "version_id": "tv_012jkl",
                  "type": "tool",
                  "created_at": "2024-05-01T12:00:00Z",
                  "updated_at": "2024-05-01T12:00:00Z",
                  "status": "committed",
                  "last_used_at": "2024-05-01T12:00:00Z",
                  "version_logs_count": 1,
                  "total_logs_count": 1,
                  "inputs": [
                    {
                      "name": "operation"
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/tools",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Create a Tool or update it with a new version if it already exists.\n\nTools are identified by the `ID` or their `path`. The name, description and parameters determine the versions of the Tool.\n\nIf you provide a commit message, then the new version will be committed;\notherwise it will be uncommitted. If you try to commit an already committed version,\nan exception will be raised.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.tools.upsert(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "path=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "path",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "function={\n\t\t$FERN_INPUT\n\t}",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"name\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "function.name",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"description\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "function.description",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"strict\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "function.strict",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "\"parameters\": {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyTemplate": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "$FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": null,
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            },
                            "valueTemplate": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "$FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": null,
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            },
                            "keyValueSeparator": ": ",
                            "templateInput": {
                              "location": "BODY",
                              "path": "function.parameters"
                            },
                            "type": "dict"
                          }
                        }
                      ],
                      "inputDelimiter": ",\n\t\t",
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "source_code=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "source_code",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "setup_values={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "setup_values"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "attributes={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "attributes"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "tool_type=$FERN_INPUT",
                      "values": {
                        "pinecone_search": "\"pinecone_search\"",
                        "google": "\"google\"",
                        "mock": "\"mock\"",
                        "snippet": "\"snippet\"",
                        "json_schema": "\"json_schema\"",
                        "get_api_call": "\"get_api_call\""
                      },
                      "templateInput": {
                        "location": "BODY",
                        "path": "tool_type"
                      },
                      "type": "enum"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "commit_message=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "commit_message",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.tools.upsert(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "path: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "path"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "id: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "function: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "name: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "function.name"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "description: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "function.description"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "strict: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "function.strict"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "dict",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "parameters: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                  "delimiter": ",\n\t\t\t\t",
                                  "keyValueSeparator": ": ",
                                  "keyTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "$FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    ]
                                  },
                                  "valueTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "$FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    ]
                                  },
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "function.parameters"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "sourceCode: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "source_code"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "setupValues: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "setup_values"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "attributes: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "attributes"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "enum",
                            "imports": [],
                            "isOptional": true,
                            "values": {
                              "pinecone_search": "\"pinecone_search\"",
                              "google": "\"google\"",
                              "mock": "\"mock\"",
                              "snippet": "\"snippet\"",
                              "json_schema": "\"json_schema\"",
                              "get_api_call": "\"get_api_call\""
                            },
                            "templateString": "toolType: $FERN_INPUT",
                            "templateInput": {
                              "location": "BODY",
                              "path": "tool_type"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "commitMessage: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "commit_message"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "get",
          "migratedFromUrlSlugs": ["get-tool"],
          "method": "GET",
          "id": "get",
          "originalEndpointId": "endpoint_tools.get",
          "name": "Get Tool",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Tool.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/tools/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "A specific Version ID of the Tool to retrieve.",
              "key": "version_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Name of the Environment to retrieve a deployed Version from.",
              "key": "environment",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:ToolResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "Get specific tool",
              "path": "/tools/tl_789ghi",
              "pathParameters": {
                "id": "tl_789ghi"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "tl_789ghi",
                "path": "math-tool",
                "name": "math-tool",
                "version_id": "tv_012jkl",
                "type": "tool",
                "created_at": "2024-05-01T12:00:00Z",
                "updated_at": "2024-05-01T12:00:00Z",
                "status": "committed",
                "last_used_at": "2024-05-01T12:00:00Z",
                "version_logs_count": 1,
                "total_logs_count": 1,
                "inputs": [
                  {
                    "name": "operation"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "tl_789ghi",
                  "path": "math-tool",
                  "name": "math-tool",
                  "version_id": "tv_012jkl",
                  "type": "tool",
                  "created_at": "2024-05-01T12:00:00Z",
                  "updated_at": "2024-05-01T12:00:00Z",
                  "status": "committed",
                  "last_used_at": "2024-05-01T12:00:00Z",
                  "version_logs_count": 1,
                  "total_logs_count": 1,
                  "inputs": [
                    {
                      "name": "operation"
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/tools/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {
                "version_id": "string",
                "environment": "string"
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Retrieve the Tool with the given ID.\n\nBy default, the deployed version of the Tool is returned. Use the query parameters\n`version_id` or `environment` to target a specific version of the Tool.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.tools.get(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "version_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "version_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "environment=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "environment",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.tools.get(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "versionId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "version_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "environment: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "environment"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "delete",
          "migratedFromUrlSlugs": ["delete-tool"],
          "method": "DELETE",
          "id": "delete",
          "originalEndpointId": "endpoint_tools.delete",
          "name": "Delete Tool",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Tool.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/tools/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "Delete tool",
              "path": "/tools/tl_789ghi",
              "pathParameters": {
                "id": "tl_789ghi"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            },
            {
              "path": "/tools/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Delete the Tool with the given ID.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.tools.delete(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.tools.delete(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "move",
          "migratedFromUrlSlugs": ["move-tool"],
          "method": "PATCH",
          "id": "move",
          "originalEndpointId": "endpoint_tools.move",
          "name": "Move Tool",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Tool.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/tools/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Path of the Tool including the Tool name, which is used as a unique identifier.",
                  "key": "path",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Name of the Tool, which is used as a unique identifier.",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:ToolResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "Move tool",
              "path": "/tools/tl_789ghi",
              "pathParameters": {
                "id": "tl_789ghi"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "path": "new directory/new name"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "tl_789ghi",
                "path": "math-tool",
                "name": "math-tool",
                "version_id": "tv_012jkl",
                "type": "tool",
                "created_at": "2024-05-01T12:00:00Z",
                "updated_at": "2024-05-01T12:00:00Z",
                "status": "committed",
                "last_used_at": "2024-05-01T12:00:00Z",
                "version_logs_count": 1,
                "total_logs_count": 1,
                "inputs": [
                  {
                    "name": "operation"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "path": "new directory/new name"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "tl_789ghi",
                  "path": "math-tool",
                  "name": "math-tool",
                  "version_id": "tv_012jkl",
                  "type": "tool",
                  "created_at": "2024-05-01T12:00:00Z",
                  "updated_at": "2024-05-01T12:00:00Z",
                  "status": "committed",
                  "last_used_at": "2024-05-01T12:00:00Z",
                  "version_logs_count": 1,
                  "total_logs_count": 1,
                  "inputs": [
                    {
                      "name": "operation"
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/tools/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Move the Tool to a different path or change the name.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.tools.move(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "path=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "path",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "name=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "name",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.tools.move(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "path: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "path"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "name: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "name"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "list-versions",
          "migratedFromUrlSlugs": ["list-versions-of-a-tool"],
          "method": "GET",
          "id": "listVersions",
          "originalEndpointId": "endpoint_tools.listVersions",
          "name": "List Versions of a Tool",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for the Tool.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/tools/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/versions"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Filter versions by status: 'uncommitted', 'committed'. If no status is provided, all versions are returned.",
              "key": "status",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_:VersionStatus"
                }
              }
            },
            {
              "description": "Whether to include Evaluator aggregate results for the versions in the response",
              "key": "evaluator_aggregates",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:ListTools"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "List versions",
              "path": "/tools/tl_789ghi/versions",
              "pathParameters": {
                "id": "tl_789ghi"
              },
              "queryParameters": {
                "status": "committed"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "records": [
                  {
                    "id": "tl_789ghi",
                    "path": "math-tool",
                    "name": "math-tool",
                    "version_id": "tv_012jkl",
                    "type": "tool",
                    "created_at": "2024-05-01T12:00:00Z",
                    "updated_at": "2024-05-01T12:00:00Z",
                    "status": "committed",
                    "last_used_at": "2024-05-01T12:00:00Z",
                    "version_logs_count": 1,
                    "total_logs_count": 1,
                    "inputs": [
                      {
                        "name": "operation"
                      }
                    ]
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "records": [
                    {
                      "id": "tl_789ghi",
                      "path": "math-tool",
                      "name": "math-tool",
                      "version_id": "tv_012jkl",
                      "type": "tool",
                      "created_at": "2024-05-01T12:00:00Z",
                      "updated_at": "2024-05-01T12:00:00Z",
                      "status": "committed",
                      "last_used_at": "2024-05-01T12:00:00Z",
                      "version_logs_count": 1,
                      "total_logs_count": 1,
                      "inputs": [
                        {
                          "name": "operation"
                        }
                      ]
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/tools/:id/versions",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {
                "status": "uncommitted",
                "evaluator_aggregates": true
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Get a list of all the versions of a Tool.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.tools.list_versions(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "status=$FERN_INPUT",
                      "values": {
                        "uncommitted": "\"uncommitted\"",
                        "committed": "\"committed\"",
                        "deleted": "\"deleted\""
                      },
                      "templateInput": {
                        "location": "QUERY",
                        "path": "status"
                      },
                      "type": "enum"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "evaluator_aggregates=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "evaluator_aggregates",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.tools.listVersions(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "enum",
                            "imports": [],
                            "isOptional": true,
                            "values": {
                              "uncommitted": "\"uncommitted\"",
                              "committed": "\"committed\"",
                              "deleted": "\"deleted\""
                            },
                            "templateString": "status: $FERN_INPUT",
                            "templateInput": {
                              "location": "QUERY",
                              "path": "status"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "evaluatorAggregates: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "evaluator_aggregates"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "commit",
          "method": "POST",
          "id": "commit",
          "originalEndpointId": "endpoint_tools.commit",
          "name": "Commit",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Tool.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "Unique identifier for the specific version of the Tool.",
                "key": "version_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/tools/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/versions/"
              },
              {
                "type": "pathParameter",
                "value": "version_id"
              },
              {
                "type": "literal",
                "value": "/commit"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:CommitRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:ToolResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "Commit version",
              "path": "/tools/tl_789ghi/versions/tv_012jkl/commit",
              "pathParameters": {
                "id": "tl_789ghi",
                "version_id": "tv_012jkl"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "commit_message": "Initial commit"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "tl_789ghi",
                "path": "math-tool",
                "name": "math-tool",
                "version_id": "tv_012jkl",
                "type": "tool",
                "created_at": "2024-05-01T12:00:00Z",
                "updated_at": "2024-05-01T12:00:00Z",
                "status": "committed",
                "last_used_at": "2024-05-01T12:00:00Z",
                "version_logs_count": 1,
                "total_logs_count": 1,
                "inputs": [
                  {
                    "name": "operation"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "commit_message": "Initial commit"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "tl_789ghi",
                  "path": "math-tool",
                  "name": "math-tool",
                  "version_id": "tv_012jkl",
                  "type": "tool",
                  "created_at": "2024-05-01T12:00:00Z",
                  "updated_at": "2024-05-01T12:00:00Z",
                  "status": "committed",
                  "last_used_at": "2024-05-01T12:00:00Z",
                  "version_logs_count": 1,
                  "total_logs_count": 1,
                  "inputs": [
                    {
                      "name": "operation"
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/tools/:id/versions/:version_id/commit",
              "pathParameters": {
                "id": ":id",
                "version_id": ":version_id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "commit_message": "string"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Commit a version of the Tool with a commit message.\n\nIf the version is already committed, an exception will be raised.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.tools.commit(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "version_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "version_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "commit_message=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "commit_message",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.tools.commit(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "version_id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "commitMessage: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "commit_message"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "set-deployment",
          "migratedFromUrlSlugs": ["deploy-tool"],
          "method": "POST",
          "id": "setDeployment",
          "originalEndpointId": "endpoint_tools.setDeployment",
          "name": "Deploy Tool",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Tool.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "Unique identifier for the Environment to deploy the Version to.",
                "key": "environment_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/tools/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/environments/"
              },
              {
                "type": "pathParameter",
                "value": "environment_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Unique identifier for the specific version of the Tool.",
              "key": "version_id",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:ToolResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "Deploy",
              "path": "/tools/tl_789ghi/environments/staging",
              "pathParameters": {
                "id": "tl_789ghi",
                "environment_id": "staging"
              },
              "queryParameters": {
                "version_id": "tv_012jkl"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "tl_789ghi",
                "path": "math-tool",
                "name": "math-tool",
                "version_id": "tv_012jkl",
                "type": "tool",
                "created_at": "2024-05-01T12:00:00Z",
                "updated_at": "2024-05-01T12:00:00Z",
                "status": "committed",
                "last_used_at": "2024-05-01T12:00:00Z",
                "version_logs_count": 1,
                "total_logs_count": 1,
                "inputs": [
                  {
                    "name": "operation"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "tl_789ghi",
                  "path": "math-tool",
                  "name": "math-tool",
                  "version_id": "tv_012jkl",
                  "type": "tool",
                  "created_at": "2024-05-01T12:00:00Z",
                  "updated_at": "2024-05-01T12:00:00Z",
                  "status": "committed",
                  "last_used_at": "2024-05-01T12:00:00Z",
                  "version_logs_count": 1,
                  "total_logs_count": 1,
                  "inputs": [
                    {
                      "name": "operation"
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/tools/:id/environments/:environment_id",
              "pathParameters": {
                "id": ":id",
                "environment_id": ":environment_id"
              },
              "queryParameters": {
                "version_id": "string"
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Deploy Tool to an Environment.\n\nSet the deployed version for the specified Environment. This Prompt\nwill be used for calls made to the Tool in this Environment.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.tools.set_deployment(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "environment_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "environment_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "version_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "version_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.tools.setDeployment(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "environment_id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "versionId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "version_id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "remove-deployment",
          "method": "DELETE",
          "id": "removeDeployment",
          "originalEndpointId": "endpoint_tools.removeDeployment",
          "name": "Remove Deployment",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Tool.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "Unique identifier for the Environment to remove the deployment from.",
                "key": "environment_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/tools/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/environments/"
              },
              {
                "type": "pathParameter",
                "value": "environment_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "Delete environment",
              "path": "/tools/tl_789ghi/environments/staging",
              "pathParameters": {
                "id": "tl_789ghi",
                "environment_id": "staging"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            },
            {
              "path": "/tools/:id/environments/:environment_id",
              "pathParameters": {
                "id": ":id",
                "environment_id": ":environment_id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Remove deployed Tool from the Environment.\n\nRemove the deployed version for the specified Environment. This Tool\nwill no longer be used for calls made to the Tool in this Environment.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.tools.remove_deployment(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "environment_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "environment_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.tools.removeDeployment(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "environment_id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "list-environments",
          "migratedFromUrlSlugs": ["list-a-tools-environments"],
          "method": "GET",
          "id": "listEnvironments",
          "originalEndpointId": "endpoint_tools.listEnvironments",
          "name": "List a Tool's Environments",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Tool.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/tools/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/environments"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:FileEnvironmentResponse"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "List environments",
              "path": "/tools/tl_789ghi/environments",
              "pathParameters": {
                "id": "tl_789ghi"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": [
                {
                  "id": "tl_789ghi",
                  "created_at": "2024-05-01T12:00:00Z",
                  "name": "production",
                  "tag": "default",
                  "file": {
                    "id": "tl_789ghi",
                    "path": "math-tool",
                    "name": "math-tool",
                    "version_id": "tv_012jkl",
                    "type": "tool",
                    "created_at": "2024-05-01T12:00:00Z",
                    "updated_at": "2024-05-01T12:00:00Z",
                    "status": "committed",
                    "last_used_at": "2024-05-01T12:00:00Z",
                    "version_logs_count": 1,
                    "total_logs_count": 1,
                    "inputs": [
                      {
                        "name": "operation"
                      }
                    ]
                  }
                }
              ],
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "id": "tl_789ghi",
                    "created_at": "2024-05-01T12:00:00Z",
                    "name": "production",
                    "tag": "default",
                    "file": {
                      "id": "tl_789ghi",
                      "path": "math-tool",
                      "name": "math-tool",
                      "version_id": "tv_012jkl",
                      "type": "tool",
                      "created_at": "2024-05-01T12:00:00Z",
                      "updated_at": "2024-05-01T12:00:00Z",
                      "status": "committed",
                      "last_used_at": "2024-05-01T12:00:00Z",
                      "version_logs_count": 1,
                      "total_logs_count": 1,
                      "inputs": [
                        {
                          "name": "operation"
                        }
                      ]
                    }
                  }
                ]
              },
              "codeSamples": []
            },
            {
              "path": "/tools/:id/environments",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "List all Environments and their deployed versions for the Tool.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.tools.list_environments(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.tools.listEnvironments(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "update-monitoring",
          "method": "POST",
          "id": "updateMonitoring",
          "originalEndpointId": "endpoint_tools.updateMonitoring",
          "name": "Update Monitoring",
          "path": {
            "pathParameters": [
              {
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/tools/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/evaluators"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:EvaluatorActivationDeactivationRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:ToolResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "Update monitoring",
              "path": "/tools/tl_789ghi/evaluators",
              "pathParameters": {
                "id": "tl_789ghi"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "activate": [
                  {
                    "evaluator_version_id": "evv_1abc4308abd"
                  }
                ]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "tl_789ghi",
                "path": "math-tool",
                "name": "math-tool",
                "version_id": "tv_012jkl",
                "type": "tool",
                "created_at": "2024-05-01T12:00:00Z",
                "updated_at": "2024-05-01T12:00:00Z",
                "status": "committed",
                "last_used_at": "2024-05-01T12:00:00Z",
                "version_logs_count": 1,
                "total_logs_count": 1,
                "inputs": [
                  {
                    "name": "operation"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "activate": [
                    {
                      "evaluator_version_id": "evv_1abc4308abd"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "tl_789ghi",
                  "path": "math-tool",
                  "name": "math-tool",
                  "version_id": "tv_012jkl",
                  "type": "tool",
                  "created_at": "2024-05-01T12:00:00Z",
                  "updated_at": "2024-05-01T12:00:00Z",
                  "status": "committed",
                  "last_used_at": "2024-05-01T12:00:00Z",
                  "version_logs_count": 1,
                  "total_logs_count": 1,
                  "inputs": [
                    {
                      "name": "operation"
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/tools/:id/evaluators",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Activate and deactivate Evaluators for monitoring the Tool.\n\nAn activated Evaluator will automatically be run on all new Logs\nwithin the Tool for monitoring purposes.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.tools.update_monitoring(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "activate=[\n\t\t$FERN_INPUT\n\t]",
                      "delimiter": ",\n\t\t",
                      "innerTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "members": [
                          {
                            "type": {
                              "value": "type_:MonitoringEvaluatorVersionRequest",
                              "type": "id"
                            },
                            "template": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "{\n\t\t\t$FERN_INPUT\n\t\t}",
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"evaluator_version_id\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "evaluator_version_id",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                }
                              ],
                              "inputDelimiter": ",\n\t\t\t",
                              "type": "generic"
                            }
                          },
                          {
                            "type": {
                              "value": "type_:MonitoringEvaluatorEnvironmentRequest",
                              "type": "id"
                            },
                            "template": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "{\n\t\t\t$FERN_INPUT\n\t\t}",
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"evaluator_id\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "evaluator_id",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"environment_id\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "environment_id",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                }
                              ],
                              "inputDelimiter": ",\n\t\t\t",
                              "type": "generic"
                            }
                          }
                        ],
                        "templateInput": {
                          "location": "RELATIVE",
                          "path": null
                        },
                        "type": "union_v2"
                      },
                      "templateInput": {
                        "location": "BODY",
                        "path": "activate"
                      },
                      "type": "iterable"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "deactivate=[\n\t\t$FERN_INPUT\n\t]",
                      "delimiter": ",\n\t\t",
                      "innerTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "members": [
                          {
                            "type": {
                              "value": "type_:MonitoringEvaluatorVersionRequest",
                              "type": "id"
                            },
                            "template": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "{\n\t\t\t$FERN_INPUT\n\t\t}",
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"evaluator_version_id\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "evaluator_version_id",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                }
                              ],
                              "inputDelimiter": ",\n\t\t\t",
                              "type": "generic"
                            }
                          },
                          {
                            "type": {
                              "value": "type_:MonitoringEvaluatorEnvironmentRequest",
                              "type": "id"
                            },
                            "template": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "{\n\t\t\t$FERN_INPUT\n\t\t}",
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"evaluator_id\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "evaluator_id",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"environment_id\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "environment_id",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                }
                              ],
                              "inputDelimiter": ",\n\t\t\t",
                              "type": "generic"
                            }
                          }
                        ],
                        "templateInput": {
                          "location": "RELATIVE",
                          "path": null
                        },
                        "type": "union_v2"
                      },
                      "templateInput": {
                        "location": "BODY",
                        "path": "deactivate"
                      },
                      "type": "iterable"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.tools.updateMonitoring(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "iterable",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "activate: [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                  "delimiter": ",\n\t\t\t\t",
                                  "innerTemplate": {
                                    "type": "union_v2",
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "members": [
                                      {
                                        "template": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "inputDelimiter": ",\n\t\t\t\t\t",
                                          "templateInputs": [
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "evaluatorVersionId: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "evaluator_version_id"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "type": {
                                          "type": "id",
                                          "value": "type_:MonitoringEvaluatorVersionRequest"
                                        }
                                      },
                                      {
                                        "template": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "inputDelimiter": ",\n\t\t\t\t\t",
                                          "templateInputs": [
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "evaluatorId: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "evaluator_id"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "environmentId: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "environment_id"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "type": {
                                          "type": "id",
                                          "value": "type_:MonitoringEvaluatorEnvironmentRequest"
                                        }
                                      }
                                    ],
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  },
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "activate"
                                  }
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "iterable",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "deactivate: [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                  "delimiter": ",\n\t\t\t\t",
                                  "innerTemplate": {
                                    "type": "union_v2",
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "members": [
                                      {
                                        "template": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "inputDelimiter": ",\n\t\t\t\t\t",
                                          "templateInputs": [
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "evaluatorVersionId: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "evaluator_version_id"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "type": {
                                          "type": "id",
                                          "value": "type_:MonitoringEvaluatorVersionRequest"
                                        }
                                      },
                                      {
                                        "template": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "inputDelimiter": ",\n\t\t\t\t\t",
                                          "templateInputs": [
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "evaluatorId: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "evaluator_id"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "environmentId: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "environment_id"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "type": {
                                          "type": "id",
                                          "value": "type_:MonitoringEvaluatorEnvironmentRequest"
                                        }
                                      }
                                    ],
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  },
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "deactivate"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        }
      ],
      "types": [],
      "subpackages": [],
      "urlSlug": "tools",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_datasets": {
      "subpackageId": "subpackage_datasets",
      "name": "datasets",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "list",
          "migratedFromUrlSlugs": ["list-datasets"],
          "method": "GET",
          "id": "list",
          "originalEndpointId": "endpoint_datasets.list",
          "name": "List Datasets",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/datasets"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Page offset for pagination.",
              "key": "page",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "Page size for pagination. Number of Datasets to fetch.",
              "key": "size",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "Case-insensitive filter for Dataset name.",
              "key": "name",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Case-insensitive filter for users in the Dataset. This filter matches against both email address and name of users.",
              "key": "user_filter",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Field to sort Datasets by",
              "key": "sort_by",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_:ProjectSortBy"
                }
              }
            },
            {
              "description": "Direction to sort by.",
              "key": "order",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_:SortOrder"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:PaginatedDatasetResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "List datasets",
              "path": "/datasets",
              "pathParameters": {},
              "queryParameters": {
                "size": 1
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "records": [
                  {
                    "id": "ds_345mno",
                    "path": "test-questions",
                    "name": "test-questions",
                    "version_id": "dsv_678pqr",
                    "type": "dataset",
                    "created_at": "2024-05-01T12:00:00Z",
                    "updated_at": "2024-05-01T12:00:00Z",
                    "created_by": {
                      "id": "usr_v23rSVAgas2a",
                      "full_name": "Jordan Burges",
                      "email_address": "jordan@humanloop.com"
                    },
                    "status": "committed",
                    "commit_message": "initial commit",
                    "last_used_at": "2024-05-01T12:00:00Z",
                    "datapoints_count": 2
                  }
                ],
                "page": 0,
                "size": 1,
                "total": 1
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "records": [
                    {
                      "id": "ds_345mno",
                      "path": "test-questions",
                      "name": "test-questions",
                      "version_id": "dsv_678pqr",
                      "type": "dataset",
                      "created_at": "2024-05-01T12:00:00Z",
                      "updated_at": "2024-05-01T12:00:00Z",
                      "created_by": {
                        "id": "usr_v23rSVAgas2a",
                        "full_name": "Jordan Burges",
                        "email_address": "jordan@humanloop.com"
                      },
                      "status": "committed",
                      "commit_message": "initial commit",
                      "last_used_at": "2024-05-01T12:00:00Z",
                      "datapoints_count": 2
                    }
                  ],
                  "page": 0,
                  "size": 1,
                  "total": 1
                }
              },
              "codeSamples": []
            },
            {
              "path": "/datasets",
              "pathParameters": {},
              "queryParameters": {
                "page": 0,
                "size": 0
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "List all Datasets.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.datasets.list(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "page=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "page",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "size=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "size",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "name=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "name",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "user_filter=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "user_filter",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "sort_by=$FERN_INPUT",
                      "values": {
                        "created_at": "\"created_at\"",
                        "updated_at": "\"updated_at\"",
                        "name": "\"name\""
                      },
                      "templateInput": {
                        "location": "QUERY",
                        "path": "sort_by"
                      },
                      "type": "enum"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "order=$FERN_INPUT",
                      "values": {
                        "asc": "\"asc\"",
                        "desc": "\"desc\""
                      },
                      "templateInput": {
                        "location": "QUERY",
                        "path": "order"
                      },
                      "type": "enum"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.datasets.list(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "page: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "page"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "size: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "size"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "name: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "name"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "userFilter: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "user_filter"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "enum",
                            "imports": [],
                            "isOptional": true,
                            "values": {
                              "created_at": "\"created_at\"",
                              "updated_at": "\"updated_at\"",
                              "name": "\"name\""
                            },
                            "templateString": "sortBy: $FERN_INPUT",
                            "templateInput": {
                              "location": "QUERY",
                              "path": "sort_by"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "enum",
                            "imports": [],
                            "isOptional": true,
                            "values": {
                              "asc": "\"asc\"",
                              "desc": "\"desc\""
                            },
                            "templateString": "order: $FERN_INPUT",
                            "templateInput": {
                              "location": "QUERY",
                              "path": "order"
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "upsert",
          "migratedFromUrlSlugs": ["upsert-dataset"],
          "method": "POST",
          "id": "upsert",
          "originalEndpointId": "endpoint_datasets.upsert",
          "name": "Upsert Dataset",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/datasets"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "ID of the specific Dataset version to base the created Version on. Only used when `action` is `\"add\"` or `\"remove\"`.",
              "key": "version_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Name of the Environment identifying a deployed Version to base the created Version on. Only used when `action` is `\"add\"` or `\"remove\"`.",
              "key": "environment",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Path of the Dataset, including the name. This locates the Dataset in the Humanloop filesystem and is used as as a unique identifier. For example: `folder/name` or just `name`.",
                  "key": "path",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "ID for an existing Dataset.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The Datapoints to create this Dataset version with. Modify the `action` field to determine how these Datapoints are used.",
                  "key": "datapoints",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CreateDatapointRequest"
                    }
                  }
                },
                {
                  "description": "The action to take with the provided Datapoints.\n\n - If `\"set\"`, the created version will only contain the Datapoints provided in this request. \n - If `\"add\"`, the created version will contain the Datapoints provided in this request in addition to the Datapoints in the target version. \n - If `\"remove\"`, the created version will contain the Datapoints in the target version except for the Datapoints provided in this request. \n\nIf `\"add\"` or `\"remove\"`, one of the `version_id` or `environment` query parameters may be provided.",
                  "key": "action",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:UpdateDatesetAction"
                    }
                  }
                },
                {
                  "description": "Additional fields to describe the Dataset. Helpful to separate Dataset versions from each other with details on how they were created or used.",
                  "key": "attributes",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "Message describing the changes made. If provided, a committed version of the Dataset is created. Otherwise, an uncommitted version is created.",
                  "key": "commit_message",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:DatasetResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "AddToDataset",
              "path": "/datasets",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "path": "test-questions",
                "datapoints": [
                  {
                    "inputs": {
                      "question": "What is the capital of France?"
                    },
                    "target": {
                      "answer": "Paris"
                    }
                  },
                  {
                    "inputs": {
                      "question": "Who wrote Hamlet?"
                    },
                    "target": {
                      "answer": "William Shakespeare"
                    }
                  }
                ],
                "action": "set",
                "commit_message": "Add two new questions and answers"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "ds_mno345",
                "path": "test-questions",
                "name": "test-questions",
                "version_id": "dsv_pqr678",
                "type": "dataset",
                "created_at": "2024-05-01T12:00:00Z",
                "updated_at": "2024-05-01T12:00:00Z",
                "status": "committed",
                "last_used_at": "2024-05-01T12:00:00Z",
                "datapoints_count": 4
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "path": "test-questions",
                  "datapoints": [
                    {
                      "inputs": {
                        "question": "What is the capital of France?"
                      },
                      "target": {
                        "answer": "Paris"
                      }
                    },
                    {
                      "inputs": {
                        "question": "Who wrote Hamlet?"
                      },
                      "target": {
                        "answer": "William Shakespeare"
                      }
                    }
                  ],
                  "action": "set",
                  "commit_message": "Add two new questions and answers"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "ds_mno345",
                  "path": "test-questions",
                  "name": "test-questions",
                  "version_id": "dsv_pqr678",
                  "type": "dataset",
                  "created_at": "2024-05-01T12:00:00Z",
                  "updated_at": "2024-05-01T12:00:00Z",
                  "status": "committed",
                  "last_used_at": "2024-05-01T12:00:00Z",
                  "datapoints_count": 4
                }
              },
              "codeSamples": []
            },
            {
              "name": "CreateSupportDataset",
              "path": "/datasets",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "path": "datasets/support-queries",
                "datapoints": [
                  {
                    "messages": [
                      {
                        "role": "user",
                        "content": "How do i manage my organizations API keys?\n"
                      }
                    ],
                    "target": {
                      "response": "Hey, thanks for your questions. Here are steps for how to achieve: 1. Log in to the Humanloop Dashboard \n\n2. Click on \"Organization Settings.\"\n If you do not see this option, you might need to contact your organization admin to gain the necessary permissions.\n\n3. Within the settings or organization settings, select the option labeled \"API Keys\" on the left. Here you will be able to view and manage your API keys.\n\n4. You will see a list of existing API keys. You can perform various actions, such as:\n     - **Generate New API Key:** Click on the \"Generate New Key\" button if you need a new API key.\n     - **Revoke an API Key:** If you need to disable an existing key, find the key in the list and click the \"Revoke\" or \"Delete\" button.\n     - **Copy an API Key:** If you need to use an existing key, you can copy it to your clipboard by clicking the \"Copy\" button next to the key.\n\n5. **Save and Secure API Keys:** Make sure to securely store any new or existing API keys you are using. Treat them like passwords and do not share them publicly.\n\nIf you encounter any issues or need further assistance, it might be helpful to engage with an engineer or your IT department to ensure you have the necessary permissions and support.\n\nWould you need help with anything else?"
                    }
                  },
                  {
                    "messages": [
                      {
                        "role": "user",
                        "content": "Hey, can do I use my code evaluator for monitoring my legal-copilot prompt?"
                      }
                    ],
                    "target": {
                      "response": "Hey, thanks for your questions. Here are steps for how to achieve: 1. Navigate to your Prompt dashboard. \n 2. Select the `Monitoring` button on the top right of the Prompt dashboard \n 3. Within the model select the Version of the Evaluator you want to turn on for monitoring. \n\nWould you need help with anything else?"
                    }
                  }
                ],
                "commit_message": "Add two new questions and answers"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "ds_mno345",
                "path": "test-questions",
                "name": "test-questions",
                "version_id": "dsv_pqr678",
                "type": "dataset",
                "created_at": "2024-05-01T12:00:00Z",
                "updated_at": "2024-05-01T12:00:00Z",
                "status": "committed",
                "last_used_at": "2024-05-01T12:00:00Z",
                "datapoints_count": 4
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "path": "datasets/support-queries",
                  "datapoints": [
                    {
                      "messages": [
                        {
                          "role": "user",
                          "content": "How do i manage my organizations API keys?\n"
                        }
                      ],
                      "target": {
                        "response": "Hey, thanks for your questions. Here are steps for how to achieve: 1. Log in to the Humanloop Dashboard \n\n2. Click on \"Organization Settings.\"\n If you do not see this option, you might need to contact your organization admin to gain the necessary permissions.\n\n3. Within the settings or organization settings, select the option labeled \"API Keys\" on the left. Here you will be able to view and manage your API keys.\n\n4. You will see a list of existing API keys. You can perform various actions, such as:\n     - **Generate New API Key:** Click on the \"Generate New Key\" button if you need a new API key.\n     - **Revoke an API Key:** If you need to disable an existing key, find the key in the list and click the \"Revoke\" or \"Delete\" button.\n     - **Copy an API Key:** If you need to use an existing key, you can copy it to your clipboard by clicking the \"Copy\" button next to the key.\n\n5. **Save and Secure API Keys:** Make sure to securely store any new or existing API keys you are using. Treat them like passwords and do not share them publicly.\n\nIf you encounter any issues or need further assistance, it might be helpful to engage with an engineer or your IT department to ensure you have the necessary permissions and support.\n\nWould you need help with anything else?"
                      }
                    },
                    {
                      "messages": [
                        {
                          "role": "user",
                          "content": "Hey, can do I use my code evaluator for monitoring my legal-copilot prompt?"
                        }
                      ],
                      "target": {
                        "response": "Hey, thanks for your questions. Here are steps for how to achieve: 1. Navigate to your Prompt dashboard. \n 2. Select the `Monitoring` button on the top right of the Prompt dashboard \n 3. Within the model select the Version of the Evaluator you want to turn on for monitoring. \n\nWould you need help with anything else?"
                      }
                    }
                  ],
                  "commit_message": "Add two new questions and answers"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "ds_mno345",
                  "path": "test-questions",
                  "name": "test-questions",
                  "version_id": "dsv_pqr678",
                  "type": "dataset",
                  "created_at": "2024-05-01T12:00:00Z",
                  "updated_at": "2024-05-01T12:00:00Z",
                  "status": "committed",
                  "last_used_at": "2024-05-01T12:00:00Z",
                  "datapoints_count": 4
                }
              },
              "codeSamples": []
            },
            {
              "path": "/datasets",
              "pathParameters": {},
              "queryParameters": {
                "version_id": "string",
                "environment": "string"
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "datapoints": [{}]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Create a Dataset or update it with a new version if it already exists.\n\nDatasets are identified by the `ID` or their `path`. The datapoints determine the versions of the Dataset.\n\nBy default, the new Dataset version will be set to the list of Datapoints provided in\nthe request. You can also create a new version by adding or removing Datapoints from an existing version\nby specifying `action` as `add` or `remove` respectively. In this case, you may specify\nthe `version_id` or `environment` query parameters to identify the existing version to base\nthe new version on. If neither is provided, the default deployed version will be used.\n\nIf you provide a commit message, then the new version will be committed;\notherwise it will be uncommitted. If you try to commit an already committed version,\nan exception will be raised.\n\nHumanloop also deduplicates Datapoints. If you try to add a Datapoint that already\nexists, it will be ignored. If you intentionally want to add a duplicate Datapoint,\nyou can add a unique identifier to the Datapoint's inputs such as `{_dedupe_id: <unique ID>}`.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.datasets.upsert(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "version_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "version_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "environment=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "environment",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "path=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "path",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "datapoints=[\n\t\t$FERN_INPUT\n\t]",
                      "delimiter": ",\n\t\t",
                      "innerTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "{\n\t\t\t$FERN_INPUT\n\t\t}",
                        "templateInputs": [
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "containerTemplateString": "\"inputs\": {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                              "delimiter": ",\n\t\t\t\t",
                              "keyTemplate": {
                                "imports": [],
                                "isOptional": true,
                                "templateString": "$FERN_INPUT",
                                "templateInputs": [
                                  {
                                    "location": "RELATIVE",
                                    "path": null,
                                    "type": "payload"
                                  }
                                ],
                                "type": "generic"
                              },
                              "valueTemplate": {
                                "imports": [],
                                "isOptional": true,
                                "templateString": "$FERN_INPUT",
                                "templateInputs": [
                                  {
                                    "location": "RELATIVE",
                                    "path": null,
                                    "type": "payload"
                                  }
                                ],
                                "type": "generic"
                              },
                              "keyValueSeparator": ": ",
                              "templateInput": {
                                "location": "RELATIVE",
                                "path": "inputs"
                              },
                              "type": "dict"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "containerTemplateString": "\"messages\": [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                              "delimiter": ",\n\t\t\t\t",
                              "innerTemplate": {
                                "imports": [],
                                "isOptional": true,
                                "templateString": "{\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                "templateInputs": [
                                  {
                                    "type": "template",
                                    "value": {
                                      "imports": [],
                                      "isOptional": true,
                                      "templateString": "\"content\": $FERN_INPUT",
                                      "members": [
                                        {
                                          "type": {
                                            "type": "primitive",
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "template": {
                                            "imports": [],
                                            "isOptional": true,
                                            "templateString": "$FERN_INPUT",
                                            "templateInputs": [
                                              {
                                                "location": "RELATIVE",
                                                "path": null,
                                                "type": "payload"
                                              }
                                            ],
                                            "type": "generic"
                                          }
                                        },
                                        {
                                          "type": {
                                            "itemType": {
                                              "value": "type_:ChatMessageContentItem",
                                              "type": "id"
                                            },
                                            "type": "list"
                                          },
                                          "template": {
                                            "imports": [],
                                            "isOptional": true,
                                            "containerTemplateString": "[\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t]",
                                            "delimiter": ",\n\t\t\t\t\t\t",
                                            "innerTemplate": {
                                              "imports": [],
                                              "isOptional": true,
                                              "templateString": "$FERN_INPUT",
                                              "members": [
                                                {
                                                  "type": {
                                                    "value": "type_:TextChatContent",
                                                    "type": "id"
                                                  },
                                                  "template": {
                                                    "imports": [],
                                                    "isOptional": true,
                                                    "templateString": "{\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t}",
                                                    "templateInputs": [
                                                      {
                                                        "type": "template",
                                                        "value": {
                                                          "imports": [],
                                                          "isOptional": true,
                                                          "templateString": "\"text\": $FERN_INPUT",
                                                          "templateInputs": [
                                                            {
                                                              "location": "RELATIVE",
                                                              "path": "text",
                                                              "type": "payload"
                                                            }
                                                          ],
                                                          "type": "generic"
                                                        }
                                                      }
                                                    ],
                                                    "inputDelimiter": ",\n\t\t\t\t\t\t\t",
                                                    "type": "generic"
                                                  }
                                                },
                                                {
                                                  "type": {
                                                    "value": "type_:ImageChatContent",
                                                    "type": "id"
                                                  },
                                                  "template": {
                                                    "imports": [],
                                                    "isOptional": true,
                                                    "templateString": "{\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t}",
                                                    "templateInputs": [
                                                      {
                                                        "type": "template",
                                                        "value": {
                                                          "imports": [],
                                                          "isOptional": true,
                                                          "templateString": "\"image_url\": {\n\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t}",
                                                          "templateInputs": [
                                                            {
                                                              "type": "template",
                                                              "value": {
                                                                "imports": [],
                                                                "isOptional": true,
                                                                "templateString": "\"url\": $FERN_INPUT",
                                                                "templateInputs": [
                                                                  {
                                                                    "location": "RELATIVE",
                                                                    "path": "image_url.url",
                                                                    "type": "payload"
                                                                  }
                                                                ],
                                                                "type": "generic"
                                                              }
                                                            },
                                                            {
                                                              "type": "template",
                                                              "value": {
                                                                "imports": [],
                                                                "isOptional": true,
                                                                "templateString": "\"detail\": $FERN_INPUT",
                                                                "values": {
                                                                  "high": "\"high\"",
                                                                  "low": "\"low\"",
                                                                  "auto": "\"auto\""
                                                                },
                                                                "templateInput": {
                                                                  "location": "RELATIVE",
                                                                  "path": "image_url.detail"
                                                                },
                                                                "type": "enum"
                                                              }
                                                            }
                                                          ],
                                                          "inputDelimiter": ",\n\t\t\t\t\t\t\t\t",
                                                          "type": "generic"
                                                        }
                                                      }
                                                    ],
                                                    "inputDelimiter": ",\n\t\t\t\t\t\t\t",
                                                    "type": "generic"
                                                  }
                                                }
                                              ],
                                              "templateInput": {
                                                "location": "RELATIVE",
                                                "path": null
                                              },
                                              "type": "union_v2"
                                            },
                                            "templateInput": {
                                              "location": "RELATIVE",
                                              "path": null
                                            },
                                            "type": "iterable"
                                          }
                                        }
                                      ],
                                      "templateInput": {
                                        "location": "RELATIVE",
                                        "path": "content"
                                      },
                                      "type": "union_v2"
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "imports": [],
                                      "isOptional": true,
                                      "templateString": "\"name\": $FERN_INPUT",
                                      "templateInputs": [
                                        {
                                          "location": "RELATIVE",
                                          "path": "name",
                                          "type": "payload"
                                        }
                                      ],
                                      "type": "generic"
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "imports": [],
                                      "isOptional": true,
                                      "templateString": "\"tool_call_id\": $FERN_INPUT",
                                      "templateInputs": [
                                        {
                                          "location": "RELATIVE",
                                          "path": "tool_call_id",
                                          "type": "payload"
                                        }
                                      ],
                                      "type": "generic"
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "imports": [],
                                      "isOptional": true,
                                      "templateString": "\"role\": $FERN_INPUT",
                                      "values": {
                                        "user": "\"user\"",
                                        "assistant": "\"assistant\"",
                                        "system": "\"system\"",
                                        "tool": "\"tool\""
                                      },
                                      "templateInput": {
                                        "location": "RELATIVE",
                                        "path": "role"
                                      },
                                      "type": "enum"
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "imports": [],
                                      "isOptional": true,
                                      "containerTemplateString": "\"tool_calls\": [\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t]",
                                      "delimiter": ",\n\t\t\t\t\t\t",
                                      "innerTemplate": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "{\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t}",
                                        "templateInputs": [
                                          {
                                            "type": "template",
                                            "value": {
                                              "imports": [],
                                              "isOptional": true,
                                              "templateString": "\"id\": $FERN_INPUT",
                                              "templateInputs": [
                                                {
                                                  "location": "RELATIVE",
                                                  "path": "id",
                                                  "type": "payload"
                                                }
                                              ],
                                              "type": "generic"
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "imports": [],
                                              "isOptional": true,
                                              "templateString": "\"function\": {\n\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t}",
                                              "templateInputs": [
                                                {
                                                  "type": "template",
                                                  "value": {
                                                    "imports": [],
                                                    "isOptional": true,
                                                    "templateString": "\"name\": $FERN_INPUT",
                                                    "templateInputs": [
                                                      {
                                                        "location": "RELATIVE",
                                                        "path": "function.name",
                                                        "type": "payload"
                                                      }
                                                    ],
                                                    "type": "generic"
                                                  }
                                                },
                                                {
                                                  "type": "template",
                                                  "value": {
                                                    "imports": [],
                                                    "isOptional": true,
                                                    "templateString": "\"arguments\": $FERN_INPUT",
                                                    "templateInputs": [
                                                      {
                                                        "location": "RELATIVE",
                                                        "path": "function.arguments",
                                                        "type": "payload"
                                                      }
                                                    ],
                                                    "type": "generic"
                                                  }
                                                }
                                              ],
                                              "inputDelimiter": ",\n\t\t\t\t\t\t\t\t",
                                              "type": "generic"
                                            }
                                          }
                                        ],
                                        "inputDelimiter": ",\n\t\t\t\t\t\t\t",
                                        "type": "generic"
                                      },
                                      "templateInput": {
                                        "location": "RELATIVE",
                                        "path": "tool_calls"
                                      },
                                      "type": "iterable"
                                    }
                                  }
                                ],
                                "inputDelimiter": ",\n\t\t\t\t\t",
                                "type": "generic"
                              },
                              "templateInput": {
                                "location": "RELATIVE",
                                "path": "messages"
                              },
                              "type": "iterable"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "containerTemplateString": "\"target\": {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                              "delimiter": ",\n\t\t\t\t",
                              "keyTemplate": {
                                "imports": [],
                                "isOptional": true,
                                "templateString": "$FERN_INPUT",
                                "templateInputs": [
                                  {
                                    "location": "RELATIVE",
                                    "path": null,
                                    "type": "payload"
                                  }
                                ],
                                "type": "generic"
                              },
                              "valueTemplate": {
                                "imports": [],
                                "isOptional": true,
                                "templateString": "$FERN_INPUT",
                                "members": [
                                  {
                                    "type": {
                                      "type": "primitive",
                                      "value": {
                                        "type": "string"
                                      }
                                    },
                                    "template": {
                                      "imports": [],
                                      "isOptional": true,
                                      "templateString": "$FERN_INPUT",
                                      "templateInputs": [
                                        {
                                          "location": "RELATIVE",
                                          "path": null,
                                          "type": "payload"
                                        }
                                      ],
                                      "type": "generic"
                                    }
                                  },
                                  {
                                    "type": {
                                      "type": "primitive",
                                      "value": {
                                        "type": "integer"
                                      }
                                    },
                                    "template": {
                                      "imports": [],
                                      "isOptional": true,
                                      "templateString": "$FERN_INPUT",
                                      "templateInputs": [
                                        {
                                          "location": "RELATIVE",
                                          "path": null,
                                          "type": "payload"
                                        }
                                      ],
                                      "type": "generic"
                                    }
                                  },
                                  {
                                    "type": {
                                      "type": "primitive",
                                      "value": {
                                        "type": "double"
                                      }
                                    },
                                    "template": {
                                      "imports": [],
                                      "isOptional": true,
                                      "templateString": "$FERN_INPUT",
                                      "templateInputs": [
                                        {
                                          "location": "RELATIVE",
                                          "path": null,
                                          "type": "payload"
                                        }
                                      ],
                                      "type": "generic"
                                    }
                                  },
                                  {
                                    "type": {
                                      "type": "primitive",
                                      "value": {
                                        "type": "boolean"
                                      }
                                    },
                                    "template": {
                                      "imports": [],
                                      "isOptional": true,
                                      "templateString": "$FERN_INPUT",
                                      "templateInputs": [
                                        {
                                          "location": "RELATIVE",
                                          "path": null,
                                          "type": "payload"
                                        }
                                      ],
                                      "type": "generic"
                                    }
                                  },
                                  {
                                    "type": {
                                      "itemType": {
                                        "type": "unknown"
                                      },
                                      "type": "list"
                                    },
                                    "template": {
                                      "imports": [],
                                      "isOptional": true,
                                      "containerTemplateString": "[\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                      "delimiter": ",\n\t\t\t\t\t",
                                      "innerTemplate": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "$FERN_INPUT",
                                        "templateInputs": [
                                          {
                                            "location": "RELATIVE",
                                            "path": null,
                                            "type": "payload"
                                          }
                                        ],
                                        "type": "generic"
                                      },
                                      "templateInput": {
                                        "location": "RELATIVE",
                                        "path": null
                                      },
                                      "type": "iterable"
                                    }
                                  },
                                  {
                                    "type": {
                                      "keyType": {
                                        "type": "primitive",
                                        "value": {
                                          "type": "string"
                                        }
                                      },
                                      "valueType": {
                                        "type": "unknown"
                                      },
                                      "type": "map"
                                    },
                                    "template": {
                                      "imports": [],
                                      "isOptional": true,
                                      "containerTemplateString": "{\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                      "delimiter": ",\n\t\t\t\t\t",
                                      "keyTemplate": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "$FERN_INPUT",
                                        "templateInputs": [
                                          {
                                            "location": "RELATIVE",
                                            "path": null,
                                            "type": "payload"
                                          }
                                        ],
                                        "type": "generic"
                                      },
                                      "valueTemplate": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "$FERN_INPUT",
                                        "templateInputs": [
                                          {
                                            "location": "RELATIVE",
                                            "path": null,
                                            "type": "payload"
                                          }
                                        ],
                                        "type": "generic"
                                      },
                                      "keyValueSeparator": ": ",
                                      "templateInput": {
                                        "location": "RELATIVE",
                                        "path": null
                                      },
                                      "type": "dict"
                                    }
                                  }
                                ],
                                "templateInput": {
                                  "location": "RELATIVE",
                                  "path": null
                                },
                                "type": "union_v2"
                              },
                              "keyValueSeparator": ": ",
                              "templateInput": {
                                "location": "RELATIVE",
                                "path": "target"
                              },
                              "type": "dict"
                            }
                          }
                        ],
                        "inputDelimiter": ",\n\t\t\t",
                        "type": "generic"
                      },
                      "templateInput": {
                        "location": "BODY",
                        "path": "datapoints"
                      },
                      "type": "iterable"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "action=$FERN_INPUT",
                      "values": {
                        "set": "\"set\"",
                        "add": "\"add\"",
                        "remove": "\"remove\""
                      },
                      "templateInput": {
                        "location": "BODY",
                        "path": "action"
                      },
                      "type": "enum"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "attributes={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "attributes"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "commit_message=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "commit_message",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.datasets.upsert(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "versionId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "version_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "environment: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "environment"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "path: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "path"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "id: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "iterable",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "datapoints: [\n\t\t\t$FERN_INPUT\n\t\t]",
                            "delimiter": ",\n\t\t\t",
                            "innerTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "{\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                              "isOptional": true,
                              "inputDelimiter": ",\n\t\t\t\t",
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "dict",
                                    "imports": [],
                                    "isOptional": true,
                                    "containerTemplateString": "inputs: {\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                    "delimiter": ",\n\t\t\t\t\t",
                                    "keyValueSeparator": ": ",
                                    "keyTemplate": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "$FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "RELATIVE",
                                          "path": null
                                        }
                                      ]
                                    },
                                    "valueTemplate": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "$FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "RELATIVE",
                                          "path": null
                                        }
                                      ]
                                    },
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": "inputs"
                                    }
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "iterable",
                                    "imports": [],
                                    "isOptional": true,
                                    "containerTemplateString": "messages: [\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                    "delimiter": ",\n\t\t\t\t\t",
                                    "innerTemplate": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "{\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                      "isOptional": true,
                                      "inputDelimiter": ",\n\t\t\t\t\t\t",
                                      "templateInputs": [
                                        {
                                          "type": "template",
                                          "value": {
                                            "type": "union_v2",
                                            "imports": [],
                                            "isOptional": true,
                                            "templateString": "content: $FERN_INPUT",
                                            "members": [
                                              {
                                                "template": {
                                                  "type": "generic",
                                                  "imports": [],
                                                  "templateString": "$FERN_INPUT",
                                                  "isOptional": true,
                                                  "templateInputs": [
                                                    {
                                                      "type": "payload",
                                                      "location": "RELATIVE",
                                                      "path": null
                                                    }
                                                  ]
                                                },
                                                "type": {
                                                  "type": "primitive",
                                                  "value": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              {
                                                "template": {
                                                  "type": "iterable",
                                                  "imports": [],
                                                  "isOptional": true,
                                                  "containerTemplateString": "[\n\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t]",
                                                  "delimiter": ",\n\t\t\t\t\t\t\t\t",
                                                  "innerTemplate": {
                                                    "type": "union_v2",
                                                    "imports": [],
                                                    "isOptional": true,
                                                    "templateString": "$FERN_INPUT",
                                                    "members": [
                                                      {
                                                        "template": {
                                                          "type": "generic",
                                                          "imports": [],
                                                          "templateString": "$FERN_INPUT",
                                                          "isOptional": true,
                                                          "inputDelimiter": ",\n\t\t\t\t\t\t\t\t\t",
                                                          "templateInputs": [
                                                            {
                                                              "type": "template",
                                                              "value": {
                                                                "type": "generic",
                                                                "imports": [],
                                                                "templateString": "text: $FERN_INPUT",
                                                                "isOptional": true,
                                                                "templateInputs": [
                                                                  {
                                                                    "type": "payload",
                                                                    "location": "RELATIVE",
                                                                    "path": "text"
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "type": {
                                                          "type": "id",
                                                          "value": "type_:TextChatContent"
                                                        }
                                                      },
                                                      {
                                                        "template": {
                                                          "type": "generic",
                                                          "imports": [],
                                                          "templateString": "$FERN_INPUT",
                                                          "isOptional": true,
                                                          "inputDelimiter": ",\n\t\t\t\t\t\t\t\t\t",
                                                          "templateInputs": [
                                                            {
                                                              "type": "template",
                                                              "value": {
                                                                "type": "generic",
                                                                "imports": [],
                                                                "templateString": "imageUrl: {\n\t\t\t\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t\t\t\t}",
                                                                "isOptional": true,
                                                                "inputDelimiter": ",\n\t\t\t\t\t\t\t\t\t\t\t",
                                                                "templateInputs": []
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "type": {
                                                          "type": "id",
                                                          "value": "type_:ImageChatContent"
                                                        }
                                                      }
                                                    ],
                                                    "templateInput": {
                                                      "location": "RELATIVE",
                                                      "path": null
                                                    }
                                                  },
                                                  "templateInput": {
                                                    "location": "RELATIVE",
                                                    "path": null
                                                  }
                                                },
                                                "type": {
                                                  "type": "list",
                                                  "itemType": {
                                                    "type": "id",
                                                    "value": "type_:ChatMessageContentItem"
                                                  }
                                                }
                                              }
                                            ],
                                            "templateInput": {
                                              "location": "RELATIVE",
                                              "path": "content"
                                            }
                                          }
                                        },
                                        {
                                          "type": "template",
                                          "value": {
                                            "type": "generic",
                                            "imports": [],
                                            "templateString": "name: $FERN_INPUT",
                                            "isOptional": true,
                                            "templateInputs": [
                                              {
                                                "type": "payload",
                                                "location": "RELATIVE",
                                                "path": "name"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "template",
                                          "value": {
                                            "type": "generic",
                                            "imports": [],
                                            "templateString": "toolCallId: $FERN_INPUT",
                                            "isOptional": true,
                                            "templateInputs": [
                                              {
                                                "type": "payload",
                                                "location": "RELATIVE",
                                                "path": "tool_call_id"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "template",
                                          "value": {
                                            "type": "enum",
                                            "imports": [],
                                            "isOptional": true,
                                            "values": {
                                              "user": "\"user\"",
                                              "assistant": "\"assistant\"",
                                              "system": "\"system\"",
                                              "tool": "\"tool\""
                                            },
                                            "templateString": "role: $FERN_INPUT",
                                            "templateInput": {
                                              "location": "RELATIVE",
                                              "path": "role"
                                            }
                                          }
                                        },
                                        {
                                          "type": "template",
                                          "value": {
                                            "type": "iterable",
                                            "imports": [],
                                            "isOptional": true,
                                            "containerTemplateString": "toolCalls: [\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t]",
                                            "delimiter": ",\n\t\t\t\t\t\t\t",
                                            "innerTemplate": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "{\n\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t}",
                                              "isOptional": true,
                                              "inputDelimiter": ",\n\t\t\t\t\t\t\t\t",
                                              "templateInputs": [
                                                {
                                                  "type": "template",
                                                  "value": {
                                                    "type": "generic",
                                                    "imports": [],
                                                    "templateString": "id: $FERN_INPUT",
                                                    "isOptional": true,
                                                    "templateInputs": [
                                                      {
                                                        "type": "payload",
                                                        "location": "RELATIVE",
                                                        "path": "id"
                                                      }
                                                    ]
                                                  }
                                                },
                                                {
                                                  "type": "template",
                                                  "value": {
                                                    "type": "generic",
                                                    "imports": [],
                                                    "templateString": "function: {\n\t\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t\t}",
                                                    "isOptional": true,
                                                    "inputDelimiter": ",\n\t\t\t\t\t\t\t\t\t",
                                                    "templateInputs": [
                                                      {
                                                        "type": "template",
                                                        "value": {
                                                          "type": "generic",
                                                          "imports": [],
                                                          "templateString": "name: $FERN_INPUT",
                                                          "isOptional": true,
                                                          "templateInputs": [
                                                            {
                                                              "type": "payload",
                                                              "location": "RELATIVE",
                                                              "path": "function.name"
                                                            }
                                                          ]
                                                        }
                                                      },
                                                      {
                                                        "type": "template",
                                                        "value": {
                                                          "type": "generic",
                                                          "imports": [],
                                                          "templateString": "arguments: $FERN_INPUT",
                                                          "isOptional": true,
                                                          "templateInputs": [
                                                            {
                                                              "type": "payload",
                                                              "location": "RELATIVE",
                                                              "path": "function.arguments"
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            },
                                            "templateInput": {
                                              "location": "RELATIVE",
                                              "path": "tool_calls"
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": "messages"
                                    }
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "dict",
                                    "imports": [],
                                    "isOptional": true,
                                    "containerTemplateString": "target: {\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                    "delimiter": ",\n\t\t\t\t\t",
                                    "keyValueSeparator": ": ",
                                    "keyTemplate": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "$FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "RELATIVE",
                                          "path": null
                                        }
                                      ]
                                    },
                                    "valueTemplate": {
                                      "type": "union_v2",
                                      "imports": [],
                                      "isOptional": true,
                                      "templateString": "$FERN_INPUT",
                                      "members": [
                                        {
                                          "template": {
                                            "type": "generic",
                                            "imports": [],
                                            "templateString": "$FERN_INPUT",
                                            "isOptional": true,
                                            "templateInputs": [
                                              {
                                                "type": "payload",
                                                "location": "RELATIVE",
                                                "path": null
                                              }
                                            ]
                                          },
                                          "type": {
                                            "type": "primitive",
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        {
                                          "template": {
                                            "type": "generic",
                                            "imports": [],
                                            "templateString": "$FERN_INPUT",
                                            "isOptional": true,
                                            "templateInputs": [
                                              {
                                                "type": "payload",
                                                "location": "RELATIVE",
                                                "path": null
                                              }
                                            ]
                                          },
                                          "type": {
                                            "type": "primitive",
                                            "value": {
                                              "type": "integer"
                                            }
                                          }
                                        },
                                        {
                                          "template": {
                                            "type": "generic",
                                            "imports": [],
                                            "templateString": "$FERN_INPUT",
                                            "isOptional": true,
                                            "templateInputs": [
                                              {
                                                "type": "payload",
                                                "location": "RELATIVE",
                                                "path": null
                                              }
                                            ]
                                          },
                                          "type": {
                                            "type": "primitive",
                                            "value": {
                                              "type": "double"
                                            }
                                          }
                                        },
                                        {
                                          "template": {
                                            "type": "generic",
                                            "imports": [],
                                            "templateString": "$FERN_INPUT",
                                            "isOptional": true,
                                            "templateInputs": [
                                              {
                                                "type": "payload",
                                                "location": "RELATIVE",
                                                "path": null
                                              }
                                            ]
                                          },
                                          "type": {
                                            "type": "primitive",
                                            "value": {
                                              "type": "boolean"
                                            }
                                          }
                                        },
                                        {
                                          "template": {
                                            "type": "iterable",
                                            "imports": [],
                                            "isOptional": true,
                                            "containerTemplateString": "[\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t]",
                                            "delimiter": ",\n\t\t\t\t\t\t\t",
                                            "innerTemplate": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "$FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "RELATIVE",
                                                  "path": null
                                                }
                                              ]
                                            },
                                            "templateInput": {
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          },
                                          "type": {
                                            "type": "list",
                                            "itemType": {
                                              "type": "unknown"
                                            }
                                          }
                                        },
                                        {
                                          "template": {
                                            "type": "dict",
                                            "imports": [],
                                            "isOptional": true,
                                            "containerTemplateString": "{\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t}",
                                            "delimiter": ",\n\t\t\t\t\t\t\t",
                                            "keyValueSeparator": ": ",
                                            "keyTemplate": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "$FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "RELATIVE",
                                                  "path": null
                                                }
                                              ]
                                            },
                                            "valueTemplate": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "$FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "RELATIVE",
                                                  "path": null
                                                }
                                              ]
                                            },
                                            "templateInput": {
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          },
                                          "type": {
                                            "type": "map",
                                            "keyType": {
                                              "type": "primitive",
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "valueType": {
                                              "type": "unknown"
                                            }
                                          }
                                        }
                                      ],
                                      "templateInput": {
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    },
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": "target"
                                    }
                                  }
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "datapoints"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "enum",
                            "imports": [],
                            "isOptional": true,
                            "values": {
                              "set": "\"set\"",
                              "add": "\"add\"",
                              "remove": "\"remove\""
                            },
                            "templateString": "action: $FERN_INPUT",
                            "templateInput": {
                              "location": "BODY",
                              "path": "action"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "attributes: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "attributes"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "commitMessage: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "commit_message"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "get",
          "migratedFromUrlSlugs": ["get-dataset"],
          "method": "GET",
          "id": "get",
          "originalEndpointId": "endpoint_datasets.get",
          "name": "Get Dataset",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Dataset.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/datasets/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "A specific Version ID of the Dataset to retrieve.",
              "key": "version_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Name of the Environment to retrieve a deployed Version from.",
              "key": "environment",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "If set to `true`, include all Datapoints in the response. Defaults to `false`. Consider using the paginated List Datapoints endpoint instead.",
              "key": "include_datapoints",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:DatasetResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "Get dataset",
              "path": "/datasets/ds_b0baF1ca7652",
              "pathParameters": {
                "id": "ds_b0baF1ca7652"
              },
              "queryParameters": {
                "version_id": "dsv_6L78pqrdFi2xa",
                "include_datapoints": true
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "ds_345mno",
                "path": "test-questions",
                "name": "test-questions",
                "version_id": "dsv_678pqr",
                "type": "dataset",
                "created_at": "2024-05-01T12:00:00Z",
                "updated_at": "2024-05-01T12:00:00Z",
                "status": "committed",
                "last_used_at": "2024-05-01T12:00:00Z",
                "datapoints_count": 2,
                "datapoints": [
                  {
                    "id": "dp_123456",
                    "inputs": {
                      "question": "What is the capital of France?"
                    },
                    "target": {
                      "answer": "Paris"
                    }
                  },
                  {
                    "id": "dp_789012",
                    "inputs": {
                      "question": "Who wrote Hamlet?"
                    },
                    "target": {
                      "answer": "William Shakespeare"
                    }
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "ds_345mno",
                  "path": "test-questions",
                  "name": "test-questions",
                  "version_id": "dsv_678pqr",
                  "type": "dataset",
                  "created_at": "2024-05-01T12:00:00Z",
                  "updated_at": "2024-05-01T12:00:00Z",
                  "status": "committed",
                  "last_used_at": "2024-05-01T12:00:00Z",
                  "datapoints_count": 2,
                  "datapoints": [
                    {
                      "id": "dp_123456",
                      "inputs": {
                        "question": "What is the capital of France?"
                      },
                      "target": {
                        "answer": "Paris"
                      }
                    },
                    {
                      "id": "dp_789012",
                      "inputs": {
                        "question": "Who wrote Hamlet?"
                      },
                      "target": {
                        "answer": "William Shakespeare"
                      }
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/datasets/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {
                "version_id": "string",
                "environment": "string"
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Retrieve the Dataset with the given ID.\n\nUnless `include_datapoints` is set to `true`, the response will not include\nthe Datapoints.\nUse the List Datapoints endpoint (`GET /{id}/datapoints`) to efficiently\nretrieve Datapoints for a large Dataset.\n\nBy default, the deployed version of the Dataset is returned. Use the query parameters\n`version_id` or `environment` to target a specific version of the Dataset.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.datasets.get(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "version_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "version_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "environment=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "environment",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "include_datapoints=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "include_datapoints",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.datasets.get(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "versionId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "version_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "environment: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "environment"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "includeDatapoints: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "include_datapoints"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "delete",
          "migratedFromUrlSlugs": ["delete-dataset"],
          "method": "DELETE",
          "id": "delete",
          "originalEndpointId": "endpoint_datasets.delete",
          "name": "Delete Dataset",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Dataset.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/datasets/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/datasets/id",
              "pathParameters": {
                "id": "id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            },
            {
              "path": "/datasets/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Delete the Dataset with the given ID.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.datasets.delete(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.datasets.delete(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "move",
          "migratedFromUrlSlugs": ["move-dataset"],
          "method": "PATCH",
          "id": "move",
          "originalEndpointId": "endpoint_datasets.move",
          "name": "Move Dataset",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Dataset.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/datasets/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Path of the Dataset including the Dataset name, which is used as a unique identifier.",
                  "key": "path",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Name of the Dataset, which is used as a unique identifier.",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:DatasetResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/datasets/id",
              "pathParameters": {
                "id": "id"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "path": "path",
                "id": "id",
                "directory_id": "directory_id",
                "name": "name",
                "version_id": "version_id",
                "type": "dataset",
                "environments": [
                  {
                    "id": "id",
                    "created_at": "2024-01-15T09:30:00Z",
                    "name": "name",
                    "tag": "default"
                  }
                ],
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z",
                "created_by": {
                  "id": "id",
                  "email_address": "email_address",
                  "full_name": "full_name"
                },
                "status": "uncommitted",
                "last_used_at": "2024-01-15T09:30:00Z",
                "commit_message": "commit_message",
                "datapoints_count": 1,
                "datapoints": [
                  {
                    "inputs": {
                      "key": "value"
                    },
                    "messages": [
                      {
                        "role": "user"
                      }
                    ],
                    "target": {
                      "key": "value"
                    },
                    "id": "id"
                  }
                ],
                "attributes": {
                  "key": "value"
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "path": "path",
                  "id": "id",
                  "directory_id": "directory_id",
                  "name": "name",
                  "version_id": "version_id",
                  "type": "dataset",
                  "environments": [
                    {
                      "id": "id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "name": "name",
                      "tag": "default"
                    }
                  ],
                  "created_at": "2024-01-15T09:30:00Z",
                  "updated_at": "2024-01-15T09:30:00Z",
                  "created_by": {
                    "id": "id",
                    "email_address": "email_address",
                    "full_name": "full_name"
                  },
                  "status": "uncommitted",
                  "last_used_at": "2024-01-15T09:30:00Z",
                  "commit_message": "commit_message",
                  "datapoints_count": 1,
                  "datapoints": [
                    {
                      "inputs": {
                        "key": "value"
                      },
                      "messages": [
                        {
                          "role": "user"
                        }
                      ],
                      "target": {
                        "key": "value"
                      },
                      "id": "id"
                    }
                  ],
                  "attributes": {
                    "key": "value"
                  }
                }
              },
              "codeSamples": []
            },
            {
              "path": "/datasets/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Move the Dataset to a different path or change the name.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.datasets.move(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "path=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "path",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "name=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "name",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.datasets.move(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "path: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "path"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "name: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "name"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "list-datapoints",
          "method": "GET",
          "id": "listDatapoints",
          "originalEndpointId": "endpoint_datasets.listDatapoints",
          "name": "List Datapoints",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Dataset.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/datasets/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/datapoints"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "A specific Version ID of the Dataset to retrieve.",
              "key": "version_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Name of the Environment to retrieve a deployed Version from.",
              "key": "environment",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Page number for pagination.",
              "key": "page",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "Page size for pagination. Number of Datapoints to fetch.",
              "key": "size",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:PaginatedDatapointResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "List datapoints",
              "path": "/datasets/ds_b0baF1ca7652/datapoints",
              "pathParameters": {
                "id": "ds_b0baF1ca7652"
              },
              "queryParameters": {
                "size": 1
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "records": [
                  {
                    "id": "dp_901stu",
                    "messages": [
                      {
                        "role": "user",
                        "content": "What is the capital of France?"
                      }
                    ],
                    "target": {
                      "answer": "Paris"
                    }
                  },
                  {
                    "id": "dp_234vwx",
                    "messages": [
                      {
                        "role": "user",
                        "content": "Who wrote Hamlet?"
                      }
                    ],
                    "target": {
                      "answer": "William Shakespeare"
                    }
                  }
                ],
                "page": 1,
                "size": 10,
                "total": 2
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "records": [
                    {
                      "id": "dp_901stu",
                      "messages": [
                        {
                          "role": "user",
                          "content": "What is the capital of France?"
                        }
                      ],
                      "target": {
                        "answer": "Paris"
                      }
                    },
                    {
                      "id": "dp_234vwx",
                      "messages": [
                        {
                          "role": "user",
                          "content": "Who wrote Hamlet?"
                        }
                      ],
                      "target": {
                        "answer": "William Shakespeare"
                      }
                    }
                  ],
                  "page": 1,
                  "size": 10,
                  "total": 2
                }
              },
              "codeSamples": []
            },
            {
              "path": "/datasets/:id/datapoints",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {
                "version_id": "string",
                "environment": "string"
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "List all Datapoints for the Dataset with the given ID.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.datasets.list_datapoints(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "version_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "version_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "environment=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "environment",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "page=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "page",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "size=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "size",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.datasets.listDatapoints(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "versionId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "version_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "environment: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "environment"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "page: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "page"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "size: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "size"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "list-versions",
          "migratedFromUrlSlugs": ["list-versions-of-a-dataset"],
          "method": "GET",
          "id": "listVersions",
          "originalEndpointId": "endpoint_datasets.listVersions",
          "name": "List Versions of a Dataset",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Dataset.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/datasets/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/versions"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Filter versions by status: 'uncommitted', 'committed'. If no status is provided, all versions are returned.",
              "key": "status",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_:VersionStatus"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:ListDatasets"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "List versions",
              "path": "/datasets/ds_b0baF1ca7652/versions",
              "pathParameters": {
                "id": "ds_b0baF1ca7652"
              },
              "queryParameters": {
                "status": "committed"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "records": [
                  {
                    "id": "ds_345mno",
                    "path": "test-questions",
                    "name": "test-questions",
                    "version_id": "dsv_678pqr",
                    "type": "dataset",
                    "created_at": "2024-05-01T12:00:00Z",
                    "updated_at": "2024-05-01T12:00:00Z",
                    "created_by": {
                      "id": "usr_v23rSVAgas2a",
                      "full_name": "Jordan Burges",
                      "email_address": "jordan@humanloop.com"
                    },
                    "status": "committed",
                    "commit_message": "initial commit",
                    "last_used_at": "2024-05-01T12:00:00Z",
                    "datapoints_count": 2
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "records": [
                    {
                      "id": "ds_345mno",
                      "path": "test-questions",
                      "name": "test-questions",
                      "version_id": "dsv_678pqr",
                      "type": "dataset",
                      "created_at": "2024-05-01T12:00:00Z",
                      "updated_at": "2024-05-01T12:00:00Z",
                      "created_by": {
                        "id": "usr_v23rSVAgas2a",
                        "full_name": "Jordan Burges",
                        "email_address": "jordan@humanloop.com"
                      },
                      "status": "committed",
                      "commit_message": "initial commit",
                      "last_used_at": "2024-05-01T12:00:00Z",
                      "datapoints_count": 2
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/datasets/:id/versions",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {
                "status": "uncommitted"
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Get a list of the versions for a Dataset.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.datasets.list_versions(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "status=$FERN_INPUT",
                      "values": {
                        "uncommitted": "\"uncommitted\"",
                        "committed": "\"committed\"",
                        "deleted": "\"deleted\""
                      },
                      "templateInput": {
                        "location": "QUERY",
                        "path": "status"
                      },
                      "type": "enum"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.datasets.listVersions(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "enum",
                            "imports": [],
                            "isOptional": true,
                            "values": {
                              "uncommitted": "\"uncommitted\"",
                              "committed": "\"committed\"",
                              "deleted": "\"deleted\""
                            },
                            "templateString": "status: $FERN_INPUT",
                            "templateInput": {
                              "location": "QUERY",
                              "path": "status"
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "commit",
          "migratedFromUrlSlugs": ["commit-a-dataset-version"],
          "method": "POST",
          "id": "commit",
          "originalEndpointId": "endpoint_datasets.commit",
          "name": "Commit a Dataset Version",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Dataset.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "Unique identifier for the specific version of the Dataset.",
                "key": "version_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/datasets/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/versions/"
              },
              {
                "type": "pathParameter",
                "value": "version_id"
              },
              {
                "type": "literal",
                "value": "/commit"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:CommitRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:DatasetResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "Commit version",
              "path": "/datasets/ds_b0baF1ca7652/versions/dsv_6L78pqrdFi2xa/commit",
              "pathParameters": {
                "id": "ds_b0baF1ca7652",
                "version_id": "dsv_6L78pqrdFi2xa"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "commit_message": "initial commit"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "ds_345mno",
                "path": "test-questions",
                "name": "test-questions",
                "version_id": "dsv_678pqr",
                "type": "dataset",
                "created_at": "2024-05-01T12:00:00Z",
                "updated_at": "2024-05-01T12:00:00Z",
                "created_by": {
                  "id": "usr_v23rSVAgas2a",
                  "full_name": "Jordan Burges",
                  "email_address": "jordan@humanloop.com"
                },
                "status": "committed",
                "commit_message": "initial commit",
                "last_used_at": "2024-05-01T12:00:00Z",
                "datapoints_count": 2
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "commit_message": "initial commit"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "ds_345mno",
                  "path": "test-questions",
                  "name": "test-questions",
                  "version_id": "dsv_678pqr",
                  "type": "dataset",
                  "created_at": "2024-05-01T12:00:00Z",
                  "updated_at": "2024-05-01T12:00:00Z",
                  "created_by": {
                    "id": "usr_v23rSVAgas2a",
                    "full_name": "Jordan Burges",
                    "email_address": "jordan@humanloop.com"
                  },
                  "status": "committed",
                  "commit_message": "initial commit",
                  "last_used_at": "2024-05-01T12:00:00Z",
                  "datapoints_count": 2
                }
              },
              "codeSamples": []
            },
            {
              "path": "/datasets/:id/versions/:version_id/commit",
              "pathParameters": {
                "id": ":id",
                "version_id": ":version_id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "commit_message": "string"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Commit a version of the Dataset with a commit message.\n\nIf the version is already committed, an exception will be raised.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.datasets.commit(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "version_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "version_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "commit_message=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "commit_message",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.datasets.commit(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "version_id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "commitMessage: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "commit_message"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "upload-csv",
          "method": "POST",
          "id": "uploadCsv",
          "originalEndpointId": "endpoint_datasets.uploadCsv",
          "name": "Upload CSV",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for the Dataset",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/datasets/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/datapoints/csv"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "ID of the specific Dataset version to base the created Version on.",
              "key": "version_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Name of the Environment identifying a deployed Version to base the created Version on.",
              "key": "environment",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "request": {
            "contentType": "multipart/form-data",
            "type": {
              "type": "fileUpload",
              "value": {
                "name": "Body_upload_csv_datasets__id__datapoints_csv_post",
                "properties": [
                  {
                    "type": "file",
                    "value": {
                      "type": "file",
                      "key": "file",
                      "isOptional": false
                    }
                  },
                  {
                    "type": "bodyProperty",
                    "key": "commit_message",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "description": "Commit message for the new Dataset version."
                  }
                ]
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:DatasetResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/datasets/id/datapoints/csv",
              "pathParameters": {
                "id": "id"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "commit_message": "commit_message"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "path": "path",
                "id": "id",
                "directory_id": "directory_id",
                "name": "name",
                "version_id": "version_id",
                "type": "dataset",
                "environments": [
                  {
                    "id": "id",
                    "created_at": "2024-01-15T09:30:00Z",
                    "name": "name",
                    "tag": "default"
                  }
                ],
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z",
                "created_by": {
                  "id": "id",
                  "email_address": "email_address",
                  "full_name": "full_name"
                },
                "status": "uncommitted",
                "last_used_at": "2024-01-15T09:30:00Z",
                "commit_message": "commit_message",
                "datapoints_count": 1,
                "datapoints": [
                  {
                    "inputs": {
                      "key": "value"
                    },
                    "messages": [
                      {
                        "role": "user"
                      }
                    ],
                    "target": {
                      "key": "value"
                    },
                    "id": "id"
                  }
                ],
                "attributes": {
                  "key": "value"
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "form",
                "value": {
                  "file": {
                    "type": "filename",
                    "value": "<file1>"
                  },
                  "commit_message": {
                    "type": "json",
                    "value": "commit_message"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "path": "path",
                  "id": "id",
                  "directory_id": "directory_id",
                  "name": "name",
                  "version_id": "version_id",
                  "type": "dataset",
                  "environments": [
                    {
                      "id": "id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "name": "name",
                      "tag": "default"
                    }
                  ],
                  "created_at": "2024-01-15T09:30:00Z",
                  "updated_at": "2024-01-15T09:30:00Z",
                  "created_by": {
                    "id": "id",
                    "email_address": "email_address",
                    "full_name": "full_name"
                  },
                  "status": "uncommitted",
                  "last_used_at": "2024-01-15T09:30:00Z",
                  "commit_message": "commit_message",
                  "datapoints_count": 1,
                  "datapoints": [
                    {
                      "inputs": {
                        "key": "value"
                      },
                      "messages": [
                        {
                          "role": "user"
                        }
                      ],
                      "target": {
                        "key": "value"
                      },
                      "id": "id"
                    }
                  ],
                  "attributes": {
                    "key": "value"
                  }
                }
              },
              "codeSamples": []
            },
            {
              "path": "/datasets/:id/datapoints/csv",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {
                "version_id": "string",
                "environment": "string"
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "form",
                "value": {
                  "file": {
                    "type": "filename",
                    "value": "<filename1>"
                  },
                  "commit_message": {
                    "type": "json",
                    "value": "string"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Add Datapoints from a CSV file to a Dataset.\n\nThis will create a new committed version of the Dataset with the Datapoints from the CSV file.\n\nIf either `version_id` or `environment` is provided, the new version will be based on the specified version,\nwith the Datapoints from the CSV file added to the existing Datapoints in the version.\nIf neither `version_id` nor `environment` is provided, the new version will be based on the version\nof the Dataset that is deployed to the default Environment.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.datasets.upload_csv(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "version_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "version_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "environment=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "environment",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "file=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "file",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "commit_message=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "commit_message",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.datasets.uploadCsv(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": ["import fs from \"fs\";"],
                            "templateString": "fs.createReadStream(\"/path/to/your/file\")",
                            "isOptional": false,
                            "templateInputs": []
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "versionId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "version_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "environment: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "environment"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "commitMessage: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "commit_message"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "set-deployment",
          "migratedFromUrlSlugs": ["deploy-dataset"],
          "method": "POST",
          "id": "setDeployment",
          "originalEndpointId": "endpoint_datasets.setDeployment",
          "name": "Deploy Dataset",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Dataset.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "Unique identifier for the Environment to deploy the Version to.",
                "key": "environment_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/datasets/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/environments/"
              },
              {
                "type": "pathParameter",
                "value": "environment_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Unique identifier for the specific version of the Dataset.",
              "key": "version_id",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:DatasetResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "Deploy",
              "path": "/datasets/ds_b0baF1ca7652/environments/staging",
              "pathParameters": {
                "id": "ds_b0baF1ca7652",
                "environment_id": "staging"
              },
              "queryParameters": {
                "version_id": "dsv_6L78pqrdFi2xa"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "ds_345mno",
                "path": "test-questions",
                "name": "test-questions",
                "version_id": "dsv_678pqr",
                "type": "dataset",
                "created_at": "2024-05-01T12:00:00Z",
                "updated_at": "2024-05-01T12:00:00Z",
                "created_by": {
                  "id": "usr_v23rSVAgas2a",
                  "full_name": "Jordan Burges",
                  "email_address": "jordan@humanloop.com"
                },
                "status": "committed",
                "commit_message": "initial commit",
                "last_used_at": "2024-05-01T12:00:00Z",
                "datapoints_count": 2
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "ds_345mno",
                  "path": "test-questions",
                  "name": "test-questions",
                  "version_id": "dsv_678pqr",
                  "type": "dataset",
                  "created_at": "2024-05-01T12:00:00Z",
                  "updated_at": "2024-05-01T12:00:00Z",
                  "created_by": {
                    "id": "usr_v23rSVAgas2a",
                    "full_name": "Jordan Burges",
                    "email_address": "jordan@humanloop.com"
                  },
                  "status": "committed",
                  "commit_message": "initial commit",
                  "last_used_at": "2024-05-01T12:00:00Z",
                  "datapoints_count": 2
                }
              },
              "codeSamples": []
            },
            {
              "path": "/datasets/:id/environments/:environment_id",
              "pathParameters": {
                "id": ":id",
                "environment_id": ":environment_id"
              },
              "queryParameters": {
                "version_id": "string"
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Deploy Dataset to Environment.\n\nSet the deployed version for the specified Environment.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.datasets.set_deployment(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "environment_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "environment_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "version_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "version_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.datasets.setDeployment(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "environment_id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "versionId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "version_id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "remove-deployment",
          "method": "DELETE",
          "id": "removeDeployment",
          "originalEndpointId": "endpoint_datasets.removeDeployment",
          "name": "Remove Deployment",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Dataset.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "Unique identifier for the Environment to remove the deployment from.",
                "key": "environment_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/datasets/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/environments/"
              },
              {
                "type": "pathParameter",
                "value": "environment_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "Delete environment",
              "path": "/datasets/ds_b0baF1ca7652/environments/staging",
              "pathParameters": {
                "id": "ds_b0baF1ca7652",
                "environment_id": "staging"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            },
            {
              "path": "/datasets/:id/environments/:environment_id",
              "pathParameters": {
                "id": ":id",
                "environment_id": ":environment_id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Remove deployed Dataset from Environment.\n\nRemove the deployed version for the specified Environment.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.datasets.remove_deployment(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "environment_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "environment_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.datasets.removeDeployment(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "environment_id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "list-environments",
          "migratedFromUrlSlugs": ["list-a-datasets-environments"],
          "method": "GET",
          "id": "listEnvironments",
          "originalEndpointId": "endpoint_datasets.listEnvironments",
          "name": "List a Dataset's Environments",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Dataset.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/datasets/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/environments"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:FileEnvironmentResponse"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/datasets/id/environments",
              "pathParameters": {
                "id": "id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": [
                {
                  "id": "id",
                  "created_at": "2024-01-15T09:30:00Z",
                  "name": "name",
                  "tag": "default",
                  "file": {
                    "path": "path",
                    "id": "id",
                    "directory_id": "directory_id",
                    "model": "model",
                    "endpoint": "complete",
                    "template": "template",
                    "provider": "openai",
                    "max_tokens": 1,
                    "temperature": 1.1,
                    "top_p": 1.1,
                    "stop": "stop",
                    "presence_penalty": 1.1,
                    "frequency_penalty": 1.1,
                    "other": {
                      "key": "value"
                    },
                    "seed": 1,
                    "response_format": {
                      "type": "json_object"
                    },
                    "tools": [
                      {
                        "name": "name",
                        "description": "description"
                      }
                    ],
                    "linked_tools": [
                      {
                        "name": "name",
                        "description": "description",
                        "id": "id",
                        "version_id": "version_id"
                      }
                    ],
                    "attributes": {
                      "key": "value"
                    },
                    "commit_message": "commit_message",
                    "name": "name",
                    "version_id": "version_id",
                    "type": "prompt",
                    "environments": [
                      {
                        "id": "id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "name": "name",
                        "tag": "default"
                      }
                    ],
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z",
                    "created_by": {
                      "id": "id",
                      "email_address": "email_address"
                    },
                    "status": "uncommitted",
                    "last_used_at": "2024-01-15T09:30:00Z",
                    "version_logs_count": 1,
                    "total_logs_count": 1,
                    "inputs": [
                      {
                        "name": "name"
                      }
                    ],
                    "evaluator_aggregates": [
                      {
                        "value": 1.1,
                        "evaluator_id": "evaluator_id",
                        "evaluator_version_id": "evaluator_version_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      }
                    ]
                  }
                }
              ],
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "id": "id",
                    "created_at": "2024-01-15T09:30:00Z",
                    "name": "name",
                    "tag": "default",
                    "file": {
                      "path": "path",
                      "id": "id",
                      "directory_id": "directory_id",
                      "model": "model",
                      "endpoint": "complete",
                      "template": "template",
                      "provider": "openai",
                      "max_tokens": 1,
                      "temperature": 1.1,
                      "top_p": 1.1,
                      "stop": "stop",
                      "presence_penalty": 1.1,
                      "frequency_penalty": 1.1,
                      "other": {
                        "key": "value"
                      },
                      "seed": 1,
                      "response_format": {
                        "type": "json_object"
                      },
                      "tools": [
                        {
                          "name": "name",
                          "description": "description"
                        }
                      ],
                      "linked_tools": [
                        {
                          "name": "name",
                          "description": "description",
                          "id": "id",
                          "version_id": "version_id"
                        }
                      ],
                      "attributes": {
                        "key": "value"
                      },
                      "commit_message": "commit_message",
                      "name": "name",
                      "version_id": "version_id",
                      "type": "prompt",
                      "environments": [
                        {
                          "id": "id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "name": "name",
                          "tag": "default"
                        }
                      ],
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "created_by": {
                        "id": "id",
                        "email_address": "email_address"
                      },
                      "status": "uncommitted",
                      "last_used_at": "2024-01-15T09:30:00Z",
                      "version_logs_count": 1,
                      "total_logs_count": 1,
                      "inputs": [
                        {
                          "name": "name"
                        }
                      ],
                      "evaluator_aggregates": [
                        {
                          "value": 1.1,
                          "evaluator_id": "evaluator_id",
                          "evaluator_version_id": "evaluator_version_id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z"
                        }
                      ]
                    }
                  }
                ]
              },
              "codeSamples": []
            },
            {
              "path": "/datasets/:id/environments",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "List all Environments and their deployed versions for the Dataset.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.datasets.list_environments(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.datasets.listEnvironments(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        }
      ],
      "types": [],
      "subpackages": [],
      "urlSlug": "datasets",
      "description": "Datasets are collections of input-output pairs that you can use within Humanloop for Evaluations.\n\n#### What is a Dataset?\n\nA Dataset is a collection of unique Datapoints. These Datapoints contain `inputs` and `target` fields. The `inputs`\nare used to populate a Prompt's template and the `target` can be referenced by Evaluators to evaluate the quality of\nthe generated output.\n\nNote that Humanloop automatically deduplicates Datapoints. If you try to add a Datapoint that already exists, it will\nbe ignored. If you intentionally want to add a duplicate Datapoint, you can add a unique identifier to the Datapoint's\ninputs such as `{_dedupe_id: <unique ID>}`.\n\n#### Creating Dataset versions\n\nDatasets have immutable versions. To add/remove Datapoint to/from an existing version, use the **Create** endpoint\nand specify `action` as `\"add\"` or `\"remove\"` respectively. You may also specify the `version_id` or `environment`\nquery parameters to identify the existing version to base the new version on. If neither is provided, the version\ndeployed to the default Environment will be used.\n\n",
      "webhooks": [],
      "websockets": [],
      "displayName": "Datasets"
    },
    "subpackage_evaluators": {
      "subpackageId": "subpackage_evaluators",
      "name": "evaluators",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "log",
          "migratedFromUrlSlugs": ["submit-evaluator-judgment"],
          "method": "POST",
          "id": "log",
          "originalEndpointId": "endpoint_evaluators.log",
          "name": "Submit Evaluator Judgment",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/evaluators/log"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "ID of the Evaluator version to log against.",
              "key": "version_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Name of the Environment identifying a deployed version to log to.",
              "key": "environment",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Path of the Evaluator, including the name. This locates the Evaluator in the Humanloop filesystem and is used as as a unique identifier. For example: `folder/name` or just `name`.",
                  "key": "path",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "ID for an existing Evaluator.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "When the logged event started.",
                  "key": "start_time",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "When the logged event ended.",
                  "key": "end_time",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Generated output from the LLM. Only populated for LLM Evaluator Logs.",
                  "key": "output",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "User defined timestamp for when the log was created. ",
                  "key": "created_at",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Error message if the log is an error.",
                  "key": "error",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Duration of the logged event in seconds.",
                  "key": "provider_latency",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                },
                {
                  "description": "Captured log and debug statements.",
                  "key": "stdout",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Raw request sent to provider. Only populated for LLM Evaluator Logs.",
                  "key": "provider_request",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "Raw response received the provider. Only populated for LLM Evaluator Logs.",
                  "key": "provider_response",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "The inputs passed to the prompt template.",
                  "key": "inputs",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "Identifies where the model was called from.",
                  "key": "source",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Any additional metadata to record.",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "Identifier of the evaluated Log. The newly created Log will have this one set as parent.",
                  "key": "parent_id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Unique identifier for the Datapoint that this Log is derived from. This can be used by Humanloop to associate Logs to Evaluations. If provided, Humanloop will automatically associate this Log to Evaluations that require a Log for this Datapoint-Version pair.",
                  "key": "source_datapoint_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The ID of the parent Log to nest this Log under in a Trace.",
                  "key": "trace_parent_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Unique identifier for the Batch to add this Batch to. Batches are used to group Logs together for Evaluations. A Batch will be created if one with the given ID does not exist.",
                  "key": "batch_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "End-user ID related to the Log.",
                  "key": "user",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The name of the Environment the Log is associated to.",
                  "key": "environment",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Whether the request/response payloads will be stored on Humanloop.",
                  "key": "save",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "Evaluator assessment of the Log.",
                  "key": "judgment",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_evaluators:CreateEvaluatorLogRequestJudgment"
                    }
                  }
                },
                {
                  "key": "spec",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_evaluators:CreateEvaluatorLogRequestSpec"
                    }
                  }
                }
              ]
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:CreateEvaluatorLogResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/evaluators/log",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "parent_id": "parent_id"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "id",
                "parent_id": "parent_id",
                "session_id": "session_id",
                "version_id": "version_id"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "parent_id": "parent_id"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "id",
                  "parent_id": "parent_id",
                  "session_id": "session_id",
                  "version_id": "version_id"
                }
              },
              "codeSamples": []
            },
            {
              "path": "/evaluators/log",
              "pathParameters": {},
              "queryParameters": {
                "version_id": "string",
                "environment": "string"
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "parent_id": "string"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Submit Evaluator judgment for an existing Log.\n\nCreates a new Log. The evaluated Log will be set as the parent of the created Log.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.evaluators.log(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "version_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "version_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "environment=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "environment",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "path=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "path",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "start_time=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "start_time",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "end_time=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "end_time",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "output=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "output",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "created_at=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "created_at",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "error=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "error",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "provider_latency=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "provider_latency",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "stdout=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "stdout",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "provider_request={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "provider_request"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "provider_response={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "provider_response"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "inputs={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "inputs"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "source=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "source",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "metadata={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "metadata"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "parent_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "parent_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "source_datapoint_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "source_datapoint_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "trace_parent_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "trace_parent_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "batch_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "batch_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "user=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "user",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "create_evaluator_log_request_environment=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "environment",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "save=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "save",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "judgment=$FERN_INPUT",
                      "members": [
                        {
                          "type": {
                            "type": "primitive",
                            "value": {
                              "type": "boolean"
                            }
                          },
                          "template": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "$FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "RELATIVE",
                                "path": null,
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          },
                          "template": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "$FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "RELATIVE",
                                "path": null,
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": {
                            "itemType": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            },
                            "type": "list"
                          },
                          "template": {
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "[\n\t\t$FERN_INPUT\n\t]",
                            "delimiter": ",\n\t\t",
                            "innerTemplate": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "$FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": null,
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            },
                            "templateInput": {
                              "location": "RELATIVE",
                              "path": null
                            },
                            "type": "iterable"
                          }
                        },
                        {
                          "type": {
                            "type": "primitive",
                            "value": {
                              "type": "double"
                            }
                          },
                          "template": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "$FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "RELATIVE",
                                "path": null,
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        }
                      ],
                      "templateInput": {
                        "location": "BODY",
                        "path": "judgment"
                      },
                      "type": "union_v2"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "spec=$FERN_INPUT",
                      "members": [
                        {
                          "type": {
                            "value": "type_:LlmEvaluatorRequest",
                            "type": "id"
                          },
                          "template": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"arguments_type\": $FERN_INPUT",
                                  "values": {
                                    "target_free": "\"target_free\"",
                                    "target_required": "\"target_required\""
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": "arguments_type"
                                  },
                                  "type": "enum"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"return_type\": $FERN_INPUT",
                                  "values": {
                                    "boolean": "\"boolean\"",
                                    "number": "\"number\"",
                                    "select": "\"select\"",
                                    "multi_select": "\"multi_select\"",
                                    "text": "\"text\""
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": "return_type"
                                  },
                                  "type": "enum"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "\"attributes\": {\n\t\t\t$FERN_INPUT\n\t\t}",
                                  "delimiter": ",\n\t\t\t",
                                  "keyTemplate": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": null,
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  },
                                  "valueTemplate": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": null,
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  },
                                  "keyValueSeparator": ": ",
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": "attributes"
                                  },
                                  "type": "dict"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"prompt\": {\n\t\t\t$FERN_INPUT\n\t\t}",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "\"model\": $FERN_INPUT",
                                        "templateInputs": [
                                          {
                                            "location": "RELATIVE",
                                            "path": "prompt.model",
                                            "type": "payload"
                                          }
                                        ],
                                        "type": "generic"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "\"endpoint\": $FERN_INPUT",
                                        "values": {
                                          "complete": "\"complete\"",
                                          "chat": "\"chat\"",
                                          "edit": "\"edit\""
                                        },
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "prompt.endpoint"
                                        },
                                        "type": "enum"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "\"template\": $FERN_INPUT",
                                        "members": [
                                          {
                                            "type": {
                                              "type": "primitive",
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "template": {
                                              "imports": [],
                                              "isOptional": true,
                                              "templateString": "$FERN_INPUT",
                                              "templateInputs": [
                                                {
                                                  "location": "RELATIVE",
                                                  "path": null,
                                                  "type": "payload"
                                                }
                                              ],
                                              "type": "generic"
                                            }
                                          },
                                          {
                                            "type": {
                                              "itemType": {
                                                "value": "type_:ChatMessage",
                                                "type": "id"
                                              },
                                              "type": "list"
                                            },
                                            "template": {
                                              "imports": [],
                                              "isOptional": true,
                                              "containerTemplateString": "[\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                              "delimiter": ",\n\t\t\t\t",
                                              "innerTemplate": {
                                                "imports": [],
                                                "isOptional": true,
                                                "templateString": "{\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                                "templateInputs": [
                                                  {
                                                    "type": "template",
                                                    "value": {
                                                      "imports": [],
                                                      "isOptional": true,
                                                      "templateString": "\"content\": $FERN_INPUT",
                                                      "members": [
                                                        {
                                                          "type": {
                                                            "type": "primitive",
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "template": {
                                                            "imports": [],
                                                            "isOptional": true,
                                                            "templateString": "$FERN_INPUT",
                                                            "templateInputs": [
                                                              {
                                                                "location": "RELATIVE",
                                                                "path": null,
                                                                "type": "payload"
                                                              }
                                                            ],
                                                            "type": "generic"
                                                          }
                                                        },
                                                        {
                                                          "type": {
                                                            "itemType": {
                                                              "value": "type_:ChatMessageContentItem",
                                                              "type": "id"
                                                            },
                                                            "type": "list"
                                                          },
                                                          "template": {
                                                            "imports": [],
                                                            "isOptional": true,
                                                            "containerTemplateString": "[\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t]",
                                                            "delimiter": ",\n\t\t\t\t\t\t",
                                                            "innerTemplate": {
                                                              "imports": [],
                                                              "isOptional": true,
                                                              "templateString": "$FERN_INPUT",
                                                              "members": [
                                                                {
                                                                  "type": {
                                                                    "value": "type_:TextChatContent",
                                                                    "type": "id"
                                                                  },
                                                                  "template": {
                                                                    "imports": [],
                                                                    "isOptional": true,
                                                                    "templateString": "{\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t}",
                                                                    "templateInputs": [
                                                                      {
                                                                        "type": "template",
                                                                        "value": {
                                                                          "imports": [],
                                                                          "isOptional": true,
                                                                          "templateString": "\"text\": $FERN_INPUT",
                                                                          "templateInputs": [
                                                                            {
                                                                              "location": "RELATIVE",
                                                                              "path": "text",
                                                                              "type": "payload"
                                                                            }
                                                                          ],
                                                                          "type": "generic"
                                                                        }
                                                                      }
                                                                    ],
                                                                    "inputDelimiter": ",\n\t\t\t\t\t\t\t",
                                                                    "type": "generic"
                                                                  }
                                                                },
                                                                {
                                                                  "type": {
                                                                    "value": "type_:ImageChatContent",
                                                                    "type": "id"
                                                                  },
                                                                  "template": {
                                                                    "imports": [],
                                                                    "isOptional": true,
                                                                    "templateString": "{\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t}",
                                                                    "templateInputs": [
                                                                      {
                                                                        "type": "template",
                                                                        "value": {
                                                                          "imports": [],
                                                                          "isOptional": true,
                                                                          "templateString": "\"image_url\": {\n\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t}",
                                                                          "templateInputs": [
                                                                            {
                                                                              "type": "template",
                                                                              "value": {
                                                                                "imports": [],
                                                                                "isOptional": true,
                                                                                "templateString": "\"url\": $FERN_INPUT",
                                                                                "templateInputs": [
                                                                                  {
                                                                                    "location": "RELATIVE",
                                                                                    "path": "image_url.url",
                                                                                    "type": "payload"
                                                                                  }
                                                                                ],
                                                                                "type": "generic"
                                                                              }
                                                                            },
                                                                            {
                                                                              "type": "template",
                                                                              "value": {
                                                                                "imports": [],
                                                                                "isOptional": true,
                                                                                "templateString": "\"detail\": $FERN_INPUT",
                                                                                "values": {
                                                                                  "high": "\"high\"",
                                                                                  "low": "\"low\"",
                                                                                  "auto": "\"auto\""
                                                                                },
                                                                                "templateInput": {
                                                                                  "location": "RELATIVE",
                                                                                  "path": "image_url.detail"
                                                                                },
                                                                                "type": "enum"
                                                                              }
                                                                            }
                                                                          ],
                                                                          "inputDelimiter": ",\n\t\t\t\t\t\t\t\t",
                                                                          "type": "generic"
                                                                        }
                                                                      }
                                                                    ],
                                                                    "inputDelimiter": ",\n\t\t\t\t\t\t\t",
                                                                    "type": "generic"
                                                                  }
                                                                }
                                                              ],
                                                              "templateInput": {
                                                                "location": "RELATIVE",
                                                                "path": null
                                                              },
                                                              "type": "union_v2"
                                                            },
                                                            "templateInput": {
                                                              "location": "RELATIVE",
                                                              "path": null
                                                            },
                                                            "type": "iterable"
                                                          }
                                                        }
                                                      ],
                                                      "templateInput": {
                                                        "location": "RELATIVE",
                                                        "path": "content"
                                                      },
                                                      "type": "union_v2"
                                                    }
                                                  },
                                                  {
                                                    "type": "template",
                                                    "value": {
                                                      "imports": [],
                                                      "isOptional": true,
                                                      "templateString": "\"name\": $FERN_INPUT",
                                                      "templateInputs": [
                                                        {
                                                          "location": "RELATIVE",
                                                          "path": "name",
                                                          "type": "payload"
                                                        }
                                                      ],
                                                      "type": "generic"
                                                    }
                                                  },
                                                  {
                                                    "type": "template",
                                                    "value": {
                                                      "imports": [],
                                                      "isOptional": true,
                                                      "templateString": "\"tool_call_id\": $FERN_INPUT",
                                                      "templateInputs": [
                                                        {
                                                          "location": "RELATIVE",
                                                          "path": "tool_call_id",
                                                          "type": "payload"
                                                        }
                                                      ],
                                                      "type": "generic"
                                                    }
                                                  },
                                                  {
                                                    "type": "template",
                                                    "value": {
                                                      "imports": [],
                                                      "isOptional": true,
                                                      "templateString": "\"role\": $FERN_INPUT",
                                                      "values": {
                                                        "user": "\"user\"",
                                                        "assistant": "\"assistant\"",
                                                        "system": "\"system\"",
                                                        "tool": "\"tool\""
                                                      },
                                                      "templateInput": {
                                                        "location": "RELATIVE",
                                                        "path": "role"
                                                      },
                                                      "type": "enum"
                                                    }
                                                  },
                                                  {
                                                    "type": "template",
                                                    "value": {
                                                      "imports": [],
                                                      "isOptional": true,
                                                      "containerTemplateString": "\"tool_calls\": [\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t]",
                                                      "delimiter": ",\n\t\t\t\t\t\t",
                                                      "innerTemplate": {
                                                        "imports": [],
                                                        "isOptional": true,
                                                        "templateString": "{\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t}",
                                                        "templateInputs": [
                                                          {
                                                            "type": "template",
                                                            "value": {
                                                              "imports": [],
                                                              "isOptional": true,
                                                              "templateString": "\"id\": $FERN_INPUT",
                                                              "templateInputs": [
                                                                {
                                                                  "location": "RELATIVE",
                                                                  "path": "id",
                                                                  "type": "payload"
                                                                }
                                                              ],
                                                              "type": "generic"
                                                            }
                                                          },
                                                          {
                                                            "type": "template",
                                                            "value": {
                                                              "imports": [],
                                                              "isOptional": true,
                                                              "templateString": "\"function\": {\n\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t}",
                                                              "templateInputs": [
                                                                {
                                                                  "type": "template",
                                                                  "value": {
                                                                    "imports": [],
                                                                    "isOptional": true,
                                                                    "templateString": "\"name\": $FERN_INPUT",
                                                                    "templateInputs": [
                                                                      {
                                                                        "location": "RELATIVE",
                                                                        "path": "function.name",
                                                                        "type": "payload"
                                                                      }
                                                                    ],
                                                                    "type": "generic"
                                                                  }
                                                                },
                                                                {
                                                                  "type": "template",
                                                                  "value": {
                                                                    "imports": [],
                                                                    "isOptional": true,
                                                                    "templateString": "\"arguments\": $FERN_INPUT",
                                                                    "templateInputs": [
                                                                      {
                                                                        "location": "RELATIVE",
                                                                        "path": "function.arguments",
                                                                        "type": "payload"
                                                                      }
                                                                    ],
                                                                    "type": "generic"
                                                                  }
                                                                }
                                                              ],
                                                              "inputDelimiter": ",\n\t\t\t\t\t\t\t\t",
                                                              "type": "generic"
                                                            }
                                                          }
                                                        ],
                                                        "inputDelimiter": ",\n\t\t\t\t\t\t\t",
                                                        "type": "generic"
                                                      },
                                                      "templateInput": {
                                                        "location": "RELATIVE",
                                                        "path": "tool_calls"
                                                      },
                                                      "type": "iterable"
                                                    }
                                                  }
                                                ],
                                                "inputDelimiter": ",\n\t\t\t\t\t",
                                                "type": "generic"
                                              },
                                              "templateInput": {
                                                "location": "RELATIVE",
                                                "path": null
                                              },
                                              "type": "iterable"
                                            }
                                          }
                                        ],
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "prompt.template"
                                        },
                                        "type": "union_v2"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "\"provider\": $FERN_INPUT",
                                        "values": {
                                          "openai": "\"openai\"",
                                          "openai_azure": "\"openai_azure\"",
                                          "mock": "\"mock\"",
                                          "anthropic": "\"anthropic\"",
                                          "bedrock": "\"bedrock\"",
                                          "cohere": "\"cohere\"",
                                          "replicate": "\"replicate\"",
                                          "google": "\"google\"",
                                          "groq": "\"groq\""
                                        },
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "prompt.provider"
                                        },
                                        "type": "enum"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "\"max_tokens\": $FERN_INPUT",
                                        "templateInputs": [
                                          {
                                            "location": "RELATIVE",
                                            "path": "prompt.max_tokens",
                                            "type": "payload"
                                          }
                                        ],
                                        "type": "generic"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "\"temperature\": $FERN_INPUT",
                                        "templateInputs": [
                                          {
                                            "location": "RELATIVE",
                                            "path": "prompt.temperature",
                                            "type": "payload"
                                          }
                                        ],
                                        "type": "generic"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "\"top_p\": $FERN_INPUT",
                                        "templateInputs": [
                                          {
                                            "location": "RELATIVE",
                                            "path": "prompt.top_p",
                                            "type": "payload"
                                          }
                                        ],
                                        "type": "generic"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "\"stop\": $FERN_INPUT",
                                        "members": [
                                          {
                                            "type": {
                                              "type": "primitive",
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "template": {
                                              "imports": [],
                                              "isOptional": true,
                                              "templateString": "$FERN_INPUT",
                                              "templateInputs": [
                                                {
                                                  "location": "RELATIVE",
                                                  "path": null,
                                                  "type": "payload"
                                                }
                                              ],
                                              "type": "generic"
                                            }
                                          },
                                          {
                                            "type": {
                                              "itemType": {
                                                "type": "primitive",
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "type": "list"
                                            },
                                            "template": {
                                              "imports": [],
                                              "isOptional": true,
                                              "containerTemplateString": "[\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                              "delimiter": ",\n\t\t\t\t",
                                              "innerTemplate": {
                                                "imports": [],
                                                "isOptional": true,
                                                "templateString": "$FERN_INPUT",
                                                "templateInputs": [
                                                  {
                                                    "location": "RELATIVE",
                                                    "path": null,
                                                    "type": "payload"
                                                  }
                                                ],
                                                "type": "generic"
                                              },
                                              "templateInput": {
                                                "location": "RELATIVE",
                                                "path": null
                                              },
                                              "type": "iterable"
                                            }
                                          }
                                        ],
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "prompt.stop"
                                        },
                                        "type": "union_v2"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "\"presence_penalty\": $FERN_INPUT",
                                        "templateInputs": [
                                          {
                                            "location": "RELATIVE",
                                            "path": "prompt.presence_penalty",
                                            "type": "payload"
                                          }
                                        ],
                                        "type": "generic"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "\"frequency_penalty\": $FERN_INPUT",
                                        "templateInputs": [
                                          {
                                            "location": "RELATIVE",
                                            "path": "prompt.frequency_penalty",
                                            "type": "payload"
                                          }
                                        ],
                                        "type": "generic"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "\"other\": {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                        "delimiter": ",\n\t\t\t\t",
                                        "keyTemplate": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "$FERN_INPUT",
                                          "templateInputs": [
                                            {
                                              "location": "RELATIVE",
                                              "path": null,
                                              "type": "payload"
                                            }
                                          ],
                                          "type": "generic"
                                        },
                                        "valueTemplate": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "$FERN_INPUT",
                                          "templateInputs": [
                                            {
                                              "location": "RELATIVE",
                                              "path": null,
                                              "type": "payload"
                                            }
                                          ],
                                          "type": "generic"
                                        },
                                        "keyValueSeparator": ": ",
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "prompt.other"
                                        },
                                        "type": "dict"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "\"seed\": $FERN_INPUT",
                                        "templateInputs": [
                                          {
                                            "location": "RELATIVE",
                                            "path": "prompt.seed",
                                            "type": "payload"
                                          }
                                        ],
                                        "type": "generic"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "\"response_format\": {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                        "templateInputs": [
                                          {
                                            "type": "template",
                                            "value": {
                                              "imports": [],
                                              "isOptional": true,
                                              "templateString": "\"type\": $FERN_INPUT",
                                              "values": {
                                                "json_object": "\"json_object\"",
                                                "json_schema": "\"json_schema\""
                                              },
                                              "templateInput": {
                                                "location": "RELATIVE",
                                                "path": "prompt.response_format.type"
                                              },
                                              "type": "enum"
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "imports": [],
                                              "isOptional": true,
                                              "containerTemplateString": "\"json_schema\": {\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                              "delimiter": ",\n\t\t\t\t\t",
                                              "keyTemplate": {
                                                "imports": [],
                                                "isOptional": true,
                                                "templateString": "$FERN_INPUT",
                                                "templateInputs": [
                                                  {
                                                    "location": "RELATIVE",
                                                    "path": null,
                                                    "type": "payload"
                                                  }
                                                ],
                                                "type": "generic"
                                              },
                                              "valueTemplate": {
                                                "imports": [],
                                                "isOptional": true,
                                                "templateString": "$FERN_INPUT",
                                                "templateInputs": [
                                                  {
                                                    "location": "RELATIVE",
                                                    "path": null,
                                                    "type": "payload"
                                                  }
                                                ],
                                                "type": "generic"
                                              },
                                              "keyValueSeparator": ": ",
                                              "templateInput": {
                                                "location": "RELATIVE",
                                                "path": "prompt.response_format.type.response_format.json_schema"
                                              },
                                              "type": "dict"
                                            }
                                          }
                                        ],
                                        "inputDelimiter": ",\n\t\t\t\t",
                                        "type": "generic"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "\"tools\": [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                        "delimiter": ",\n\t\t\t\t",
                                        "innerTemplate": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "{\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                          "templateInputs": [
                                            {
                                              "type": "template",
                                              "value": {
                                                "imports": [],
                                                "isOptional": true,
                                                "templateString": "\"name\": $FERN_INPUT",
                                                "templateInputs": [
                                                  {
                                                    "location": "RELATIVE",
                                                    "path": "name",
                                                    "type": "payload"
                                                  }
                                                ],
                                                "type": "generic"
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "imports": [],
                                                "isOptional": true,
                                                "templateString": "\"description\": $FERN_INPUT",
                                                "templateInputs": [
                                                  {
                                                    "location": "RELATIVE",
                                                    "path": "description",
                                                    "type": "payload"
                                                  }
                                                ],
                                                "type": "generic"
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "imports": [],
                                                "isOptional": true,
                                                "templateString": "\"strict\": $FERN_INPUT",
                                                "templateInputs": [
                                                  {
                                                    "location": "RELATIVE",
                                                    "path": "strict",
                                                    "type": "payload"
                                                  }
                                                ],
                                                "type": "generic"
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "imports": [],
                                                "isOptional": true,
                                                "containerTemplateString": "\"parameters\": {\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                                "delimiter": ",\n\t\t\t\t\t\t",
                                                "keyTemplate": {
                                                  "imports": [],
                                                  "isOptional": true,
                                                  "templateString": "$FERN_INPUT",
                                                  "templateInputs": [
                                                    {
                                                      "location": "RELATIVE",
                                                      "path": null,
                                                      "type": "payload"
                                                    }
                                                  ],
                                                  "type": "generic"
                                                },
                                                "valueTemplate": {
                                                  "imports": [],
                                                  "isOptional": true,
                                                  "templateString": "$FERN_INPUT",
                                                  "templateInputs": [
                                                    {
                                                      "location": "RELATIVE",
                                                      "path": null,
                                                      "type": "payload"
                                                    }
                                                  ],
                                                  "type": "generic"
                                                },
                                                "keyValueSeparator": ": ",
                                                "templateInput": {
                                                  "location": "RELATIVE",
                                                  "path": "parameters"
                                                },
                                                "type": "dict"
                                              }
                                            }
                                          ],
                                          "inputDelimiter": ",\n\t\t\t\t\t",
                                          "type": "generic"
                                        },
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "prompt.tools"
                                        },
                                        "type": "iterable"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "\"linked_tools\": [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                        "delimiter": ",\n\t\t\t\t",
                                        "innerTemplate": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "$FERN_INPUT",
                                          "templateInputs": [
                                            {
                                              "location": "RELATIVE",
                                              "path": null,
                                              "type": "payload"
                                            }
                                          ],
                                          "type": "generic"
                                        },
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "prompt.linked_tools"
                                        },
                                        "type": "iterable"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "\"attributes\": {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                        "delimiter": ",\n\t\t\t\t",
                                        "keyTemplate": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "$FERN_INPUT",
                                          "templateInputs": [
                                            {
                                              "location": "RELATIVE",
                                              "path": null,
                                              "type": "payload"
                                            }
                                          ],
                                          "type": "generic"
                                        },
                                        "valueTemplate": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "$FERN_INPUT",
                                          "templateInputs": [
                                            {
                                              "location": "RELATIVE",
                                              "path": null,
                                              "type": "payload"
                                            }
                                          ],
                                          "type": "generic"
                                        },
                                        "keyValueSeparator": ": ",
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "prompt.attributes"
                                        },
                                        "type": "dict"
                                      }
                                    }
                                  ],
                                  "inputDelimiter": ",\n\t\t\t",
                                  "type": "generic"
                                }
                              }
                            ],
                            "inputDelimiter": ",\n\t\t",
                            "type": "generic"
                          }
                        },
                        {
                          "type": {
                            "value": "type_:CodeEvaluatorRequest",
                            "type": "id"
                          },
                          "template": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"arguments_type\": $FERN_INPUT",
                                  "values": {
                                    "target_free": "\"target_free\"",
                                    "target_required": "\"target_required\""
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": "arguments_type"
                                  },
                                  "type": "enum"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"return_type\": $FERN_INPUT",
                                  "values": {
                                    "boolean": "\"boolean\"",
                                    "number": "\"number\"",
                                    "select": "\"select\"",
                                    "multi_select": "\"multi_select\"",
                                    "text": "\"text\""
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": "return_type"
                                  },
                                  "type": "enum"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "\"attributes\": {\n\t\t\t$FERN_INPUT\n\t\t}",
                                  "delimiter": ",\n\t\t\t",
                                  "keyTemplate": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": null,
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  },
                                  "valueTemplate": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": null,
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  },
                                  "keyValueSeparator": ": ",
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": "attributes"
                                  },
                                  "type": "dict"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"code\": $FERN_INPUT",
                                  "templateInputs": [
                                    {
                                      "location": "RELATIVE",
                                      "path": "code",
                                      "type": "payload"
                                    }
                                  ],
                                  "type": "generic"
                                }
                              }
                            ],
                            "inputDelimiter": ",\n\t\t",
                            "type": "generic"
                          }
                        },
                        {
                          "type": {
                            "value": "type_:HumanEvaluatorRequest",
                            "type": "id"
                          },
                          "template": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"arguments_type\": $FERN_INPUT",
                                  "values": {
                                    "target_free": "\"target_free\"",
                                    "target_required": "\"target_required\""
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": "arguments_type"
                                  },
                                  "type": "enum"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"return_type\": $FERN_INPUT",
                                  "values": {
                                    "select": "\"select\"",
                                    "multi_select": "\"multi_select\"",
                                    "text": "\"text\"",
                                    "number": "\"number\"",
                                    "boolean": "\"boolean\""
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": "return_type"
                                  },
                                  "type": "enum"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "\"attributes\": {\n\t\t\t$FERN_INPUT\n\t\t}",
                                  "delimiter": ",\n\t\t\t",
                                  "keyTemplate": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": null,
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  },
                                  "valueTemplate": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": null,
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  },
                                  "keyValueSeparator": ": ",
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": "attributes"
                                  },
                                  "type": "dict"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"instructions\": $FERN_INPUT",
                                  "templateInputs": [
                                    {
                                      "location": "RELATIVE",
                                      "path": "instructions",
                                      "type": "payload"
                                    }
                                  ],
                                  "type": "generic"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "\"options\": [\n\t\t\t$FERN_INPUT\n\t\t]",
                                  "delimiter": ",\n\t\t\t",
                                  "innerTemplate": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "{\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                    "templateInputs": [
                                      {
                                        "type": "template",
                                        "value": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "\"name\": $FERN_INPUT",
                                          "templateInputs": [
                                            {
                                              "location": "RELATIVE",
                                              "path": "name",
                                              "type": "payload"
                                            }
                                          ],
                                          "type": "generic"
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "\"valence\": $FERN_INPUT",
                                          "values": {
                                            "positive": "\"positive\"",
                                            "negative": "\"negative\"",
                                            "neutral": "\"neutral\""
                                          },
                                          "templateInput": {
                                            "location": "RELATIVE",
                                            "path": "valence"
                                          },
                                          "type": "enum"
                                        }
                                      }
                                    ],
                                    "inputDelimiter": ",\n\t\t\t\t",
                                    "type": "generic"
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": "options"
                                  },
                                  "type": "iterable"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"number_limits\": {\n\t\t\t$FERN_INPUT\n\t\t}",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "\"min\": $FERN_INPUT",
                                        "templateInputs": [
                                          {
                                            "location": "RELATIVE",
                                            "path": "number_limits.min",
                                            "type": "payload"
                                          }
                                        ],
                                        "type": "generic"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "\"max\": $FERN_INPUT",
                                        "templateInputs": [
                                          {
                                            "location": "RELATIVE",
                                            "path": "number_limits.max",
                                            "type": "payload"
                                          }
                                        ],
                                        "type": "generic"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "\"step\": $FERN_INPUT",
                                        "templateInputs": [
                                          {
                                            "location": "RELATIVE",
                                            "path": "number_limits.step",
                                            "type": "payload"
                                          }
                                        ],
                                        "type": "generic"
                                      }
                                    }
                                  ],
                                  "inputDelimiter": ",\n\t\t\t",
                                  "type": "generic"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"number_valence\": $FERN_INPUT",
                                  "values": {
                                    "positive": "\"positive\"",
                                    "negative": "\"negative\"",
                                    "neutral": "\"neutral\""
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": "number_valence"
                                  },
                                  "type": "enum"
                                }
                              }
                            ],
                            "inputDelimiter": ",\n\t\t",
                            "type": "generic"
                          }
                        },
                        {
                          "type": {
                            "value": "type_:ExternalEvaluatorRequest",
                            "type": "id"
                          },
                          "template": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"arguments_type\": $FERN_INPUT",
                                  "values": {
                                    "target_free": "\"target_free\"",
                                    "target_required": "\"target_required\""
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": "arguments_type"
                                  },
                                  "type": "enum"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"return_type\": $FERN_INPUT",
                                  "values": {
                                    "boolean": "\"boolean\"",
                                    "number": "\"number\"",
                                    "select": "\"select\"",
                                    "multi_select": "\"multi_select\"",
                                    "text": "\"text\""
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": "return_type"
                                  },
                                  "type": "enum"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "\"attributes\": {\n\t\t\t$FERN_INPUT\n\t\t}",
                                  "delimiter": ",\n\t\t\t",
                                  "keyTemplate": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": null,
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  },
                                  "valueTemplate": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": null,
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  },
                                  "keyValueSeparator": ": ",
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": "attributes"
                                  },
                                  "type": "dict"
                                }
                              }
                            ],
                            "inputDelimiter": ",\n\t\t",
                            "type": "generic"
                          }
                        }
                      ],
                      "templateInput": {
                        "location": "BODY",
                        "path": "spec"
                      },
                      "type": "union_v2"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.evaluators.log(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "versionId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "version_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "environment: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "environment"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "path: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "path"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "id: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "startTime: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "start_time"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "endTime: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "end_time"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "output: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "output"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "createdAt: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "created_at"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "error: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "error"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "providerLatency: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "provider_latency"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "stdout: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "stdout"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "providerRequest: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "provider_request"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "providerResponse: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "provider_response"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "inputs: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "inputs"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "source: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "source"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "metadata: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "metadata"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "parentId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "parent_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "sourceDatapointId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "source_datapoint_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "traceParentId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "trace_parent_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "batchId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "batch_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "user: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "user"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "createEvaluatorLogRequestEnvironment: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "environment"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "save: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "save"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "union_v2",
                            "imports": [],
                            "isOptional": true,
                            "templateString": "judgment: $FERN_INPUT",
                            "members": [
                              {
                                "template": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "primitive",
                                  "value": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              {
                                "template": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "primitive",
                                  "value": {
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "template": {
                                  "type": "iterable",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "[\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                  "delimiter": ",\n\t\t\t\t",
                                  "innerTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "$FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    ]
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": null
                                  }
                                },
                                "type": {
                                  "type": "list",
                                  "itemType": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              {
                                "template": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "primitive",
                                  "value": {
                                    "type": "double"
                                  }
                                }
                              }
                            ],
                            "templateInput": {
                              "location": "BODY",
                              "path": "judgment"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "union_v2",
                            "imports": [],
                            "isOptional": true,
                            "templateString": "spec: $FERN_INPUT",
                            "members": [
                              {
                                "template": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "inputDelimiter": ",\n\t\t\t",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "enum",
                                        "imports": [],
                                        "isOptional": true,
                                        "values": {
                                          "target_free": "\"target_free\"",
                                          "target_required": "\"target_required\""
                                        },
                                        "templateString": "argumentsType: $FERN_INPUT",
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "arguments_type"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "enum",
                                        "imports": [],
                                        "isOptional": true,
                                        "values": {
                                          "boolean": "\"boolean\"",
                                          "number": "\"number\"",
                                          "select": "\"select\"",
                                          "multi_select": "\"multi_select\"",
                                          "text": "\"text\""
                                        },
                                        "templateString": "returnType: $FERN_INPUT",
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "return_type"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "dict",
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "attributes: {\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                        "delimiter": ",\n\t\t\t\t\t",
                                        "keyValueSeparator": ": ",
                                        "keyTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          ]
                                        },
                                        "valueTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          ]
                                        },
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "attributes"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "prompt: {\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                        "isOptional": true,
                                        "inputDelimiter": ",\n\t\t\t\t\t",
                                        "templateInputs": [
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "model: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "RELATIVE",
                                                  "path": "prompt.model"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "enum",
                                              "imports": [],
                                              "isOptional": true,
                                              "values": {
                                                "complete": "\"complete\"",
                                                "chat": "\"chat\"",
                                                "edit": "\"edit\""
                                              },
                                              "templateString": "endpoint: $FERN_INPUT",
                                              "templateInput": {
                                                "location": "RELATIVE",
                                                "path": "prompt.endpoint"
                                              }
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "union_v2",
                                              "imports": [],
                                              "isOptional": true,
                                              "templateString": "template: $FERN_INPUT",
                                              "members": [
                                                {
                                                  "template": {
                                                    "type": "generic",
                                                    "imports": [],
                                                    "templateString": "$FERN_INPUT",
                                                    "isOptional": true,
                                                    "templateInputs": [
                                                      {
                                                        "type": "payload",
                                                        "location": "RELATIVE",
                                                        "path": null
                                                      }
                                                    ]
                                                  },
                                                  "type": {
                                                    "type": "primitive",
                                                    "value": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                {
                                                  "template": {
                                                    "type": "iterable",
                                                    "imports": [],
                                                    "isOptional": true,
                                                    "containerTemplateString": "[\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t]",
                                                    "delimiter": ",\n\t\t\t\t\t\t\t",
                                                    "innerTemplate": {
                                                      "type": "generic",
                                                      "imports": [],
                                                      "templateString": "{\n\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t}",
                                                      "isOptional": true,
                                                      "inputDelimiter": ",\n\t\t\t\t\t\t\t\t",
                                                      "templateInputs": [
                                                        {
                                                          "type": "template",
                                                          "value": {
                                                            "type": "union_v2",
                                                            "imports": [],
                                                            "isOptional": true,
                                                            "templateString": "content: $FERN_INPUT",
                                                            "members": [
                                                              {
                                                                "template": {
                                                                  "type": "generic",
                                                                  "imports": [],
                                                                  "templateString": "$FERN_INPUT",
                                                                  "isOptional": true,
                                                                  "templateInputs": [
                                                                    {
                                                                      "type": "payload",
                                                                      "location": "RELATIVE",
                                                                      "path": null
                                                                    }
                                                                  ]
                                                                },
                                                                "type": {
                                                                  "type": "primitive",
                                                                  "value": {
                                                                    "type": "string"
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "template": {
                                                                  "type": "iterable",
                                                                  "imports": [],
                                                                  "isOptional": true,
                                                                  "containerTemplateString": "[\n\t\t\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t\t\t]",
                                                                  "delimiter": ",\n\t\t\t\t\t\t\t\t\t\t",
                                                                  "innerTemplate": {
                                                                    "type": "union_v2",
                                                                    "imports": [],
                                                                    "isOptional": true,
                                                                    "templateString": "$FERN_INPUT",
                                                                    "members": [],
                                                                    "templateInput": {
                                                                      "location": "RELATIVE",
                                                                      "path": null
                                                                    }
                                                                  },
                                                                  "templateInput": {
                                                                    "location": "RELATIVE",
                                                                    "path": null
                                                                  }
                                                                },
                                                                "type": {
                                                                  "type": "list",
                                                                  "itemType": {
                                                                    "type": "id",
                                                                    "value": "type_:ChatMessageContentItem"
                                                                  }
                                                                }
                                                              }
                                                            ],
                                                            "templateInput": {
                                                              "location": "RELATIVE",
                                                              "path": "content"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "template",
                                                          "value": {
                                                            "type": "generic",
                                                            "imports": [],
                                                            "templateString": "name: $FERN_INPUT",
                                                            "isOptional": true,
                                                            "templateInputs": [
                                                              {
                                                                "type": "payload",
                                                                "location": "RELATIVE",
                                                                "path": "name"
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "template",
                                                          "value": {
                                                            "type": "generic",
                                                            "imports": [],
                                                            "templateString": "toolCallId: $FERN_INPUT",
                                                            "isOptional": true,
                                                            "templateInputs": [
                                                              {
                                                                "type": "payload",
                                                                "location": "RELATIVE",
                                                                "path": "tool_call_id"
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "template",
                                                          "value": {
                                                            "type": "enum",
                                                            "imports": [],
                                                            "isOptional": true,
                                                            "values": {
                                                              "user": "\"user\"",
                                                              "assistant": "\"assistant\"",
                                                              "system": "\"system\"",
                                                              "tool": "\"tool\""
                                                            },
                                                            "templateString": "role: $FERN_INPUT",
                                                            "templateInput": {
                                                              "location": "RELATIVE",
                                                              "path": "role"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "template",
                                                          "value": {
                                                            "type": "iterable",
                                                            "imports": [],
                                                            "isOptional": true,
                                                            "containerTemplateString": "toolCalls: [\n\t\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t\t]",
                                                            "delimiter": ",\n\t\t\t\t\t\t\t\t\t",
                                                            "innerTemplate": {
                                                              "type": "generic",
                                                              "imports": [],
                                                              "templateString": "{\n\t\t\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t\t\t}",
                                                              "isOptional": true,
                                                              "inputDelimiter": ",\n\t\t\t\t\t\t\t\t\t\t",
                                                              "templateInputs": [
                                                                {
                                                                  "type": "template",
                                                                  "value": {
                                                                    "type": "generic",
                                                                    "imports": [],
                                                                    "templateString": "id: $FERN_INPUT",
                                                                    "isOptional": true,
                                                                    "templateInputs": [
                                                                      {
                                                                        "type": "payload",
                                                                        "location": "RELATIVE",
                                                                        "path": "id"
                                                                      }
                                                                    ]
                                                                  }
                                                                },
                                                                {
                                                                  "type": "template",
                                                                  "value": {
                                                                    "type": "generic",
                                                                    "imports": [],
                                                                    "templateString": "function: {\n\t\t\t\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t\t\t\t}",
                                                                    "isOptional": true,
                                                                    "inputDelimiter": ",\n\t\t\t\t\t\t\t\t\t\t\t",
                                                                    "templateInputs": []
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "templateInput": {
                                                              "location": "RELATIVE",
                                                              "path": "tool_calls"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "templateInput": {
                                                      "location": "RELATIVE",
                                                      "path": null
                                                    }
                                                  },
                                                  "type": {
                                                    "type": "list",
                                                    "itemType": {
                                                      "type": "id",
                                                      "value": "type_:ChatMessage"
                                                    }
                                                  }
                                                }
                                              ],
                                              "templateInput": {
                                                "location": "RELATIVE",
                                                "path": "prompt.template"
                                              }
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "enum",
                                              "imports": [],
                                              "isOptional": true,
                                              "values": {
                                                "openai": "\"openai\"",
                                                "openai_azure": "\"openai_azure\"",
                                                "mock": "\"mock\"",
                                                "anthropic": "\"anthropic\"",
                                                "bedrock": "\"bedrock\"",
                                                "cohere": "\"cohere\"",
                                                "replicate": "\"replicate\"",
                                                "google": "\"google\"",
                                                "groq": "\"groq\""
                                              },
                                              "templateString": "provider: $FERN_INPUT",
                                              "templateInput": {
                                                "location": "RELATIVE",
                                                "path": "prompt.provider"
                                              }
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "maxTokens: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "RELATIVE",
                                                  "path": "prompt.max_tokens"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "temperature: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "RELATIVE",
                                                  "path": "prompt.temperature"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "topP: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "RELATIVE",
                                                  "path": "prompt.top_p"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "union_v2",
                                              "imports": [],
                                              "isOptional": true,
                                              "templateString": "stop: $FERN_INPUT",
                                              "members": [
                                                {
                                                  "template": {
                                                    "type": "generic",
                                                    "imports": [],
                                                    "templateString": "$FERN_INPUT",
                                                    "isOptional": true,
                                                    "templateInputs": [
                                                      {
                                                        "type": "payload",
                                                        "location": "RELATIVE",
                                                        "path": null
                                                      }
                                                    ]
                                                  },
                                                  "type": {
                                                    "type": "primitive",
                                                    "value": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                {
                                                  "template": {
                                                    "type": "iterable",
                                                    "imports": [],
                                                    "isOptional": true,
                                                    "containerTemplateString": "[\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t]",
                                                    "delimiter": ",\n\t\t\t\t\t\t\t",
                                                    "innerTemplate": {
                                                      "type": "generic",
                                                      "imports": [],
                                                      "templateString": "$FERN_INPUT",
                                                      "isOptional": true,
                                                      "templateInputs": [
                                                        {
                                                          "type": "payload",
                                                          "location": "RELATIVE",
                                                          "path": null
                                                        }
                                                      ]
                                                    },
                                                    "templateInput": {
                                                      "location": "RELATIVE",
                                                      "path": null
                                                    }
                                                  },
                                                  "type": {
                                                    "type": "list",
                                                    "itemType": {
                                                      "type": "primitive",
                                                      "value": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              ],
                                              "templateInput": {
                                                "location": "RELATIVE",
                                                "path": "prompt.stop"
                                              }
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "presencePenalty: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "RELATIVE",
                                                  "path": "prompt.presence_penalty"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "frequencyPenalty: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "RELATIVE",
                                                  "path": "prompt.frequency_penalty"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "dict",
                                              "imports": [],
                                              "isOptional": true,
                                              "containerTemplateString": "other: {\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                              "delimiter": ",\n\t\t\t\t\t\t",
                                              "keyValueSeparator": ": ",
                                              "keyTemplate": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "$FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": null
                                                  }
                                                ]
                                              },
                                              "valueTemplate": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "$FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": null
                                                  }
                                                ]
                                              },
                                              "templateInput": {
                                                "location": "RELATIVE",
                                                "path": "prompt.other"
                                              }
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "seed: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "RELATIVE",
                                                  "path": "prompt.seed"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "responseFormat: {\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                              "isOptional": true,
                                              "inputDelimiter": ",\n\t\t\t\t\t\t",
                                              "templateInputs": [
                                                {
                                                  "type": "template",
                                                  "value": {
                                                    "type": "enum",
                                                    "imports": [],
                                                    "isOptional": true,
                                                    "values": {
                                                      "json_object": "\"json_object\"",
                                                      "json_schema": "\"json_schema\""
                                                    },
                                                    "templateString": "type: $FERN_INPUT",
                                                    "templateInput": {
                                                      "location": "RELATIVE",
                                                      "path": "prompt.response_format.type"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "template",
                                                  "value": {
                                                    "type": "dict",
                                                    "imports": [],
                                                    "isOptional": true,
                                                    "containerTemplateString": "jsonSchema: {\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t}",
                                                    "delimiter": ",\n\t\t\t\t\t\t\t",
                                                    "keyValueSeparator": ": ",
                                                    "keyTemplate": {
                                                      "type": "generic",
                                                      "imports": [],
                                                      "templateString": "$FERN_INPUT",
                                                      "isOptional": true,
                                                      "templateInputs": [
                                                        {
                                                          "type": "payload",
                                                          "location": "RELATIVE",
                                                          "path": null
                                                        }
                                                      ]
                                                    },
                                                    "valueTemplate": {
                                                      "type": "generic",
                                                      "imports": [],
                                                      "templateString": "$FERN_INPUT",
                                                      "isOptional": true,
                                                      "templateInputs": [
                                                        {
                                                          "type": "payload",
                                                          "location": "RELATIVE",
                                                          "path": null
                                                        }
                                                      ]
                                                    },
                                                    "templateInput": {
                                                      "location": "RELATIVE",
                                                      "path": "prompt.response_format.json_schema"
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "iterable",
                                              "imports": [],
                                              "isOptional": true,
                                              "containerTemplateString": "tools: [\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t]",
                                              "delimiter": ",\n\t\t\t\t\t\t",
                                              "innerTemplate": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "{\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t}",
                                                "isOptional": true,
                                                "inputDelimiter": ",\n\t\t\t\t\t\t\t",
                                                "templateInputs": [
                                                  {
                                                    "type": "template",
                                                    "value": {
                                                      "type": "generic",
                                                      "imports": [],
                                                      "templateString": "name: $FERN_INPUT",
                                                      "isOptional": true,
                                                      "templateInputs": [
                                                        {
                                                          "type": "payload",
                                                          "location": "RELATIVE",
                                                          "path": "name"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "template",
                                                    "value": {
                                                      "type": "generic",
                                                      "imports": [],
                                                      "templateString": "description: $FERN_INPUT",
                                                      "isOptional": true,
                                                      "templateInputs": [
                                                        {
                                                          "type": "payload",
                                                          "location": "RELATIVE",
                                                          "path": "description"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "template",
                                                    "value": {
                                                      "type": "generic",
                                                      "imports": [],
                                                      "templateString": "strict: $FERN_INPUT",
                                                      "isOptional": true,
                                                      "templateInputs": [
                                                        {
                                                          "type": "payload",
                                                          "location": "RELATIVE",
                                                          "path": "strict"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "template",
                                                    "value": {
                                                      "type": "dict",
                                                      "imports": [],
                                                      "isOptional": true,
                                                      "containerTemplateString": "parameters: {\n\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t}",
                                                      "delimiter": ",\n\t\t\t\t\t\t\t\t",
                                                      "keyValueSeparator": ": ",
                                                      "keyTemplate": {
                                                        "type": "generic",
                                                        "imports": [],
                                                        "templateString": "$FERN_INPUT",
                                                        "isOptional": true,
                                                        "templateInputs": [
                                                          {
                                                            "type": "payload",
                                                            "location": "RELATIVE",
                                                            "path": null
                                                          }
                                                        ]
                                                      },
                                                      "valueTemplate": {
                                                        "type": "generic",
                                                        "imports": [],
                                                        "templateString": "$FERN_INPUT",
                                                        "isOptional": true,
                                                        "templateInputs": [
                                                          {
                                                            "type": "payload",
                                                            "location": "RELATIVE",
                                                            "path": null
                                                          }
                                                        ]
                                                      },
                                                      "templateInput": {
                                                        "location": "RELATIVE",
                                                        "path": "parameters"
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "templateInput": {
                                                "location": "RELATIVE",
                                                "path": "prompt.tools"
                                              }
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "iterable",
                                              "imports": [],
                                              "isOptional": true,
                                              "containerTemplateString": "linkedTools: [\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t]",
                                              "delimiter": ",\n\t\t\t\t\t\t",
                                              "innerTemplate": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "$FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": null
                                                  }
                                                ]
                                              },
                                              "templateInput": {
                                                "location": "RELATIVE",
                                                "path": "prompt.linked_tools"
                                              }
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "dict",
                                              "imports": [],
                                              "isOptional": true,
                                              "containerTemplateString": "attributes: {\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                              "delimiter": ",\n\t\t\t\t\t\t",
                                              "keyValueSeparator": ": ",
                                              "keyTemplate": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "$FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": null
                                                  }
                                                ]
                                              },
                                              "valueTemplate": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "$FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": null
                                                  }
                                                ]
                                              },
                                              "templateInput": {
                                                "location": "RELATIVE",
                                                "path": "prompt.attributes"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "id",
                                  "value": "type_:LlmEvaluatorRequest"
                                }
                              },
                              {
                                "template": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "inputDelimiter": ",\n\t\t\t",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "enum",
                                        "imports": [],
                                        "isOptional": true,
                                        "values": {
                                          "target_free": "\"target_free\"",
                                          "target_required": "\"target_required\""
                                        },
                                        "templateString": "argumentsType: $FERN_INPUT",
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "arguments_type"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "enum",
                                        "imports": [],
                                        "isOptional": true,
                                        "values": {
                                          "boolean": "\"boolean\"",
                                          "number": "\"number\"",
                                          "select": "\"select\"",
                                          "multi_select": "\"multi_select\"",
                                          "text": "\"text\""
                                        },
                                        "templateString": "returnType: $FERN_INPUT",
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "return_type"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "dict",
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "attributes: {\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                        "delimiter": ",\n\t\t\t\t\t",
                                        "keyValueSeparator": ": ",
                                        "keyTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          ]
                                        },
                                        "valueTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          ]
                                        },
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "attributes"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "code: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "RELATIVE",
                                            "path": "code"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "id",
                                  "value": "type_:CodeEvaluatorRequest"
                                }
                              },
                              {
                                "template": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "inputDelimiter": ",\n\t\t\t",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "enum",
                                        "imports": [],
                                        "isOptional": true,
                                        "values": {
                                          "target_free": "\"target_free\"",
                                          "target_required": "\"target_required\""
                                        },
                                        "templateString": "argumentsType: $FERN_INPUT",
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "arguments_type"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "enum",
                                        "imports": [],
                                        "isOptional": true,
                                        "values": {
                                          "select": "\"select\"",
                                          "multi_select": "\"multi_select\"",
                                          "text": "\"text\"",
                                          "number": "\"number\"",
                                          "boolean": "\"boolean\""
                                        },
                                        "templateString": "returnType: $FERN_INPUT",
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "return_type"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "dict",
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "attributes: {\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                        "delimiter": ",\n\t\t\t\t\t",
                                        "keyValueSeparator": ": ",
                                        "keyTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          ]
                                        },
                                        "valueTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          ]
                                        },
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "attributes"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "instructions: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "RELATIVE",
                                            "path": "instructions"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "iterable",
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "options: [\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                        "delimiter": ",\n\t\t\t\t\t",
                                        "innerTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "{\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                          "isOptional": true,
                                          "inputDelimiter": ",\n\t\t\t\t\t\t",
                                          "templateInputs": [
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "name: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "name"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "enum",
                                                "imports": [],
                                                "isOptional": true,
                                                "values": {
                                                  "positive": "\"positive\"",
                                                  "negative": "\"negative\"",
                                                  "neutral": "\"neutral\""
                                                },
                                                "templateString": "valence: $FERN_INPUT",
                                                "templateInput": {
                                                  "location": "RELATIVE",
                                                  "path": "valence"
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "options"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "numberLimits: {\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                        "isOptional": true,
                                        "inputDelimiter": ",\n\t\t\t\t\t",
                                        "templateInputs": [
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "min: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "RELATIVE",
                                                  "path": "number_limits.min"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "max: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "RELATIVE",
                                                  "path": "number_limits.max"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "step: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "RELATIVE",
                                                  "path": "number_limits.step"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "enum",
                                        "imports": [],
                                        "isOptional": true,
                                        "values": {
                                          "positive": "\"positive\"",
                                          "negative": "\"negative\"",
                                          "neutral": "\"neutral\""
                                        },
                                        "templateString": "numberValence: $FERN_INPUT",
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "number_valence"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "id",
                                  "value": "type_:HumanEvaluatorRequest"
                                }
                              },
                              {
                                "template": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "inputDelimiter": ",\n\t\t\t",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "enum",
                                        "imports": [],
                                        "isOptional": true,
                                        "values": {
                                          "target_free": "\"target_free\"",
                                          "target_required": "\"target_required\""
                                        },
                                        "templateString": "argumentsType: $FERN_INPUT",
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "arguments_type"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "enum",
                                        "imports": [],
                                        "isOptional": true,
                                        "values": {
                                          "boolean": "\"boolean\"",
                                          "number": "\"number\"",
                                          "select": "\"select\"",
                                          "multi_select": "\"multi_select\"",
                                          "text": "\"text\""
                                        },
                                        "templateString": "returnType: $FERN_INPUT",
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "return_type"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "dict",
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "attributes: {\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                        "delimiter": ",\n\t\t\t\t\t",
                                        "keyValueSeparator": ": ",
                                        "keyTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          ]
                                        },
                                        "valueTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          ]
                                        },
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "attributes"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "id",
                                  "value": "type_:ExternalEvaluatorRequest"
                                }
                              }
                            ],
                            "templateInput": {
                              "location": "BODY",
                              "path": "spec"
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "list",
          "migratedFromUrlSlugs": ["list-evaluators"],
          "method": "GET",
          "id": "list",
          "originalEndpointId": "endpoint_evaluators.list",
          "name": "List Evaluators",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/evaluators"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Page offset for pagination.",
              "key": "page",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "Page size for pagination. Number of Evaluators to fetch.",
              "key": "size",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "Case-insensitive filter for Evaluator name.",
              "key": "name",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Case-insensitive filter for users in the Evaluator. This filter matches against both email address and name of users.",
              "key": "user_filter",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Field to sort Evaluators by",
              "key": "sort_by",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_:ProjectSortBy"
                }
              }
            },
            {
              "description": "Direction to sort by.",
              "key": "order",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_:SortOrder"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:PaginatedDataEvaluatorResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "List evaluators",
              "path": "/evaluators",
              "pathParameters": {},
              "queryParameters": {
                "size": 1
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "records": [
                  {
                    "id": "ev_890bcd",
                    "name": "Accuracy Evaluator",
                    "path": "Shared Evaluators/Accuracy Evaluator",
                    "version_id": "evv_012def",
                    "type": "evaluator",
                    "created_at": "2024-05-01T12:00:00Z",
                    "updated_at": "2024-05-01T12:00:00Z",
                    "status": "committed",
                    "last_used_at": "2024-05-01T12:00:00Z",
                    "spec": {
                      "arguments_type": "target_required",
                      "return_type": "number",
                      "evaluator_type": "python",
                      "code": "def evaluate(answer, target):\n    return 0.5"
                    },
                    "version_logs_count": 1,
                    "total_logs_count": 1,
                    "inputs": [
                      {
                        "name": "answer"
                      }
                    ]
                  }
                ],
                "page": 0,
                "size": 1,
                "total": 1
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "records": [
                    {
                      "id": "ev_890bcd",
                      "name": "Accuracy Evaluator",
                      "path": "Shared Evaluators/Accuracy Evaluator",
                      "version_id": "evv_012def",
                      "type": "evaluator",
                      "created_at": "2024-05-01T12:00:00Z",
                      "updated_at": "2024-05-01T12:00:00Z",
                      "status": "committed",
                      "last_used_at": "2024-05-01T12:00:00Z",
                      "spec": {
                        "arguments_type": "target_required",
                        "return_type": "number",
                        "evaluator_type": "python",
                        "code": "def evaluate(answer, target):\n    return 0.5"
                      },
                      "version_logs_count": 1,
                      "total_logs_count": 1,
                      "inputs": [
                        {
                          "name": "answer"
                        }
                      ]
                    }
                  ],
                  "page": 0,
                  "size": 1,
                  "total": 1
                }
              },
              "codeSamples": []
            },
            {
              "path": "/evaluators",
              "pathParameters": {},
              "queryParameters": {
                "page": 0,
                "size": 0
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Get a list of all Evaluators.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.evaluators.list(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "page=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "page",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "size=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "size",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "name=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "name",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "user_filter=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "user_filter",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "sort_by=$FERN_INPUT",
                      "values": {
                        "created_at": "\"created_at\"",
                        "updated_at": "\"updated_at\"",
                        "name": "\"name\""
                      },
                      "templateInput": {
                        "location": "QUERY",
                        "path": "sort_by"
                      },
                      "type": "enum"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "order=$FERN_INPUT",
                      "values": {
                        "asc": "\"asc\"",
                        "desc": "\"desc\""
                      },
                      "templateInput": {
                        "location": "QUERY",
                        "path": "order"
                      },
                      "type": "enum"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.evaluators.list(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "page: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "page"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "size: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "size"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "name: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "name"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "userFilter: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "user_filter"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "enum",
                            "imports": [],
                            "isOptional": true,
                            "values": {
                              "created_at": "\"created_at\"",
                              "updated_at": "\"updated_at\"",
                              "name": "\"name\""
                            },
                            "templateString": "sortBy: $FERN_INPUT",
                            "templateInput": {
                              "location": "QUERY",
                              "path": "sort_by"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "enum",
                            "imports": [],
                            "isOptional": true,
                            "values": {
                              "asc": "\"asc\"",
                              "desc": "\"desc\""
                            },
                            "templateString": "order: $FERN_INPUT",
                            "templateInput": {
                              "location": "QUERY",
                              "path": "order"
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "upsert",
          "migratedFromUrlSlugs": ["upsert-evaluator"],
          "method": "POST",
          "id": "upsert",
          "originalEndpointId": "endpoint_evaluators.upsert",
          "name": "Upsert Evaluator",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/evaluators"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Path of the Evaluator, including the name. This locates the Evaluator in the Humanloop filesystem and is used as as a unique identifier. For example: `folder/name` or just `name`.",
                  "key": "path",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "ID for an existing Evaluator.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Message describing the changes made.",
                  "key": "commit_message",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "spec",
                  "valueType": {
                    "type": "id",
                    "value": "type_evaluators:SrcExternalAppModelsV5EvaluatorsEvaluatorRequestSpec"
                  }
                }
              ]
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:EvaluatorResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "Create evaluator",
              "path": "/evaluators",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "path": "Shared Evaluators/Accuracy Evaluator",
                "spec": {
                  "arguments_type": "target_required",
                  "return_type": "number",
                  "evaluator_type": "python",
                  "code": "def evaluate(answer, target):\n    return 0.5"
                },
                "commit_message": "Initial commit"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "ev_890bcd",
                "name": "Accuracy Evaluator",
                "path": "Shared Evaluators/Accuracy Evaluator",
                "version_id": "evv_012def",
                "type": "evaluator",
                "created_at": "2024-05-01T12:00:00Z",
                "updated_at": "2024-05-01T12:00:00Z",
                "status": "committed",
                "last_used_at": "2024-05-01T12:00:00Z",
                "spec": {
                  "arguments_type": "target_required",
                  "return_type": "number",
                  "evaluator_type": "python",
                  "code": "def evaluate(answer, target):\n    return 0.5"
                },
                "version_logs_count": 1,
                "total_logs_count": 1,
                "inputs": [
                  {
                    "name": "answer"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "path": "Shared Evaluators/Accuracy Evaluator",
                  "spec": {
                    "arguments_type": "target_required",
                    "return_type": "number",
                    "evaluator_type": "python",
                    "code": "def evaluate(answer, target):\n    return 0.5"
                  },
                  "commit_message": "Initial commit"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "ev_890bcd",
                  "name": "Accuracy Evaluator",
                  "path": "Shared Evaluators/Accuracy Evaluator",
                  "version_id": "evv_012def",
                  "type": "evaluator",
                  "created_at": "2024-05-01T12:00:00Z",
                  "updated_at": "2024-05-01T12:00:00Z",
                  "status": "committed",
                  "last_used_at": "2024-05-01T12:00:00Z",
                  "spec": {
                    "arguments_type": "target_required",
                    "return_type": "number",
                    "evaluator_type": "python",
                    "code": "def evaluate(answer, target):\n    return 0.5"
                  },
                  "version_logs_count": 1,
                  "total_logs_count": 1,
                  "inputs": [
                    {
                      "name": "answer"
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/evaluators",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "spec": {
                    "arguments_type": "target_free",
                    "return_type": "boolean",
                    "evaluator_type": "llm"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Create an Evaluator or update it with a new version if it already exists.\n\nEvaluators are identified by the `ID` or their `path`. The spec provided determines the version of the Evaluator.\n\nIf you provide a commit message, then the new version will be committed;\notherwise it will be uncommitted. If you try to commit an already committed version,\nan exception will be raised.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.evaluators.upsert(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "path=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "path",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "commit_message=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "commit_message",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "spec=$FERN_INPUT",
                      "members": [
                        {
                          "type": {
                            "value": "type_:LlmEvaluatorRequest",
                            "type": "id"
                          },
                          "template": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"arguments_type\": $FERN_INPUT",
                                  "values": {
                                    "target_free": "\"target_free\"",
                                    "target_required": "\"target_required\""
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": "arguments_type"
                                  },
                                  "type": "enum"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"return_type\": $FERN_INPUT",
                                  "values": {
                                    "boolean": "\"boolean\"",
                                    "number": "\"number\"",
                                    "select": "\"select\"",
                                    "multi_select": "\"multi_select\"",
                                    "text": "\"text\""
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": "return_type"
                                  },
                                  "type": "enum"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "\"attributes\": {\n\t\t\t$FERN_INPUT\n\t\t}",
                                  "delimiter": ",\n\t\t\t",
                                  "keyTemplate": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": null,
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  },
                                  "valueTemplate": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": null,
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  },
                                  "keyValueSeparator": ": ",
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": "attributes"
                                  },
                                  "type": "dict"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"prompt\": {\n\t\t\t$FERN_INPUT\n\t\t}",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "\"model\": $FERN_INPUT",
                                        "templateInputs": [
                                          {
                                            "location": "RELATIVE",
                                            "path": "prompt.model",
                                            "type": "payload"
                                          }
                                        ],
                                        "type": "generic"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "\"endpoint\": $FERN_INPUT",
                                        "values": {
                                          "complete": "\"complete\"",
                                          "chat": "\"chat\"",
                                          "edit": "\"edit\""
                                        },
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "prompt.endpoint"
                                        },
                                        "type": "enum"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "\"template\": $FERN_INPUT",
                                        "members": [
                                          {
                                            "type": {
                                              "type": "primitive",
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "template": {
                                              "imports": [],
                                              "isOptional": true,
                                              "templateString": "$FERN_INPUT",
                                              "templateInputs": [
                                                {
                                                  "location": "RELATIVE",
                                                  "path": null,
                                                  "type": "payload"
                                                }
                                              ],
                                              "type": "generic"
                                            }
                                          },
                                          {
                                            "type": {
                                              "itemType": {
                                                "value": "type_:ChatMessage",
                                                "type": "id"
                                              },
                                              "type": "list"
                                            },
                                            "template": {
                                              "imports": [],
                                              "isOptional": true,
                                              "containerTemplateString": "[\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                              "delimiter": ",\n\t\t\t\t",
                                              "innerTemplate": {
                                                "imports": [],
                                                "isOptional": true,
                                                "templateString": "{\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                                "templateInputs": [
                                                  {
                                                    "type": "template",
                                                    "value": {
                                                      "imports": [],
                                                      "isOptional": true,
                                                      "templateString": "\"content\": $FERN_INPUT",
                                                      "members": [
                                                        {
                                                          "type": {
                                                            "type": "primitive",
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "template": {
                                                            "imports": [],
                                                            "isOptional": true,
                                                            "templateString": "$FERN_INPUT",
                                                            "templateInputs": [
                                                              {
                                                                "location": "RELATIVE",
                                                                "path": null,
                                                                "type": "payload"
                                                              }
                                                            ],
                                                            "type": "generic"
                                                          }
                                                        },
                                                        {
                                                          "type": {
                                                            "itemType": {
                                                              "value": "type_:ChatMessageContentItem",
                                                              "type": "id"
                                                            },
                                                            "type": "list"
                                                          },
                                                          "template": {
                                                            "imports": [],
                                                            "isOptional": true,
                                                            "containerTemplateString": "[\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t]",
                                                            "delimiter": ",\n\t\t\t\t\t\t",
                                                            "innerTemplate": {
                                                              "imports": [],
                                                              "isOptional": true,
                                                              "templateString": "$FERN_INPUT",
                                                              "members": [
                                                                {
                                                                  "type": {
                                                                    "value": "type_:TextChatContent",
                                                                    "type": "id"
                                                                  },
                                                                  "template": {
                                                                    "imports": [],
                                                                    "isOptional": true,
                                                                    "templateString": "{\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t}",
                                                                    "templateInputs": [
                                                                      {
                                                                        "type": "template",
                                                                        "value": {
                                                                          "imports": [],
                                                                          "isOptional": true,
                                                                          "templateString": "\"text\": $FERN_INPUT",
                                                                          "templateInputs": [
                                                                            {
                                                                              "location": "RELATIVE",
                                                                              "path": "text",
                                                                              "type": "payload"
                                                                            }
                                                                          ],
                                                                          "type": "generic"
                                                                        }
                                                                      }
                                                                    ],
                                                                    "inputDelimiter": ",\n\t\t\t\t\t\t\t",
                                                                    "type": "generic"
                                                                  }
                                                                },
                                                                {
                                                                  "type": {
                                                                    "value": "type_:ImageChatContent",
                                                                    "type": "id"
                                                                  },
                                                                  "template": {
                                                                    "imports": [],
                                                                    "isOptional": true,
                                                                    "templateString": "{\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t}",
                                                                    "templateInputs": [
                                                                      {
                                                                        "type": "template",
                                                                        "value": {
                                                                          "imports": [],
                                                                          "isOptional": true,
                                                                          "templateString": "\"image_url\": {\n\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t}",
                                                                          "templateInputs": [
                                                                            {
                                                                              "type": "template",
                                                                              "value": {
                                                                                "imports": [],
                                                                                "isOptional": true,
                                                                                "templateString": "\"url\": $FERN_INPUT",
                                                                                "templateInputs": [
                                                                                  {
                                                                                    "location": "RELATIVE",
                                                                                    "path": "image_url.url",
                                                                                    "type": "payload"
                                                                                  }
                                                                                ],
                                                                                "type": "generic"
                                                                              }
                                                                            },
                                                                            {
                                                                              "type": "template",
                                                                              "value": {
                                                                                "imports": [],
                                                                                "isOptional": true,
                                                                                "templateString": "\"detail\": $FERN_INPUT",
                                                                                "values": {
                                                                                  "high": "\"high\"",
                                                                                  "low": "\"low\"",
                                                                                  "auto": "\"auto\""
                                                                                },
                                                                                "templateInput": {
                                                                                  "location": "RELATIVE",
                                                                                  "path": "image_url.detail"
                                                                                },
                                                                                "type": "enum"
                                                                              }
                                                                            }
                                                                          ],
                                                                          "inputDelimiter": ",\n\t\t\t\t\t\t\t\t",
                                                                          "type": "generic"
                                                                        }
                                                                      }
                                                                    ],
                                                                    "inputDelimiter": ",\n\t\t\t\t\t\t\t",
                                                                    "type": "generic"
                                                                  }
                                                                }
                                                              ],
                                                              "templateInput": {
                                                                "location": "RELATIVE",
                                                                "path": null
                                                              },
                                                              "type": "union_v2"
                                                            },
                                                            "templateInput": {
                                                              "location": "RELATIVE",
                                                              "path": null
                                                            },
                                                            "type": "iterable"
                                                          }
                                                        }
                                                      ],
                                                      "templateInput": {
                                                        "location": "RELATIVE",
                                                        "path": "content"
                                                      },
                                                      "type": "union_v2"
                                                    }
                                                  },
                                                  {
                                                    "type": "template",
                                                    "value": {
                                                      "imports": [],
                                                      "isOptional": true,
                                                      "templateString": "\"name\": $FERN_INPUT",
                                                      "templateInputs": [
                                                        {
                                                          "location": "RELATIVE",
                                                          "path": "name",
                                                          "type": "payload"
                                                        }
                                                      ],
                                                      "type": "generic"
                                                    }
                                                  },
                                                  {
                                                    "type": "template",
                                                    "value": {
                                                      "imports": [],
                                                      "isOptional": true,
                                                      "templateString": "\"tool_call_id\": $FERN_INPUT",
                                                      "templateInputs": [
                                                        {
                                                          "location": "RELATIVE",
                                                          "path": "tool_call_id",
                                                          "type": "payload"
                                                        }
                                                      ],
                                                      "type": "generic"
                                                    }
                                                  },
                                                  {
                                                    "type": "template",
                                                    "value": {
                                                      "imports": [],
                                                      "isOptional": true,
                                                      "templateString": "\"role\": $FERN_INPUT",
                                                      "values": {
                                                        "user": "\"user\"",
                                                        "assistant": "\"assistant\"",
                                                        "system": "\"system\"",
                                                        "tool": "\"tool\""
                                                      },
                                                      "templateInput": {
                                                        "location": "RELATIVE",
                                                        "path": "role"
                                                      },
                                                      "type": "enum"
                                                    }
                                                  },
                                                  {
                                                    "type": "template",
                                                    "value": {
                                                      "imports": [],
                                                      "isOptional": true,
                                                      "containerTemplateString": "\"tool_calls\": [\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t]",
                                                      "delimiter": ",\n\t\t\t\t\t\t",
                                                      "innerTemplate": {
                                                        "imports": [],
                                                        "isOptional": true,
                                                        "templateString": "{\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t}",
                                                        "templateInputs": [
                                                          {
                                                            "type": "template",
                                                            "value": {
                                                              "imports": [],
                                                              "isOptional": true,
                                                              "templateString": "\"id\": $FERN_INPUT",
                                                              "templateInputs": [
                                                                {
                                                                  "location": "RELATIVE",
                                                                  "path": "id",
                                                                  "type": "payload"
                                                                }
                                                              ],
                                                              "type": "generic"
                                                            }
                                                          },
                                                          {
                                                            "type": "template",
                                                            "value": {
                                                              "imports": [],
                                                              "isOptional": true,
                                                              "templateString": "\"function\": {\n\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t}",
                                                              "templateInputs": [
                                                                {
                                                                  "type": "template",
                                                                  "value": {
                                                                    "imports": [],
                                                                    "isOptional": true,
                                                                    "templateString": "\"name\": $FERN_INPUT",
                                                                    "templateInputs": [
                                                                      {
                                                                        "location": "RELATIVE",
                                                                        "path": "function.name",
                                                                        "type": "payload"
                                                                      }
                                                                    ],
                                                                    "type": "generic"
                                                                  }
                                                                },
                                                                {
                                                                  "type": "template",
                                                                  "value": {
                                                                    "imports": [],
                                                                    "isOptional": true,
                                                                    "templateString": "\"arguments\": $FERN_INPUT",
                                                                    "templateInputs": [
                                                                      {
                                                                        "location": "RELATIVE",
                                                                        "path": "function.arguments",
                                                                        "type": "payload"
                                                                      }
                                                                    ],
                                                                    "type": "generic"
                                                                  }
                                                                }
                                                              ],
                                                              "inputDelimiter": ",\n\t\t\t\t\t\t\t\t",
                                                              "type": "generic"
                                                            }
                                                          }
                                                        ],
                                                        "inputDelimiter": ",\n\t\t\t\t\t\t\t",
                                                        "type": "generic"
                                                      },
                                                      "templateInput": {
                                                        "location": "RELATIVE",
                                                        "path": "tool_calls"
                                                      },
                                                      "type": "iterable"
                                                    }
                                                  }
                                                ],
                                                "inputDelimiter": ",\n\t\t\t\t\t",
                                                "type": "generic"
                                              },
                                              "templateInput": {
                                                "location": "RELATIVE",
                                                "path": null
                                              },
                                              "type": "iterable"
                                            }
                                          }
                                        ],
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "prompt.template"
                                        },
                                        "type": "union_v2"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "\"provider\": $FERN_INPUT",
                                        "values": {
                                          "openai": "\"openai\"",
                                          "openai_azure": "\"openai_azure\"",
                                          "mock": "\"mock\"",
                                          "anthropic": "\"anthropic\"",
                                          "bedrock": "\"bedrock\"",
                                          "cohere": "\"cohere\"",
                                          "replicate": "\"replicate\"",
                                          "google": "\"google\"",
                                          "groq": "\"groq\""
                                        },
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "prompt.provider"
                                        },
                                        "type": "enum"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "\"max_tokens\": $FERN_INPUT",
                                        "templateInputs": [
                                          {
                                            "location": "RELATIVE",
                                            "path": "prompt.max_tokens",
                                            "type": "payload"
                                          }
                                        ],
                                        "type": "generic"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "\"temperature\": $FERN_INPUT",
                                        "templateInputs": [
                                          {
                                            "location": "RELATIVE",
                                            "path": "prompt.temperature",
                                            "type": "payload"
                                          }
                                        ],
                                        "type": "generic"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "\"top_p\": $FERN_INPUT",
                                        "templateInputs": [
                                          {
                                            "location": "RELATIVE",
                                            "path": "prompt.top_p",
                                            "type": "payload"
                                          }
                                        ],
                                        "type": "generic"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "\"stop\": $FERN_INPUT",
                                        "members": [
                                          {
                                            "type": {
                                              "type": "primitive",
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "template": {
                                              "imports": [],
                                              "isOptional": true,
                                              "templateString": "$FERN_INPUT",
                                              "templateInputs": [
                                                {
                                                  "location": "RELATIVE",
                                                  "path": null,
                                                  "type": "payload"
                                                }
                                              ],
                                              "type": "generic"
                                            }
                                          },
                                          {
                                            "type": {
                                              "itemType": {
                                                "type": "primitive",
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "type": "list"
                                            },
                                            "template": {
                                              "imports": [],
                                              "isOptional": true,
                                              "containerTemplateString": "[\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                              "delimiter": ",\n\t\t\t\t",
                                              "innerTemplate": {
                                                "imports": [],
                                                "isOptional": true,
                                                "templateString": "$FERN_INPUT",
                                                "templateInputs": [
                                                  {
                                                    "location": "RELATIVE",
                                                    "path": null,
                                                    "type": "payload"
                                                  }
                                                ],
                                                "type": "generic"
                                              },
                                              "templateInput": {
                                                "location": "RELATIVE",
                                                "path": null
                                              },
                                              "type": "iterable"
                                            }
                                          }
                                        ],
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "prompt.stop"
                                        },
                                        "type": "union_v2"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "\"presence_penalty\": $FERN_INPUT",
                                        "templateInputs": [
                                          {
                                            "location": "RELATIVE",
                                            "path": "prompt.presence_penalty",
                                            "type": "payload"
                                          }
                                        ],
                                        "type": "generic"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "\"frequency_penalty\": $FERN_INPUT",
                                        "templateInputs": [
                                          {
                                            "location": "RELATIVE",
                                            "path": "prompt.frequency_penalty",
                                            "type": "payload"
                                          }
                                        ],
                                        "type": "generic"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "\"other\": {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                        "delimiter": ",\n\t\t\t\t",
                                        "keyTemplate": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "$FERN_INPUT",
                                          "templateInputs": [
                                            {
                                              "location": "RELATIVE",
                                              "path": null,
                                              "type": "payload"
                                            }
                                          ],
                                          "type": "generic"
                                        },
                                        "valueTemplate": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "$FERN_INPUT",
                                          "templateInputs": [
                                            {
                                              "location": "RELATIVE",
                                              "path": null,
                                              "type": "payload"
                                            }
                                          ],
                                          "type": "generic"
                                        },
                                        "keyValueSeparator": ": ",
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "prompt.other"
                                        },
                                        "type": "dict"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "\"seed\": $FERN_INPUT",
                                        "templateInputs": [
                                          {
                                            "location": "RELATIVE",
                                            "path": "prompt.seed",
                                            "type": "payload"
                                          }
                                        ],
                                        "type": "generic"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "\"response_format\": {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                        "templateInputs": [
                                          {
                                            "type": "template",
                                            "value": {
                                              "imports": [],
                                              "isOptional": true,
                                              "templateString": "\"type\": $FERN_INPUT",
                                              "values": {
                                                "json_object": "\"json_object\"",
                                                "json_schema": "\"json_schema\""
                                              },
                                              "templateInput": {
                                                "location": "RELATIVE",
                                                "path": "prompt.response_format.type"
                                              },
                                              "type": "enum"
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "imports": [],
                                              "isOptional": true,
                                              "containerTemplateString": "\"json_schema\": {\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                              "delimiter": ",\n\t\t\t\t\t",
                                              "keyTemplate": {
                                                "imports": [],
                                                "isOptional": true,
                                                "templateString": "$FERN_INPUT",
                                                "templateInputs": [
                                                  {
                                                    "location": "RELATIVE",
                                                    "path": null,
                                                    "type": "payload"
                                                  }
                                                ],
                                                "type": "generic"
                                              },
                                              "valueTemplate": {
                                                "imports": [],
                                                "isOptional": true,
                                                "templateString": "$FERN_INPUT",
                                                "templateInputs": [
                                                  {
                                                    "location": "RELATIVE",
                                                    "path": null,
                                                    "type": "payload"
                                                  }
                                                ],
                                                "type": "generic"
                                              },
                                              "keyValueSeparator": ": ",
                                              "templateInput": {
                                                "location": "RELATIVE",
                                                "path": "prompt.response_format.type.response_format.json_schema"
                                              },
                                              "type": "dict"
                                            }
                                          }
                                        ],
                                        "inputDelimiter": ",\n\t\t\t\t",
                                        "type": "generic"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "\"tools\": [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                        "delimiter": ",\n\t\t\t\t",
                                        "innerTemplate": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "{\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                          "templateInputs": [
                                            {
                                              "type": "template",
                                              "value": {
                                                "imports": [],
                                                "isOptional": true,
                                                "templateString": "\"name\": $FERN_INPUT",
                                                "templateInputs": [
                                                  {
                                                    "location": "RELATIVE",
                                                    "path": "name",
                                                    "type": "payload"
                                                  }
                                                ],
                                                "type": "generic"
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "imports": [],
                                                "isOptional": true,
                                                "templateString": "\"description\": $FERN_INPUT",
                                                "templateInputs": [
                                                  {
                                                    "location": "RELATIVE",
                                                    "path": "description",
                                                    "type": "payload"
                                                  }
                                                ],
                                                "type": "generic"
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "imports": [],
                                                "isOptional": true,
                                                "templateString": "\"strict\": $FERN_INPUT",
                                                "templateInputs": [
                                                  {
                                                    "location": "RELATIVE",
                                                    "path": "strict",
                                                    "type": "payload"
                                                  }
                                                ],
                                                "type": "generic"
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "imports": [],
                                                "isOptional": true,
                                                "containerTemplateString": "\"parameters\": {\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                                "delimiter": ",\n\t\t\t\t\t\t",
                                                "keyTemplate": {
                                                  "imports": [],
                                                  "isOptional": true,
                                                  "templateString": "$FERN_INPUT",
                                                  "templateInputs": [
                                                    {
                                                      "location": "RELATIVE",
                                                      "path": null,
                                                      "type": "payload"
                                                    }
                                                  ],
                                                  "type": "generic"
                                                },
                                                "valueTemplate": {
                                                  "imports": [],
                                                  "isOptional": true,
                                                  "templateString": "$FERN_INPUT",
                                                  "templateInputs": [
                                                    {
                                                      "location": "RELATIVE",
                                                      "path": null,
                                                      "type": "payload"
                                                    }
                                                  ],
                                                  "type": "generic"
                                                },
                                                "keyValueSeparator": ": ",
                                                "templateInput": {
                                                  "location": "RELATIVE",
                                                  "path": "parameters"
                                                },
                                                "type": "dict"
                                              }
                                            }
                                          ],
                                          "inputDelimiter": ",\n\t\t\t\t\t",
                                          "type": "generic"
                                        },
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "prompt.tools"
                                        },
                                        "type": "iterable"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "\"linked_tools\": [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                        "delimiter": ",\n\t\t\t\t",
                                        "innerTemplate": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "$FERN_INPUT",
                                          "templateInputs": [
                                            {
                                              "location": "RELATIVE",
                                              "path": null,
                                              "type": "payload"
                                            }
                                          ],
                                          "type": "generic"
                                        },
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "prompt.linked_tools"
                                        },
                                        "type": "iterable"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "\"attributes\": {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                        "delimiter": ",\n\t\t\t\t",
                                        "keyTemplate": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "$FERN_INPUT",
                                          "templateInputs": [
                                            {
                                              "location": "RELATIVE",
                                              "path": null,
                                              "type": "payload"
                                            }
                                          ],
                                          "type": "generic"
                                        },
                                        "valueTemplate": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "$FERN_INPUT",
                                          "templateInputs": [
                                            {
                                              "location": "RELATIVE",
                                              "path": null,
                                              "type": "payload"
                                            }
                                          ],
                                          "type": "generic"
                                        },
                                        "keyValueSeparator": ": ",
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "prompt.attributes"
                                        },
                                        "type": "dict"
                                      }
                                    }
                                  ],
                                  "inputDelimiter": ",\n\t\t\t",
                                  "type": "generic"
                                }
                              }
                            ],
                            "inputDelimiter": ",\n\t\t",
                            "type": "generic"
                          }
                        },
                        {
                          "type": {
                            "value": "type_:CodeEvaluatorRequest",
                            "type": "id"
                          },
                          "template": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"arguments_type\": $FERN_INPUT",
                                  "values": {
                                    "target_free": "\"target_free\"",
                                    "target_required": "\"target_required\""
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": "arguments_type"
                                  },
                                  "type": "enum"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"return_type\": $FERN_INPUT",
                                  "values": {
                                    "boolean": "\"boolean\"",
                                    "number": "\"number\"",
                                    "select": "\"select\"",
                                    "multi_select": "\"multi_select\"",
                                    "text": "\"text\""
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": "return_type"
                                  },
                                  "type": "enum"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "\"attributes\": {\n\t\t\t$FERN_INPUT\n\t\t}",
                                  "delimiter": ",\n\t\t\t",
                                  "keyTemplate": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": null,
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  },
                                  "valueTemplate": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": null,
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  },
                                  "keyValueSeparator": ": ",
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": "attributes"
                                  },
                                  "type": "dict"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"code\": $FERN_INPUT",
                                  "templateInputs": [
                                    {
                                      "location": "RELATIVE",
                                      "path": "code",
                                      "type": "payload"
                                    }
                                  ],
                                  "type": "generic"
                                }
                              }
                            ],
                            "inputDelimiter": ",\n\t\t",
                            "type": "generic"
                          }
                        },
                        {
                          "type": {
                            "value": "type_:HumanEvaluatorRequest",
                            "type": "id"
                          },
                          "template": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"arguments_type\": $FERN_INPUT",
                                  "values": {
                                    "target_free": "\"target_free\"",
                                    "target_required": "\"target_required\""
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": "arguments_type"
                                  },
                                  "type": "enum"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"return_type\": $FERN_INPUT",
                                  "values": {
                                    "select": "\"select\"",
                                    "multi_select": "\"multi_select\"",
                                    "text": "\"text\"",
                                    "number": "\"number\"",
                                    "boolean": "\"boolean\""
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": "return_type"
                                  },
                                  "type": "enum"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "\"attributes\": {\n\t\t\t$FERN_INPUT\n\t\t}",
                                  "delimiter": ",\n\t\t\t",
                                  "keyTemplate": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": null,
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  },
                                  "valueTemplate": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": null,
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  },
                                  "keyValueSeparator": ": ",
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": "attributes"
                                  },
                                  "type": "dict"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"instructions\": $FERN_INPUT",
                                  "templateInputs": [
                                    {
                                      "location": "RELATIVE",
                                      "path": "instructions",
                                      "type": "payload"
                                    }
                                  ],
                                  "type": "generic"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "\"options\": [\n\t\t\t$FERN_INPUT\n\t\t]",
                                  "delimiter": ",\n\t\t\t",
                                  "innerTemplate": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "{\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                    "templateInputs": [
                                      {
                                        "type": "template",
                                        "value": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "\"name\": $FERN_INPUT",
                                          "templateInputs": [
                                            {
                                              "location": "RELATIVE",
                                              "path": "name",
                                              "type": "payload"
                                            }
                                          ],
                                          "type": "generic"
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "imports": [],
                                          "isOptional": true,
                                          "templateString": "\"valence\": $FERN_INPUT",
                                          "values": {
                                            "positive": "\"positive\"",
                                            "negative": "\"negative\"",
                                            "neutral": "\"neutral\""
                                          },
                                          "templateInput": {
                                            "location": "RELATIVE",
                                            "path": "valence"
                                          },
                                          "type": "enum"
                                        }
                                      }
                                    ],
                                    "inputDelimiter": ",\n\t\t\t\t",
                                    "type": "generic"
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": "options"
                                  },
                                  "type": "iterable"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"number_limits\": {\n\t\t\t$FERN_INPUT\n\t\t}",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "\"min\": $FERN_INPUT",
                                        "templateInputs": [
                                          {
                                            "location": "RELATIVE",
                                            "path": "number_limits.min",
                                            "type": "payload"
                                          }
                                        ],
                                        "type": "generic"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "\"max\": $FERN_INPUT",
                                        "templateInputs": [
                                          {
                                            "location": "RELATIVE",
                                            "path": "number_limits.max",
                                            "type": "payload"
                                          }
                                        ],
                                        "type": "generic"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "\"step\": $FERN_INPUT",
                                        "templateInputs": [
                                          {
                                            "location": "RELATIVE",
                                            "path": "number_limits.step",
                                            "type": "payload"
                                          }
                                        ],
                                        "type": "generic"
                                      }
                                    }
                                  ],
                                  "inputDelimiter": ",\n\t\t\t",
                                  "type": "generic"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"number_valence\": $FERN_INPUT",
                                  "values": {
                                    "positive": "\"positive\"",
                                    "negative": "\"negative\"",
                                    "neutral": "\"neutral\""
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": "number_valence"
                                  },
                                  "type": "enum"
                                }
                              }
                            ],
                            "inputDelimiter": ",\n\t\t",
                            "type": "generic"
                          }
                        },
                        {
                          "type": {
                            "value": "type_:ExternalEvaluatorRequest",
                            "type": "id"
                          },
                          "template": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"arguments_type\": $FERN_INPUT",
                                  "values": {
                                    "target_free": "\"target_free\"",
                                    "target_required": "\"target_required\""
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": "arguments_type"
                                  },
                                  "type": "enum"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "\"return_type\": $FERN_INPUT",
                                  "values": {
                                    "boolean": "\"boolean\"",
                                    "number": "\"number\"",
                                    "select": "\"select\"",
                                    "multi_select": "\"multi_select\"",
                                    "text": "\"text\""
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": "return_type"
                                  },
                                  "type": "enum"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "\"attributes\": {\n\t\t\t$FERN_INPUT\n\t\t}",
                                  "delimiter": ",\n\t\t\t",
                                  "keyTemplate": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": null,
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  },
                                  "valueTemplate": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": null,
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  },
                                  "keyValueSeparator": ": ",
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": "attributes"
                                  },
                                  "type": "dict"
                                }
                              }
                            ],
                            "inputDelimiter": ",\n\t\t",
                            "type": "generic"
                          }
                        }
                      ],
                      "templateInput": {
                        "location": "BODY",
                        "path": "spec"
                      },
                      "type": "union_v2"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.evaluators.upsert(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "path: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "path"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "id: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "commitMessage: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "commit_message"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "union_v2",
                            "imports": [],
                            "isOptional": true,
                            "templateString": "spec: $FERN_INPUT",
                            "members": [
                              {
                                "template": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "inputDelimiter": ",\n\t\t\t",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "enum",
                                        "imports": [],
                                        "isOptional": true,
                                        "values": {
                                          "target_free": "\"target_free\"",
                                          "target_required": "\"target_required\""
                                        },
                                        "templateString": "argumentsType: $FERN_INPUT",
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "arguments_type"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "enum",
                                        "imports": [],
                                        "isOptional": true,
                                        "values": {
                                          "boolean": "\"boolean\"",
                                          "number": "\"number\"",
                                          "select": "\"select\"",
                                          "multi_select": "\"multi_select\"",
                                          "text": "\"text\""
                                        },
                                        "templateString": "returnType: $FERN_INPUT",
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "return_type"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "dict",
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "attributes: {\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                        "delimiter": ",\n\t\t\t\t\t",
                                        "keyValueSeparator": ": ",
                                        "keyTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          ]
                                        },
                                        "valueTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          ]
                                        },
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "attributes"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "prompt: {\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                        "isOptional": true,
                                        "inputDelimiter": ",\n\t\t\t\t\t",
                                        "templateInputs": [
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "model: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "RELATIVE",
                                                  "path": "prompt.model"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "enum",
                                              "imports": [],
                                              "isOptional": true,
                                              "values": {
                                                "complete": "\"complete\"",
                                                "chat": "\"chat\"",
                                                "edit": "\"edit\""
                                              },
                                              "templateString": "endpoint: $FERN_INPUT",
                                              "templateInput": {
                                                "location": "RELATIVE",
                                                "path": "prompt.endpoint"
                                              }
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "union_v2",
                                              "imports": [],
                                              "isOptional": true,
                                              "templateString": "template: $FERN_INPUT",
                                              "members": [
                                                {
                                                  "template": {
                                                    "type": "generic",
                                                    "imports": [],
                                                    "templateString": "$FERN_INPUT",
                                                    "isOptional": true,
                                                    "templateInputs": [
                                                      {
                                                        "type": "payload",
                                                        "location": "RELATIVE",
                                                        "path": null
                                                      }
                                                    ]
                                                  },
                                                  "type": {
                                                    "type": "primitive",
                                                    "value": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                {
                                                  "template": {
                                                    "type": "iterable",
                                                    "imports": [],
                                                    "isOptional": true,
                                                    "containerTemplateString": "[\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t]",
                                                    "delimiter": ",\n\t\t\t\t\t\t\t",
                                                    "innerTemplate": {
                                                      "type": "generic",
                                                      "imports": [],
                                                      "templateString": "{\n\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t}",
                                                      "isOptional": true,
                                                      "inputDelimiter": ",\n\t\t\t\t\t\t\t\t",
                                                      "templateInputs": [
                                                        {
                                                          "type": "template",
                                                          "value": {
                                                            "type": "union_v2",
                                                            "imports": [],
                                                            "isOptional": true,
                                                            "templateString": "content: $FERN_INPUT",
                                                            "members": [
                                                              {
                                                                "template": {
                                                                  "type": "generic",
                                                                  "imports": [],
                                                                  "templateString": "$FERN_INPUT",
                                                                  "isOptional": true,
                                                                  "templateInputs": [
                                                                    {
                                                                      "type": "payload",
                                                                      "location": "RELATIVE",
                                                                      "path": null
                                                                    }
                                                                  ]
                                                                },
                                                                "type": {
                                                                  "type": "primitive",
                                                                  "value": {
                                                                    "type": "string"
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "template": {
                                                                  "type": "iterable",
                                                                  "imports": [],
                                                                  "isOptional": true,
                                                                  "containerTemplateString": "[\n\t\t\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t\t\t]",
                                                                  "delimiter": ",\n\t\t\t\t\t\t\t\t\t\t",
                                                                  "innerTemplate": {
                                                                    "type": "union_v2",
                                                                    "imports": [],
                                                                    "isOptional": true,
                                                                    "templateString": "$FERN_INPUT",
                                                                    "members": [],
                                                                    "templateInput": {
                                                                      "location": "RELATIVE",
                                                                      "path": null
                                                                    }
                                                                  },
                                                                  "templateInput": {
                                                                    "location": "RELATIVE",
                                                                    "path": null
                                                                  }
                                                                },
                                                                "type": {
                                                                  "type": "list",
                                                                  "itemType": {
                                                                    "type": "id",
                                                                    "value": "type_:ChatMessageContentItem"
                                                                  }
                                                                }
                                                              }
                                                            ],
                                                            "templateInput": {
                                                              "location": "RELATIVE",
                                                              "path": "content"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "template",
                                                          "value": {
                                                            "type": "generic",
                                                            "imports": [],
                                                            "templateString": "name: $FERN_INPUT",
                                                            "isOptional": true,
                                                            "templateInputs": [
                                                              {
                                                                "type": "payload",
                                                                "location": "RELATIVE",
                                                                "path": "name"
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "template",
                                                          "value": {
                                                            "type": "generic",
                                                            "imports": [],
                                                            "templateString": "toolCallId: $FERN_INPUT",
                                                            "isOptional": true,
                                                            "templateInputs": [
                                                              {
                                                                "type": "payload",
                                                                "location": "RELATIVE",
                                                                "path": "tool_call_id"
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "template",
                                                          "value": {
                                                            "type": "enum",
                                                            "imports": [],
                                                            "isOptional": true,
                                                            "values": {
                                                              "user": "\"user\"",
                                                              "assistant": "\"assistant\"",
                                                              "system": "\"system\"",
                                                              "tool": "\"tool\""
                                                            },
                                                            "templateString": "role: $FERN_INPUT",
                                                            "templateInput": {
                                                              "location": "RELATIVE",
                                                              "path": "role"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "template",
                                                          "value": {
                                                            "type": "iterable",
                                                            "imports": [],
                                                            "isOptional": true,
                                                            "containerTemplateString": "toolCalls: [\n\t\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t\t]",
                                                            "delimiter": ",\n\t\t\t\t\t\t\t\t\t",
                                                            "innerTemplate": {
                                                              "type": "generic",
                                                              "imports": [],
                                                              "templateString": "{\n\t\t\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t\t\t}",
                                                              "isOptional": true,
                                                              "inputDelimiter": ",\n\t\t\t\t\t\t\t\t\t\t",
                                                              "templateInputs": [
                                                                {
                                                                  "type": "template",
                                                                  "value": {
                                                                    "type": "generic",
                                                                    "imports": [],
                                                                    "templateString": "id: $FERN_INPUT",
                                                                    "isOptional": true,
                                                                    "templateInputs": [
                                                                      {
                                                                        "type": "payload",
                                                                        "location": "RELATIVE",
                                                                        "path": "id"
                                                                      }
                                                                    ]
                                                                  }
                                                                },
                                                                {
                                                                  "type": "template",
                                                                  "value": {
                                                                    "type": "generic",
                                                                    "imports": [],
                                                                    "templateString": "function: {\n\t\t\t\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t\t\t\t}",
                                                                    "isOptional": true,
                                                                    "inputDelimiter": ",\n\t\t\t\t\t\t\t\t\t\t\t",
                                                                    "templateInputs": []
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "templateInput": {
                                                              "location": "RELATIVE",
                                                              "path": "tool_calls"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "templateInput": {
                                                      "location": "RELATIVE",
                                                      "path": null
                                                    }
                                                  },
                                                  "type": {
                                                    "type": "list",
                                                    "itemType": {
                                                      "type": "id",
                                                      "value": "type_:ChatMessage"
                                                    }
                                                  }
                                                }
                                              ],
                                              "templateInput": {
                                                "location": "RELATIVE",
                                                "path": "prompt.template"
                                              }
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "enum",
                                              "imports": [],
                                              "isOptional": true,
                                              "values": {
                                                "openai": "\"openai\"",
                                                "openai_azure": "\"openai_azure\"",
                                                "mock": "\"mock\"",
                                                "anthropic": "\"anthropic\"",
                                                "bedrock": "\"bedrock\"",
                                                "cohere": "\"cohere\"",
                                                "replicate": "\"replicate\"",
                                                "google": "\"google\"",
                                                "groq": "\"groq\""
                                              },
                                              "templateString": "provider: $FERN_INPUT",
                                              "templateInput": {
                                                "location": "RELATIVE",
                                                "path": "prompt.provider"
                                              }
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "maxTokens: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "RELATIVE",
                                                  "path": "prompt.max_tokens"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "temperature: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "RELATIVE",
                                                  "path": "prompt.temperature"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "topP: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "RELATIVE",
                                                  "path": "prompt.top_p"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "union_v2",
                                              "imports": [],
                                              "isOptional": true,
                                              "templateString": "stop: $FERN_INPUT",
                                              "members": [
                                                {
                                                  "template": {
                                                    "type": "generic",
                                                    "imports": [],
                                                    "templateString": "$FERN_INPUT",
                                                    "isOptional": true,
                                                    "templateInputs": [
                                                      {
                                                        "type": "payload",
                                                        "location": "RELATIVE",
                                                        "path": null
                                                      }
                                                    ]
                                                  },
                                                  "type": {
                                                    "type": "primitive",
                                                    "value": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                {
                                                  "template": {
                                                    "type": "iterable",
                                                    "imports": [],
                                                    "isOptional": true,
                                                    "containerTemplateString": "[\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t]",
                                                    "delimiter": ",\n\t\t\t\t\t\t\t",
                                                    "innerTemplate": {
                                                      "type": "generic",
                                                      "imports": [],
                                                      "templateString": "$FERN_INPUT",
                                                      "isOptional": true,
                                                      "templateInputs": [
                                                        {
                                                          "type": "payload",
                                                          "location": "RELATIVE",
                                                          "path": null
                                                        }
                                                      ]
                                                    },
                                                    "templateInput": {
                                                      "location": "RELATIVE",
                                                      "path": null
                                                    }
                                                  },
                                                  "type": {
                                                    "type": "list",
                                                    "itemType": {
                                                      "type": "primitive",
                                                      "value": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              ],
                                              "templateInput": {
                                                "location": "RELATIVE",
                                                "path": "prompt.stop"
                                              }
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "presencePenalty: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "RELATIVE",
                                                  "path": "prompt.presence_penalty"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "frequencyPenalty: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "RELATIVE",
                                                  "path": "prompt.frequency_penalty"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "dict",
                                              "imports": [],
                                              "isOptional": true,
                                              "containerTemplateString": "other: {\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                              "delimiter": ",\n\t\t\t\t\t\t",
                                              "keyValueSeparator": ": ",
                                              "keyTemplate": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "$FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": null
                                                  }
                                                ]
                                              },
                                              "valueTemplate": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "$FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": null
                                                  }
                                                ]
                                              },
                                              "templateInput": {
                                                "location": "RELATIVE",
                                                "path": "prompt.other"
                                              }
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "seed: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "RELATIVE",
                                                  "path": "prompt.seed"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "responseFormat: {\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                              "isOptional": true,
                                              "inputDelimiter": ",\n\t\t\t\t\t\t",
                                              "templateInputs": [
                                                {
                                                  "type": "template",
                                                  "value": {
                                                    "type": "enum",
                                                    "imports": [],
                                                    "isOptional": true,
                                                    "values": {
                                                      "json_object": "\"json_object\"",
                                                      "json_schema": "\"json_schema\""
                                                    },
                                                    "templateString": "type: $FERN_INPUT",
                                                    "templateInput": {
                                                      "location": "RELATIVE",
                                                      "path": "prompt.response_format.type"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "template",
                                                  "value": {
                                                    "type": "dict",
                                                    "imports": [],
                                                    "isOptional": true,
                                                    "containerTemplateString": "jsonSchema: {\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t}",
                                                    "delimiter": ",\n\t\t\t\t\t\t\t",
                                                    "keyValueSeparator": ": ",
                                                    "keyTemplate": {
                                                      "type": "generic",
                                                      "imports": [],
                                                      "templateString": "$FERN_INPUT",
                                                      "isOptional": true,
                                                      "templateInputs": [
                                                        {
                                                          "type": "payload",
                                                          "location": "RELATIVE",
                                                          "path": null
                                                        }
                                                      ]
                                                    },
                                                    "valueTemplate": {
                                                      "type": "generic",
                                                      "imports": [],
                                                      "templateString": "$FERN_INPUT",
                                                      "isOptional": true,
                                                      "templateInputs": [
                                                        {
                                                          "type": "payload",
                                                          "location": "RELATIVE",
                                                          "path": null
                                                        }
                                                      ]
                                                    },
                                                    "templateInput": {
                                                      "location": "RELATIVE",
                                                      "path": "prompt.response_format.json_schema"
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "iterable",
                                              "imports": [],
                                              "isOptional": true,
                                              "containerTemplateString": "tools: [\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t]",
                                              "delimiter": ",\n\t\t\t\t\t\t",
                                              "innerTemplate": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "{\n\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t}",
                                                "isOptional": true,
                                                "inputDelimiter": ",\n\t\t\t\t\t\t\t",
                                                "templateInputs": [
                                                  {
                                                    "type": "template",
                                                    "value": {
                                                      "type": "generic",
                                                      "imports": [],
                                                      "templateString": "name: $FERN_INPUT",
                                                      "isOptional": true,
                                                      "templateInputs": [
                                                        {
                                                          "type": "payload",
                                                          "location": "RELATIVE",
                                                          "path": "name"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "template",
                                                    "value": {
                                                      "type": "generic",
                                                      "imports": [],
                                                      "templateString": "description: $FERN_INPUT",
                                                      "isOptional": true,
                                                      "templateInputs": [
                                                        {
                                                          "type": "payload",
                                                          "location": "RELATIVE",
                                                          "path": "description"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "template",
                                                    "value": {
                                                      "type": "generic",
                                                      "imports": [],
                                                      "templateString": "strict: $FERN_INPUT",
                                                      "isOptional": true,
                                                      "templateInputs": [
                                                        {
                                                          "type": "payload",
                                                          "location": "RELATIVE",
                                                          "path": "strict"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "template",
                                                    "value": {
                                                      "type": "dict",
                                                      "imports": [],
                                                      "isOptional": true,
                                                      "containerTemplateString": "parameters: {\n\t\t\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t\t\t}",
                                                      "delimiter": ",\n\t\t\t\t\t\t\t\t",
                                                      "keyValueSeparator": ": ",
                                                      "keyTemplate": {
                                                        "type": "generic",
                                                        "imports": [],
                                                        "templateString": "$FERN_INPUT",
                                                        "isOptional": true,
                                                        "templateInputs": [
                                                          {
                                                            "type": "payload",
                                                            "location": "RELATIVE",
                                                            "path": null
                                                          }
                                                        ]
                                                      },
                                                      "valueTemplate": {
                                                        "type": "generic",
                                                        "imports": [],
                                                        "templateString": "$FERN_INPUT",
                                                        "isOptional": true,
                                                        "templateInputs": [
                                                          {
                                                            "type": "payload",
                                                            "location": "RELATIVE",
                                                            "path": null
                                                          }
                                                        ]
                                                      },
                                                      "templateInput": {
                                                        "location": "RELATIVE",
                                                        "path": "parameters"
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "templateInput": {
                                                "location": "RELATIVE",
                                                "path": "prompt.tools"
                                              }
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "iterable",
                                              "imports": [],
                                              "isOptional": true,
                                              "containerTemplateString": "linkedTools: [\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t]",
                                              "delimiter": ",\n\t\t\t\t\t\t",
                                              "innerTemplate": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "$FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": null
                                                  }
                                                ]
                                              },
                                              "templateInput": {
                                                "location": "RELATIVE",
                                                "path": "prompt.linked_tools"
                                              }
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "dict",
                                              "imports": [],
                                              "isOptional": true,
                                              "containerTemplateString": "attributes: {\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                              "delimiter": ",\n\t\t\t\t\t\t",
                                              "keyValueSeparator": ": ",
                                              "keyTemplate": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "$FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": null
                                                  }
                                                ]
                                              },
                                              "valueTemplate": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "$FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": null
                                                  }
                                                ]
                                              },
                                              "templateInput": {
                                                "location": "RELATIVE",
                                                "path": "prompt.attributes"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "id",
                                  "value": "type_:LlmEvaluatorRequest"
                                }
                              },
                              {
                                "template": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "inputDelimiter": ",\n\t\t\t",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "enum",
                                        "imports": [],
                                        "isOptional": true,
                                        "values": {
                                          "target_free": "\"target_free\"",
                                          "target_required": "\"target_required\""
                                        },
                                        "templateString": "argumentsType: $FERN_INPUT",
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "arguments_type"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "enum",
                                        "imports": [],
                                        "isOptional": true,
                                        "values": {
                                          "boolean": "\"boolean\"",
                                          "number": "\"number\"",
                                          "select": "\"select\"",
                                          "multi_select": "\"multi_select\"",
                                          "text": "\"text\""
                                        },
                                        "templateString": "returnType: $FERN_INPUT",
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "return_type"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "dict",
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "attributes: {\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                        "delimiter": ",\n\t\t\t\t\t",
                                        "keyValueSeparator": ": ",
                                        "keyTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          ]
                                        },
                                        "valueTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          ]
                                        },
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "attributes"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "code: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "RELATIVE",
                                            "path": "code"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "id",
                                  "value": "type_:CodeEvaluatorRequest"
                                }
                              },
                              {
                                "template": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "inputDelimiter": ",\n\t\t\t",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "enum",
                                        "imports": [],
                                        "isOptional": true,
                                        "values": {
                                          "target_free": "\"target_free\"",
                                          "target_required": "\"target_required\""
                                        },
                                        "templateString": "argumentsType: $FERN_INPUT",
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "arguments_type"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "enum",
                                        "imports": [],
                                        "isOptional": true,
                                        "values": {
                                          "select": "\"select\"",
                                          "multi_select": "\"multi_select\"",
                                          "text": "\"text\"",
                                          "number": "\"number\"",
                                          "boolean": "\"boolean\""
                                        },
                                        "templateString": "returnType: $FERN_INPUT",
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "return_type"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "dict",
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "attributes: {\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                        "delimiter": ",\n\t\t\t\t\t",
                                        "keyValueSeparator": ": ",
                                        "keyTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          ]
                                        },
                                        "valueTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          ]
                                        },
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "attributes"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "instructions: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "RELATIVE",
                                            "path": "instructions"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "iterable",
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "options: [\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                        "delimiter": ",\n\t\t\t\t\t",
                                        "innerTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "{\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                          "isOptional": true,
                                          "inputDelimiter": ",\n\t\t\t\t\t\t",
                                          "templateInputs": [
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "name: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "name"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "enum",
                                                "imports": [],
                                                "isOptional": true,
                                                "values": {
                                                  "positive": "\"positive\"",
                                                  "negative": "\"negative\"",
                                                  "neutral": "\"neutral\""
                                                },
                                                "templateString": "valence: $FERN_INPUT",
                                                "templateInput": {
                                                  "location": "RELATIVE",
                                                  "path": "valence"
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "options"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "numberLimits: {\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                        "isOptional": true,
                                        "inputDelimiter": ",\n\t\t\t\t\t",
                                        "templateInputs": [
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "min: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "RELATIVE",
                                                  "path": "number_limits.min"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "max: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "RELATIVE",
                                                  "path": "number_limits.max"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "step: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "RELATIVE",
                                                  "path": "number_limits.step"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "enum",
                                        "imports": [],
                                        "isOptional": true,
                                        "values": {
                                          "positive": "\"positive\"",
                                          "negative": "\"negative\"",
                                          "neutral": "\"neutral\""
                                        },
                                        "templateString": "numberValence: $FERN_INPUT",
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "number_valence"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "id",
                                  "value": "type_:HumanEvaluatorRequest"
                                }
                              },
                              {
                                "template": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "inputDelimiter": ",\n\t\t\t",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "enum",
                                        "imports": [],
                                        "isOptional": true,
                                        "values": {
                                          "target_free": "\"target_free\"",
                                          "target_required": "\"target_required\""
                                        },
                                        "templateString": "argumentsType: $FERN_INPUT",
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "arguments_type"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "enum",
                                        "imports": [],
                                        "isOptional": true,
                                        "values": {
                                          "boolean": "\"boolean\"",
                                          "number": "\"number\"",
                                          "select": "\"select\"",
                                          "multi_select": "\"multi_select\"",
                                          "text": "\"text\""
                                        },
                                        "templateString": "returnType: $FERN_INPUT",
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "return_type"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "dict",
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "attributes: {\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                        "delimiter": ",\n\t\t\t\t\t",
                                        "keyValueSeparator": ": ",
                                        "keyTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          ]
                                        },
                                        "valueTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          ]
                                        },
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "attributes"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "id",
                                  "value": "type_:ExternalEvaluatorRequest"
                                }
                              }
                            ],
                            "templateInput": {
                              "location": "BODY",
                              "path": "spec"
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "get",
          "migratedFromUrlSlugs": ["get-evaluator"],
          "method": "GET",
          "id": "get",
          "originalEndpointId": "endpoint_evaluators.get",
          "name": "Get Evaluator",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Evaluator.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/evaluators/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "A specific Version ID of the Evaluator to retrieve.",
              "key": "version_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Name of the Environment to retrieve a deployed Version from.",
              "key": "environment",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:EvaluatorResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "Get specific evaluator",
              "path": "/evaluators/ev_890bcd",
              "pathParameters": {
                "id": "ev_890bcd"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "ev_890bcd",
                "name": "Accuracy Evaluator",
                "path": "Shared Evaluators/Accuracy Evaluator",
                "version_id": "evv_012def",
                "type": "evaluator",
                "created_at": "2024-05-01T12:00:00Z",
                "updated_at": "2024-05-01T12:00:00Z",
                "status": "committed",
                "last_used_at": "2024-05-01T12:00:00Z",
                "spec": {
                  "arguments_type": "target_required",
                  "return_type": "number",
                  "evaluator_type": "python",
                  "code": "def evaluate(answer, target):\n    return 0.5"
                },
                "version_logs_count": 1,
                "total_logs_count": 1,
                "inputs": [
                  {
                    "name": "answer"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "ev_890bcd",
                  "name": "Accuracy Evaluator",
                  "path": "Shared Evaluators/Accuracy Evaluator",
                  "version_id": "evv_012def",
                  "type": "evaluator",
                  "created_at": "2024-05-01T12:00:00Z",
                  "updated_at": "2024-05-01T12:00:00Z",
                  "status": "committed",
                  "last_used_at": "2024-05-01T12:00:00Z",
                  "spec": {
                    "arguments_type": "target_required",
                    "return_type": "number",
                    "evaluator_type": "python",
                    "code": "def evaluate(answer, target):\n    return 0.5"
                  },
                  "version_logs_count": 1,
                  "total_logs_count": 1,
                  "inputs": [
                    {
                      "name": "answer"
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/evaluators/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {
                "version_id": "string",
                "environment": "string"
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Retrieve the Evaluator with the given ID.\n\nBy default, the deployed version of the Evaluator is returned. Use the query parameters\n`version_id` or `environment` to target a specific version of the Evaluator.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.evaluators.get(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "version_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "version_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "environment=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "environment",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.evaluators.get(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "versionId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "version_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "environment: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "environment"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "delete",
          "migratedFromUrlSlugs": ["delete-evaluator"],
          "method": "DELETE",
          "id": "delete",
          "originalEndpointId": "endpoint_evaluators.delete",
          "name": "Delete Evaluator",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Evaluator.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/evaluators/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "Delete evaluator",
              "path": "/evaluators/ev_890bcd",
              "pathParameters": {
                "id": "ev_890bcd"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            },
            {
              "path": "/evaluators/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Delete the Evaluator with the given ID.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.evaluators.delete(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.evaluators.delete(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "move",
          "migratedFromUrlSlugs": ["move-evaluator"],
          "method": "PATCH",
          "id": "move",
          "originalEndpointId": "endpoint_evaluators.move",
          "name": "Move Evaluator",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Evaluator.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/evaluators/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Path of the Evaluator including the Evaluator name, which is used as a unique identifier.",
                  "key": "path",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Name of the Evaluator, which is used as a unique identifier.",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:EvaluatorResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "Move evaluator",
              "path": "/evaluators/ev_890bcd",
              "pathParameters": {
                "id": "ev_890bcd"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "path": "new directory/new name"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "ev_890bcd",
                "name": "Accuracy Evaluator",
                "path": "Shared Evaluators/Accuracy Evaluator",
                "version_id": "evv_012def",
                "type": "evaluator",
                "created_at": "2024-05-01T12:00:00Z",
                "updated_at": "2024-05-01T12:00:00Z",
                "status": "committed",
                "last_used_at": "2024-05-01T12:00:00Z",
                "spec": {
                  "arguments_type": "target_required",
                  "return_type": "number",
                  "evaluator_type": "python",
                  "code": "def evaluate(answer, target):\n    return 0.5"
                },
                "version_logs_count": 1,
                "total_logs_count": 1,
                "inputs": [
                  {
                    "name": "answer"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "path": "new directory/new name"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "ev_890bcd",
                  "name": "Accuracy Evaluator",
                  "path": "Shared Evaluators/Accuracy Evaluator",
                  "version_id": "evv_012def",
                  "type": "evaluator",
                  "created_at": "2024-05-01T12:00:00Z",
                  "updated_at": "2024-05-01T12:00:00Z",
                  "status": "committed",
                  "last_used_at": "2024-05-01T12:00:00Z",
                  "spec": {
                    "arguments_type": "target_required",
                    "return_type": "number",
                    "evaluator_type": "python",
                    "code": "def evaluate(answer, target):\n    return 0.5"
                  },
                  "version_logs_count": 1,
                  "total_logs_count": 1,
                  "inputs": [
                    {
                      "name": "answer"
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/evaluators/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Move the Evaluator to a different path or change the name.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.evaluators.move(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "path=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "path",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "name=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "name",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.evaluators.move(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "path: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "path"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "name: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "name"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "list-versions",
          "migratedFromUrlSlugs": ["list-versions-of-an-evaluator"],
          "method": "GET",
          "id": "listVersions",
          "originalEndpointId": "endpoint_evaluators.listVersions",
          "name": "List Versions of an Evaluator",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for the Evaluator.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/evaluators/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/versions"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Filter versions by status: 'uncommitted', 'committed'. If no status is provided, all versions are returned.",
              "key": "status",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_:VersionStatus"
                }
              }
            },
            {
              "description": "Whether to include Evaluator aggregate results for the versions in the response",
              "key": "evaluator_aggregates",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:ListEvaluators"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "List versions",
              "path": "/evaluators/ev_890bcd/versions",
              "pathParameters": {
                "id": "ev_890bcd"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "records": [
                  {
                    "id": "ev_890bcd",
                    "name": "Accuracy Evaluator",
                    "path": "Shared Evaluators/Accuracy Evaluator",
                    "version_id": "evv_012def",
                    "type": "evaluator",
                    "created_at": "2024-05-01T12:00:00Z",
                    "updated_at": "2024-05-01T12:00:00Z",
                    "status": "committed",
                    "last_used_at": "2024-05-01T12:00:00Z",
                    "spec": {
                      "arguments_type": "target_required",
                      "return_type": "number",
                      "evaluator_type": "python",
                      "code": "def evaluate(answer, target):\n    return 0.5"
                    },
                    "version_logs_count": 1,
                    "total_logs_count": 1,
                    "inputs": [
                      {
                        "name": "answer"
                      }
                    ]
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "records": [
                    {
                      "id": "ev_890bcd",
                      "name": "Accuracy Evaluator",
                      "path": "Shared Evaluators/Accuracy Evaluator",
                      "version_id": "evv_012def",
                      "type": "evaluator",
                      "created_at": "2024-05-01T12:00:00Z",
                      "updated_at": "2024-05-01T12:00:00Z",
                      "status": "committed",
                      "last_used_at": "2024-05-01T12:00:00Z",
                      "spec": {
                        "arguments_type": "target_required",
                        "return_type": "number",
                        "evaluator_type": "python",
                        "code": "def evaluate(answer, target):\n    return 0.5"
                      },
                      "version_logs_count": 1,
                      "total_logs_count": 1,
                      "inputs": [
                        {
                          "name": "answer"
                        }
                      ]
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/evaluators/:id/versions",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {
                "status": "uncommitted",
                "evaluator_aggregates": true
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Get a list of all the versions of an Evaluator.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.evaluators.list_versions(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "status=$FERN_INPUT",
                      "values": {
                        "uncommitted": "\"uncommitted\"",
                        "committed": "\"committed\"",
                        "deleted": "\"deleted\""
                      },
                      "templateInput": {
                        "location": "QUERY",
                        "path": "status"
                      },
                      "type": "enum"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "evaluator_aggregates=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "evaluator_aggregates",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.evaluators.listVersions(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "enum",
                            "imports": [],
                            "isOptional": true,
                            "values": {
                              "uncommitted": "\"uncommitted\"",
                              "committed": "\"committed\"",
                              "deleted": "\"deleted\""
                            },
                            "templateString": "status: $FERN_INPUT",
                            "templateInput": {
                              "location": "QUERY",
                              "path": "status"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "evaluatorAggregates: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "evaluator_aggregates"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "commit",
          "migratedFromUrlSlugs": ["commit-an-evaluator-version"],
          "method": "POST",
          "id": "commit",
          "originalEndpointId": "endpoint_evaluators.commit",
          "name": "Commit an Evaluator Version",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Prompt.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "Unique identifier for the specific version of the Evaluator.",
                "key": "version_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/evaluators/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/versions/"
              },
              {
                "type": "pathParameter",
                "value": "version_id"
              },
              {
                "type": "literal",
                "value": "/commit"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:CommitRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:EvaluatorResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "Commit version",
              "path": "/evaluators/ev_890bcd/versions/evv_012def/commit",
              "pathParameters": {
                "id": "ev_890bcd",
                "version_id": "evv_012def"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "commit_message": "Initial commit"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "ev_890bcd",
                "name": "Accuracy Evaluator",
                "path": "Shared Evaluators/Accuracy Evaluator",
                "version_id": "evv_012def",
                "type": "evaluator",
                "created_at": "2024-05-01T12:00:00Z",
                "updated_at": "2024-05-01T12:00:00Z",
                "status": "committed",
                "last_used_at": "2024-05-01T12:00:00Z",
                "spec": {
                  "arguments_type": "target_required",
                  "return_type": "number",
                  "evaluator_type": "python",
                  "code": "def evaluate(answer, target):\n    return 0.5"
                },
                "version_logs_count": 1,
                "total_logs_count": 1,
                "inputs": [
                  {
                    "name": "answer"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "commit_message": "Initial commit"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "ev_890bcd",
                  "name": "Accuracy Evaluator",
                  "path": "Shared Evaluators/Accuracy Evaluator",
                  "version_id": "evv_012def",
                  "type": "evaluator",
                  "created_at": "2024-05-01T12:00:00Z",
                  "updated_at": "2024-05-01T12:00:00Z",
                  "status": "committed",
                  "last_used_at": "2024-05-01T12:00:00Z",
                  "spec": {
                    "arguments_type": "target_required",
                    "return_type": "number",
                    "evaluator_type": "python",
                    "code": "def evaluate(answer, target):\n    return 0.5"
                  },
                  "version_logs_count": 1,
                  "total_logs_count": 1,
                  "inputs": [
                    {
                      "name": "answer"
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/evaluators/:id/versions/:version_id/commit",
              "pathParameters": {
                "id": ":id",
                "version_id": ":version_id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "commit_message": "string"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Commit a version of the Evaluator with a commit message.\n\nIf the version is already committed, an exception will be raised.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.evaluators.commit(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "version_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "version_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "commit_message=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "commit_message",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.evaluators.commit(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "version_id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "commitMessage: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "commit_message"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "set-deployment",
          "migratedFromUrlSlugs": ["deploy-evaluator"],
          "method": "POST",
          "id": "setDeployment",
          "originalEndpointId": "endpoint_evaluators.setDeployment",
          "name": "Deploy Evaluator",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Evaluator.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "Unique identifier for the Environment to deploy the Version to.",
                "key": "environment_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/evaluators/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/environments/"
              },
              {
                "type": "pathParameter",
                "value": "environment_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Unique identifier for the specific version of the Evaluator.",
              "key": "version_id",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:EvaluatorResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "Deploy",
              "path": "/evaluators/ev_890bcd/environments/staging",
              "pathParameters": {
                "id": "ev_890bcd",
                "environment_id": "staging"
              },
              "queryParameters": {
                "version_id": "evv_012def"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "ev_890bcd",
                "name": "Accuracy Evaluator",
                "path": "Shared Evaluators/Accuracy Evaluator",
                "version_id": "evv_012def",
                "type": "evaluator",
                "created_at": "2024-05-01T12:00:00Z",
                "updated_at": "2024-05-01T12:00:00Z",
                "status": "committed",
                "last_used_at": "2024-05-01T12:00:00Z",
                "spec": {
                  "arguments_type": "target_required",
                  "return_type": "number",
                  "evaluator_type": "python",
                  "code": "def evaluate(answer, target):\n    return 0.5"
                },
                "version_logs_count": 1,
                "total_logs_count": 1,
                "inputs": [
                  {
                    "name": "answer"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "ev_890bcd",
                  "name": "Accuracy Evaluator",
                  "path": "Shared Evaluators/Accuracy Evaluator",
                  "version_id": "evv_012def",
                  "type": "evaluator",
                  "created_at": "2024-05-01T12:00:00Z",
                  "updated_at": "2024-05-01T12:00:00Z",
                  "status": "committed",
                  "last_used_at": "2024-05-01T12:00:00Z",
                  "spec": {
                    "arguments_type": "target_required",
                    "return_type": "number",
                    "evaluator_type": "python",
                    "code": "def evaluate(answer, target):\n    return 0.5"
                  },
                  "version_logs_count": 1,
                  "total_logs_count": 1,
                  "inputs": [
                    {
                      "name": "answer"
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/evaluators/:id/environments/:environment_id",
              "pathParameters": {
                "id": ":id",
                "environment_id": ":environment_id"
              },
              "queryParameters": {
                "version_id": "string"
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Deploy Evaluator to an Environment.\n\nSet the deployed version for the specified Environment. This Evaluator\nwill be used for calls made to the Evaluator in this Environment.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.evaluators.set_deployment(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "environment_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "environment_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "version_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "version_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.evaluators.setDeployment(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "environment_id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "versionId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "version_id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "remove-deployment",
          "method": "DELETE",
          "id": "removeDeployment",
          "originalEndpointId": "endpoint_evaluators.removeDeployment",
          "name": "Remove Deployment",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Evaluator.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "Unique identifier for the Environment to remove the deployment from.",
                "key": "environment_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/evaluators/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/environments/"
              },
              {
                "type": "pathParameter",
                "value": "environment_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "Delete environment",
              "path": "/evaluators/ev_890bcd/environments/staging",
              "pathParameters": {
                "id": "ev_890bcd",
                "environment_id": "staging"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            },
            {
              "path": "/evaluators/:id/environments/:environment_id",
              "pathParameters": {
                "id": ":id",
                "environment_id": ":environment_id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Remove deployed Evaluator from the Environment.\n\nRemove the deployed version for the specified Environment. This Evaluator\nwill no longer be used for calls made to the Evaluator in this Environment.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.evaluators.remove_deployment(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "environment_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "environment_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.evaluators.removeDeployment(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "environment_id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "list-environments",
          "migratedFromUrlSlugs": ["list-an-evaluators-environments"],
          "method": "GET",
          "id": "listEnvironments",
          "originalEndpointId": "endpoint_evaluators.listEnvironments",
          "name": "List an Evaluator's Environments",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Evaluator.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/evaluators/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/environments"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:FileEnvironmentResponse"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "List environments",
              "path": "/evaluators/ev_890bcd/environments",
              "pathParameters": {
                "id": "ev_890bcd"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": [
                {
                  "id": "env_abc123",
                  "created_at": "2024-05-01T12:00:00Z",
                  "name": "production",
                  "tag": "default",
                  "file": {
                    "id": "ev_890bcd",
                    "name": "Accuracy Evaluator",
                    "path": "Shared Evaluators/Accuracy Evaluator",
                    "version_id": "evv_012def",
                    "type": "evaluator",
                    "created_at": "2024-05-01T12:00:00Z",
                    "updated_at": "2024-05-01T12:00:00Z",
                    "status": "committed",
                    "last_used_at": "2024-05-01T12:00:00Z",
                    "spec": {
                      "arguments_type": "target_required",
                      "return_type": "number",
                      "evaluator_type": "python",
                      "code": "def evaluate(answer, target):\n    return 0.5"
                    },
                    "version_logs_count": 1,
                    "total_logs_count": 1,
                    "inputs": [
                      {
                        "name": "answer"
                      }
                    ]
                  }
                }
              ],
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "id": "env_abc123",
                    "created_at": "2024-05-01T12:00:00Z",
                    "name": "production",
                    "tag": "default",
                    "file": {
                      "id": "ev_890bcd",
                      "name": "Accuracy Evaluator",
                      "path": "Shared Evaluators/Accuracy Evaluator",
                      "version_id": "evv_012def",
                      "type": "evaluator",
                      "created_at": "2024-05-01T12:00:00Z",
                      "updated_at": "2024-05-01T12:00:00Z",
                      "status": "committed",
                      "last_used_at": "2024-05-01T12:00:00Z",
                      "spec": {
                        "arguments_type": "target_required",
                        "return_type": "number",
                        "evaluator_type": "python",
                        "code": "def evaluate(answer, target):\n    return 0.5"
                      },
                      "version_logs_count": 1,
                      "total_logs_count": 1,
                      "inputs": [
                        {
                          "name": "answer"
                        }
                      ]
                    }
                  }
                ]
              },
              "codeSamples": []
            },
            {
              "path": "/evaluators/:id/environments",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "List all Environments and their deployed versions for the Evaluator.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.evaluators.list_environments(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.evaluators.listEnvironments(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "update-monitoring",
          "method": "POST",
          "id": "updateMonitoring",
          "originalEndpointId": "endpoint_evaluators.updateMonitoring",
          "name": "Update Monitoring",
          "path": {
            "pathParameters": [
              {
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/evaluators/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/evaluators"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:EvaluatorActivationDeactivationRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:EvaluatorResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/evaluators/id/evaluators",
              "pathParameters": {
                "id": "id"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "path": "path",
                "id": "id",
                "directory_id": "directory_id",
                "commit_message": "commit_message",
                "spec": {
                  "arguments_type": "target_free",
                  "return_type": "boolean",
                  "attributes": {
                    "key": "value"
                  },
                  "evaluator_type": "llm",
                  "prompt": {
                    "model": "model",
                    "endpoint": "complete",
                    "template": "template",
                    "provider": "openai",
                    "max_tokens": 1,
                    "temperature": 1.1,
                    "top_p": 1.1,
                    "stop": "stop",
                    "presence_penalty": 1.1,
                    "frequency_penalty": 1.1,
                    "other": {
                      "key": "value"
                    },
                    "seed": 1,
                    "response_format": {
                      "type": "json_object"
                    },
                    "tools": [
                      {
                        "name": "name",
                        "description": "description"
                      }
                    ],
                    "linked_tools": ["linked_tools"],
                    "attributes": {
                      "key": "value"
                    }
                  }
                },
                "name": "name",
                "version_id": "version_id",
                "type": "evaluator",
                "environments": [
                  {
                    "id": "id",
                    "created_at": "2024-01-15T09:30:00Z",
                    "name": "name",
                    "tag": "default"
                  }
                ],
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z",
                "created_by": {
                  "id": "id",
                  "email_address": "email_address",
                  "full_name": "full_name"
                },
                "status": "uncommitted",
                "last_used_at": "2024-01-15T09:30:00Z",
                "version_logs_count": 1,
                "total_logs_count": 1,
                "inputs": [
                  {
                    "name": "name"
                  }
                ],
                "evaluators": [
                  {
                    "version_reference": {
                      "file": {
                        "path": "path",
                        "id": "id",
                        "model": "model",
                        "name": "name",
                        "version_id": "version_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "status": "uncommitted",
                        "last_used_at": "2024-01-15T09:30:00Z",
                        "version_logs_count": 1,
                        "total_logs_count": 1,
                        "inputs": [
                          {
                            "name": "name"
                          }
                        ]
                      },
                      "environment": {
                        "id": "id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "name": "name",
                        "tag": "default"
                      },
                      "type": "environment"
                    },
                    "state": "active",
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z"
                  }
                ],
                "evaluator_aggregates": [
                  {
                    "value": 1.1,
                    "evaluator_id": "evaluator_id",
                    "evaluator_version_id": "evaluator_version_id",
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z"
                  }
                ],
                "attributes": {
                  "key": "value"
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "path": "path",
                  "id": "id",
                  "directory_id": "directory_id",
                  "commit_message": "commit_message",
                  "spec": {
                    "arguments_type": "target_free",
                    "return_type": "boolean",
                    "attributes": {
                      "key": "value"
                    },
                    "evaluator_type": "llm",
                    "prompt": {
                      "model": "model",
                      "endpoint": "complete",
                      "template": "template",
                      "provider": "openai",
                      "max_tokens": 1,
                      "temperature": 1.1,
                      "top_p": 1.1,
                      "stop": "stop",
                      "presence_penalty": 1.1,
                      "frequency_penalty": 1.1,
                      "other": {
                        "key": "value"
                      },
                      "seed": 1,
                      "response_format": {
                        "type": "json_object"
                      },
                      "tools": [
                        {
                          "name": "name",
                          "description": "description"
                        }
                      ],
                      "linked_tools": ["linked_tools"],
                      "attributes": {
                        "key": "value"
                      }
                    }
                  },
                  "name": "name",
                  "version_id": "version_id",
                  "type": "evaluator",
                  "environments": [
                    {
                      "id": "id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "name": "name",
                      "tag": "default"
                    }
                  ],
                  "created_at": "2024-01-15T09:30:00Z",
                  "updated_at": "2024-01-15T09:30:00Z",
                  "created_by": {
                    "id": "id",
                    "email_address": "email_address",
                    "full_name": "full_name"
                  },
                  "status": "uncommitted",
                  "last_used_at": "2024-01-15T09:30:00Z",
                  "version_logs_count": 1,
                  "total_logs_count": 1,
                  "inputs": [
                    {
                      "name": "name"
                    }
                  ],
                  "evaluators": [
                    {
                      "version_reference": {
                        "file": {
                          "path": "path",
                          "id": "id",
                          "model": "model",
                          "name": "name",
                          "version_id": "version_id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "status": "uncommitted",
                          "last_used_at": "2024-01-15T09:30:00Z",
                          "version_logs_count": 1,
                          "total_logs_count": 1,
                          "inputs": [
                            {
                              "name": "name"
                            }
                          ]
                        },
                        "environment": {
                          "id": "id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "name": "name",
                          "tag": "default"
                        },
                        "type": "environment"
                      },
                      "state": "active",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z"
                    }
                  ],
                  "evaluator_aggregates": [
                    {
                      "value": 1.1,
                      "evaluator_id": "evaluator_id",
                      "evaluator_version_id": "evaluator_version_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z"
                    }
                  ],
                  "attributes": {
                    "key": "value"
                  }
                }
              },
              "codeSamples": []
            },
            {
              "path": "/evaluators/:id/evaluators",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Activate and deactivate Evaluators for monitoring the Evaluator.\n\nAn activated Evaluator will automatically be run on all new Logs\nwithin the Evaluator for monitoring purposes.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.evaluators.update_monitoring(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "activate=[\n\t\t$FERN_INPUT\n\t]",
                      "delimiter": ",\n\t\t",
                      "innerTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "members": [
                          {
                            "type": {
                              "value": "type_:MonitoringEvaluatorVersionRequest",
                              "type": "id"
                            },
                            "template": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "{\n\t\t\t$FERN_INPUT\n\t\t}",
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"evaluator_version_id\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "evaluator_version_id",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                }
                              ],
                              "inputDelimiter": ",\n\t\t\t",
                              "type": "generic"
                            }
                          },
                          {
                            "type": {
                              "value": "type_:MonitoringEvaluatorEnvironmentRequest",
                              "type": "id"
                            },
                            "template": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "{\n\t\t\t$FERN_INPUT\n\t\t}",
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"evaluator_id\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "evaluator_id",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"environment_id\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "environment_id",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                }
                              ],
                              "inputDelimiter": ",\n\t\t\t",
                              "type": "generic"
                            }
                          }
                        ],
                        "templateInput": {
                          "location": "RELATIVE",
                          "path": null
                        },
                        "type": "union_v2"
                      },
                      "templateInput": {
                        "location": "BODY",
                        "path": "activate"
                      },
                      "type": "iterable"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "deactivate=[\n\t\t$FERN_INPUT\n\t]",
                      "delimiter": ",\n\t\t",
                      "innerTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "members": [
                          {
                            "type": {
                              "value": "type_:MonitoringEvaluatorVersionRequest",
                              "type": "id"
                            },
                            "template": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "{\n\t\t\t$FERN_INPUT\n\t\t}",
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"evaluator_version_id\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "evaluator_version_id",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                }
                              ],
                              "inputDelimiter": ",\n\t\t\t",
                              "type": "generic"
                            }
                          },
                          {
                            "type": {
                              "value": "type_:MonitoringEvaluatorEnvironmentRequest",
                              "type": "id"
                            },
                            "template": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "{\n\t\t\t$FERN_INPUT\n\t\t}",
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"evaluator_id\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "evaluator_id",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"environment_id\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "environment_id",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                }
                              ],
                              "inputDelimiter": ",\n\t\t\t",
                              "type": "generic"
                            }
                          }
                        ],
                        "templateInput": {
                          "location": "RELATIVE",
                          "path": null
                        },
                        "type": "union_v2"
                      },
                      "templateInput": {
                        "location": "BODY",
                        "path": "deactivate"
                      },
                      "type": "iterable"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.evaluators.updateMonitoring(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "iterable",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "activate: [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                  "delimiter": ",\n\t\t\t\t",
                                  "innerTemplate": {
                                    "type": "union_v2",
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "members": [
                                      {
                                        "template": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "inputDelimiter": ",\n\t\t\t\t\t",
                                          "templateInputs": [
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "evaluatorVersionId: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "evaluator_version_id"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "type": {
                                          "type": "id",
                                          "value": "type_:MonitoringEvaluatorVersionRequest"
                                        }
                                      },
                                      {
                                        "template": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "inputDelimiter": ",\n\t\t\t\t\t",
                                          "templateInputs": [
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "evaluatorId: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "evaluator_id"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "environmentId: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "environment_id"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "type": {
                                          "type": "id",
                                          "value": "type_:MonitoringEvaluatorEnvironmentRequest"
                                        }
                                      }
                                    ],
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  },
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "activate"
                                  }
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "iterable",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "deactivate: [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                  "delimiter": ",\n\t\t\t\t",
                                  "innerTemplate": {
                                    "type": "union_v2",
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "members": [
                                      {
                                        "template": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "inputDelimiter": ",\n\t\t\t\t\t",
                                          "templateInputs": [
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "evaluatorVersionId: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "evaluator_version_id"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "type": {
                                          "type": "id",
                                          "value": "type_:MonitoringEvaluatorVersionRequest"
                                        }
                                      },
                                      {
                                        "template": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "inputDelimiter": ",\n\t\t\t\t\t",
                                          "templateInputs": [
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "evaluatorId: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "evaluator_id"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "environmentId: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "environment_id"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "type": {
                                          "type": "id",
                                          "value": "type_:MonitoringEvaluatorEnvironmentRequest"
                                        }
                                      }
                                    ],
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  },
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "deactivate"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        }
      ],
      "types": [
        "type_evaluators:CreateEvaluatorLogRequestJudgment",
        "type_evaluators:CreateEvaluatorLogRequestSpec",
        "type_evaluators:SrcExternalAppModelsV5EvaluatorsEvaluatorRequestSpec"
      ],
      "subpackages": [],
      "urlSlug": "evaluators",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_flows": {
      "subpackageId": "subpackage_flows",
      "name": "flows",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "log",
          "migratedFromUrlSlugs": ["log-to-a-flow"],
          "method": "POST",
          "id": "log",
          "originalEndpointId": "endpoint_flows.log",
          "name": "Log to a Flow",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/flows/log"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "A specific Version ID of the Flow to log to.",
              "key": "version_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Name of the Environment identifying a deployed version to log to.",
              "key": "environment",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Unique identifier for the Evaluation Report to associate the Log to.",
                  "key": "evaluation_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Path of the Flow, including the name. This locates the Flow in the Humanloop filesystem and is used as as a unique identifier. For example: `folder/name` or just `name`.",
                  "key": "path",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "ID for an existing Flow.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The start time of the Trace. Will be updated if a child Log with an earlier start time is added.",
                  "key": "start_time",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "The end time of the Trace. Will be updated if a child Log with a later end time is added.",
                  "key": "end_time",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Generated output from your model for the provided inputs. Can be `None` if logging an error, or if creating a parent Log with the intention to populate it later.",
                  "key": "output",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "User defined timestamp for when the log was created. ",
                  "key": "created_at",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Error message if the log is an error.",
                  "key": "error",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Duration of the logged event in seconds.",
                  "key": "provider_latency",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                },
                {
                  "description": "Captured log and debug statements.",
                  "key": "stdout",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Raw request sent to provider.",
                  "key": "provider_request",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "Raw response received the provider.",
                  "key": "provider_response",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "The inputs passed to the prompt template.",
                  "key": "inputs",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "Identifies where the model was called from.",
                  "key": "source",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Any additional metadata to record.",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "Unique identifier for the Datapoint that this Log is derived from. This can be used by Humanloop to associate Logs to Evaluations. If provided, Humanloop will automatically associate this Log to Evaluations that require a Log for this Datapoint-Version pair.",
                  "key": "source_datapoint_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The ID of the parent Log to nest this Log under in a Trace.",
                  "key": "trace_parent_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Unique identifier for the Batch to add this Batch to. Batches are used to group Logs together for Evaluations. A Batch will be created if one with the given ID does not exist.",
                  "key": "batch_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "End-user ID related to the Log.",
                  "key": "user",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The name of the Environment the Log is associated to.",
                  "key": "environment",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Whether the request/response payloads will be stored on Humanloop.",
                  "key": "save",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "The identifier for the Log. If not specified, a default ID will be generated. This allows additional Logs to be appended to the trace without waiting for Humanloop to return an ID.",
                  "key": "log_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Flow used to generate the Trace.",
                  "key": "flow",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:FlowKernelRequest"
                    }
                  }
                },
                {
                  "description": "Status of the Trace. When a Trace is marked as `complete`, no more Logs can be added to it. Monitoring Evaluators will only run on `complete` Traces. If you do not intend to add more Logs to the Trace after creation, set this to `complete`.",
                  "key": "trace_status",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:TraceStatus"
                    }
                  }
                }
              ]
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:CreateFlowLogResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/flows/log",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "id",
                "flow_id": "flow_id",
                "version_id": "version_id",
                "trace_status": "complete"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "id",
                  "flow_id": "flow_id",
                  "version_id": "version_id",
                  "trace_status": "complete"
                }
              },
              "codeSamples": []
            },
            {
              "path": "/flows/log",
              "pathParameters": {},
              "queryParameters": {
                "version_id": "string",
                "environment": "string"
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Log to a Flow.\n\nYou can use query parameters `version_id`, or `environment`, to target\nan existing version of the Flow. Otherwise, the default deployed version will be chosen.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.flows.log(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "version_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "version_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "environment=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "environment",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "evaluation_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "evaluation_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "path=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "path",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "start_time=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "start_time",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "end_time=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "end_time",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "output=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "output",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "created_at=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "created_at",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "error=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "error",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "provider_latency=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "provider_latency",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "stdout=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "stdout",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "provider_request={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "provider_request"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "provider_response={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "provider_response"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "inputs={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "inputs"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "source=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "source",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "metadata={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "metadata"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "source_datapoint_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "source_datapoint_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "trace_parent_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "trace_parent_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "batch_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "batch_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "user=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "user",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "flow_log_request_environment=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "environment",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "save=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "save",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "log_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "log_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "flow={\n\t\t$FERN_INPUT\n\t}",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "\"attributes\": {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyTemplate": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "$FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": null,
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            },
                            "valueTemplate": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "$FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": null,
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            },
                            "keyValueSeparator": ": ",
                            "templateInput": {
                              "location": "BODY",
                              "path": "flow.attributes"
                            },
                            "type": "dict"
                          }
                        }
                      ],
                      "inputDelimiter": ",\n\t\t",
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "trace_status=$FERN_INPUT",
                      "values": {
                        "complete": "\"complete\"",
                        "incomplete": "\"incomplete\""
                      },
                      "templateInput": {
                        "location": "BODY",
                        "path": "trace_status"
                      },
                      "type": "enum"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.flows.log(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "versionId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "version_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "environment: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "environment"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "evaluationId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "evaluation_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "path: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "path"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "id: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "startTime: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "start_time"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "endTime: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "end_time"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "output: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "output"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "createdAt: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "created_at"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "error: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "error"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "providerLatency: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "provider_latency"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "stdout: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "stdout"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "providerRequest: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "provider_request"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "providerResponse: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "provider_response"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "inputs: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "inputs"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "source: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "source"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "metadata: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "metadata"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "sourceDatapointId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "source_datapoint_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "traceParentId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "trace_parent_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "batchId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "batch_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "user: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "user"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "flowLogRequestEnvironment: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "environment"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "save: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "save"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "logId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "log_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "flow: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "dict",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "attributes: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                  "delimiter": ",\n\t\t\t\t",
                                  "keyValueSeparator": ": ",
                                  "keyTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "$FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    ]
                                  },
                                  "valueTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "$FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    ]
                                  },
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "flow.attributes"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "enum",
                            "imports": [],
                            "isOptional": true,
                            "values": {
                              "complete": "\"complete\"",
                              "incomplete": "\"incomplete\""
                            },
                            "templateString": "traceStatus: $FERN_INPUT",
                            "templateInput": {
                              "location": "BODY",
                              "path": "trace_status"
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "get",
          "migratedFromUrlSlugs": ["get-flow"],
          "method": "GET",
          "id": "get",
          "originalEndpointId": "endpoint_flows.get",
          "name": "Get Flow",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Flow.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/flows/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "A specific Version ID of the Flow to retrieve.",
              "key": "version_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Name of the Environment to retrieve a deployed Version from.",
              "key": "environment",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:FlowResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/flows/id",
              "pathParameters": {
                "id": "id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "path": "path",
                "id": "id",
                "directory_id": "directory_id",
                "attributes": {
                  "key": "value"
                },
                "commit_message": "commit_message",
                "name": "name",
                "version_id": "version_id",
                "type": "flow",
                "environments": [
                  {
                    "id": "id",
                    "created_at": "2024-01-15T09:30:00Z",
                    "name": "name",
                    "tag": "default"
                  }
                ],
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z",
                "created_by": {
                  "id": "id",
                  "email_address": "email_address",
                  "full_name": "full_name"
                },
                "status": "uncommitted",
                "last_used_at": "2024-01-15T09:30:00Z",
                "version_logs_count": 1,
                "evaluator_aggregates": [
                  {
                    "value": 1.1,
                    "evaluator_id": "evaluator_id",
                    "evaluator_version_id": "evaluator_version_id",
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z"
                  }
                ],
                "evaluators": [
                  {
                    "version_reference": {
                      "file": {
                        "path": "path",
                        "id": "id",
                        "model": "model",
                        "name": "name",
                        "version_id": "version_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "status": "uncommitted",
                        "last_used_at": "2024-01-15T09:30:00Z",
                        "version_logs_count": 1,
                        "total_logs_count": 1,
                        "inputs": [
                          {
                            "name": "name"
                          }
                        ]
                      },
                      "environment": {
                        "id": "id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "name": "name",
                        "tag": "default"
                      },
                      "type": "environment"
                    },
                    "version": {
                      "path": "path",
                      "id": "id",
                      "spec": {
                        "arguments_type": "target_free",
                        "return_type": "boolean",
                        "evaluator_type": "llm"
                      },
                      "name": "name",
                      "version_id": "version_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "status": "uncommitted",
                      "last_used_at": "2024-01-15T09:30:00Z",
                      "version_logs_count": 1,
                      "total_logs_count": 1,
                      "inputs": [
                        {
                          "name": "name"
                        }
                      ]
                    },
                    "state": "active",
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "path": "path",
                  "id": "id",
                  "directory_id": "directory_id",
                  "attributes": {
                    "key": "value"
                  },
                  "commit_message": "commit_message",
                  "name": "name",
                  "version_id": "version_id",
                  "type": "flow",
                  "environments": [
                    {
                      "id": "id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "name": "name",
                      "tag": "default"
                    }
                  ],
                  "created_at": "2024-01-15T09:30:00Z",
                  "updated_at": "2024-01-15T09:30:00Z",
                  "created_by": {
                    "id": "id",
                    "email_address": "email_address",
                    "full_name": "full_name"
                  },
                  "status": "uncommitted",
                  "last_used_at": "2024-01-15T09:30:00Z",
                  "version_logs_count": 1,
                  "evaluator_aggregates": [
                    {
                      "value": 1.1,
                      "evaluator_id": "evaluator_id",
                      "evaluator_version_id": "evaluator_version_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z"
                    }
                  ],
                  "evaluators": [
                    {
                      "version_reference": {
                        "file": {
                          "path": "path",
                          "id": "id",
                          "model": "model",
                          "name": "name",
                          "version_id": "version_id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "status": "uncommitted",
                          "last_used_at": "2024-01-15T09:30:00Z",
                          "version_logs_count": 1,
                          "total_logs_count": 1,
                          "inputs": [
                            {
                              "name": "name"
                            }
                          ]
                        },
                        "environment": {
                          "id": "id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "name": "name",
                          "tag": "default"
                        },
                        "type": "environment"
                      },
                      "version": {
                        "path": "path",
                        "id": "id",
                        "spec": {
                          "arguments_type": "target_free",
                          "return_type": "boolean",
                          "evaluator_type": "llm"
                        },
                        "name": "name",
                        "version_id": "version_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "status": "uncommitted",
                        "last_used_at": "2024-01-15T09:30:00Z",
                        "version_logs_count": 1,
                        "total_logs_count": 1,
                        "inputs": [
                          {
                            "name": "name"
                          }
                        ]
                      },
                      "state": "active",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z"
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/flows/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {
                "version_id": "string",
                "environment": "string"
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Retrieve the Flow with the given ID.\n\nBy default, the deployed version of the Flow is returned. Use the query parameters\n`version_id` or `environment` to target a specific version of the Flow.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.flows.get(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "version_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "version_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "environment=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "environment",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.flows.get(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "versionId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "version_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "environment: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "environment"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "delete",
          "migratedFromUrlSlugs": ["delete-flow"],
          "method": "DELETE",
          "id": "delete",
          "originalEndpointId": "endpoint_flows.delete",
          "name": "Delete Flow",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Flow.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/flows/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/flows/id",
              "pathParameters": {
                "id": "id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            },
            {
              "path": "/flows/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Delete the Flow with the given ID.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.flows.delete(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.flows.delete(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "move",
          "migratedFromUrlSlugs": ["move-flow"],
          "method": "PATCH",
          "id": "move",
          "originalEndpointId": "endpoint_flows.move",
          "name": "Move Flow",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Flow.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/flows/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Path of the Flow including the Flow name, which is used as a unique identifier.",
                  "key": "path",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Name of the Flow.",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Unique identifier for the Directory to move Flow to. Starts with `dir_`.",
                  "key": "directory_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:FlowResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/flows/id",
              "pathParameters": {
                "id": "id"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "path": "path",
                "id": "id",
                "directory_id": "directory_id",
                "attributes": {
                  "key": "value"
                },
                "commit_message": "commit_message",
                "name": "name",
                "version_id": "version_id",
                "type": "flow",
                "environments": [
                  {
                    "id": "id",
                    "created_at": "2024-01-15T09:30:00Z",
                    "name": "name",
                    "tag": "default"
                  }
                ],
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z",
                "created_by": {
                  "id": "id",
                  "email_address": "email_address",
                  "full_name": "full_name"
                },
                "status": "uncommitted",
                "last_used_at": "2024-01-15T09:30:00Z",
                "version_logs_count": 1,
                "evaluator_aggregates": [
                  {
                    "value": 1.1,
                    "evaluator_id": "evaluator_id",
                    "evaluator_version_id": "evaluator_version_id",
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z"
                  }
                ],
                "evaluators": [
                  {
                    "version_reference": {
                      "file": {
                        "path": "path",
                        "id": "id",
                        "model": "model",
                        "name": "name",
                        "version_id": "version_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "status": "uncommitted",
                        "last_used_at": "2024-01-15T09:30:00Z",
                        "version_logs_count": 1,
                        "total_logs_count": 1,
                        "inputs": [
                          {
                            "name": "name"
                          }
                        ]
                      },
                      "environment": {
                        "id": "id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "name": "name",
                        "tag": "default"
                      },
                      "type": "environment"
                    },
                    "version": {
                      "path": "path",
                      "id": "id",
                      "spec": {
                        "arguments_type": "target_free",
                        "return_type": "boolean",
                        "evaluator_type": "llm"
                      },
                      "name": "name",
                      "version_id": "version_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "status": "uncommitted",
                      "last_used_at": "2024-01-15T09:30:00Z",
                      "version_logs_count": 1,
                      "total_logs_count": 1,
                      "inputs": [
                        {
                          "name": "name"
                        }
                      ]
                    },
                    "state": "active",
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "path": "path",
                  "id": "id",
                  "directory_id": "directory_id",
                  "attributes": {
                    "key": "value"
                  },
                  "commit_message": "commit_message",
                  "name": "name",
                  "version_id": "version_id",
                  "type": "flow",
                  "environments": [
                    {
                      "id": "id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "name": "name",
                      "tag": "default"
                    }
                  ],
                  "created_at": "2024-01-15T09:30:00Z",
                  "updated_at": "2024-01-15T09:30:00Z",
                  "created_by": {
                    "id": "id",
                    "email_address": "email_address",
                    "full_name": "full_name"
                  },
                  "status": "uncommitted",
                  "last_used_at": "2024-01-15T09:30:00Z",
                  "version_logs_count": 1,
                  "evaluator_aggregates": [
                    {
                      "value": 1.1,
                      "evaluator_id": "evaluator_id",
                      "evaluator_version_id": "evaluator_version_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z"
                    }
                  ],
                  "evaluators": [
                    {
                      "version_reference": {
                        "file": {
                          "path": "path",
                          "id": "id",
                          "model": "model",
                          "name": "name",
                          "version_id": "version_id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "status": "uncommitted",
                          "last_used_at": "2024-01-15T09:30:00Z",
                          "version_logs_count": 1,
                          "total_logs_count": 1,
                          "inputs": [
                            {
                              "name": "name"
                            }
                          ]
                        },
                        "environment": {
                          "id": "id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "name": "name",
                          "tag": "default"
                        },
                        "type": "environment"
                      },
                      "version": {
                        "path": "path",
                        "id": "id",
                        "spec": {
                          "arguments_type": "target_free",
                          "return_type": "boolean",
                          "evaluator_type": "llm"
                        },
                        "name": "name",
                        "version_id": "version_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "status": "uncommitted",
                        "last_used_at": "2024-01-15T09:30:00Z",
                        "version_logs_count": 1,
                        "total_logs_count": 1,
                        "inputs": [
                          {
                            "name": "name"
                          }
                        ]
                      },
                      "state": "active",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z"
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/flows/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Move the Flow to a different path or change the name.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.flows.move(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "path=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "path",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "name=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "name",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "directory_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "directory_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.flows.move(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "path: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "path"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "name: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "name"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "directoryId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "directory_id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "list",
          "migratedFromUrlSlugs": ["list-flows"],
          "method": "GET",
          "id": "list",
          "originalEndpointId": "endpoint_flows.list",
          "name": "List Flows",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/flows"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Page number for pagination.",
              "key": "page",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "Page size for pagination. Number of Flows to fetch.",
              "key": "size",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "Case-insensitive filter for Flow name.",
              "key": "name",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Case-insensitive filter for users in the Flow. This filter matches against both email address and name of users.",
              "key": "user_filter",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Field to sort Flows by",
              "key": "sort_by",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_:ProjectSortBy"
                }
              }
            },
            {
              "description": "Direction to sort by.",
              "key": "order",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_:SortOrder"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:PaginatedDataFlowResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/flows",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "records": [
                  {
                    "path": "path",
                    "id": "id",
                    "directory_id": "directory_id",
                    "attributes": {
                      "key": "value"
                    },
                    "commit_message": "commit_message",
                    "name": "name",
                    "version_id": "version_id",
                    "type": "flow",
                    "environments": [
                      {
                        "id": "id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "name": "name",
                        "tag": "default"
                      }
                    ],
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z",
                    "created_by": {
                      "id": "id",
                      "email_address": "email_address"
                    },
                    "status": "uncommitted",
                    "last_used_at": "2024-01-15T09:30:00Z",
                    "version_logs_count": 1,
                    "evaluator_aggregates": [
                      {
                        "value": 1.1,
                        "evaluator_id": "evaluator_id",
                        "evaluator_version_id": "evaluator_version_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      }
                    ],
                    "evaluators": [
                      {
                        "version_reference": {
                          "file": {
                            "path": "path",
                            "id": "id",
                            "model": "model",
                            "name": "name",
                            "version_id": "version_id",
                            "created_at": "2024-01-15T09:30:00Z",
                            "updated_at": "2024-01-15T09:30:00Z",
                            "status": "uncommitted",
                            "last_used_at": "2024-01-15T09:30:00Z",
                            "version_logs_count": 1,
                            "total_logs_count": 1,
                            "inputs": [
                              {
                                "name": "name"
                              }
                            ]
                          },
                          "environment": {
                            "id": "id",
                            "created_at": "2024-01-15T09:30:00Z",
                            "name": "name",
                            "tag": "default"
                          },
                          "type": "environment"
                        },
                        "state": "active",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      }
                    ]
                  }
                ],
                "page": 1,
                "size": 1,
                "total": 1
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "records": [
                    {
                      "path": "path",
                      "id": "id",
                      "directory_id": "directory_id",
                      "attributes": {
                        "key": "value"
                      },
                      "commit_message": "commit_message",
                      "name": "name",
                      "version_id": "version_id",
                      "type": "flow",
                      "environments": [
                        {
                          "id": "id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "name": "name",
                          "tag": "default"
                        }
                      ],
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "created_by": {
                        "id": "id",
                        "email_address": "email_address"
                      },
                      "status": "uncommitted",
                      "last_used_at": "2024-01-15T09:30:00Z",
                      "version_logs_count": 1,
                      "evaluator_aggregates": [
                        {
                          "value": 1.1,
                          "evaluator_id": "evaluator_id",
                          "evaluator_version_id": "evaluator_version_id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z"
                        }
                      ],
                      "evaluators": [
                        {
                          "version_reference": {
                            "file": {
                              "path": "path",
                              "id": "id",
                              "model": "model",
                              "name": "name",
                              "version_id": "version_id",
                              "created_at": "2024-01-15T09:30:00Z",
                              "updated_at": "2024-01-15T09:30:00Z",
                              "status": "uncommitted",
                              "last_used_at": "2024-01-15T09:30:00Z",
                              "version_logs_count": 1,
                              "total_logs_count": 1,
                              "inputs": [
                                {
                                  "name": "name"
                                }
                              ]
                            },
                            "environment": {
                              "id": "id",
                              "created_at": "2024-01-15T09:30:00Z",
                              "name": "name",
                              "tag": "default"
                            },
                            "type": "environment"
                          },
                          "state": "active",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z"
                        }
                      ]
                    }
                  ],
                  "page": 1,
                  "size": 1,
                  "total": 1
                }
              },
              "codeSamples": []
            },
            {
              "path": "/flows",
              "pathParameters": {},
              "queryParameters": {
                "page": 0,
                "size": 0
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Get a list of Flows.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.flows.list(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "page=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "page",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "size=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "size",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "name=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "name",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "user_filter=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "user_filter",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "sort_by=$FERN_INPUT",
                      "values": {
                        "created_at": "\"created_at\"",
                        "updated_at": "\"updated_at\"",
                        "name": "\"name\""
                      },
                      "templateInput": {
                        "location": "QUERY",
                        "path": "sort_by"
                      },
                      "type": "enum"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "order=$FERN_INPUT",
                      "values": {
                        "asc": "\"asc\"",
                        "desc": "\"desc\""
                      },
                      "templateInput": {
                        "location": "QUERY",
                        "path": "order"
                      },
                      "type": "enum"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.flows.list(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "page: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "page"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "size: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "size"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "name: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "name"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "userFilter: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "user_filter"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "enum",
                            "imports": [],
                            "isOptional": true,
                            "values": {
                              "created_at": "\"created_at\"",
                              "updated_at": "\"updated_at\"",
                              "name": "\"name\""
                            },
                            "templateString": "sortBy: $FERN_INPUT",
                            "templateInput": {
                              "location": "QUERY",
                              "path": "sort_by"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "enum",
                            "imports": [],
                            "isOptional": true,
                            "values": {
                              "asc": "\"asc\"",
                              "desc": "\"desc\""
                            },
                            "templateString": "order: $FERN_INPUT",
                            "templateInput": {
                              "location": "QUERY",
                              "path": "order"
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "upsert",
          "migratedFromUrlSlugs": ["upsert-flow"],
          "method": "POST",
          "id": "upsert",
          "originalEndpointId": "endpoint_flows.upsert",
          "name": "Upsert Flow",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/flows"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Path of the Flow, including the name. This locates the Flow in the Humanloop filesystem and is used as as a unique identifier. For example: `folder/name` or just `name`.",
                  "key": "path",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "ID for an existing Flow.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A key-value object identifying the Flow Version.",
                  "key": "attributes",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "description": "Message describing the changes made.",
                  "key": "commit_message",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:FlowResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/flows",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "attributes": {
                  "key": "value"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "path": "path",
                "id": "id",
                "directory_id": "directory_id",
                "attributes": {
                  "key": "value"
                },
                "commit_message": "commit_message",
                "name": "name",
                "version_id": "version_id",
                "type": "flow",
                "environments": [
                  {
                    "id": "id",
                    "created_at": "2024-01-15T09:30:00Z",
                    "name": "name",
                    "tag": "default"
                  }
                ],
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z",
                "created_by": {
                  "id": "id",
                  "email_address": "email_address",
                  "full_name": "full_name"
                },
                "status": "uncommitted",
                "last_used_at": "2024-01-15T09:30:00Z",
                "version_logs_count": 1,
                "evaluator_aggregates": [
                  {
                    "value": 1.1,
                    "evaluator_id": "evaluator_id",
                    "evaluator_version_id": "evaluator_version_id",
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z"
                  }
                ],
                "evaluators": [
                  {
                    "version_reference": {
                      "file": {
                        "path": "path",
                        "id": "id",
                        "model": "model",
                        "name": "name",
                        "version_id": "version_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "status": "uncommitted",
                        "last_used_at": "2024-01-15T09:30:00Z",
                        "version_logs_count": 1,
                        "total_logs_count": 1,
                        "inputs": [
                          {
                            "name": "name"
                          }
                        ]
                      },
                      "environment": {
                        "id": "id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "name": "name",
                        "tag": "default"
                      },
                      "type": "environment"
                    },
                    "version": {
                      "path": "path",
                      "id": "id",
                      "spec": {
                        "arguments_type": "target_free",
                        "return_type": "boolean",
                        "evaluator_type": "llm"
                      },
                      "name": "name",
                      "version_id": "version_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "status": "uncommitted",
                      "last_used_at": "2024-01-15T09:30:00Z",
                      "version_logs_count": 1,
                      "total_logs_count": 1,
                      "inputs": [
                        {
                          "name": "name"
                        }
                      ]
                    },
                    "state": "active",
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "attributes": {
                    "key": "value"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "path": "path",
                  "id": "id",
                  "directory_id": "directory_id",
                  "attributes": {
                    "key": "value"
                  },
                  "commit_message": "commit_message",
                  "name": "name",
                  "version_id": "version_id",
                  "type": "flow",
                  "environments": [
                    {
                      "id": "id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "name": "name",
                      "tag": "default"
                    }
                  ],
                  "created_at": "2024-01-15T09:30:00Z",
                  "updated_at": "2024-01-15T09:30:00Z",
                  "created_by": {
                    "id": "id",
                    "email_address": "email_address",
                    "full_name": "full_name"
                  },
                  "status": "uncommitted",
                  "last_used_at": "2024-01-15T09:30:00Z",
                  "version_logs_count": 1,
                  "evaluator_aggregates": [
                    {
                      "value": 1.1,
                      "evaluator_id": "evaluator_id",
                      "evaluator_version_id": "evaluator_version_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z"
                    }
                  ],
                  "evaluators": [
                    {
                      "version_reference": {
                        "file": {
                          "path": "path",
                          "id": "id",
                          "model": "model",
                          "name": "name",
                          "version_id": "version_id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "status": "uncommitted",
                          "last_used_at": "2024-01-15T09:30:00Z",
                          "version_logs_count": 1,
                          "total_logs_count": 1,
                          "inputs": [
                            {
                              "name": "name"
                            }
                          ]
                        },
                        "environment": {
                          "id": "id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "name": "name",
                          "tag": "default"
                        },
                        "type": "environment"
                      },
                      "version": {
                        "path": "path",
                        "id": "id",
                        "spec": {
                          "arguments_type": "target_free",
                          "return_type": "boolean",
                          "evaluator_type": "llm"
                        },
                        "name": "name",
                        "version_id": "version_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "status": "uncommitted",
                        "last_used_at": "2024-01-15T09:30:00Z",
                        "version_logs_count": 1,
                        "total_logs_count": 1,
                        "inputs": [
                          {
                            "name": "name"
                          }
                        ]
                      },
                      "state": "active",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z"
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/flows",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "attributes": {
                    "string": {}
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Create or update a Flow.\n\nFlows can also be identified by the `ID` or their `path`.\n\nIf you provide a commit message, then the new version will be committed;\notherwise it will be uncommitted. If you try to commit an already committed version,\nan exception will be raised.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.flows.upsert(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "path=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "path",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "attributes={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "attributes"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "commit_message=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "commit_message",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.flows.upsert(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "path: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "path"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "id: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "attributes: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "attributes"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "commitMessage: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "commit_message"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "update-log",
          "migratedFromUrlSlugs": ["update-flow-log"],
          "method": "PATCH",
          "id": "updateLog",
          "originalEndpointId": "endpoint_flows.updateLog",
          "name": "Update Flow Log",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier of the Flow Log.",
                "key": "log_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/flows/logs/"
              },
              {
                "type": "pathParameter",
                "value": "log_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The inputs passed to the Flow Log.",
                  "key": "inputs",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "The output of the Flow Log. Provide None to unset existing `output` value. Provide either this or `error`.",
                  "key": "output",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The error message of the Flow Log. Provide None to unset existing `error` value. Provide either this or `output`.",
                  "key": "error",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Status of the Trace. When a Trace is marked as `complete`, no more Logs can be added to it. Monitoring Evaluators will only run on completed Traces.",
                  "key": "trace_status",
                  "valueType": {
                    "type": "id",
                    "value": "type_:TraceStatus"
                  }
                }
              ]
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:FlowLogResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/flows/logs/log_id",
              "pathParameters": {
                "log_id": "log_id"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "trace_status": "complete"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "start_time": "2024-01-15T09:30:00Z",
                "end_time": "2024-01-15T09:30:00Z",
                "output": "output",
                "created_at": "2024-01-15T09:30:00Z",
                "error": "error",
                "provider_latency": 1.1,
                "stdout": "stdout",
                "provider_request": {
                  "key": "value"
                },
                "provider_response": {
                  "key": "value"
                },
                "inputs": {
                  "key": "value"
                },
                "source": "source",
                "metadata": {
                  "key": "value"
                },
                "source_datapoint_id": "source_datapoint_id",
                "trace_parent_id": "trace_parent_id",
                "batches": ["batches"],
                "user": "user",
                "environment": "environment",
                "save": true,
                "id": "id",
                "evaluator_logs": [
                  {
                    "start_time": "2024-01-15T09:30:00Z",
                    "end_time": "2024-01-15T09:30:00Z",
                    "output": "output",
                    "created_at": "2024-01-15T09:30:00Z",
                    "error": "error",
                    "provider_latency": 1.1,
                    "stdout": "stdout",
                    "provider_request": {
                      "key": "value"
                    },
                    "provider_response": {
                      "key": "value"
                    },
                    "inputs": {
                      "key": "value"
                    },
                    "source": "source",
                    "metadata": {
                      "key": "value"
                    },
                    "parent_id": "parent_id",
                    "source_datapoint_id": "source_datapoint_id",
                    "trace_parent_id": "trace_parent_id",
                    "batches": ["batches"],
                    "user": "user",
                    "environment": "environment",
                    "save": true,
                    "judgment": true,
                    "id": "id",
                    "evaluator_logs": [],
                    "trace_flow_id": "trace_flow_id",
                    "trace_id": "trace_id",
                    "trace_children": [
                      {
                        "prompt": {
                          "path": "path",
                          "id": "id",
                          "model": "model",
                          "name": "name",
                          "version_id": "version_id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "status": "uncommitted",
                          "last_used_at": "2024-01-15T09:30:00Z",
                          "version_logs_count": 1,
                          "total_logs_count": 1,
                          "inputs": [
                            {
                              "name": "name"
                            }
                          ]
                        },
                        "id": "id",
                        "evaluator_logs": []
                      }
                    ],
                    "evaluator": {
                      "path": "path",
                      "id": "id",
                      "spec": {
                        "arguments_type": "target_free",
                        "return_type": "boolean",
                        "evaluator_type": "llm"
                      },
                      "name": "name",
                      "version_id": "version_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "status": "uncommitted",
                      "last_used_at": "2024-01-15T09:30:00Z",
                      "version_logs_count": 1,
                      "total_logs_count": 1,
                      "inputs": [
                        {
                          "name": "name"
                        }
                      ]
                    },
                    "parent": {
                      "prompt": {
                        "path": "path",
                        "id": "id",
                        "model": "model",
                        "name": "name",
                        "version_id": "version_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "status": "uncommitted",
                        "last_used_at": "2024-01-15T09:30:00Z",
                        "version_logs_count": 1,
                        "total_logs_count": 1,
                        "inputs": [
                          {
                            "name": "name"
                          }
                        ]
                      },
                      "id": "id",
                      "evaluator_logs": []
                    }
                  }
                ],
                "trace_flow_id": "trace_flow_id",
                "trace_id": "trace_id",
                "trace_children": [
                  {
                    "output_message": {
                      "role": "user"
                    },
                    "prompt_tokens": 1,
                    "output_tokens": 1,
                    "prompt_cost": 1.1,
                    "output_cost": 1.1,
                    "finish_reason": "finish_reason",
                    "messages": [
                      {
                        "role": "user"
                      }
                    ],
                    "tool_choice": "none",
                    "prompt": {
                      "path": "path",
                      "id": "id",
                      "model": "model",
                      "name": "name",
                      "version_id": "version_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "status": "uncommitted",
                      "last_used_at": "2024-01-15T09:30:00Z",
                      "version_logs_count": 1,
                      "total_logs_count": 1,
                      "inputs": [
                        {
                          "name": "name"
                        }
                      ]
                    },
                    "start_time": "2024-01-15T09:30:00Z",
                    "end_time": "2024-01-15T09:30:00Z",
                    "output": "output",
                    "created_at": "2024-01-15T09:30:00Z",
                    "error": "error",
                    "provider_latency": 1.1,
                    "stdout": "stdout",
                    "provider_request": {
                      "key": "value"
                    },
                    "provider_response": {
                      "key": "value"
                    },
                    "inputs": {
                      "key": "value"
                    },
                    "source": "source",
                    "metadata": {
                      "key": "value"
                    },
                    "source_datapoint_id": "source_datapoint_id",
                    "trace_parent_id": "trace_parent_id",
                    "batches": ["batches"],
                    "user": "user",
                    "environment": "environment",
                    "save": true,
                    "id": "id",
                    "evaluator_logs": [
                      {
                        "id": "id",
                        "evaluator_logs": [],
                        "evaluator": {
                          "path": "path",
                          "id": "id",
                          "spec": {
                            "arguments_type": "target_free",
                            "return_type": "boolean",
                            "evaluator_type": "llm"
                          },
                          "name": "name",
                          "version_id": "version_id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "status": "uncommitted",
                          "last_used_at": "2024-01-15T09:30:00Z",
                          "version_logs_count": 1,
                          "total_logs_count": 1,
                          "inputs": [
                            {
                              "name": "name"
                            }
                          ]
                        }
                      }
                    ],
                    "trace_flow_id": "trace_flow_id",
                    "trace_id": "trace_id"
                  }
                ],
                "flow": {
                  "path": "path",
                  "id": "id",
                  "directory_id": "directory_id",
                  "attributes": {
                    "key": "value"
                  },
                  "commit_message": "commit_message",
                  "name": "name",
                  "version_id": "version_id",
                  "type": "flow",
                  "environments": [
                    {
                      "id": "id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "name": "name",
                      "tag": "default"
                    }
                  ],
                  "created_at": "2024-01-15T09:30:00Z",
                  "updated_at": "2024-01-15T09:30:00Z",
                  "created_by": {
                    "id": "id",
                    "email_address": "email_address",
                    "full_name": "full_name"
                  },
                  "status": "uncommitted",
                  "last_used_at": "2024-01-15T09:30:00Z",
                  "version_logs_count": 1,
                  "evaluator_aggregates": [
                    {
                      "value": 1.1,
                      "evaluator_id": "evaluator_id",
                      "evaluator_version_id": "evaluator_version_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z"
                    }
                  ],
                  "evaluators": [
                    {
                      "version_reference": {
                        "file": {
                          "path": "path",
                          "id": "id",
                          "model": "model",
                          "name": "name",
                          "version_id": "version_id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "status": "uncommitted",
                          "last_used_at": "2024-01-15T09:30:00Z",
                          "version_logs_count": 1,
                          "total_logs_count": 1,
                          "inputs": [
                            {
                              "name": "name"
                            }
                          ]
                        },
                        "environment": {
                          "id": "id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "name": "name",
                          "tag": "default"
                        },
                        "type": "environment"
                      },
                      "state": "active",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z"
                    }
                  ]
                },
                "trace_status": "complete"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "trace_status": "complete"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "start_time": "2024-01-15T09:30:00Z",
                  "end_time": "2024-01-15T09:30:00Z",
                  "output": "output",
                  "created_at": "2024-01-15T09:30:00Z",
                  "error": "error",
                  "provider_latency": 1.1,
                  "stdout": "stdout",
                  "provider_request": {
                    "key": "value"
                  },
                  "provider_response": {
                    "key": "value"
                  },
                  "inputs": {
                    "key": "value"
                  },
                  "source": "source",
                  "metadata": {
                    "key": "value"
                  },
                  "source_datapoint_id": "source_datapoint_id",
                  "trace_parent_id": "trace_parent_id",
                  "batches": ["batches"],
                  "user": "user",
                  "environment": "environment",
                  "save": true,
                  "id": "id",
                  "evaluator_logs": [
                    {
                      "start_time": "2024-01-15T09:30:00Z",
                      "end_time": "2024-01-15T09:30:00Z",
                      "output": "output",
                      "created_at": "2024-01-15T09:30:00Z",
                      "error": "error",
                      "provider_latency": 1.1,
                      "stdout": "stdout",
                      "provider_request": {
                        "key": "value"
                      },
                      "provider_response": {
                        "key": "value"
                      },
                      "inputs": {
                        "key": "value"
                      },
                      "source": "source",
                      "metadata": {
                        "key": "value"
                      },
                      "parent_id": "parent_id",
                      "source_datapoint_id": "source_datapoint_id",
                      "trace_parent_id": "trace_parent_id",
                      "batches": ["batches"],
                      "user": "user",
                      "environment": "environment",
                      "save": true,
                      "judgment": true,
                      "id": "id",
                      "evaluator_logs": [],
                      "trace_flow_id": "trace_flow_id",
                      "trace_id": "trace_id",
                      "trace_children": [
                        {
                          "prompt": {
                            "path": "path",
                            "id": "id",
                            "model": "model",
                            "name": "name",
                            "version_id": "version_id",
                            "created_at": "2024-01-15T09:30:00Z",
                            "updated_at": "2024-01-15T09:30:00Z",
                            "status": "uncommitted",
                            "last_used_at": "2024-01-15T09:30:00Z",
                            "version_logs_count": 1,
                            "total_logs_count": 1,
                            "inputs": [
                              {
                                "name": "name"
                              }
                            ]
                          },
                          "id": "id",
                          "evaluator_logs": []
                        }
                      ],
                      "evaluator": {
                        "path": "path",
                        "id": "id",
                        "spec": {
                          "arguments_type": "target_free",
                          "return_type": "boolean",
                          "evaluator_type": "llm"
                        },
                        "name": "name",
                        "version_id": "version_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "status": "uncommitted",
                        "last_used_at": "2024-01-15T09:30:00Z",
                        "version_logs_count": 1,
                        "total_logs_count": 1,
                        "inputs": [
                          {
                            "name": "name"
                          }
                        ]
                      },
                      "parent": {
                        "prompt": {
                          "path": "path",
                          "id": "id",
                          "model": "model",
                          "name": "name",
                          "version_id": "version_id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "status": "uncommitted",
                          "last_used_at": "2024-01-15T09:30:00Z",
                          "version_logs_count": 1,
                          "total_logs_count": 1,
                          "inputs": [
                            {
                              "name": "name"
                            }
                          ]
                        },
                        "id": "id",
                        "evaluator_logs": []
                      }
                    }
                  ],
                  "trace_flow_id": "trace_flow_id",
                  "trace_id": "trace_id",
                  "trace_children": [
                    {
                      "output_message": {
                        "role": "user"
                      },
                      "prompt_tokens": 1,
                      "output_tokens": 1,
                      "prompt_cost": 1.1,
                      "output_cost": 1.1,
                      "finish_reason": "finish_reason",
                      "messages": [
                        {
                          "role": "user"
                        }
                      ],
                      "tool_choice": "none",
                      "prompt": {
                        "path": "path",
                        "id": "id",
                        "model": "model",
                        "name": "name",
                        "version_id": "version_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "status": "uncommitted",
                        "last_used_at": "2024-01-15T09:30:00Z",
                        "version_logs_count": 1,
                        "total_logs_count": 1,
                        "inputs": [
                          {
                            "name": "name"
                          }
                        ]
                      },
                      "start_time": "2024-01-15T09:30:00Z",
                      "end_time": "2024-01-15T09:30:00Z",
                      "output": "output",
                      "created_at": "2024-01-15T09:30:00Z",
                      "error": "error",
                      "provider_latency": 1.1,
                      "stdout": "stdout",
                      "provider_request": {
                        "key": "value"
                      },
                      "provider_response": {
                        "key": "value"
                      },
                      "inputs": {
                        "key": "value"
                      },
                      "source": "source",
                      "metadata": {
                        "key": "value"
                      },
                      "source_datapoint_id": "source_datapoint_id",
                      "trace_parent_id": "trace_parent_id",
                      "batches": ["batches"],
                      "user": "user",
                      "environment": "environment",
                      "save": true,
                      "id": "id",
                      "evaluator_logs": [
                        {
                          "id": "id",
                          "evaluator_logs": [],
                          "evaluator": {
                            "path": "path",
                            "id": "id",
                            "spec": {
                              "arguments_type": "target_free",
                              "return_type": "boolean",
                              "evaluator_type": "llm"
                            },
                            "name": "name",
                            "version_id": "version_id",
                            "created_at": "2024-01-15T09:30:00Z",
                            "updated_at": "2024-01-15T09:30:00Z",
                            "status": "uncommitted",
                            "last_used_at": "2024-01-15T09:30:00Z",
                            "version_logs_count": 1,
                            "total_logs_count": 1,
                            "inputs": [
                              {
                                "name": "name"
                              }
                            ]
                          }
                        }
                      ],
                      "trace_flow_id": "trace_flow_id",
                      "trace_id": "trace_id"
                    }
                  ],
                  "flow": {
                    "path": "path",
                    "id": "id",
                    "directory_id": "directory_id",
                    "attributes": {
                      "key": "value"
                    },
                    "commit_message": "commit_message",
                    "name": "name",
                    "version_id": "version_id",
                    "type": "flow",
                    "environments": [
                      {
                        "id": "id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "name": "name",
                        "tag": "default"
                      }
                    ],
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z",
                    "created_by": {
                      "id": "id",
                      "email_address": "email_address",
                      "full_name": "full_name"
                    },
                    "status": "uncommitted",
                    "last_used_at": "2024-01-15T09:30:00Z",
                    "version_logs_count": 1,
                    "evaluator_aggregates": [
                      {
                        "value": 1.1,
                        "evaluator_id": "evaluator_id",
                        "evaluator_version_id": "evaluator_version_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      }
                    ],
                    "evaluators": [
                      {
                        "version_reference": {
                          "file": {
                            "path": "path",
                            "id": "id",
                            "model": "model",
                            "name": "name",
                            "version_id": "version_id",
                            "created_at": "2024-01-15T09:30:00Z",
                            "updated_at": "2024-01-15T09:30:00Z",
                            "status": "uncommitted",
                            "last_used_at": "2024-01-15T09:30:00Z",
                            "version_logs_count": 1,
                            "total_logs_count": 1,
                            "inputs": [
                              {
                                "name": "name"
                              }
                            ]
                          },
                          "environment": {
                            "id": "id",
                            "created_at": "2024-01-15T09:30:00Z",
                            "name": "name",
                            "tag": "default"
                          },
                          "type": "environment"
                        },
                        "state": "active",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      }
                    ]
                  },
                  "trace_status": "complete"
                }
              },
              "codeSamples": []
            },
            {
              "path": "/flows/logs/:log_id",
              "pathParameters": {
                "log_id": ":log_id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "trace_status": "complete"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Update the status, inputs, output of a Flow Log.\n\nMarking a Flow Log as complete will trigger any monitoring Evaluators to run.\nInputs and output (or error) must be provided in order to mark it as complete.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.flows.update_log(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "log_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "log_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "inputs={\n\t\t$FERN_INPUT\n\t}",
                      "delimiter": ",\n\t\t",
                      "keyTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "valueTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "keyValueSeparator": ": ",
                      "templateInput": {
                        "location": "BODY",
                        "path": "inputs"
                      },
                      "type": "dict"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "output=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "output",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "error=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "error",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "trace_status=$FERN_INPUT",
                      "values": {
                        "complete": "\"complete\"",
                        "incomplete": "\"incomplete\""
                      },
                      "templateInput": {
                        "location": "BODY",
                        "path": "trace_status"
                      },
                      "type": "enum"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.flows.updateLog(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "log_id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "dict",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "inputs: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "delimiter": ",\n\t\t\t",
                            "keyValueSeparator": ": ",
                            "keyTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "valueTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "$FERN_INPUT",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "payload",
                                  "location": "RELATIVE",
                                  "path": null
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "inputs"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "output: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "output"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "error: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "error"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "enum",
                            "imports": [],
                            "isOptional": true,
                            "values": {
                              "complete": "\"complete\"",
                              "incomplete": "\"incomplete\""
                            },
                            "templateString": "traceStatus: $FERN_INPUT",
                            "templateInput": {
                              "location": "BODY",
                              "path": "trace_status"
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "list-versions",
          "migratedFromUrlSlugs": ["list-versions-of-a-flow"],
          "method": "GET",
          "id": "listVersions",
          "originalEndpointId": "endpoint_flows.listVersions",
          "name": "List Versions of a Flow",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Flow.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/flows/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/versions"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Filter versions by status: 'uncommitted', 'committed'. If no status is provided, all versions are returned.",
              "key": "status",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_:VersionStatus"
                }
              }
            },
            {
              "description": "Whether to include Evaluator aggregate results for the versions in the response",
              "key": "evaluator_aggregates",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:ListFlows"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/flows/id/versions",
              "pathParameters": {
                "id": "id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "records": [
                  {
                    "path": "path",
                    "id": "id",
                    "directory_id": "directory_id",
                    "attributes": {
                      "key": "value"
                    },
                    "commit_message": "commit_message",
                    "name": "name",
                    "version_id": "version_id",
                    "type": "flow",
                    "environments": [
                      {
                        "id": "id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "name": "name",
                        "tag": "default"
                      }
                    ],
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z",
                    "created_by": {
                      "id": "id",
                      "email_address": "email_address"
                    },
                    "status": "uncommitted",
                    "last_used_at": "2024-01-15T09:30:00Z",
                    "version_logs_count": 1,
                    "evaluator_aggregates": [
                      {
                        "value": 1.1,
                        "evaluator_id": "evaluator_id",
                        "evaluator_version_id": "evaluator_version_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      }
                    ],
                    "evaluators": [
                      {
                        "version_reference": {
                          "file": {
                            "path": "path",
                            "id": "id",
                            "model": "model",
                            "name": "name",
                            "version_id": "version_id",
                            "created_at": "2024-01-15T09:30:00Z",
                            "updated_at": "2024-01-15T09:30:00Z",
                            "status": "uncommitted",
                            "last_used_at": "2024-01-15T09:30:00Z",
                            "version_logs_count": 1,
                            "total_logs_count": 1,
                            "inputs": [
                              {
                                "name": "name"
                              }
                            ]
                          },
                          "environment": {
                            "id": "id",
                            "created_at": "2024-01-15T09:30:00Z",
                            "name": "name",
                            "tag": "default"
                          },
                          "type": "environment"
                        },
                        "state": "active",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      }
                    ]
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "records": [
                    {
                      "path": "path",
                      "id": "id",
                      "directory_id": "directory_id",
                      "attributes": {
                        "key": "value"
                      },
                      "commit_message": "commit_message",
                      "name": "name",
                      "version_id": "version_id",
                      "type": "flow",
                      "environments": [
                        {
                          "id": "id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "name": "name",
                          "tag": "default"
                        }
                      ],
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "created_by": {
                        "id": "id",
                        "email_address": "email_address"
                      },
                      "status": "uncommitted",
                      "last_used_at": "2024-01-15T09:30:00Z",
                      "version_logs_count": 1,
                      "evaluator_aggregates": [
                        {
                          "value": 1.1,
                          "evaluator_id": "evaluator_id",
                          "evaluator_version_id": "evaluator_version_id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z"
                        }
                      ],
                      "evaluators": [
                        {
                          "version_reference": {
                            "file": {
                              "path": "path",
                              "id": "id",
                              "model": "model",
                              "name": "name",
                              "version_id": "version_id",
                              "created_at": "2024-01-15T09:30:00Z",
                              "updated_at": "2024-01-15T09:30:00Z",
                              "status": "uncommitted",
                              "last_used_at": "2024-01-15T09:30:00Z",
                              "version_logs_count": 1,
                              "total_logs_count": 1,
                              "inputs": [
                                {
                                  "name": "name"
                                }
                              ]
                            },
                            "environment": {
                              "id": "id",
                              "created_at": "2024-01-15T09:30:00Z",
                              "name": "name",
                              "tag": "default"
                            },
                            "type": "environment"
                          },
                          "state": "active",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z"
                        }
                      ]
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/flows/:id/versions",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {
                "status": "uncommitted",
                "evaluator_aggregates": true
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Get a list of all the versions of a Flow.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.flows.list_versions(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "status=$FERN_INPUT",
                      "values": {
                        "uncommitted": "\"uncommitted\"",
                        "committed": "\"committed\"",
                        "deleted": "\"deleted\""
                      },
                      "templateInput": {
                        "location": "QUERY",
                        "path": "status"
                      },
                      "type": "enum"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "evaluator_aggregates=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "evaluator_aggregates",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.flows.listVersions(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "enum",
                            "imports": [],
                            "isOptional": true,
                            "values": {
                              "uncommitted": "\"uncommitted\"",
                              "committed": "\"committed\"",
                              "deleted": "\"deleted\""
                            },
                            "templateString": "status: $FERN_INPUT",
                            "templateInput": {
                              "location": "QUERY",
                              "path": "status"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "evaluatorAggregates: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "evaluator_aggregates"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "commit",
          "migratedFromUrlSlugs": ["commit-a-flow-version"],
          "method": "POST",
          "id": "commit",
          "originalEndpointId": "endpoint_flows.commit",
          "name": "Commit a Flow Version",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Flow.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "Unique identifier for the specific version of the Flow.",
                "key": "version_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/flows/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/versions/"
              },
              {
                "type": "pathParameter",
                "value": "version_id"
              },
              {
                "type": "literal",
                "value": "/commit"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:CommitRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:FlowResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/flows/id/versions/version_id/commit",
              "pathParameters": {
                "id": "id",
                "version_id": "version_id"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "commit_message": "commit_message"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "path": "path",
                "id": "id",
                "directory_id": "directory_id",
                "attributes": {
                  "key": "value"
                },
                "commit_message": "commit_message",
                "name": "name",
                "version_id": "version_id",
                "type": "flow",
                "environments": [
                  {
                    "id": "id",
                    "created_at": "2024-01-15T09:30:00Z",
                    "name": "name",
                    "tag": "default"
                  }
                ],
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z",
                "created_by": {
                  "id": "id",
                  "email_address": "email_address",
                  "full_name": "full_name"
                },
                "status": "uncommitted",
                "last_used_at": "2024-01-15T09:30:00Z",
                "version_logs_count": 1,
                "evaluator_aggregates": [
                  {
                    "value": 1.1,
                    "evaluator_id": "evaluator_id",
                    "evaluator_version_id": "evaluator_version_id",
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z"
                  }
                ],
                "evaluators": [
                  {
                    "version_reference": {
                      "file": {
                        "path": "path",
                        "id": "id",
                        "model": "model",
                        "name": "name",
                        "version_id": "version_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "status": "uncommitted",
                        "last_used_at": "2024-01-15T09:30:00Z",
                        "version_logs_count": 1,
                        "total_logs_count": 1,
                        "inputs": [
                          {
                            "name": "name"
                          }
                        ]
                      },
                      "environment": {
                        "id": "id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "name": "name",
                        "tag": "default"
                      },
                      "type": "environment"
                    },
                    "version": {
                      "path": "path",
                      "id": "id",
                      "spec": {
                        "arguments_type": "target_free",
                        "return_type": "boolean",
                        "evaluator_type": "llm"
                      },
                      "name": "name",
                      "version_id": "version_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "status": "uncommitted",
                      "last_used_at": "2024-01-15T09:30:00Z",
                      "version_logs_count": 1,
                      "total_logs_count": 1,
                      "inputs": [
                        {
                          "name": "name"
                        }
                      ]
                    },
                    "state": "active",
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "commit_message": "commit_message"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "path": "path",
                  "id": "id",
                  "directory_id": "directory_id",
                  "attributes": {
                    "key": "value"
                  },
                  "commit_message": "commit_message",
                  "name": "name",
                  "version_id": "version_id",
                  "type": "flow",
                  "environments": [
                    {
                      "id": "id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "name": "name",
                      "tag": "default"
                    }
                  ],
                  "created_at": "2024-01-15T09:30:00Z",
                  "updated_at": "2024-01-15T09:30:00Z",
                  "created_by": {
                    "id": "id",
                    "email_address": "email_address",
                    "full_name": "full_name"
                  },
                  "status": "uncommitted",
                  "last_used_at": "2024-01-15T09:30:00Z",
                  "version_logs_count": 1,
                  "evaluator_aggregates": [
                    {
                      "value": 1.1,
                      "evaluator_id": "evaluator_id",
                      "evaluator_version_id": "evaluator_version_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z"
                    }
                  ],
                  "evaluators": [
                    {
                      "version_reference": {
                        "file": {
                          "path": "path",
                          "id": "id",
                          "model": "model",
                          "name": "name",
                          "version_id": "version_id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "status": "uncommitted",
                          "last_used_at": "2024-01-15T09:30:00Z",
                          "version_logs_count": 1,
                          "total_logs_count": 1,
                          "inputs": [
                            {
                              "name": "name"
                            }
                          ]
                        },
                        "environment": {
                          "id": "id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "name": "name",
                          "tag": "default"
                        },
                        "type": "environment"
                      },
                      "version": {
                        "path": "path",
                        "id": "id",
                        "spec": {
                          "arguments_type": "target_free",
                          "return_type": "boolean",
                          "evaluator_type": "llm"
                        },
                        "name": "name",
                        "version_id": "version_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "status": "uncommitted",
                        "last_used_at": "2024-01-15T09:30:00Z",
                        "version_logs_count": 1,
                        "total_logs_count": 1,
                        "inputs": [
                          {
                            "name": "name"
                          }
                        ]
                      },
                      "state": "active",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z"
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/flows/:id/versions/:version_id/commit",
              "pathParameters": {
                "id": ":id",
                "version_id": ":version_id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "commit_message": "string"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Commit a version of the Flow with a commit message.\n\nIf the version is already committed, an exception will be raised.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.flows.commit(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "version_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "version_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "commit_message=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "commit_message",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.flows.commit(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "version_id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "commitMessage: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "commit_message"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "set-deployment",
          "migratedFromUrlSlugs": ["deploy-flow"],
          "method": "POST",
          "id": "setDeployment",
          "originalEndpointId": "endpoint_flows.setDeployment",
          "name": "Deploy Flow",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Flow.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "Unique identifier for the Environment to deploy the Version to.",
                "key": "environment_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/flows/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/environments/"
              },
              {
                "type": "pathParameter",
                "value": "environment_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Unique identifier for the specific version of the Flow.",
              "key": "version_id",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:FlowResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/flows/id/environments/environment_id",
              "pathParameters": {
                "id": "id",
                "environment_id": "environment_id"
              },
              "queryParameters": {
                "version_id": "version_id"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "path": "path",
                "id": "id",
                "directory_id": "directory_id",
                "attributes": {
                  "key": "value"
                },
                "commit_message": "commit_message",
                "name": "name",
                "version_id": "version_id",
                "type": "flow",
                "environments": [
                  {
                    "id": "id",
                    "created_at": "2024-01-15T09:30:00Z",
                    "name": "name",
                    "tag": "default"
                  }
                ],
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z",
                "created_by": {
                  "id": "id",
                  "email_address": "email_address",
                  "full_name": "full_name"
                },
                "status": "uncommitted",
                "last_used_at": "2024-01-15T09:30:00Z",
                "version_logs_count": 1,
                "evaluator_aggregates": [
                  {
                    "value": 1.1,
                    "evaluator_id": "evaluator_id",
                    "evaluator_version_id": "evaluator_version_id",
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z"
                  }
                ],
                "evaluators": [
                  {
                    "version_reference": {
                      "file": {
                        "path": "path",
                        "id": "id",
                        "model": "model",
                        "name": "name",
                        "version_id": "version_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "status": "uncommitted",
                        "last_used_at": "2024-01-15T09:30:00Z",
                        "version_logs_count": 1,
                        "total_logs_count": 1,
                        "inputs": [
                          {
                            "name": "name"
                          }
                        ]
                      },
                      "environment": {
                        "id": "id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "name": "name",
                        "tag": "default"
                      },
                      "type": "environment"
                    },
                    "version": {
                      "path": "path",
                      "id": "id",
                      "spec": {
                        "arguments_type": "target_free",
                        "return_type": "boolean",
                        "evaluator_type": "llm"
                      },
                      "name": "name",
                      "version_id": "version_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "status": "uncommitted",
                      "last_used_at": "2024-01-15T09:30:00Z",
                      "version_logs_count": 1,
                      "total_logs_count": 1,
                      "inputs": [
                        {
                          "name": "name"
                        }
                      ]
                    },
                    "state": "active",
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "path": "path",
                  "id": "id",
                  "directory_id": "directory_id",
                  "attributes": {
                    "key": "value"
                  },
                  "commit_message": "commit_message",
                  "name": "name",
                  "version_id": "version_id",
                  "type": "flow",
                  "environments": [
                    {
                      "id": "id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "name": "name",
                      "tag": "default"
                    }
                  ],
                  "created_at": "2024-01-15T09:30:00Z",
                  "updated_at": "2024-01-15T09:30:00Z",
                  "created_by": {
                    "id": "id",
                    "email_address": "email_address",
                    "full_name": "full_name"
                  },
                  "status": "uncommitted",
                  "last_used_at": "2024-01-15T09:30:00Z",
                  "version_logs_count": 1,
                  "evaluator_aggregates": [
                    {
                      "value": 1.1,
                      "evaluator_id": "evaluator_id",
                      "evaluator_version_id": "evaluator_version_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z"
                    }
                  ],
                  "evaluators": [
                    {
                      "version_reference": {
                        "file": {
                          "path": "path",
                          "id": "id",
                          "model": "model",
                          "name": "name",
                          "version_id": "version_id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "status": "uncommitted",
                          "last_used_at": "2024-01-15T09:30:00Z",
                          "version_logs_count": 1,
                          "total_logs_count": 1,
                          "inputs": [
                            {
                              "name": "name"
                            }
                          ]
                        },
                        "environment": {
                          "id": "id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "name": "name",
                          "tag": "default"
                        },
                        "type": "environment"
                      },
                      "version": {
                        "path": "path",
                        "id": "id",
                        "spec": {
                          "arguments_type": "target_free",
                          "return_type": "boolean",
                          "evaluator_type": "llm"
                        },
                        "name": "name",
                        "version_id": "version_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "status": "uncommitted",
                        "last_used_at": "2024-01-15T09:30:00Z",
                        "version_logs_count": 1,
                        "total_logs_count": 1,
                        "inputs": [
                          {
                            "name": "name"
                          }
                        ]
                      },
                      "state": "active",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z"
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/flows/:id/environments/:environment_id",
              "pathParameters": {
                "id": ":id",
                "environment_id": ":environment_id"
              },
              "queryParameters": {
                "version_id": "string"
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Deploy Flow to an Environment.\n\nSet the deployed version for the specified Environment. This Flow\nwill be used for calls made to the Flow in this Environment.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.flows.set_deployment(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "environment_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "environment_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "version_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "version_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.flows.setDeployment(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "environment_id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "versionId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "version_id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "remove-deployment",
          "method": "DELETE",
          "id": "removeDeployment",
          "originalEndpointId": "endpoint_flows.removeDeployment",
          "name": "Remove Deployment",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Flow.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "Unique identifier for the Environment to remove the deployment from.",
                "key": "environment_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/flows/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/environments/"
              },
              {
                "type": "pathParameter",
                "value": "environment_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/flows/id/environments/environment_id",
              "pathParameters": {
                "id": "id",
                "environment_id": "environment_id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            },
            {
              "path": "/flows/:id/environments/:environment_id",
              "pathParameters": {
                "id": ":id",
                "environment_id": ":environment_id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Remove deployed Flow from the Environment.\n\nRemove the deployed version for the specified Environment. This Flow\nwill no longer be used for calls made to the Flow in this Environment.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.flows.remove_deployment(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "environment_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "environment_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.flows.removeDeployment(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "environment_id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "list-environments",
          "migratedFromUrlSlugs": ["list-a-flows-environments"],
          "method": "GET",
          "id": "listEnvironments",
          "originalEndpointId": "endpoint_flows.listEnvironments",
          "name": "List a Flow's Environments",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Flow.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/flows/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/environments"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:FileEnvironmentResponse"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/flows/id/environments",
              "pathParameters": {
                "id": "id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": [
                {
                  "id": "id",
                  "created_at": "2024-01-15T09:30:00Z",
                  "name": "name",
                  "tag": "default",
                  "file": {
                    "path": "path",
                    "id": "id",
                    "directory_id": "directory_id",
                    "model": "model",
                    "endpoint": "complete",
                    "template": "template",
                    "provider": "openai",
                    "max_tokens": 1,
                    "temperature": 1.1,
                    "top_p": 1.1,
                    "stop": "stop",
                    "presence_penalty": 1.1,
                    "frequency_penalty": 1.1,
                    "other": {
                      "key": "value"
                    },
                    "seed": 1,
                    "response_format": {
                      "type": "json_object"
                    },
                    "tools": [
                      {
                        "name": "name",
                        "description": "description"
                      }
                    ],
                    "linked_tools": [
                      {
                        "name": "name",
                        "description": "description",
                        "id": "id",
                        "version_id": "version_id"
                      }
                    ],
                    "attributes": {
                      "key": "value"
                    },
                    "commit_message": "commit_message",
                    "name": "name",
                    "version_id": "version_id",
                    "type": "prompt",
                    "environments": [
                      {
                        "id": "id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "name": "name",
                        "tag": "default"
                      }
                    ],
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z",
                    "created_by": {
                      "id": "id",
                      "email_address": "email_address"
                    },
                    "status": "uncommitted",
                    "last_used_at": "2024-01-15T09:30:00Z",
                    "version_logs_count": 1,
                    "total_logs_count": 1,
                    "inputs": [
                      {
                        "name": "name"
                      }
                    ],
                    "evaluator_aggregates": [
                      {
                        "value": 1.1,
                        "evaluator_id": "evaluator_id",
                        "evaluator_version_id": "evaluator_version_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      }
                    ]
                  }
                }
              ],
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "id": "id",
                    "created_at": "2024-01-15T09:30:00Z",
                    "name": "name",
                    "tag": "default",
                    "file": {
                      "path": "path",
                      "id": "id",
                      "directory_id": "directory_id",
                      "model": "model",
                      "endpoint": "complete",
                      "template": "template",
                      "provider": "openai",
                      "max_tokens": 1,
                      "temperature": 1.1,
                      "top_p": 1.1,
                      "stop": "stop",
                      "presence_penalty": 1.1,
                      "frequency_penalty": 1.1,
                      "other": {
                        "key": "value"
                      },
                      "seed": 1,
                      "response_format": {
                        "type": "json_object"
                      },
                      "tools": [
                        {
                          "name": "name",
                          "description": "description"
                        }
                      ],
                      "linked_tools": [
                        {
                          "name": "name",
                          "description": "description",
                          "id": "id",
                          "version_id": "version_id"
                        }
                      ],
                      "attributes": {
                        "key": "value"
                      },
                      "commit_message": "commit_message",
                      "name": "name",
                      "version_id": "version_id",
                      "type": "prompt",
                      "environments": [
                        {
                          "id": "id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "name": "name",
                          "tag": "default"
                        }
                      ],
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "created_by": {
                        "id": "id",
                        "email_address": "email_address"
                      },
                      "status": "uncommitted",
                      "last_used_at": "2024-01-15T09:30:00Z",
                      "version_logs_count": 1,
                      "total_logs_count": 1,
                      "inputs": [
                        {
                          "name": "name"
                        }
                      ],
                      "evaluator_aggregates": [
                        {
                          "value": 1.1,
                          "evaluator_id": "evaluator_id",
                          "evaluator_version_id": "evaluator_version_id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z"
                        }
                      ]
                    }
                  }
                ]
              },
              "codeSamples": []
            },
            {
              "path": "/flows/:id/environments",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "List all Environments and their deployed versions for the Flow.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.flows.list_environments(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.flows.listEnvironments(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "update-monitoring",
          "method": "POST",
          "id": "updateMonitoring",
          "originalEndpointId": "endpoint_flows.updateMonitoring",
          "name": "Update Monitoring",
          "path": {
            "pathParameters": [
              {
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/flows/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/evaluators"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:EvaluatorActivationDeactivationRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:FlowResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/flows/id/evaluators",
              "pathParameters": {
                "id": "id"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "path": "path",
                "id": "id",
                "directory_id": "directory_id",
                "attributes": {
                  "key": "value"
                },
                "commit_message": "commit_message",
                "name": "name",
                "version_id": "version_id",
                "type": "flow",
                "environments": [
                  {
                    "id": "id",
                    "created_at": "2024-01-15T09:30:00Z",
                    "name": "name",
                    "tag": "default"
                  }
                ],
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z",
                "created_by": {
                  "id": "id",
                  "email_address": "email_address",
                  "full_name": "full_name"
                },
                "status": "uncommitted",
                "last_used_at": "2024-01-15T09:30:00Z",
                "version_logs_count": 1,
                "evaluator_aggregates": [
                  {
                    "value": 1.1,
                    "evaluator_id": "evaluator_id",
                    "evaluator_version_id": "evaluator_version_id",
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z"
                  }
                ],
                "evaluators": [
                  {
                    "version_reference": {
                      "file": {
                        "path": "path",
                        "id": "id",
                        "model": "model",
                        "name": "name",
                        "version_id": "version_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "status": "uncommitted",
                        "last_used_at": "2024-01-15T09:30:00Z",
                        "version_logs_count": 1,
                        "total_logs_count": 1,
                        "inputs": [
                          {
                            "name": "name"
                          }
                        ]
                      },
                      "environment": {
                        "id": "id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "name": "name",
                        "tag": "default"
                      },
                      "type": "environment"
                    },
                    "version": {
                      "path": "path",
                      "id": "id",
                      "spec": {
                        "arguments_type": "target_free",
                        "return_type": "boolean",
                        "evaluator_type": "llm"
                      },
                      "name": "name",
                      "version_id": "version_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "status": "uncommitted",
                      "last_used_at": "2024-01-15T09:30:00Z",
                      "version_logs_count": 1,
                      "total_logs_count": 1,
                      "inputs": [
                        {
                          "name": "name"
                        }
                      ]
                    },
                    "state": "active",
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "path": "path",
                  "id": "id",
                  "directory_id": "directory_id",
                  "attributes": {
                    "key": "value"
                  },
                  "commit_message": "commit_message",
                  "name": "name",
                  "version_id": "version_id",
                  "type": "flow",
                  "environments": [
                    {
                      "id": "id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "name": "name",
                      "tag": "default"
                    }
                  ],
                  "created_at": "2024-01-15T09:30:00Z",
                  "updated_at": "2024-01-15T09:30:00Z",
                  "created_by": {
                    "id": "id",
                    "email_address": "email_address",
                    "full_name": "full_name"
                  },
                  "status": "uncommitted",
                  "last_used_at": "2024-01-15T09:30:00Z",
                  "version_logs_count": 1,
                  "evaluator_aggregates": [
                    {
                      "value": 1.1,
                      "evaluator_id": "evaluator_id",
                      "evaluator_version_id": "evaluator_version_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z"
                    }
                  ],
                  "evaluators": [
                    {
                      "version_reference": {
                        "file": {
                          "path": "path",
                          "id": "id",
                          "model": "model",
                          "name": "name",
                          "version_id": "version_id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "status": "uncommitted",
                          "last_used_at": "2024-01-15T09:30:00Z",
                          "version_logs_count": 1,
                          "total_logs_count": 1,
                          "inputs": [
                            {
                              "name": "name"
                            }
                          ]
                        },
                        "environment": {
                          "id": "id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "name": "name",
                          "tag": "default"
                        },
                        "type": "environment"
                      },
                      "version": {
                        "path": "path",
                        "id": "id",
                        "spec": {
                          "arguments_type": "target_free",
                          "return_type": "boolean",
                          "evaluator_type": "llm"
                        },
                        "name": "name",
                        "version_id": "version_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "status": "uncommitted",
                        "last_used_at": "2024-01-15T09:30:00Z",
                        "version_logs_count": 1,
                        "total_logs_count": 1,
                        "inputs": [
                          {
                            "name": "name"
                          }
                        ]
                      },
                      "state": "active",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z"
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/flows/:id/evaluators",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Activate and deactivate Evaluators for monitoring the Flow.\n\nAn activated Evaluator will automatically be run on all new \"completed\" Logs\nwithin the Flow for monitoring purposes.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.flows.update_monitoring(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "activate=[\n\t\t$FERN_INPUT\n\t]",
                      "delimiter": ",\n\t\t",
                      "innerTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "members": [
                          {
                            "type": {
                              "value": "type_:MonitoringEvaluatorVersionRequest",
                              "type": "id"
                            },
                            "template": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "{\n\t\t\t$FERN_INPUT\n\t\t}",
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"evaluator_version_id\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "evaluator_version_id",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                }
                              ],
                              "inputDelimiter": ",\n\t\t\t",
                              "type": "generic"
                            }
                          },
                          {
                            "type": {
                              "value": "type_:MonitoringEvaluatorEnvironmentRequest",
                              "type": "id"
                            },
                            "template": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "{\n\t\t\t$FERN_INPUT\n\t\t}",
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"evaluator_id\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "evaluator_id",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"environment_id\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "environment_id",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                }
                              ],
                              "inputDelimiter": ",\n\t\t\t",
                              "type": "generic"
                            }
                          }
                        ],
                        "templateInput": {
                          "location": "RELATIVE",
                          "path": null
                        },
                        "type": "union_v2"
                      },
                      "templateInput": {
                        "location": "BODY",
                        "path": "activate"
                      },
                      "type": "iterable"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "deactivate=[\n\t\t$FERN_INPUT\n\t]",
                      "delimiter": ",\n\t\t",
                      "innerTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "members": [
                          {
                            "type": {
                              "value": "type_:MonitoringEvaluatorVersionRequest",
                              "type": "id"
                            },
                            "template": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "{\n\t\t\t$FERN_INPUT\n\t\t}",
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"evaluator_version_id\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "evaluator_version_id",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                }
                              ],
                              "inputDelimiter": ",\n\t\t\t",
                              "type": "generic"
                            }
                          },
                          {
                            "type": {
                              "value": "type_:MonitoringEvaluatorEnvironmentRequest",
                              "type": "id"
                            },
                            "template": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "{\n\t\t\t$FERN_INPUT\n\t\t}",
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"evaluator_id\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "evaluator_id",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "\"environment_id\": $FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "RELATIVE",
                                        "path": "environment_id",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                }
                              ],
                              "inputDelimiter": ",\n\t\t\t",
                              "type": "generic"
                            }
                          }
                        ],
                        "templateInput": {
                          "location": "RELATIVE",
                          "path": null
                        },
                        "type": "union_v2"
                      },
                      "templateInput": {
                        "location": "BODY",
                        "path": "deactivate"
                      },
                      "type": "iterable"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.flows.updateMonitoring(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "iterable",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "activate: [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                  "delimiter": ",\n\t\t\t\t",
                                  "innerTemplate": {
                                    "type": "union_v2",
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "members": [
                                      {
                                        "template": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "inputDelimiter": ",\n\t\t\t\t\t",
                                          "templateInputs": [
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "evaluatorVersionId: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "evaluator_version_id"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "type": {
                                          "type": "id",
                                          "value": "type_:MonitoringEvaluatorVersionRequest"
                                        }
                                      },
                                      {
                                        "template": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "inputDelimiter": ",\n\t\t\t\t\t",
                                          "templateInputs": [
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "evaluatorId: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "evaluator_id"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "environmentId: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "environment_id"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "type": {
                                          "type": "id",
                                          "value": "type_:MonitoringEvaluatorEnvironmentRequest"
                                        }
                                      }
                                    ],
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  },
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "activate"
                                  }
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "iterable",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "deactivate: [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                  "delimiter": ",\n\t\t\t\t",
                                  "innerTemplate": {
                                    "type": "union_v2",
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "$FERN_INPUT",
                                    "members": [
                                      {
                                        "template": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "inputDelimiter": ",\n\t\t\t\t\t",
                                          "templateInputs": [
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "evaluatorVersionId: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "evaluator_version_id"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "type": {
                                          "type": "id",
                                          "value": "type_:MonitoringEvaluatorVersionRequest"
                                        }
                                      },
                                      {
                                        "template": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "inputDelimiter": ",\n\t\t\t\t\t",
                                          "templateInputs": [
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "evaluatorId: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "evaluator_id"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "environmentId: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "environment_id"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "type": {
                                          "type": "id",
                                          "value": "type_:MonitoringEvaluatorEnvironmentRequest"
                                        }
                                      }
                                    ],
                                    "templateInput": {
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  },
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "deactivate"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        }
      ],
      "types": [],
      "subpackages": [],
      "urlSlug": "flows",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_files": {
      "subpackageId": "subpackage_files",
      "name": "files",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "list",
          "migratedFromUrlSlugs": ["list-files"],
          "method": "GET",
          "id": "list",
          "originalEndpointId": "endpoint_files.list",
          "name": "List Files",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/files"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Page offset for pagination.",
              "key": "page",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "Page size for pagination. Number of files to fetch.",
              "key": "size",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "Case-insensitive filter for file name.",
              "key": "name",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "List of file types to filter for.",
              "key": "type",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_:FileType"
                }
              }
            },
            {
              "description": "Case-sensitive filter for files with a deployment in the specified environment. Requires the environment name.",
              "key": "environment",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Field to sort files by",
              "key": "sort_by",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_:ProjectSortBy"
                }
              }
            },
            {
              "description": "Direction to sort by.",
              "key": "order",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_:SortOrder"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:PaginatedDataUnionPromptResponseToolResponseDatasetResponseEvaluatorResponseFlowResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/files",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "records": [
                  {
                    "path": "path",
                    "id": "id",
                    "directory_id": "directory_id",
                    "model": "model",
                    "endpoint": "complete",
                    "template": "template",
                    "provider": "openai",
                    "max_tokens": 1,
                    "temperature": 1.1,
                    "top_p": 1.1,
                    "stop": "stop",
                    "presence_penalty": 1.1,
                    "frequency_penalty": 1.1,
                    "other": {
                      "key": "value"
                    },
                    "seed": 1,
                    "response_format": {
                      "type": "json_object"
                    },
                    "tools": [
                      {
                        "name": "name",
                        "description": "description"
                      }
                    ],
                    "linked_tools": [
                      {
                        "name": "name",
                        "description": "description",
                        "id": "id",
                        "version_id": "version_id"
                      }
                    ],
                    "attributes": {
                      "key": "value"
                    },
                    "commit_message": "commit_message",
                    "name": "name",
                    "version_id": "version_id",
                    "type": "prompt",
                    "environments": [
                      {
                        "id": "id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "name": "name",
                        "tag": "default"
                      }
                    ],
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z",
                    "created_by": {
                      "id": "id",
                      "email_address": "email_address"
                    },
                    "status": "uncommitted",
                    "last_used_at": "2024-01-15T09:30:00Z",
                    "version_logs_count": 1,
                    "total_logs_count": 1,
                    "inputs": [
                      {
                        "name": "name"
                      }
                    ],
                    "evaluator_aggregates": [
                      {
                        "value": 1.1,
                        "evaluator_id": "evaluator_id",
                        "evaluator_version_id": "evaluator_version_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      }
                    ]
                  }
                ],
                "page": 1,
                "size": 1,
                "total": 1
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "records": [
                    {
                      "path": "path",
                      "id": "id",
                      "directory_id": "directory_id",
                      "model": "model",
                      "endpoint": "complete",
                      "template": "template",
                      "provider": "openai",
                      "max_tokens": 1,
                      "temperature": 1.1,
                      "top_p": 1.1,
                      "stop": "stop",
                      "presence_penalty": 1.1,
                      "frequency_penalty": 1.1,
                      "other": {
                        "key": "value"
                      },
                      "seed": 1,
                      "response_format": {
                        "type": "json_object"
                      },
                      "tools": [
                        {
                          "name": "name",
                          "description": "description"
                        }
                      ],
                      "linked_tools": [
                        {
                          "name": "name",
                          "description": "description",
                          "id": "id",
                          "version_id": "version_id"
                        }
                      ],
                      "attributes": {
                        "key": "value"
                      },
                      "commit_message": "commit_message",
                      "name": "name",
                      "version_id": "version_id",
                      "type": "prompt",
                      "environments": [
                        {
                          "id": "id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "name": "name",
                          "tag": "default"
                        }
                      ],
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "created_by": {
                        "id": "id",
                        "email_address": "email_address"
                      },
                      "status": "uncommitted",
                      "last_used_at": "2024-01-15T09:30:00Z",
                      "version_logs_count": 1,
                      "total_logs_count": 1,
                      "inputs": [
                        {
                          "name": "name"
                        }
                      ],
                      "evaluator_aggregates": [
                        {
                          "value": 1.1,
                          "evaluator_id": "evaluator_id",
                          "evaluator_version_id": "evaluator_version_id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z"
                        }
                      ]
                    }
                  ],
                  "page": 1,
                  "size": 1,
                  "total": 1
                }
              },
              "codeSamples": []
            },
            {
              "path": "/files",
              "pathParameters": {},
              "queryParameters": {
                "page": 0,
                "size": 0
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Get a paginated list of files.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.files.list(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "page=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "page",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "size=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "size",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "name=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "name",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "type=$FERN_INPUT",
                      "values": {
                        "prompt": "\"prompt\"",
                        "tool": "\"tool\"",
                        "dataset": "\"dataset\"",
                        "evaluator": "\"evaluator\"",
                        "flow": "\"flow\""
                      },
                      "templateInput": {
                        "location": "QUERY",
                        "path": "type"
                      },
                      "type": "enum"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "environment=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "environment",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "sort_by=$FERN_INPUT",
                      "values": {
                        "created_at": "\"created_at\"",
                        "updated_at": "\"updated_at\"",
                        "name": "\"name\""
                      },
                      "templateInput": {
                        "location": "QUERY",
                        "path": "sort_by"
                      },
                      "type": "enum"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "order=$FERN_INPUT",
                      "values": {
                        "asc": "\"asc\"",
                        "desc": "\"desc\""
                      },
                      "templateInput": {
                        "location": "QUERY",
                        "path": "order"
                      },
                      "type": "enum"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.files.list(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "page: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "page"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "size: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "size"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "name: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "name"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "enum",
                            "imports": [],
                            "isOptional": true,
                            "values": {
                              "prompt": "\"prompt\"",
                              "tool": "\"tool\"",
                              "dataset": "\"dataset\"",
                              "evaluator": "\"evaluator\"",
                              "flow": "\"flow\""
                            },
                            "templateString": "type: $FERN_INPUT",
                            "templateInput": {
                              "location": "QUERY",
                              "path": "type"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "environment: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "environment"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "enum",
                            "imports": [],
                            "isOptional": true,
                            "values": {
                              "created_at": "\"created_at\"",
                              "updated_at": "\"updated_at\"",
                              "name": "\"name\""
                            },
                            "templateString": "sortBy: $FERN_INPUT",
                            "templateInput": {
                              "location": "QUERY",
                              "path": "sort_by"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "enum",
                            "imports": [],
                            "isOptional": true,
                            "values": {
                              "asc": "\"asc\"",
                              "desc": "\"desc\""
                            },
                            "templateString": "order: $FERN_INPUT",
                            "templateInput": {
                              "location": "QUERY",
                              "path": "order"
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        }
      ],
      "types": [],
      "subpackages": [],
      "urlSlug": "files",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_evaluations": {
      "subpackageId": "subpackage_evaluations",
      "name": "evaluations",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "list",
          "migratedFromUrlSlugs": ["list-evaluations-for-a-file"],
          "method": "GET",
          "id": "list",
          "originalEndpointId": "endpoint_evaluations.list",
          "name": "List Evaluations for a File",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/evaluations"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Filter by File ID. Only Evaluations for the specified File will be returned.",
              "key": "file_id",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            {
              "description": "Page number for pagination.",
              "key": "page",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "Page size for pagination. Number of Evaluations to fetch.",
              "key": "size",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:PaginatedEvaluationResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "List evaluations for file",
              "path": "/evaluations",
              "pathParameters": {},
              "queryParameters": {
                "file_id": "pr_30gco7dx6JDq4200GVOHa",
                "size": 1
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "page": 1,
                "size": 10,
                "total": 1,
                "records": [
                  {
                    "id": "ev_567yza",
                    "created_at": "2024-05-01T12:00:00Z",
                    "updated_at": "2024-05-01T12:00:00Z",
                    "status": "completed",
                    "dataset": {
                      "id": "ds_345mno",
                      "path": "test-questions",
                      "name": "test-questions",
                      "version_id": "dsv_678pqr",
                      "type": "dataset",
                      "created_at": "2024-05-01T12:00:00Z",
                      "updated_at": "2024-05-01T12:00:00Z",
                      "created_by": {
                        "id": "usr_v23rSVAgas2a",
                        "full_name": "Jordan Burges",
                        "email_address": "jordan@humanloop.com"
                      },
                      "status": "committed",
                      "commit_message": "initial commit",
                      "last_used_at": "2024-05-01T12:00:00Z",
                      "datapoints_count": 2
                    },
                    "evaluatees": [
                      {
                        "version": {
                          "path": "Personal Projects/Coding Assistant",
                          "id": "pr_30gco7dx6JDq4200GVOHa",
                          "name": "Coding Assistant",
                          "version_id": "prv_7ZlQREDScH0xkhUwtXruN",
                          "type": "prompt",
                          "environments": [
                            {
                              "id": "env_ffSVxEBzJcBZ1H5jcNMVj",
                              "created_at": "2023-06-27T23:16:07.992339",
                              "name": "development",
                              "tag": "default"
                            }
                          ],
                          "created_at": "2024-07-08T22:40:35.656915",
                          "updated_at": "2024-07-08T22:40:35.656915",
                          "created_by": {
                            "id": "usr_01RJO1k2spBVqNUt1ASef",
                            "email_address": "raza@humanloop.com",
                            "full_name": "Raza Habib"
                          },
                          "status": "committed",
                          "last_used_at": "2024-07-08T22:40:35.656915",
                          "model": "gpt-4o",
                          "endpoint": "chat",
                          "template": [
                            {
                              "content": "You are a helpful coding assistant specialising in {{language}}",
                              "role": "system"
                            }
                          ],
                          "provider": "openai",
                          "max_tokens": -1,
                          "temperature": 0.7,
                          "top_p": 1,
                          "presence_penalty": 0,
                          "frequency_penalty": 0,
                          "other": {},
                          "tools": [],
                          "linked_tools": [],
                          "commit_message": "Initial commit",
                          "version_logs_count": 0,
                          "total_logs_count": 0,
                          "inputs": [
                            {
                              "name": "messages"
                            }
                          ]
                        },
                        "orchestrated": false,
                        "pinned": true,
                        "added_at": "2024-10-12T12:00:00Z"
                      }
                    ],
                    "evaluators": [
                      {
                        "version": {
                          "id": "ev_890bcd",
                          "name": "Accuracy Evaluator",
                          "path": "Shared Evaluators/Accuracy Evaluator",
                          "version_id": "evv_012def",
                          "type": "evaluator",
                          "created_at": "2024-05-01T12:00:00Z",
                          "updated_at": "2024-05-01T12:00:00Z",
                          "status": "committed",
                          "last_used_at": "2024-05-01T12:00:00Z",
                          "spec": {
                            "arguments_type": "target_required",
                            "return_type": "number",
                            "evaluator_type": "python",
                            "code": "def evaluate(answer, target):\n    return 0.5"
                          },
                          "version_logs_count": 1,
                          "total_logs_count": 1,
                          "inputs": [
                            {
                              "name": "answer"
                            }
                          ]
                        },
                        "orchestrated": false,
                        "added_at": "2024-10-12T12:00:00Z"
                      }
                    ]
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "page": 1,
                  "size": 10,
                  "total": 1,
                  "records": [
                    {
                      "id": "ev_567yza",
                      "created_at": "2024-05-01T12:00:00Z",
                      "updated_at": "2024-05-01T12:00:00Z",
                      "status": "completed",
                      "dataset": {
                        "id": "ds_345mno",
                        "path": "test-questions",
                        "name": "test-questions",
                        "version_id": "dsv_678pqr",
                        "type": "dataset",
                        "created_at": "2024-05-01T12:00:00Z",
                        "updated_at": "2024-05-01T12:00:00Z",
                        "created_by": {
                          "id": "usr_v23rSVAgas2a",
                          "full_name": "Jordan Burges",
                          "email_address": "jordan@humanloop.com"
                        },
                        "status": "committed",
                        "commit_message": "initial commit",
                        "last_used_at": "2024-05-01T12:00:00Z",
                        "datapoints_count": 2
                      },
                      "evaluatees": [
                        {
                          "version": {
                            "path": "Personal Projects/Coding Assistant",
                            "id": "pr_30gco7dx6JDq4200GVOHa",
                            "name": "Coding Assistant",
                            "version_id": "prv_7ZlQREDScH0xkhUwtXruN",
                            "type": "prompt",
                            "environments": [
                              {
                                "id": "env_ffSVxEBzJcBZ1H5jcNMVj",
                                "created_at": "2023-06-27T23:16:07.992339",
                                "name": "development",
                                "tag": "default"
                              }
                            ],
                            "created_at": "2024-07-08T22:40:35.656915",
                            "updated_at": "2024-07-08T22:40:35.656915",
                            "created_by": {
                              "id": "usr_01RJO1k2spBVqNUt1ASef",
                              "email_address": "raza@humanloop.com",
                              "full_name": "Raza Habib"
                            },
                            "status": "committed",
                            "last_used_at": "2024-07-08T22:40:35.656915",
                            "model": "gpt-4o",
                            "endpoint": "chat",
                            "template": [
                              {
                                "content": "You are a helpful coding assistant specialising in {{language}}",
                                "role": "system"
                              }
                            ],
                            "provider": "openai",
                            "max_tokens": -1,
                            "temperature": 0.7,
                            "top_p": 1,
                            "presence_penalty": 0,
                            "frequency_penalty": 0,
                            "other": {},
                            "tools": [],
                            "linked_tools": [],
                            "commit_message": "Initial commit",
                            "version_logs_count": 0,
                            "total_logs_count": 0,
                            "inputs": [
                              {
                                "name": "messages"
                              }
                            ]
                          },
                          "orchestrated": false,
                          "pinned": true,
                          "added_at": "2024-10-12T12:00:00Z"
                        }
                      ],
                      "evaluators": [
                        {
                          "version": {
                            "id": "ev_890bcd",
                            "name": "Accuracy Evaluator",
                            "path": "Shared Evaluators/Accuracy Evaluator",
                            "version_id": "evv_012def",
                            "type": "evaluator",
                            "created_at": "2024-05-01T12:00:00Z",
                            "updated_at": "2024-05-01T12:00:00Z",
                            "status": "committed",
                            "last_used_at": "2024-05-01T12:00:00Z",
                            "spec": {
                              "arguments_type": "target_required",
                              "return_type": "number",
                              "evaluator_type": "python",
                              "code": "def evaluate(answer, target):\n    return 0.5"
                            },
                            "version_logs_count": 1,
                            "total_logs_count": 1,
                            "inputs": [
                              {
                                "name": "answer"
                              }
                            ]
                          },
                          "orchestrated": false,
                          "added_at": "2024-10-12T12:00:00Z"
                        }
                      ]
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/evaluations",
              "pathParameters": {},
              "queryParameters": {
                "file_id": "string",
                "page": 0,
                "size": 0
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "List all Evaluations for the specified `file_id`.\n\nRetrieve a list of Evaluations that evaluate versions of the specified File.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.evaluations.list(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "file_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "file_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "page=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "page",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "size=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "size",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.evaluations.list(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "fileId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "file_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "page: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "page"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "size: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "size"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "create",
          "migratedFromUrlSlugs": ["create-evaluation"],
          "method": "POST",
          "id": "create",
          "originalEndpointId": "endpoint_evaluations.create",
          "name": "Create Evaluation",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/evaluations"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Dataset to use in this Evaluation.",
                  "key": "dataset",
                  "valueType": {
                    "type": "id",
                    "value": "type_:EvaluationsDatasetRequest"
                  }
                },
                {
                  "description": "Unique identifiers for the Prompt/Tool Versions to include in the Evaluation. Can be left unpopulated if you wish to add Evaluatees to this Evaluation by specifying `evaluation_id` in Log calls.",
                  "key": "evaluatees",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:EvaluateeRequest"
                      }
                    }
                  }
                },
                {
                  "description": "The Evaluators used to evaluate.",
                  "key": "evaluators",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_:EvaluationsRequest"
                    }
                  }
                },
                {
                  "description": "Name of the Evaluation to help identify it. Must be unique within the associated File.",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The File to associate with the Evaluation.",
                  "key": "file",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:FileRequest"
                    }
                  }
                }
              ]
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:EvaluationResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "Create evaluation",
              "path": "/evaluations",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "dataset": {
                  "version_id": "dsv_6L78pqrdFi2xa"
                },
                "evaluatees": [
                  {
                    "version_id": "prv_7ZlQREDScH0xkhUwtXruN",
                    "orchestrated": false
                  }
                ],
                "evaluators": [
                  {
                    "version_id": "evv_012def",
                    "orchestrated": false
                  }
                ]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "ev_567yza",
                "created_at": "2024-05-01T12:00:00Z",
                "updated_at": "2024-05-01T12:00:00Z",
                "status": "completed",
                "dataset": {
                  "id": "ds_345mno",
                  "path": "test-questions",
                  "name": "test-questions",
                  "version_id": "dsv_678pqr",
                  "type": "dataset",
                  "created_at": "2024-05-01T12:00:00Z",
                  "updated_at": "2024-05-01T12:00:00Z",
                  "created_by": {
                    "id": "usr_v23rSVAgas2a",
                    "full_name": "Jordan Burges",
                    "email_address": "jordan@humanloop.com"
                  },
                  "status": "committed",
                  "commit_message": "initial commit",
                  "last_used_at": "2024-05-01T12:00:00Z",
                  "datapoints_count": 2
                },
                "evaluatees": [
                  {
                    "version": {
                      "path": "Personal Projects/Coding Assistant",
                      "id": "pr_30gco7dx6JDq4200GVOHa",
                      "name": "Coding Assistant",
                      "version_id": "prv_7ZlQREDScH0xkhUwtXruN",
                      "type": "prompt",
                      "environments": [
                        {
                          "id": "env_ffSVxEBzJcBZ1H5jcNMVj",
                          "created_at": "2023-06-27T23:16:07.992339",
                          "name": "development",
                          "tag": "default"
                        }
                      ],
                      "created_at": "2024-07-08T22:40:35.656915",
                      "updated_at": "2024-07-08T22:40:35.656915",
                      "created_by": {
                        "id": "usr_01RJO1k2spBVqNUt1ASef",
                        "email_address": "raza@humanloop.com",
                        "full_name": "Raza Habib"
                      },
                      "status": "committed",
                      "last_used_at": "2024-07-08T22:40:35.656915",
                      "model": "gpt-4o",
                      "endpoint": "chat",
                      "template": [
                        {
                          "content": "You are a helpful coding assistant specialising in {{language}}",
                          "role": "system"
                        }
                      ],
                      "provider": "openai",
                      "max_tokens": -1,
                      "temperature": 0.7,
                      "top_p": 1,
                      "presence_penalty": 0,
                      "frequency_penalty": 0,
                      "other": {},
                      "tools": [],
                      "linked_tools": [],
                      "commit_message": "Initial commit",
                      "version_logs_count": 0,
                      "total_logs_count": 0,
                      "inputs": [
                        {
                          "name": "messages"
                        }
                      ]
                    },
                    "orchestrated": false,
                    "pinned": true,
                    "added_at": "2024-10-12T12:00:00Z"
                  }
                ],
                "evaluators": [
                  {
                    "version": {
                      "id": "ev_890bcd",
                      "name": "Accuracy Evaluator",
                      "path": "Shared Evaluators/Accuracy Evaluator",
                      "version_id": "evv_012def",
                      "type": "evaluator",
                      "created_at": "2024-05-01T12:00:00Z",
                      "updated_at": "2024-05-01T12:00:00Z",
                      "status": "committed",
                      "last_used_at": "2024-05-01T12:00:00Z",
                      "spec": {
                        "arguments_type": "target_required",
                        "return_type": "number",
                        "evaluator_type": "python",
                        "code": "def evaluate(answer, target):\n    return 0.5"
                      },
                      "version_logs_count": 1,
                      "total_logs_count": 1,
                      "inputs": [
                        {
                          "name": "answer"
                        }
                      ]
                    },
                    "orchestrated": false,
                    "added_at": "2024-10-12T12:00:00Z"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "dataset": {
                    "version_id": "dsv_6L78pqrdFi2xa"
                  },
                  "evaluatees": [
                    {
                      "version_id": "prv_7ZlQREDScH0xkhUwtXruN",
                      "orchestrated": false
                    }
                  ],
                  "evaluators": [
                    {
                      "version_id": "evv_012def",
                      "orchestrated": false
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "ev_567yza",
                  "created_at": "2024-05-01T12:00:00Z",
                  "updated_at": "2024-05-01T12:00:00Z",
                  "status": "completed",
                  "dataset": {
                    "id": "ds_345mno",
                    "path": "test-questions",
                    "name": "test-questions",
                    "version_id": "dsv_678pqr",
                    "type": "dataset",
                    "created_at": "2024-05-01T12:00:00Z",
                    "updated_at": "2024-05-01T12:00:00Z",
                    "created_by": {
                      "id": "usr_v23rSVAgas2a",
                      "full_name": "Jordan Burges",
                      "email_address": "jordan@humanloop.com"
                    },
                    "status": "committed",
                    "commit_message": "initial commit",
                    "last_used_at": "2024-05-01T12:00:00Z",
                    "datapoints_count": 2
                  },
                  "evaluatees": [
                    {
                      "version": {
                        "path": "Personal Projects/Coding Assistant",
                        "id": "pr_30gco7dx6JDq4200GVOHa",
                        "name": "Coding Assistant",
                        "version_id": "prv_7ZlQREDScH0xkhUwtXruN",
                        "type": "prompt",
                        "environments": [
                          {
                            "id": "env_ffSVxEBzJcBZ1H5jcNMVj",
                            "created_at": "2023-06-27T23:16:07.992339",
                            "name": "development",
                            "tag": "default"
                          }
                        ],
                        "created_at": "2024-07-08T22:40:35.656915",
                        "updated_at": "2024-07-08T22:40:35.656915",
                        "created_by": {
                          "id": "usr_01RJO1k2spBVqNUt1ASef",
                          "email_address": "raza@humanloop.com",
                          "full_name": "Raza Habib"
                        },
                        "status": "committed",
                        "last_used_at": "2024-07-08T22:40:35.656915",
                        "model": "gpt-4o",
                        "endpoint": "chat",
                        "template": [
                          {
                            "content": "You are a helpful coding assistant specialising in {{language}}",
                            "role": "system"
                          }
                        ],
                        "provider": "openai",
                        "max_tokens": -1,
                        "temperature": 0.7,
                        "top_p": 1,
                        "presence_penalty": 0,
                        "frequency_penalty": 0,
                        "other": {},
                        "tools": [],
                        "linked_tools": [],
                        "commit_message": "Initial commit",
                        "version_logs_count": 0,
                        "total_logs_count": 0,
                        "inputs": [
                          {
                            "name": "messages"
                          }
                        ]
                      },
                      "orchestrated": false,
                      "pinned": true,
                      "added_at": "2024-10-12T12:00:00Z"
                    }
                  ],
                  "evaluators": [
                    {
                      "version": {
                        "id": "ev_890bcd",
                        "name": "Accuracy Evaluator",
                        "path": "Shared Evaluators/Accuracy Evaluator",
                        "version_id": "evv_012def",
                        "type": "evaluator",
                        "created_at": "2024-05-01T12:00:00Z",
                        "updated_at": "2024-05-01T12:00:00Z",
                        "status": "committed",
                        "last_used_at": "2024-05-01T12:00:00Z",
                        "spec": {
                          "arguments_type": "target_required",
                          "return_type": "number",
                          "evaluator_type": "python",
                          "code": "def evaluate(answer, target):\n    return 0.5"
                        },
                        "version_logs_count": 1,
                        "total_logs_count": 1,
                        "inputs": [
                          {
                            "name": "answer"
                          }
                        ]
                      },
                      "orchestrated": false,
                      "added_at": "2024-10-12T12:00:00Z"
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/evaluations",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "dataset": {},
                  "evaluators": [{}]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Create an Evaluation.\n\nCreate a new Evaluation by specifying the Dataset, versions to be\nevaluated (Evaluatees), and which Evaluators to provide judgments.\n\nHumanloop will automatically start generating Logs and running Evaluators where\n`orchestrated=true`. If you own the runtime for the Evaluatee or Evaluator, you\ncan set `orchestrated=false` and then generate and submit the required logs using\nyour runtime.\n\nTo keep updated on the progress of the Evaluation, you can poll the Evaluation using\nthe `GET /evaluations/:id` endpoint and check its status.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.evaluations.create(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "dataset={\n\t\t$FERN_INPUT\n\t}",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"version_id\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "dataset.version_id",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"path\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "dataset.path",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"file_id\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "dataset.file_id",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"environment\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "dataset.environment",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        }
                      ],
                      "inputDelimiter": ",\n\t\t",
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "evaluatees=[\n\t\t$FERN_INPUT\n\t]",
                      "delimiter": ",\n\t\t",
                      "innerTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "{\n\t\t\t$FERN_INPUT\n\t\t}",
                        "templateInputs": [
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"version_id\": $FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": "version_id",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"path\": $FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": "path",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"file_id\": $FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": "file_id",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"environment\": $FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": "environment",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"batch_id\": $FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": "batch_id",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"orchestrated\": $FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": "orchestrated",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          }
                        ],
                        "inputDelimiter": ",\n\t\t\t",
                        "type": "generic"
                      },
                      "templateInput": {
                        "location": "BODY",
                        "path": "evaluatees"
                      },
                      "type": "iterable"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "evaluators=[\n\t\t$FERN_INPUT\n\t]",
                      "delimiter": ",\n\t\t",
                      "innerTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "{\n\t\t\t$FERN_INPUT\n\t\t}",
                        "templateInputs": [
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"version_id\": $FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": "version_id",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"path\": $FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": "path",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"file_id\": $FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": "file_id",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"environment\": $FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": "environment",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"orchestrated\": $FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": "orchestrated",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          }
                        ],
                        "inputDelimiter": ",\n\t\t\t",
                        "type": "generic"
                      },
                      "templateInput": {
                        "location": "BODY",
                        "path": "evaluators"
                      },
                      "type": "iterable"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "name=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "name",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "file={\n\t\t$FERN_INPUT\n\t}",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"id\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "file.id",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"path\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "file.path",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        }
                      ],
                      "inputDelimiter": ",\n\t\t",
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.evaluations.create(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "dataset: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "versionId: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "dataset.version_id"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "path: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "dataset.path"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "fileId: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "dataset.file_id"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "environment: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "dataset.environment"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "iterable",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "evaluatees: [\n\t\t\t$FERN_INPUT\n\t\t]",
                            "delimiter": ",\n\t\t\t",
                            "innerTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "{\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                              "isOptional": true,
                              "inputDelimiter": ",\n\t\t\t\t",
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "versionId: $FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": "version_id"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "path: $FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": "path"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "fileId: $FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": "file_id"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "environment: $FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": "environment"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "batchId: $FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": "batch_id"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "orchestrated: $FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": "orchestrated"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "evaluatees"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "iterable",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "evaluators: [\n\t\t\t$FERN_INPUT\n\t\t]",
                            "delimiter": ",\n\t\t\t",
                            "innerTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "{\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                              "isOptional": true,
                              "inputDelimiter": ",\n\t\t\t\t",
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "versionId: $FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": "version_id"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "path: $FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": "path"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "fileId: $FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": "file_id"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "environment: $FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": "environment"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "orchestrated: $FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": "orchestrated"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "evaluators"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "name: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "name"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "file: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "id: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "file.id"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "path: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "file.path"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "get",
          "migratedFromUrlSlugs": ["get-evaluation"],
          "method": "GET",
          "id": "get",
          "originalEndpointId": "endpoint_evaluations.get",
          "name": "Get Evaluation",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Evaluation.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/evaluations/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:EvaluationResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "Get evaluation",
              "path": "/evaluations/ev_567yza",
              "pathParameters": {
                "id": "ev_567yza"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "ev_567yza",
                "created_at": "2024-05-01T12:00:00Z",
                "updated_at": "2024-05-01T12:00:00Z",
                "status": "completed",
                "dataset": {
                  "id": "ds_345mno",
                  "path": "test-questions",
                  "name": "test-questions",
                  "version_id": "dsv_678pqr",
                  "type": "dataset",
                  "created_at": "2024-05-01T12:00:00Z",
                  "updated_at": "2024-05-01T12:00:00Z",
                  "created_by": {
                    "id": "usr_v23rSVAgas2a",
                    "full_name": "Jordan Burges",
                    "email_address": "jordan@humanloop.com"
                  },
                  "status": "committed",
                  "commit_message": "initial commit",
                  "last_used_at": "2024-05-01T12:00:00Z",
                  "datapoints_count": 2
                },
                "evaluatees": [
                  {
                    "version": {
                      "path": "Personal Projects/Coding Assistant",
                      "id": "pr_30gco7dx6JDq4200GVOHa",
                      "name": "Coding Assistant",
                      "version_id": "prv_7ZlQREDScH0xkhUwtXruN",
                      "type": "prompt",
                      "environments": [
                        {
                          "id": "env_ffSVxEBzJcBZ1H5jcNMVj",
                          "created_at": "2023-06-27T23:16:07.992339",
                          "name": "development",
                          "tag": "default"
                        }
                      ],
                      "created_at": "2024-07-08T22:40:35.656915",
                      "updated_at": "2024-07-08T22:40:35.656915",
                      "created_by": {
                        "id": "usr_01RJO1k2spBVqNUt1ASef",
                        "email_address": "raza@humanloop.com",
                        "full_name": "Raza Habib"
                      },
                      "status": "committed",
                      "last_used_at": "2024-07-08T22:40:35.656915",
                      "model": "gpt-4o",
                      "endpoint": "chat",
                      "template": [
                        {
                          "content": "You are a helpful coding assistant specialising in {{language}}",
                          "role": "system"
                        }
                      ],
                      "provider": "openai",
                      "max_tokens": -1,
                      "temperature": 0.7,
                      "top_p": 1,
                      "presence_penalty": 0,
                      "frequency_penalty": 0,
                      "other": {},
                      "tools": [],
                      "linked_tools": [],
                      "commit_message": "Initial commit",
                      "version_logs_count": 0,
                      "total_logs_count": 0,
                      "inputs": [
                        {
                          "name": "messages"
                        }
                      ]
                    },
                    "orchestrated": false,
                    "pinned": true,
                    "added_at": "2024-10-12T12:00:00Z"
                  }
                ],
                "evaluators": [
                  {
                    "version": {
                      "id": "ev_890bcd",
                      "name": "Accuracy Evaluator",
                      "path": "Shared Evaluators/Accuracy Evaluator",
                      "version_id": "evv_012def",
                      "type": "evaluator",
                      "created_at": "2024-05-01T12:00:00Z",
                      "updated_at": "2024-05-01T12:00:00Z",
                      "status": "committed",
                      "last_used_at": "2024-05-01T12:00:00Z",
                      "spec": {
                        "arguments_type": "target_required",
                        "return_type": "number",
                        "evaluator_type": "python",
                        "code": "def evaluate(answer, target):\n    return 0.5"
                      },
                      "version_logs_count": 1,
                      "total_logs_count": 1,
                      "inputs": [
                        {
                          "name": "answer"
                        }
                      ]
                    },
                    "orchestrated": false,
                    "added_at": "2024-10-12T12:00:00Z"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "ev_567yza",
                  "created_at": "2024-05-01T12:00:00Z",
                  "updated_at": "2024-05-01T12:00:00Z",
                  "status": "completed",
                  "dataset": {
                    "id": "ds_345mno",
                    "path": "test-questions",
                    "name": "test-questions",
                    "version_id": "dsv_678pqr",
                    "type": "dataset",
                    "created_at": "2024-05-01T12:00:00Z",
                    "updated_at": "2024-05-01T12:00:00Z",
                    "created_by": {
                      "id": "usr_v23rSVAgas2a",
                      "full_name": "Jordan Burges",
                      "email_address": "jordan@humanloop.com"
                    },
                    "status": "committed",
                    "commit_message": "initial commit",
                    "last_used_at": "2024-05-01T12:00:00Z",
                    "datapoints_count": 2
                  },
                  "evaluatees": [
                    {
                      "version": {
                        "path": "Personal Projects/Coding Assistant",
                        "id": "pr_30gco7dx6JDq4200GVOHa",
                        "name": "Coding Assistant",
                        "version_id": "prv_7ZlQREDScH0xkhUwtXruN",
                        "type": "prompt",
                        "environments": [
                          {
                            "id": "env_ffSVxEBzJcBZ1H5jcNMVj",
                            "created_at": "2023-06-27T23:16:07.992339",
                            "name": "development",
                            "tag": "default"
                          }
                        ],
                        "created_at": "2024-07-08T22:40:35.656915",
                        "updated_at": "2024-07-08T22:40:35.656915",
                        "created_by": {
                          "id": "usr_01RJO1k2spBVqNUt1ASef",
                          "email_address": "raza@humanloop.com",
                          "full_name": "Raza Habib"
                        },
                        "status": "committed",
                        "last_used_at": "2024-07-08T22:40:35.656915",
                        "model": "gpt-4o",
                        "endpoint": "chat",
                        "template": [
                          {
                            "content": "You are a helpful coding assistant specialising in {{language}}",
                            "role": "system"
                          }
                        ],
                        "provider": "openai",
                        "max_tokens": -1,
                        "temperature": 0.7,
                        "top_p": 1,
                        "presence_penalty": 0,
                        "frequency_penalty": 0,
                        "other": {},
                        "tools": [],
                        "linked_tools": [],
                        "commit_message": "Initial commit",
                        "version_logs_count": 0,
                        "total_logs_count": 0,
                        "inputs": [
                          {
                            "name": "messages"
                          }
                        ]
                      },
                      "orchestrated": false,
                      "pinned": true,
                      "added_at": "2024-10-12T12:00:00Z"
                    }
                  ],
                  "evaluators": [
                    {
                      "version": {
                        "id": "ev_890bcd",
                        "name": "Accuracy Evaluator",
                        "path": "Shared Evaluators/Accuracy Evaluator",
                        "version_id": "evv_012def",
                        "type": "evaluator",
                        "created_at": "2024-05-01T12:00:00Z",
                        "updated_at": "2024-05-01T12:00:00Z",
                        "status": "committed",
                        "last_used_at": "2024-05-01T12:00:00Z",
                        "spec": {
                          "arguments_type": "target_required",
                          "return_type": "number",
                          "evaluator_type": "python",
                          "code": "def evaluate(answer, target):\n    return 0.5"
                        },
                        "version_logs_count": 1,
                        "total_logs_count": 1,
                        "inputs": [
                          {
                            "name": "answer"
                          }
                        ]
                      },
                      "orchestrated": false,
                      "added_at": "2024-10-12T12:00:00Z"
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/evaluations/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Get an Evaluation.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.evaluations.get(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.evaluations.get(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "delete",
          "migratedFromUrlSlugs": ["delete-evaluation"],
          "method": "DELETE",
          "id": "delete",
          "originalEndpointId": "endpoint_evaluations.delete",
          "name": "Delete Evaluation",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Evaluation.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/evaluations/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "Delete evaluation",
              "path": "/evaluations/ev_567yza",
              "pathParameters": {
                "id": "ev_567yza"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            },
            {
              "path": "/evaluations/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Delete an Evaluation.\n\nRemove an Evaluation from Humanloop. The Logs and Versions used in the Evaluation\nwill not be deleted.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.evaluations.delete(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.evaluations.delete(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "update-setup",
          "migratedFromUrlSlugs": ["update-evaluation"],
          "method": "PATCH",
          "id": "updateSetup",
          "originalEndpointId": "endpoint_evaluations.updateSetup",
          "name": "Update Evaluation",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Evaluation.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/evaluations/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Dataset to use in this Evaluation.",
                  "key": "dataset",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:EvaluationsDatasetRequest"
                    }
                  }
                },
                {
                  "description": "Unique identifiers for the Prompt/Tool Versions to include in the Evaluation. Can be left unpopulated if you wish to add evaluatees to this Evaluation by specifying `evaluation_id` in Log calls.",
                  "key": "evaluatees",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:EvaluateeRequest"
                      }
                    }
                  }
                },
                {
                  "description": "The Evaluators used to evaluate.",
                  "key": "evaluators",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:EvaluationsRequest"
                      }
                    }
                  }
                },
                {
                  "description": "Name of the Evaluation to help identify it. Must be unique within the associated File.",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The File to associate with the Evaluation.",
                  "key": "file",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:FileRequest"
                    }
                  }
                }
              ]
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:EvaluationResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "Update evaluation",
              "path": "/evaluations/ev_567yza",
              "pathParameters": {
                "id": "ev_567yza"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "dataset": {
                  "version_id": "dsv_6L78pqrdFi2xa"
                },
                "evaluatees": [
                  {
                    "version_id": "prv_7ZlQREDScH0xkhUwtXruN",
                    "orchestrated": false
                  }
                ],
                "evaluators": [
                  {
                    "version_id": "evv_012def",
                    "orchestrated": false
                  }
                ]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "ev_567yza",
                "created_at": "2024-05-01T12:00:00Z",
                "updated_at": "2024-05-01T12:00:00Z",
                "status": "completed",
                "dataset": {
                  "id": "ds_345mno",
                  "path": "test-questions",
                  "name": "test-questions",
                  "version_id": "dsv_678pqr",
                  "type": "dataset",
                  "created_at": "2024-05-01T12:00:00Z",
                  "updated_at": "2024-05-01T12:00:00Z",
                  "created_by": {
                    "id": "usr_v23rSVAgas2a",
                    "full_name": "Jordan Burges",
                    "email_address": "jordan@humanloop.com"
                  },
                  "status": "committed",
                  "commit_message": "initial commit",
                  "last_used_at": "2024-05-01T12:00:00Z",
                  "datapoints_count": 2
                },
                "evaluatees": [
                  {
                    "version": {
                      "path": "Personal Projects/Coding Assistant",
                      "id": "pr_30gco7dx6JDq4200GVOHa",
                      "name": "Coding Assistant",
                      "version_id": "prv_7ZlQREDScH0xkhUwtXruN",
                      "type": "prompt",
                      "environments": [
                        {
                          "id": "env_ffSVxEBzJcBZ1H5jcNMVj",
                          "created_at": "2023-06-27T23:16:07.992339",
                          "name": "development",
                          "tag": "default"
                        }
                      ],
                      "created_at": "2024-07-08T22:40:35.656915",
                      "updated_at": "2024-07-08T22:40:35.656915",
                      "created_by": {
                        "id": "usr_01RJO1k2spBVqNUt1ASef",
                        "email_address": "raza@humanloop.com",
                        "full_name": "Raza Habib"
                      },
                      "status": "committed",
                      "last_used_at": "2024-07-08T22:40:35.656915",
                      "model": "gpt-4o",
                      "endpoint": "chat",
                      "template": [
                        {
                          "content": "You are a helpful coding assistant specialising in {{language}}",
                          "role": "system"
                        }
                      ],
                      "provider": "openai",
                      "max_tokens": -1,
                      "temperature": 0.7,
                      "top_p": 1,
                      "presence_penalty": 0,
                      "frequency_penalty": 0,
                      "other": {},
                      "tools": [],
                      "linked_tools": [],
                      "commit_message": "Initial commit",
                      "version_logs_count": 0,
                      "total_logs_count": 0,
                      "inputs": [
                        {
                          "name": "messages"
                        }
                      ]
                    },
                    "orchestrated": false,
                    "pinned": true,
                    "added_at": "2024-10-12T12:00:00Z"
                  }
                ],
                "evaluators": [
                  {
                    "version": {
                      "id": "ev_890bcd",
                      "name": "Accuracy Evaluator",
                      "path": "Shared Evaluators/Accuracy Evaluator",
                      "version_id": "evv_012def",
                      "type": "evaluator",
                      "created_at": "2024-05-01T12:00:00Z",
                      "updated_at": "2024-05-01T12:00:00Z",
                      "status": "committed",
                      "last_used_at": "2024-05-01T12:00:00Z",
                      "spec": {
                        "arguments_type": "target_required",
                        "return_type": "number",
                        "evaluator_type": "python",
                        "code": "def evaluate(answer, target):\n    return 0.5"
                      },
                      "version_logs_count": 1,
                      "total_logs_count": 1,
                      "inputs": [
                        {
                          "name": "answer"
                        }
                      ]
                    },
                    "orchestrated": false,
                    "added_at": "2024-10-12T12:00:00Z"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "dataset": {
                    "version_id": "dsv_6L78pqrdFi2xa"
                  },
                  "evaluatees": [
                    {
                      "version_id": "prv_7ZlQREDScH0xkhUwtXruN",
                      "orchestrated": false
                    }
                  ],
                  "evaluators": [
                    {
                      "version_id": "evv_012def",
                      "orchestrated": false
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "ev_567yza",
                  "created_at": "2024-05-01T12:00:00Z",
                  "updated_at": "2024-05-01T12:00:00Z",
                  "status": "completed",
                  "dataset": {
                    "id": "ds_345mno",
                    "path": "test-questions",
                    "name": "test-questions",
                    "version_id": "dsv_678pqr",
                    "type": "dataset",
                    "created_at": "2024-05-01T12:00:00Z",
                    "updated_at": "2024-05-01T12:00:00Z",
                    "created_by": {
                      "id": "usr_v23rSVAgas2a",
                      "full_name": "Jordan Burges",
                      "email_address": "jordan@humanloop.com"
                    },
                    "status": "committed",
                    "commit_message": "initial commit",
                    "last_used_at": "2024-05-01T12:00:00Z",
                    "datapoints_count": 2
                  },
                  "evaluatees": [
                    {
                      "version": {
                        "path": "Personal Projects/Coding Assistant",
                        "id": "pr_30gco7dx6JDq4200GVOHa",
                        "name": "Coding Assistant",
                        "version_id": "prv_7ZlQREDScH0xkhUwtXruN",
                        "type": "prompt",
                        "environments": [
                          {
                            "id": "env_ffSVxEBzJcBZ1H5jcNMVj",
                            "created_at": "2023-06-27T23:16:07.992339",
                            "name": "development",
                            "tag": "default"
                          }
                        ],
                        "created_at": "2024-07-08T22:40:35.656915",
                        "updated_at": "2024-07-08T22:40:35.656915",
                        "created_by": {
                          "id": "usr_01RJO1k2spBVqNUt1ASef",
                          "email_address": "raza@humanloop.com",
                          "full_name": "Raza Habib"
                        },
                        "status": "committed",
                        "last_used_at": "2024-07-08T22:40:35.656915",
                        "model": "gpt-4o",
                        "endpoint": "chat",
                        "template": [
                          {
                            "content": "You are a helpful coding assistant specialising in {{language}}",
                            "role": "system"
                          }
                        ],
                        "provider": "openai",
                        "max_tokens": -1,
                        "temperature": 0.7,
                        "top_p": 1,
                        "presence_penalty": 0,
                        "frequency_penalty": 0,
                        "other": {},
                        "tools": [],
                        "linked_tools": [],
                        "commit_message": "Initial commit",
                        "version_logs_count": 0,
                        "total_logs_count": 0,
                        "inputs": [
                          {
                            "name": "messages"
                          }
                        ]
                      },
                      "orchestrated": false,
                      "pinned": true,
                      "added_at": "2024-10-12T12:00:00Z"
                    }
                  ],
                  "evaluators": [
                    {
                      "version": {
                        "id": "ev_890bcd",
                        "name": "Accuracy Evaluator",
                        "path": "Shared Evaluators/Accuracy Evaluator",
                        "version_id": "evv_012def",
                        "type": "evaluator",
                        "created_at": "2024-05-01T12:00:00Z",
                        "updated_at": "2024-05-01T12:00:00Z",
                        "status": "committed",
                        "last_used_at": "2024-05-01T12:00:00Z",
                        "spec": {
                          "arguments_type": "target_required",
                          "return_type": "number",
                          "evaluator_type": "python",
                          "code": "def evaluate(answer, target):\n    return 0.5"
                        },
                        "version_logs_count": 1,
                        "total_logs_count": 1,
                        "inputs": [
                          {
                            "name": "answer"
                          }
                        ]
                      },
                      "orchestrated": false,
                      "added_at": "2024-10-12T12:00:00Z"
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/evaluations/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Update an Evaluation.\n\nUpdate the setup of an Evaluation by specifying the Dataset, versions to be\nevaluated (Evaluatees), and which Evaluators to provide judgments.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.evaluations.update_setup(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "dataset={\n\t\t$FERN_INPUT\n\t}",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"version_id\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "dataset.version_id",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"path\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "dataset.path",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"file_id\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "dataset.file_id",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"environment\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "dataset.environment",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        }
                      ],
                      "inputDelimiter": ",\n\t\t",
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "evaluatees=[\n\t\t$FERN_INPUT\n\t]",
                      "delimiter": ",\n\t\t",
                      "innerTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "{\n\t\t\t$FERN_INPUT\n\t\t}",
                        "templateInputs": [
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"version_id\": $FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": "version_id",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"path\": $FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": "path",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"file_id\": $FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": "file_id",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"environment\": $FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": "environment",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"batch_id\": $FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": "batch_id",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"orchestrated\": $FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": "orchestrated",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          }
                        ],
                        "inputDelimiter": ",\n\t\t\t",
                        "type": "generic"
                      },
                      "templateInput": {
                        "location": "BODY",
                        "path": "evaluatees"
                      },
                      "type": "iterable"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "evaluators=[\n\t\t$FERN_INPUT\n\t]",
                      "delimiter": ",\n\t\t",
                      "innerTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "{\n\t\t\t$FERN_INPUT\n\t\t}",
                        "templateInputs": [
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"version_id\": $FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": "version_id",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"path\": $FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": "path",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"file_id\": $FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": "file_id",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"environment\": $FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": "environment",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "\"orchestrated\": $FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "RELATIVE",
                                  "path": "orchestrated",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          }
                        ],
                        "inputDelimiter": ",\n\t\t\t",
                        "type": "generic"
                      },
                      "templateInput": {
                        "location": "BODY",
                        "path": "evaluators"
                      },
                      "type": "iterable"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "name=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "name",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "file={\n\t\t$FERN_INPUT\n\t}",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"id\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "file.id",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "\"path\": $FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "BODY",
                                "path": "file.path",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        }
                      ],
                      "inputDelimiter": ",\n\t\t",
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.evaluations.updateSetup(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "dataset: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "versionId: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "dataset.version_id"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "path: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "dataset.path"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "fileId: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "dataset.file_id"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "environment: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "dataset.environment"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "iterable",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "evaluatees: [\n\t\t\t$FERN_INPUT\n\t\t]",
                            "delimiter": ",\n\t\t\t",
                            "innerTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "{\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                              "isOptional": true,
                              "inputDelimiter": ",\n\t\t\t\t",
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "versionId: $FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": "version_id"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "path: $FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": "path"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "fileId: $FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": "file_id"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "environment: $FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": "environment"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "batchId: $FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": "batch_id"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "orchestrated: $FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": "orchestrated"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "evaluatees"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "iterable",
                            "imports": [],
                            "isOptional": true,
                            "containerTemplateString": "evaluators: [\n\t\t\t$FERN_INPUT\n\t\t]",
                            "delimiter": ",\n\t\t\t",
                            "innerTemplate": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "{\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                              "isOptional": true,
                              "inputDelimiter": ",\n\t\t\t\t",
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "versionId: $FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": "version_id"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "path: $FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": "path"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "fileId: $FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": "file_id"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "environment: $FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": "environment"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "orchestrated: $FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": "orchestrated"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "templateInput": {
                              "location": "BODY",
                              "path": "evaluators"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "name: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "BODY",
                                "path": "name"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "file: {\n\t\t\t$FERN_INPUT\n\t\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "id: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "file.id"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "path: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "file.path"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "update-status",
          "migratedFromUrlSlugs": ["update-evaluation-status"],
          "method": "PATCH",
          "id": "updateStatus",
          "originalEndpointId": "endpoint_evaluations.updateStatus",
          "name": "Update Evaluation Status",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Evaluation.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/evaluations/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/status"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_:EvaluationStatus"
                  }
                }
              ]
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:EvaluationResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/evaluations/id/status",
              "pathParameters": {
                "id": "id"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "status": "pending"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "id",
                "dataset": {
                  "path": "path",
                  "id": "id",
                  "directory_id": "directory_id",
                  "name": "name",
                  "version_id": "version_id",
                  "type": "dataset",
                  "environments": [
                    {
                      "id": "id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "name": "name",
                      "tag": "default"
                    }
                  ],
                  "created_at": "2024-01-15T09:30:00Z",
                  "updated_at": "2024-01-15T09:30:00Z",
                  "created_by": {
                    "id": "id",
                    "email_address": "email_address",
                    "full_name": "full_name"
                  },
                  "status": "uncommitted",
                  "last_used_at": "2024-01-15T09:30:00Z",
                  "commit_message": "commit_message",
                  "datapoints_count": 1,
                  "datapoints": [
                    {
                      "id": "id"
                    }
                  ],
                  "attributes": {
                    "key": "value"
                  }
                },
                "evaluatees": [
                  {
                    "version": {
                      "path": "path",
                      "id": "id",
                      "model": "model",
                      "name": "name",
                      "version_id": "version_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "status": "uncommitted",
                      "last_used_at": "2024-01-15T09:30:00Z",
                      "version_logs_count": 1,
                      "total_logs_count": 1,
                      "inputs": [
                        {
                          "name": "name"
                        }
                      ]
                    },
                    "batch_id": "batch_id",
                    "orchestrated": true,
                    "pinned": true,
                    "added_at": "2024-01-15T09:30:00Z"
                  }
                ],
                "evaluators": [
                  {
                    "version": {
                      "path": "path",
                      "id": "id",
                      "spec": {
                        "arguments_type": "target_free",
                        "return_type": "boolean",
                        "evaluator_type": "llm"
                      },
                      "name": "name",
                      "version_id": "version_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "status": "uncommitted",
                      "last_used_at": "2024-01-15T09:30:00Z",
                      "version_logs_count": 1,
                      "total_logs_count": 1,
                      "inputs": [
                        {
                          "name": "name"
                        }
                      ]
                    },
                    "orchestrated": true,
                    "added_at": "2024-01-15T09:30:00Z"
                  }
                ],
                "status": "pending",
                "name": "name",
                "file_id": "file_id",
                "created_at": "2024-01-15T09:30:00Z",
                "created_by": {
                  "id": "id",
                  "email_address": "email_address",
                  "full_name": "full_name"
                },
                "updated_at": "2024-01-15T09:30:00Z",
                "url": "url"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "status": "pending"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "id",
                  "dataset": {
                    "path": "path",
                    "id": "id",
                    "directory_id": "directory_id",
                    "name": "name",
                    "version_id": "version_id",
                    "type": "dataset",
                    "environments": [
                      {
                        "id": "id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "name": "name",
                        "tag": "default"
                      }
                    ],
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z",
                    "created_by": {
                      "id": "id",
                      "email_address": "email_address",
                      "full_name": "full_name"
                    },
                    "status": "uncommitted",
                    "last_used_at": "2024-01-15T09:30:00Z",
                    "commit_message": "commit_message",
                    "datapoints_count": 1,
                    "datapoints": [
                      {
                        "id": "id"
                      }
                    ],
                    "attributes": {
                      "key": "value"
                    }
                  },
                  "evaluatees": [
                    {
                      "version": {
                        "path": "path",
                        "id": "id",
                        "model": "model",
                        "name": "name",
                        "version_id": "version_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "status": "uncommitted",
                        "last_used_at": "2024-01-15T09:30:00Z",
                        "version_logs_count": 1,
                        "total_logs_count": 1,
                        "inputs": [
                          {
                            "name": "name"
                          }
                        ]
                      },
                      "batch_id": "batch_id",
                      "orchestrated": true,
                      "pinned": true,
                      "added_at": "2024-01-15T09:30:00Z"
                    }
                  ],
                  "evaluators": [
                    {
                      "version": {
                        "path": "path",
                        "id": "id",
                        "spec": {
                          "arguments_type": "target_free",
                          "return_type": "boolean",
                          "evaluator_type": "llm"
                        },
                        "name": "name",
                        "version_id": "version_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "status": "uncommitted",
                        "last_used_at": "2024-01-15T09:30:00Z",
                        "version_logs_count": 1,
                        "total_logs_count": 1,
                        "inputs": [
                          {
                            "name": "name"
                          }
                        ]
                      },
                      "orchestrated": true,
                      "added_at": "2024-01-15T09:30:00Z"
                    }
                  ],
                  "status": "pending",
                  "name": "name",
                  "file_id": "file_id",
                  "created_at": "2024-01-15T09:30:00Z",
                  "created_by": {
                    "id": "id",
                    "email_address": "email_address",
                    "full_name": "full_name"
                  },
                  "updated_at": "2024-01-15T09:30:00Z",
                  "url": "url"
                }
              },
              "codeSamples": []
            },
            {
              "path": "/evaluations/:id/status",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "status": "pending"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Update the status of an Evaluation.\n\nCan be used to cancel a running Evaluation, or mark an Evaluation that uses\nexternal or human evaluators as completed.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.evaluations.update_status(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "status=$FERN_INPUT",
                      "values": {
                        "pending": "\"pending\"",
                        "running": "\"running\"",
                        "completed": "\"completed\"",
                        "cancelled": "\"cancelled\""
                      },
                      "templateInput": {
                        "location": "BODY",
                        "path": "status"
                      },
                      "type": "enum"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.evaluations.updateStatus(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "enum",
                            "imports": [],
                            "isOptional": true,
                            "values": {
                              "pending": "\"pending\"",
                              "running": "\"running\"",
                              "completed": "\"completed\"",
                              "cancelled": "\"cancelled\""
                            },
                            "templateString": "status: $FERN_INPUT",
                            "templateInput": {
                              "location": "BODY",
                              "path": "status"
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "get-stats",
          "migratedFromUrlSlugs": ["get-evaluation-stats"],
          "method": "GET",
          "id": "getStats",
          "originalEndpointId": "endpoint_evaluations.getStats",
          "name": "Get Evaluation Stats",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Evaluation.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/evaluations/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/stats"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:EvaluationStats"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/evaluations/id/stats",
              "pathParameters": {
                "id": "id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "overall_stats": {
                  "num_datapoints": 1,
                  "total_logs": 1,
                  "total_evaluator_logs": 1
                },
                "version_stats": [
                  {
                    "version_id": "version_id",
                    "batch_id": "batch_id",
                    "num_logs": 1,
                    "evaluator_version_stats": [
                      {
                        "evaluator_version_id": "evaluator_version_id",
                        "total_logs": 1,
                        "num_judgments": 1,
                        "num_nulls": 1,
                        "num_errors": 1,
                        "mean": 0,
                        "std": 1,
                        "percentiles": {
                          "0": -2.5,
                          "25": -0.6745,
                          "50": 0,
                          "75": 0.6745,
                          "100": 2.5
                        }
                      }
                    ]
                  }
                ],
                "progress": "progress",
                "report": "report",
                "status": "pending"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "overall_stats": {
                    "num_datapoints": 1,
                    "total_logs": 1,
                    "total_evaluator_logs": 1
                  },
                  "version_stats": [
                    {
                      "version_id": "version_id",
                      "batch_id": "batch_id",
                      "num_logs": 1,
                      "evaluator_version_stats": [
                        {
                          "evaluator_version_id": "evaluator_version_id",
                          "total_logs": 1,
                          "num_judgments": 1,
                          "num_nulls": 1,
                          "num_errors": 1,
                          "mean": 0,
                          "std": 1,
                          "percentiles": {
                            "0": -2.5,
                            "25": -0.6745,
                            "50": 0,
                            "75": 0.6745,
                            "100": 2.5
                          }
                        }
                      ]
                    }
                  ],
                  "progress": "progress",
                  "report": "report",
                  "status": "pending"
                }
              },
              "codeSamples": []
            },
            {
              "path": "/evaluations/:id/stats",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Get Evaluation Stats.\n\nRetrieve aggregate stats for the specified Evaluation.\nThis includes the number of generated Logs for each evaluated version and the\ncorresponding Evaluator statistics (such as the mean and percentiles).",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.evaluations.get_stats(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.evaluations.getStats(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "get-logs",
          "migratedFromUrlSlugs": ["get-logs-for-an-evaluation"],
          "method": "GET",
          "id": "getLogs",
          "originalEndpointId": "endpoint_evaluations.getLogs",
          "name": "Get Logs for an Evaluation",
          "path": {
            "pathParameters": [
              {
                "description": "String ID of evaluation. Starts with `ev_` or `evr_`.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/evaluations/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/logs"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Page number for pagination.",
              "key": "page",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "Page size for pagination. Number of Logs to fetch.",
              "key": "size",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:PaginatedDataEvaluationReportLogResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/evaluations/id/logs",
              "pathParameters": {
                "id": "id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "records": [
                  {
                    "evaluated_version": {
                      "path": "path",
                      "id": "id",
                      "model": "model",
                      "name": "name",
                      "version_id": "version_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "status": "uncommitted",
                      "last_used_at": "2024-01-15T09:30:00Z",
                      "version_logs_count": 1,
                      "total_logs_count": 1,
                      "inputs": [
                        {
                          "name": "name"
                        }
                      ]
                    },
                    "datapoint": {
                      "id": "id"
                    },
                    "log": {
                      "prompt": {
                        "path": "path",
                        "id": "id",
                        "model": "model",
                        "name": "name",
                        "version_id": "version_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "status": "uncommitted",
                        "last_used_at": "2024-01-15T09:30:00Z",
                        "version_logs_count": 1,
                        "total_logs_count": 1,
                        "inputs": [
                          {
                            "name": "name"
                          }
                        ]
                      },
                      "id": "id",
                      "evaluator_logs": [
                        {
                          "id": "id",
                          "evaluator_logs": [],
                          "evaluator": {
                            "path": "path",
                            "id": "id",
                            "spec": {
                              "arguments_type": "target_free",
                              "return_type": "boolean",
                              "evaluator_type": "llm"
                            },
                            "name": "name",
                            "version_id": "version_id",
                            "created_at": "2024-01-15T09:30:00Z",
                            "updated_at": "2024-01-15T09:30:00Z",
                            "status": "uncommitted",
                            "last_used_at": "2024-01-15T09:30:00Z",
                            "version_logs_count": 1,
                            "total_logs_count": 1,
                            "inputs": [
                              {
                                "name": "name"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "evaluator_logs": [
                      {
                        "prompt": {
                          "path": "path",
                          "id": "id",
                          "model": "model",
                          "name": "name",
                          "version_id": "version_id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "status": "uncommitted",
                          "last_used_at": "2024-01-15T09:30:00Z",
                          "version_logs_count": 1,
                          "total_logs_count": 1,
                          "inputs": [
                            {
                              "name": "name"
                            }
                          ]
                        },
                        "id": "id",
                        "evaluator_logs": [
                          {
                            "id": "id",
                            "evaluator_logs": [],
                            "evaluator": {
                              "path": "path",
                              "id": "id",
                              "spec": {
                                "arguments_type": "target_free",
                                "return_type": "boolean",
                                "evaluator_type": "llm"
                              },
                              "name": "name",
                              "version_id": "version_id",
                              "created_at": "2024-01-15T09:30:00Z",
                              "updated_at": "2024-01-15T09:30:00Z",
                              "status": "uncommitted",
                              "last_used_at": "2024-01-15T09:30:00Z",
                              "version_logs_count": 1,
                              "total_logs_count": 1,
                              "inputs": [
                                {
                                  "name": "name"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    ]
                  }
                ],
                "page": 1,
                "size": 1,
                "total": 1
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "records": [
                    {
                      "evaluated_version": {
                        "path": "path",
                        "id": "id",
                        "model": "model",
                        "name": "name",
                        "version_id": "version_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "status": "uncommitted",
                        "last_used_at": "2024-01-15T09:30:00Z",
                        "version_logs_count": 1,
                        "total_logs_count": 1,
                        "inputs": [
                          {
                            "name": "name"
                          }
                        ]
                      },
                      "datapoint": {
                        "id": "id"
                      },
                      "log": {
                        "prompt": {
                          "path": "path",
                          "id": "id",
                          "model": "model",
                          "name": "name",
                          "version_id": "version_id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "status": "uncommitted",
                          "last_used_at": "2024-01-15T09:30:00Z",
                          "version_logs_count": 1,
                          "total_logs_count": 1,
                          "inputs": [
                            {
                              "name": "name"
                            }
                          ]
                        },
                        "id": "id",
                        "evaluator_logs": [
                          {
                            "id": "id",
                            "evaluator_logs": [],
                            "evaluator": {
                              "path": "path",
                              "id": "id",
                              "spec": {
                                "arguments_type": "target_free",
                                "return_type": "boolean",
                                "evaluator_type": "llm"
                              },
                              "name": "name",
                              "version_id": "version_id",
                              "created_at": "2024-01-15T09:30:00Z",
                              "updated_at": "2024-01-15T09:30:00Z",
                              "status": "uncommitted",
                              "last_used_at": "2024-01-15T09:30:00Z",
                              "version_logs_count": 1,
                              "total_logs_count": 1,
                              "inputs": [
                                {
                                  "name": "name"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "evaluator_logs": [
                        {
                          "prompt": {
                            "path": "path",
                            "id": "id",
                            "model": "model",
                            "name": "name",
                            "version_id": "version_id",
                            "created_at": "2024-01-15T09:30:00Z",
                            "updated_at": "2024-01-15T09:30:00Z",
                            "status": "uncommitted",
                            "last_used_at": "2024-01-15T09:30:00Z",
                            "version_logs_count": 1,
                            "total_logs_count": 1,
                            "inputs": [
                              {
                                "name": "name"
                              }
                            ]
                          },
                          "id": "id",
                          "evaluator_logs": [
                            {
                              "id": "id",
                              "evaluator_logs": [],
                              "evaluator": {
                                "path": "path",
                                "id": "id",
                                "spec": {
                                  "arguments_type": "target_free",
                                  "return_type": "boolean",
                                  "evaluator_type": "llm"
                                },
                                "name": "name",
                                "version_id": "version_id",
                                "created_at": "2024-01-15T09:30:00Z",
                                "updated_at": "2024-01-15T09:30:00Z",
                                "status": "uncommitted",
                                "last_used_at": "2024-01-15T09:30:00Z",
                                "version_logs_count": 1,
                                "total_logs_count": 1,
                                "inputs": [
                                  {
                                    "name": "name"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "page": 1,
                  "size": 1,
                  "total": 1
                }
              },
              "codeSamples": []
            },
            {
              "path": "/evaluations/:id/logs",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {
                "page": 0,
                "size": 0
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Get the Logs associated to a specific Evaluation.\n\nEach Datapoint in your Dataset will have a corresponding Log for each File version evaluated.\ne.g. If you have 50 Datapoints and are evaluating 2 Prompts, there will be 100 Logs associated with the Evaluation.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.evaluations.get_logs(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "page=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "page",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "size=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "size",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.evaluations.getLogs(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "page: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "page"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "size: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "size"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "pin-evaluatee",
          "method": "POST",
          "id": "pinEvaluatee",
          "originalEndpointId": "endpoint_evaluations.pinEvaluatee",
          "name": "Pin Evaluatee",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Evaluation.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/evaluations/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/pin-evaluatee"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:EvaluateeRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:EvaluationResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/evaluations/id/pin-evaluatee",
              "pathParameters": {
                "id": "id"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "id",
                "dataset": {
                  "path": "path",
                  "id": "id",
                  "directory_id": "directory_id",
                  "name": "name",
                  "version_id": "version_id",
                  "type": "dataset",
                  "environments": [
                    {
                      "id": "id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "name": "name",
                      "tag": "default"
                    }
                  ],
                  "created_at": "2024-01-15T09:30:00Z",
                  "updated_at": "2024-01-15T09:30:00Z",
                  "created_by": {
                    "id": "id",
                    "email_address": "email_address",
                    "full_name": "full_name"
                  },
                  "status": "uncommitted",
                  "last_used_at": "2024-01-15T09:30:00Z",
                  "commit_message": "commit_message",
                  "datapoints_count": 1,
                  "datapoints": [
                    {
                      "id": "id"
                    }
                  ],
                  "attributes": {
                    "key": "value"
                  }
                },
                "evaluatees": [
                  {
                    "version": {
                      "path": "path",
                      "id": "id",
                      "model": "model",
                      "name": "name",
                      "version_id": "version_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "status": "uncommitted",
                      "last_used_at": "2024-01-15T09:30:00Z",
                      "version_logs_count": 1,
                      "total_logs_count": 1,
                      "inputs": [
                        {
                          "name": "name"
                        }
                      ]
                    },
                    "batch_id": "batch_id",
                    "orchestrated": true,
                    "pinned": true,
                    "added_at": "2024-01-15T09:30:00Z"
                  }
                ],
                "evaluators": [
                  {
                    "version": {
                      "path": "path",
                      "id": "id",
                      "spec": {
                        "arguments_type": "target_free",
                        "return_type": "boolean",
                        "evaluator_type": "llm"
                      },
                      "name": "name",
                      "version_id": "version_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "status": "uncommitted",
                      "last_used_at": "2024-01-15T09:30:00Z",
                      "version_logs_count": 1,
                      "total_logs_count": 1,
                      "inputs": [
                        {
                          "name": "name"
                        }
                      ]
                    },
                    "orchestrated": true,
                    "added_at": "2024-01-15T09:30:00Z"
                  }
                ],
                "status": "pending",
                "name": "name",
                "file_id": "file_id",
                "created_at": "2024-01-15T09:30:00Z",
                "created_by": {
                  "id": "id",
                  "email_address": "email_address",
                  "full_name": "full_name"
                },
                "updated_at": "2024-01-15T09:30:00Z",
                "url": "url"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "id",
                  "dataset": {
                    "path": "path",
                    "id": "id",
                    "directory_id": "directory_id",
                    "name": "name",
                    "version_id": "version_id",
                    "type": "dataset",
                    "environments": [
                      {
                        "id": "id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "name": "name",
                        "tag": "default"
                      }
                    ],
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z",
                    "created_by": {
                      "id": "id",
                      "email_address": "email_address",
                      "full_name": "full_name"
                    },
                    "status": "uncommitted",
                    "last_used_at": "2024-01-15T09:30:00Z",
                    "commit_message": "commit_message",
                    "datapoints_count": 1,
                    "datapoints": [
                      {
                        "id": "id"
                      }
                    ],
                    "attributes": {
                      "key": "value"
                    }
                  },
                  "evaluatees": [
                    {
                      "version": {
                        "path": "path",
                        "id": "id",
                        "model": "model",
                        "name": "name",
                        "version_id": "version_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "status": "uncommitted",
                        "last_used_at": "2024-01-15T09:30:00Z",
                        "version_logs_count": 1,
                        "total_logs_count": 1,
                        "inputs": [
                          {
                            "name": "name"
                          }
                        ]
                      },
                      "batch_id": "batch_id",
                      "orchestrated": true,
                      "pinned": true,
                      "added_at": "2024-01-15T09:30:00Z"
                    }
                  ],
                  "evaluators": [
                    {
                      "version": {
                        "path": "path",
                        "id": "id",
                        "spec": {
                          "arguments_type": "target_free",
                          "return_type": "boolean",
                          "evaluator_type": "llm"
                        },
                        "name": "name",
                        "version_id": "version_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "status": "uncommitted",
                        "last_used_at": "2024-01-15T09:30:00Z",
                        "version_logs_count": 1,
                        "total_logs_count": 1,
                        "inputs": [
                          {
                            "name": "name"
                          }
                        ]
                      },
                      "orchestrated": true,
                      "added_at": "2024-01-15T09:30:00Z"
                    }
                  ],
                  "status": "pending",
                  "name": "name",
                  "file_id": "file_id",
                  "created_at": "2024-01-15T09:30:00Z",
                  "created_by": {
                    "id": "id",
                    "email_address": "email_address",
                    "full_name": "full_name"
                  },
                  "updated_at": "2024-01-15T09:30:00Z",
                  "url": "url"
                }
              },
              "codeSamples": []
            },
            {
              "path": "/evaluations/:id/pin-evaluatee",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Pin the specified Evaluatee.\n\nPinned Evaluatees are always displayed in the Evaluation Overview,\nand serve as the baseline for comparison with other Evaluatees.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.evaluations.pin_evaluatee(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "version_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "version_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "path=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "path",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "file_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "file_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "environment=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "environment",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "batch_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "batch_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "orchestrated=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "BODY",
                          "path": "orchestrated",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.evaluations.pinEvaluatee(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "versionId: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "version_id"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "path: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "path"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "fileId: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "file_id"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "environment: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "environment"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "batchId: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "batch_id"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "orchestrated: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "orchestrated"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        }
      ],
      "types": [],
      "subpackages": [],
      "urlSlug": "evaluations",
      "description": "Evaluations help you measure the performance of your Prompts, Tools and LLM Evaluators.\n\nAn Evaluation consists of a Dataset, Evaluatees (i.e. Versions to evaluate), and Evaluators.\nWhen an Evaluation is created, Humanloop will start generating Logs, iterating through Datapoints in the Dataset,\nfor each Evaluatee. The Evaluators will then be run on these Logs.\n\nAggregate stats can be viewed in the Humanloop app or retrieved with the **Get Evaluation Stats** endpoint.\n\nNote that when an Evaluation is created, Humanloop will attempt to reuse any existing Logs for each Datapoint-Evaluatee\npair. This means that you can create multiple Evaluations without generating new Logs unnecessarily.\n\n",
      "webhooks": [],
      "websockets": [],
      "displayName": "Evaluations"
    },
    "subpackage_logs": {
      "subpackageId": "subpackage_logs",
      "name": "logs",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "list",
          "migratedFromUrlSlugs": ["list-logs"],
          "method": "GET",
          "id": "list",
          "originalEndpointId": "endpoint_logs.list",
          "name": "List Logs",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/logs"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Unique identifier for the File to list Logs for.",
              "key": "file_id",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            {
              "description": "Page number for pagination.",
              "key": "page",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "Page size for pagination. Number of Logs to fetch.",
              "key": "size",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "If provided, only Logs belonging to the specified Version will be returned.",
              "key": "version_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "If provided, only Logs belonging to Versions with the specified status will be returned.",
              "key": "version_status",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_:VersionStatus"
                }
              }
            },
            {
              "description": "If provided, only Logs that contain the provided string in its inputs and output will be returned.",
              "key": "search",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "If provided, only Logs that contain the provided string in its metadata will be returned.",
              "key": "metadata_search",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "If provided, only Logs created after the specified date will be returned.",
              "key": "start_date",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "description": "If provided, only Logs created before the specified date will be returned.",
              "key": "end_date",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "description": "If true, include the full parent Log in the response. Only applicable when retrieving Evaluator Logs.",
              "key": "include_parent",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "If true, return Logs that are associated to a Trace. False, return Logs that are not associated to a Trace.",
              "key": "in_trace_filter",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:PaginatedDataLogResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "List logs",
              "path": "/logs",
              "pathParameters": {},
              "queryParameters": {
                "file_id": "file_123abc",
                "size": 1
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "page": 1,
                "size": 1,
                "total": 1,
                "records": [
                  {
                    "id": "log_123efg",
                    "created_at": "2024-05-01T12:00:00Z",
                    "output": "This is a sample output.",
                    "prompt": {
                      "id": "pr_123abc",
                      "name": "Test Prompt",
                      "path": "test-prompt",
                      "version_id": "pv_456def",
                      "created_at": "2024-05-01T12:00:00Z",
                      "updated_at": "2024-05-01T12:00:00Z",
                      "status": "committed",
                      "last_used_at": "2024-05-01T12:00:00Z",
                      "model": "gpt-4",
                      "version_logs_count": 1,
                      "total_logs_count": 1,
                      "inputs": [
                        {
                          "name": "question"
                        }
                      ]
                    },
                    "evaluator_logs": []
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "page": 1,
                  "size": 1,
                  "total": 1,
                  "records": [
                    {
                      "id": "log_123efg",
                      "created_at": "2024-05-01T12:00:00Z",
                      "output": "This is a sample output.",
                      "prompt": {
                        "id": "pr_123abc",
                        "name": "Test Prompt",
                        "path": "test-prompt",
                        "version_id": "pv_456def",
                        "created_at": "2024-05-01T12:00:00Z",
                        "updated_at": "2024-05-01T12:00:00Z",
                        "status": "committed",
                        "last_used_at": "2024-05-01T12:00:00Z",
                        "model": "gpt-4",
                        "version_logs_count": 1,
                        "total_logs_count": 1,
                        "inputs": [
                          {
                            "name": "question"
                          }
                        ]
                      },
                      "evaluator_logs": []
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/logs",
              "pathParameters": {},
              "queryParameters": {
                "file_id": "string",
                "page": 0,
                "size": 0
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "List all Logs for the given filter criteria.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.logs.list(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "file_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "file_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "page=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "page",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "size=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "size",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "version_id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "version_id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "version_status=$FERN_INPUT",
                      "values": {
                        "uncommitted": "\"uncommitted\"",
                        "committed": "\"committed\"",
                        "deleted": "\"deleted\""
                      },
                      "templateInput": {
                        "location": "QUERY",
                        "path": "version_status"
                      },
                      "type": "enum"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "search=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "search",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "metadata_search=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "metadata_search",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "start_date=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "start_date",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "end_date=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "end_date",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "include_parent=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "include_parent",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  },
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "in_trace_filter=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "in_trace_filter",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.logs.list(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "fileId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "file_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "page: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "page"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "size: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "size"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "versionId: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "version_id"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "enum",
                            "imports": [],
                            "isOptional": true,
                            "values": {
                              "uncommitted": "\"uncommitted\"",
                              "committed": "\"committed\"",
                              "deleted": "\"deleted\""
                            },
                            "templateString": "versionStatus: $FERN_INPUT",
                            "templateInput": {
                              "location": "QUERY",
                              "path": "version_status"
                            }
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "search: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "search"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "metadataSearch: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "metadata_search"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "startDate: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "start_date"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "endDate: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "end_date"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "includeParent: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "include_parent"
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "inTraceFilter: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "in_trace_filter"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "delete",
          "migratedFromUrlSlugs": ["delete-logs"],
          "method": "DELETE",
          "id": "delete",
          "originalEndpointId": "endpoint_logs.delete",
          "name": "Delete Logs",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/logs"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Unique identifiers for the Logs to delete.",
              "key": "id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/logs",
              "pathParameters": {},
              "queryParameters": {
                "id": "string"
              },
              "headers": {},
              "responseStatusCode": 200,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            },
            {
              "path": "/logs",
              "pathParameters": {},
              "queryParameters": {
                "id": "string"
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Delete Logs with the given IDs.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.logs.delete(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "QUERY",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.logs.delete(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                      "isOptional": true,
                      "inputDelimiter": ",\n\t\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "id: $FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "QUERY",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "get",
          "migratedFromUrlSlugs": ["get-log"],
          "method": "GET",
          "id": "get",
          "originalEndpointId": "endpoint_logs.get",
          "name": "Get Log",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Log.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/logs/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:LogResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HttpValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "name": "Get log",
              "path": "/logs/prv_Wu6zx1lAWJRqOyL8nWuZk",
              "pathParameters": {
                "id": "prv_Wu6zx1lAWJRqOyL8nWuZk"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "log_123efg",
                "created_at": "2024-05-01T12:00:00Z",
                "output": "This is a sample output.",
                "prompt": {
                  "id": "pr_123abc",
                  "name": "Test Prompt",
                  "path": "test-prompt",
                  "version_id": "pv_456def",
                  "created_at": "2024-05-01T12:00:00Z",
                  "updated_at": "2024-05-01T12:00:00Z",
                  "status": "committed",
                  "last_used_at": "2024-05-01T12:00:00Z",
                  "model": "gpt-4",
                  "version_logs_count": 1,
                  "total_logs_count": 1,
                  "inputs": [
                    {
                      "name": "question"
                    }
                  ]
                },
                "evaluator_logs": []
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "log_123efg",
                  "created_at": "2024-05-01T12:00:00Z",
                  "output": "This is a sample output.",
                  "prompt": {
                    "id": "pr_123abc",
                    "name": "Test Prompt",
                    "path": "test-prompt",
                    "version_id": "pv_456def",
                    "created_at": "2024-05-01T12:00:00Z",
                    "updated_at": "2024-05-01T12:00:00Z",
                    "status": "committed",
                    "last_used_at": "2024-05-01T12:00:00Z",
                    "model": "gpt-4",
                    "version_logs_count": 1,
                    "total_logs_count": 1,
                    "inputs": [
                      {
                        "name": "question"
                      }
                    ]
                  },
                  "evaluator_logs": []
                }
              },
              "codeSamples": []
            },
            {
              "path": "/logs/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Retrieve the Log with the given ID.",
          "authed": true,
          "snippetTemplates": {
            "python": {
              "type": "v1",
              "functionInvocation": {
                "imports": [],
                "isOptional": true,
                "templateString": "client.logs.get(\n\t$FERN_INPUT\n)",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "id=$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "PATH",
                          "path": "id",
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    }
                  }
                ],
                "inputDelimiter": ",\n\t",
                "type": "generic"
              },
              "clientInstantiation": {
                "imports": ["from humanloop import Humanloop"],
                "isOptional": true,
                "templateString": "client = Humanloop(api_key=\"YOUR_API_KEY\", )",
                "templateInputs": [],
                "inputDelimiter": ",",
                "type": "generic"
              }
            },
            "typescript": {
              "type": "v1",
              "functionInvocation": {
                "type": "generic",
                "imports": [],
                "templateString": "await client.logs.get(\n\t$FERN_INPUT\n)",
                "isOptional": false,
                "inputDelimiter": ",\n\t",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "$FERN_INPUT",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "PATH",
                                "path": "id"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "clientInstantiation": {
                "type": "generic",
                "imports": ["import { HumanloopClient } from \"humanloop\";"],
                "templateString": "const client = new HumanloopClient($FERN_INPUT);",
                "isOptional": false,
                "inputDelimiter": ",",
                "templateInputs": [
                  {
                    "type": "template",
                    "value": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "{ $FERN_INPUT }",
                      "isOptional": true,
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "apiKey: $FERN_INPUT",
                            "isOptional": false,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "AUTH",
                                "path": "Authorization"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        }
      ],
      "types": [],
      "subpackages": [],
      "urlSlug": "logs",
      "description": "Logs contain the inputs and outputs of each time a Prompt, Tool or Evaluator is called.\n\nHumanloop automatically records the inputs and outputs when you Call a Prompt or Tool and saves a Log.\nEvaluator Logs are also created when an Evaluator is run on a Log.\n\nYou can manually create Logs through the API.\n\n...\n\n\n",
      "webhooks": [],
      "websockets": [],
      "displayName": "Logs"
    }
  },
  "auth": {
    "type": "header",
    "headerWireValue": "X-API-KEY",
    "nameOverride": "apiKey"
  },
  "hasMultipleBaseUrls": false,
  "globalHeaders": []
}
