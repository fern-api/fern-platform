{
  "types": {
    "type_:PaymentCaptureApiRequestOrder": {
      "description": "More information associated with the order.",
      "name": "PaymentCaptureApiRequestOrder",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The country code of the retailer.\nThis field is passed to the processor and overwrites the retailer country code set in order details.",
            "key": "retailerCountryCode",
            "valueType": {
              "itemType": {
                "value": "type_:CountryCodeEnum",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:PaymentsInsightsPayment": {
      "name": "PaymentsInsightsPayment",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The payment ID.\n\nThe payment ID must be unique. You can use this unique payment ID to update payment details. <span style=\"white-space: nowrap\">`<= 250 characters`</span> ",
            "key": "paymentId",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "The 3-letter currency code in\n[ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\n\ne.g. use `USD` for US dollars.",
            "key": "currencyCode",
            "valueType": {
              "value": "type_:PaymentsInsightsPaymentCurrencyCode",
              "type": "id"
            }
          },
          {
            "key": "processor",
            "valueType": {
              "value": "type_:PaymentsInsightsProcessor",
              "type": "id"
            }
          },
          {
            "description": "The amount you would like to charge the customer,\nin minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units.\nIn this case you should use the value as it is, without any formatting.\nFor example for Â¥100, use `100`.\nThe minimum amount is 0.",
            "key": "amount",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "description": "The payment creation date and time (UTC) in [ISO 8601 format](\nhttps://en.wikipedia.org/wiki/ISO_8601).\n\nCannot be updated in partial updates PATCH.",
            "key": "createdAt",
            "valueType": {
              "value": {
                "type": "datetime"
              },
              "type": "primitive"
            }
          },
          {
            "key": "order",
            "valueType": {
              "value": "type_:PaymentsInsightsOrder",
              "type": "id"
            }
          },
          {
            "description": "See the payment [status table](\nhttps://apiref.primer.io/docs#payment-status) for more information.",
            "key": "status",
            "valueType": {
              "itemType": {
                "value": "type_:PaymentsInsightsPaymentStatus",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Pass more information regarding the payment's status in this field.\n\nThis is especially useful when the status is `DECLINED` or `FAILED`.",
            "key": "statusReason",
            "valueType": {
              "itemType": {
                "value": "type_:PaymentsInsightsStatusReason",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "paymentMethod",
            "valueType": {
              "value": "type_:PaymentsInsightsPaymentMethod",
              "type": "id"
            }
          },
          {
            "description": "Additional data to be used throughout the payment lifecycle.\n\nAd dictionary of key-value pairs where the values can only be strings or integers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"88278a\"}`",
            "key": "metadata",
            "valueType": {
              "itemType": {
                "keyType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "valueType": {
                  "type": "unknown"
                },
                "type": "map"
              },
              "type": "optional"
            }
          },
          {
            "description": "Payment types, primarily to be used for recurring payments.\n\nNote: If you successfully vault a `SINGLE_USE` token on payment\ncreation, then there's no need to set a value for this field and it will\nbe flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all\npossible values.\n\n\n| paymentType | Use case |\n| --- | --- |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE` | a customer-initiated payment using stored payment details where the cardholder is present. |\n| `SUBSCRIPTION` | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount. |\n| `UNSCHEDULED` | a merchant-initiated payment using stored payment details with no fixed schedule or amount. |\n| `MOTO` | a merchant-initiated mail order or telephone order payment. |\n| `IN_STORE` | a customer-initiated payment where the customer is physically present in a shop. |",
            "key": "paymentType",
            "valueType": {
              "itemType": {
                "value": "type_:PaymentsInsightsPaymentPaymentType",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "A description of the payment,\nas it would typically appear on a bank statement. <span style=\"white-space: nowrap\">`<= 250 characters`</span> ",
            "key": "descriptor",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:PaymentsInsightsPaymentCurrencyCode": {
      "description": "The 3-letter currency code in\n[ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\n\ne.g. use `USD` for US dollars.",
      "name": "PaymentsInsightsPaymentCurrencyCode",
      "shape": {
        "values": [
          {
            "value": "AED"
          },
          {
            "value": "AFN"
          },
          {
            "value": "ALL"
          },
          {
            "value": "AMD"
          },
          {
            "value": "ANG"
          },
          {
            "value": "AOA"
          },
          {
            "value": "ARS"
          },
          {
            "value": "AUD"
          },
          {
            "value": "AWG"
          },
          {
            "value": "AZN"
          },
          {
            "value": "BAM"
          },
          {
            "value": "BBD"
          },
          {
            "value": "BDT"
          },
          {
            "value": "BGN"
          },
          {
            "value": "BHD"
          },
          {
            "value": "BIF"
          },
          {
            "value": "BMD"
          },
          {
            "value": "BND"
          },
          {
            "value": "BOB"
          },
          {
            "value": "BOV"
          },
          {
            "value": "BRL"
          },
          {
            "value": "BSD"
          },
          {
            "value": "BTN"
          },
          {
            "value": "BWP"
          },
          {
            "value": "BYR"
          },
          {
            "value": "BYN"
          },
          {
            "value": "BZD"
          },
          {
            "value": "CAD"
          },
          {
            "value": "CDF"
          },
          {
            "value": "CHE"
          },
          {
            "value": "CHF"
          },
          {
            "value": "CHW"
          },
          {
            "value": "CLF"
          },
          {
            "value": "CLP"
          },
          {
            "value": "CNY"
          },
          {
            "value": "COP"
          },
          {
            "value": "COU"
          },
          {
            "value": "CRC"
          },
          {
            "value": "CUC"
          },
          {
            "value": "CUP"
          },
          {
            "value": "CVE"
          },
          {
            "value": "CZK"
          },
          {
            "value": "DJF"
          },
          {
            "value": "DKK"
          },
          {
            "value": "DOP"
          },
          {
            "value": "DZD"
          },
          {
            "value": "EGP"
          },
          {
            "value": "ERN"
          },
          {
            "value": "ETB"
          },
          {
            "value": "EUR"
          },
          {
            "value": "FJD"
          },
          {
            "value": "FKP"
          },
          {
            "value": "GBP"
          },
          {
            "value": "GEL"
          },
          {
            "value": "GHS"
          },
          {
            "value": "GIP"
          },
          {
            "value": "GMD"
          },
          {
            "value": "GNF"
          },
          {
            "value": "GTQ"
          },
          {
            "value": "GYD"
          },
          {
            "value": "HKD"
          },
          {
            "value": "HNL"
          },
          {
            "value": "HRK"
          },
          {
            "value": "HTG"
          },
          {
            "value": "HUF"
          },
          {
            "value": "IDR"
          },
          {
            "value": "ILS"
          },
          {
            "value": "INR"
          },
          {
            "value": "IQD"
          },
          {
            "value": "IRR"
          },
          {
            "value": "ISK"
          },
          {
            "value": "JMD"
          },
          {
            "value": "JOD"
          },
          {
            "value": "JPY"
          },
          {
            "value": "KES"
          },
          {
            "value": "KGS"
          },
          {
            "value": "KHR"
          },
          {
            "value": "KMF"
          },
          {
            "value": "KPW"
          },
          {
            "value": "KRW"
          },
          {
            "value": "KWD"
          },
          {
            "value": "KYD"
          },
          {
            "value": "KZT"
          },
          {
            "value": "LAK"
          },
          {
            "value": "LBP"
          },
          {
            "value": "LKR"
          },
          {
            "value": "LRD"
          },
          {
            "value": "LSL"
          },
          {
            "value": "LTL"
          },
          {
            "value": "LVL"
          },
          {
            "value": "LYD"
          },
          {
            "value": "MAD"
          },
          {
            "value": "MDL"
          },
          {
            "value": "MGA"
          },
          {
            "value": "MKD"
          },
          {
            "value": "MMK"
          },
          {
            "value": "MNT"
          },
          {
            "value": "MOP"
          },
          {
            "value": "MRO"
          },
          {
            "value": "MUR"
          },
          {
            "value": "MVR"
          },
          {
            "value": "MWK"
          },
          {
            "value": "MXN"
          },
          {
            "value": "MXV"
          },
          {
            "value": "MYR"
          },
          {
            "value": "MZN"
          },
          {
            "value": "NAD"
          },
          {
            "value": "NGN"
          },
          {
            "value": "NIO"
          },
          {
            "value": "NOK"
          },
          {
            "value": "NPR"
          },
          {
            "value": "NZD"
          },
          {
            "value": "OMR"
          },
          {
            "value": "PAB"
          },
          {
            "value": "PEN"
          },
          {
            "value": "PGK"
          },
          {
            "value": "PHP"
          },
          {
            "value": "PKR"
          },
          {
            "value": "PLN"
          },
          {
            "value": "PYG"
          },
          {
            "value": "QAR"
          },
          {
            "value": "RON"
          },
          {
            "value": "RSD"
          },
          {
            "value": "RUB"
          },
          {
            "value": "RWF"
          },
          {
            "value": "SAR"
          },
          {
            "value": "SBD"
          },
          {
            "value": "SCR"
          },
          {
            "value": "SDG"
          },
          {
            "value": "SEK"
          },
          {
            "value": "SGD"
          },
          {
            "value": "SHP"
          },
          {
            "value": "SLL"
          },
          {
            "value": "SOS"
          },
          {
            "value": "SRD"
          },
          {
            "value": "SSP"
          },
          {
            "value": "STD"
          },
          {
            "value": "SVC"
          },
          {
            "value": "SYP"
          },
          {
            "value": "SZL"
          },
          {
            "value": "THB"
          },
          {
            "value": "TJS"
          },
          {
            "value": "TMT"
          },
          {
            "value": "TND"
          },
          {
            "value": "TOP"
          },
          {
            "value": "TRY"
          },
          {
            "value": "TTD"
          },
          {
            "value": "TWD"
          },
          {
            "value": "TZS"
          },
          {
            "value": "UAH"
          },
          {
            "value": "UGX"
          },
          {
            "value": "USD"
          },
          {
            "value": "USN"
          },
          {
            "value": "USS"
          },
          {
            "value": "UYI"
          },
          {
            "value": "UYU"
          },
          {
            "value": "UZS"
          },
          {
            "value": "VEF"
          },
          {
            "value": "VND"
          },
          {
            "value": "VUV"
          },
          {
            "value": "WST"
          },
          {
            "value": "XAF"
          },
          {
            "value": "XAG"
          },
          {
            "value": "XAU"
          },
          {
            "value": "XBA"
          },
          {
            "value": "XBB"
          },
          {
            "value": "XBC"
          },
          {
            "value": "XBD"
          },
          {
            "value": "XCD"
          },
          {
            "value": "XDR"
          },
          {
            "value": "XFU"
          },
          {
            "value": "XOF"
          },
          {
            "value": "XPD"
          },
          {
            "value": "XPF"
          },
          {
            "value": "XPT"
          },
          {
            "value": "XSU"
          },
          {
            "value": "XTS"
          },
          {
            "value": "XUA"
          },
          {
            "value": "YER"
          },
          {
            "value": "ZAR"
          },
          {
            "value": "ZMW"
          },
          {
            "value": "ZWL"
          }
        ],
        "type": "enum"
      }
    },
    "type_:PaymentsInsightsPaymentStatus": {
      "description": "See the payment [status table](\nhttps://apiref.primer.io/docs#payment-status) for more information.",
      "name": "PaymentsInsightsPaymentStatus",
      "shape": {
        "values": [
          {
            "value": "DECLINED"
          },
          {
            "value": "CANCELLED"
          },
          {
            "value": "FAILED"
          },
          {
            "value": "SETTLING"
          },
          {
            "value": "PARTIALLY_SETTLED"
          },
          {
            "value": "AUTHORIZED"
          },
          {
            "value": "SETTLED"
          },
          {
            "value": "PENDING"
          }
        ],
        "type": "enum"
      }
    },
    "type_:PaymentsInsightsPaymentPaymentType": {
      "description": "Payment types, primarily to be used for recurring payments.\n\nNote: If you successfully vault a `SINGLE_USE` token on payment\ncreation, then there's no need to set a value for this field and it will\nbe flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all\npossible values.\n\n\n| paymentType | Use case |\n| --- | --- |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE` | a customer-initiated payment using stored payment details where the cardholder is present. |\n| `SUBSCRIPTION` | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount. |\n| `UNSCHEDULED` | a merchant-initiated payment using stored payment details with no fixed schedule or amount. |\n| `MOTO` | a merchant-initiated mail order or telephone order payment. |\n| `IN_STORE` | a customer-initiated payment where the customer is physically present in a shop. |",
      "name": "PaymentsInsightsPaymentPaymentType",
      "shape": {
        "values": [
          {
            "value": "FIRST_PAYMENT"
          },
          {
            "value": "ECOMMERCE"
          },
          {
            "value": "SUBSCRIPTION"
          },
          {
            "value": "UNSCHEDULED"
          },
          {
            "value": "MOTO"
          },
          {
            "value": "IN_STORE"
          }
        ],
        "type": "enum"
      }
    },
    "type_:PaymentsInsightsPatchedPaymentCurrencyCode": {
      "description": "The 3-letter currency code in\n[ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\n\ne.g. use `USD` for US dollars.",
      "name": "PaymentsInsightsPatchedPaymentCurrencyCode",
      "shape": {
        "values": [
          {
            "value": "AED"
          },
          {
            "value": "AFN"
          },
          {
            "value": "ALL"
          },
          {
            "value": "AMD"
          },
          {
            "value": "ANG"
          },
          {
            "value": "AOA"
          },
          {
            "value": "ARS"
          },
          {
            "value": "AUD"
          },
          {
            "value": "AWG"
          },
          {
            "value": "AZN"
          },
          {
            "value": "BAM"
          },
          {
            "value": "BBD"
          },
          {
            "value": "BDT"
          },
          {
            "value": "BGN"
          },
          {
            "value": "BHD"
          },
          {
            "value": "BIF"
          },
          {
            "value": "BMD"
          },
          {
            "value": "BND"
          },
          {
            "value": "BOB"
          },
          {
            "value": "BOV"
          },
          {
            "value": "BRL"
          },
          {
            "value": "BSD"
          },
          {
            "value": "BTN"
          },
          {
            "value": "BWP"
          },
          {
            "value": "BYR"
          },
          {
            "value": "BYN"
          },
          {
            "value": "BZD"
          },
          {
            "value": "CAD"
          },
          {
            "value": "CDF"
          },
          {
            "value": "CHE"
          },
          {
            "value": "CHF"
          },
          {
            "value": "CHW"
          },
          {
            "value": "CLF"
          },
          {
            "value": "CLP"
          },
          {
            "value": "CNY"
          },
          {
            "value": "COP"
          },
          {
            "value": "COU"
          },
          {
            "value": "CRC"
          },
          {
            "value": "CUC"
          },
          {
            "value": "CUP"
          },
          {
            "value": "CVE"
          },
          {
            "value": "CZK"
          },
          {
            "value": "DJF"
          },
          {
            "value": "DKK"
          },
          {
            "value": "DOP"
          },
          {
            "value": "DZD"
          },
          {
            "value": "EGP"
          },
          {
            "value": "ERN"
          },
          {
            "value": "ETB"
          },
          {
            "value": "EUR"
          },
          {
            "value": "FJD"
          },
          {
            "value": "FKP"
          },
          {
            "value": "GBP"
          },
          {
            "value": "GEL"
          },
          {
            "value": "GHS"
          },
          {
            "value": "GIP"
          },
          {
            "value": "GMD"
          },
          {
            "value": "GNF"
          },
          {
            "value": "GTQ"
          },
          {
            "value": "GYD"
          },
          {
            "value": "HKD"
          },
          {
            "value": "HNL"
          },
          {
            "value": "HRK"
          },
          {
            "value": "HTG"
          },
          {
            "value": "HUF"
          },
          {
            "value": "IDR"
          },
          {
            "value": "ILS"
          },
          {
            "value": "INR"
          },
          {
            "value": "IQD"
          },
          {
            "value": "IRR"
          },
          {
            "value": "ISK"
          },
          {
            "value": "JMD"
          },
          {
            "value": "JOD"
          },
          {
            "value": "JPY"
          },
          {
            "value": "KES"
          },
          {
            "value": "KGS"
          },
          {
            "value": "KHR"
          },
          {
            "value": "KMF"
          },
          {
            "value": "KPW"
          },
          {
            "value": "KRW"
          },
          {
            "value": "KWD"
          },
          {
            "value": "KYD"
          },
          {
            "value": "KZT"
          },
          {
            "value": "LAK"
          },
          {
            "value": "LBP"
          },
          {
            "value": "LKR"
          },
          {
            "value": "LRD"
          },
          {
            "value": "LSL"
          },
          {
            "value": "LTL"
          },
          {
            "value": "LVL"
          },
          {
            "value": "LYD"
          },
          {
            "value": "MAD"
          },
          {
            "value": "MDL"
          },
          {
            "value": "MGA"
          },
          {
            "value": "MKD"
          },
          {
            "value": "MMK"
          },
          {
            "value": "MNT"
          },
          {
            "value": "MOP"
          },
          {
            "value": "MRO"
          },
          {
            "value": "MUR"
          },
          {
            "value": "MVR"
          },
          {
            "value": "MWK"
          },
          {
            "value": "MXN"
          },
          {
            "value": "MXV"
          },
          {
            "value": "MYR"
          },
          {
            "value": "MZN"
          },
          {
            "value": "NAD"
          },
          {
            "value": "NGN"
          },
          {
            "value": "NIO"
          },
          {
            "value": "NOK"
          },
          {
            "value": "NPR"
          },
          {
            "value": "NZD"
          },
          {
            "value": "OMR"
          },
          {
            "value": "PAB"
          },
          {
            "value": "PEN"
          },
          {
            "value": "PGK"
          },
          {
            "value": "PHP"
          },
          {
            "value": "PKR"
          },
          {
            "value": "PLN"
          },
          {
            "value": "PYG"
          },
          {
            "value": "QAR"
          },
          {
            "value": "RON"
          },
          {
            "value": "RSD"
          },
          {
            "value": "RUB"
          },
          {
            "value": "RWF"
          },
          {
            "value": "SAR"
          },
          {
            "value": "SBD"
          },
          {
            "value": "SCR"
          },
          {
            "value": "SDG"
          },
          {
            "value": "SEK"
          },
          {
            "value": "SGD"
          },
          {
            "value": "SHP"
          },
          {
            "value": "SLL"
          },
          {
            "value": "SOS"
          },
          {
            "value": "SRD"
          },
          {
            "value": "SSP"
          },
          {
            "value": "STD"
          },
          {
            "value": "SVC"
          },
          {
            "value": "SYP"
          },
          {
            "value": "SZL"
          },
          {
            "value": "THB"
          },
          {
            "value": "TJS"
          },
          {
            "value": "TMT"
          },
          {
            "value": "TND"
          },
          {
            "value": "TOP"
          },
          {
            "value": "TRY"
          },
          {
            "value": "TTD"
          },
          {
            "value": "TWD"
          },
          {
            "value": "TZS"
          },
          {
            "value": "UAH"
          },
          {
            "value": "UGX"
          },
          {
            "value": "USD"
          },
          {
            "value": "USN"
          },
          {
            "value": "USS"
          },
          {
            "value": "UYI"
          },
          {
            "value": "UYU"
          },
          {
            "value": "UZS"
          },
          {
            "value": "VEF"
          },
          {
            "value": "VND"
          },
          {
            "value": "VUV"
          },
          {
            "value": "WST"
          },
          {
            "value": "XAF"
          },
          {
            "value": "XAG"
          },
          {
            "value": "XAU"
          },
          {
            "value": "XBA"
          },
          {
            "value": "XBB"
          },
          {
            "value": "XBC"
          },
          {
            "value": "XBD"
          },
          {
            "value": "XCD"
          },
          {
            "value": "XDR"
          },
          {
            "value": "XFU"
          },
          {
            "value": "XOF"
          },
          {
            "value": "XPD"
          },
          {
            "value": "XPF"
          },
          {
            "value": "XPT"
          },
          {
            "value": "XSU"
          },
          {
            "value": "XTS"
          },
          {
            "value": "XUA"
          },
          {
            "value": "YER"
          },
          {
            "value": "ZAR"
          },
          {
            "value": "ZMW"
          },
          {
            "value": "ZWL"
          }
        ],
        "type": "enum"
      }
    },
    "type_:PaymentsInsightsPatchedPaymentStatus": {
      "description": "See the payment [status table](\nhttps://apiref.primer.io/docs#payment-status) for more information.",
      "name": "PaymentsInsightsPatchedPaymentStatus",
      "shape": {
        "values": [
          {
            "value": "DECLINED"
          },
          {
            "value": "CANCELLED"
          },
          {
            "value": "FAILED"
          },
          {
            "value": "SETTLING"
          },
          {
            "value": "PARTIALLY_SETTLED"
          },
          {
            "value": "AUTHORIZED"
          },
          {
            "value": "SETTLED"
          },
          {
            "value": "PENDING"
          }
        ],
        "type": "enum"
      }
    },
    "type_:PaymentsInsightsPatchedPaymentPaymentType": {
      "description": "Payment types, primarily to be used for recurring payments.\n\nNote: If you successfully vault a `SINGLE_USE` token on payment\ncreation, then there's no need to set a value for this field and it will\nbe flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all\npossible values.\n\n\n| paymentType | Use case |\n| --- | --- |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE` | a customer-initiated payment using stored payment details where the cardholder is present. |\n| `SUBSCRIPTION` | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount. |\n| `UNSCHEDULED` | a merchant-initiated payment using stored payment details with no fixed schedule or amount. |\n| `MOTO` | a merchant-initiated mail order or telephone order payment. |\n| `IN_STORE` | a customer-initiated payment where the customer is physically present in a shop. |",
      "name": "PaymentsInsightsPatchedPaymentPaymentType",
      "shape": {
        "values": [
          {
            "value": "FIRST_PAYMENT"
          },
          {
            "value": "ECOMMERCE"
          },
          {
            "value": "SUBSCRIPTION"
          },
          {
            "value": "UNSCHEDULED"
          },
          {
            "value": "MOTO"
          },
          {
            "value": "IN_STORE"
          }
        ],
        "type": "enum"
      }
    },
    "type_:AccountFundingTypeEnum": {
      "description": "An enumeration.",
      "name": "AccountFundingTypeEnum",
      "shape": {
        "values": [
          {
            "value": "CREDIT"
          },
          {
            "value": "DEBIT"
          },
          {
            "value": "PREPAID"
          },
          {
            "value": "CHARGE"
          },
          {
            "value": "DEFERRED_DEBIT"
          },
          {
            "value": "UNKNOWN"
          }
        ],
        "type": "enum"
      }
    },
    "type_:ApayaCustomerTokenApiSchema": {
      "name": "ApayaCustomerTokenApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "mx",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "mnc",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "mcc",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:BinDataApiSchema": {
      "name": "BinDataApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "network",
            "valueType": {
              "value": "type_:CardNetworkEnum",
              "type": "id"
            }
          },
          {
            "key": "issuerCountryCode",
            "valueType": {
              "itemType": {
                "value": "type_:CountryCodeEnum",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "issuerName",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "issuerCurrencyCode",
            "valueType": {
              "itemType": {
                "value": "type_:Currency",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "regionalRestriction",
            "valueType": {
              "value": "type_:CardRegionRestrictionEnum",
              "type": "id"
            }
          },
          {
            "key": "accountNumberType",
            "valueType": {
              "value": "type_:CardAccountNumberTypeEnum",
              "type": "id"
            }
          },
          {
            "key": "accountFundingType",
            "valueType": {
              "value": "type_:AccountFundingTypeEnum",
              "type": "id"
            }
          },
          {
            "key": "prepaidReloadableIndicator",
            "valueType": {
              "value": "type_:PrepaidReloadableEnum",
              "type": "id"
            }
          },
          {
            "key": "productUsageType",
            "valueType": {
              "value": "type_:CardProductTypeEnum",
              "type": "id"
            }
          },
          {
            "key": "productCode",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "productName",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:BlockingPaymentActionTypeEnum": {
      "description": "An enumeration.",
      "name": "BlockingPaymentActionTypeEnum",
      "shape": {
        "values": [
          {
            "value": "3DS_AUTHENTICATION"
          },
          {
            "value": "USE_PRIMER_SDK"
          },
          {
            "value": "PAYMENT_METHOD_VOUCHER"
          },
          {
            "value": "PROCESSOR_3DS"
          }
        ],
        "type": "enum"
      }
    },
    "type_:CardAccountNumberTypeEnum": {
      "description": "An enumeration.",
      "name": "CardAccountNumberTypeEnum",
      "shape": {
        "values": [
          {
            "value": "PRIMARY_ACCOUNT_NUMBER"
          },
          {
            "value": "NETWORK_TOKEN"
          },
          {
            "value": "UNKNOWN"
          }
        ],
        "type": "enum"
      }
    },
    "type_:CardNetworkEnum": {
      "description": "The list of available card networks.\n",
      "name": "CardNetworkEnum",
      "shape": {
        "values": [
          {
            "value": "AMEX"
          },
          {
            "value": "DANKORT"
          },
          {
            "value": "DINERS_CLUB"
          },
          {
            "value": "DISCOVER"
          },
          {
            "value": "ENROUTE"
          },
          {
            "value": "ELO"
          },
          {
            "value": "HIPER"
          },
          {
            "value": "INTERAC"
          },
          {
            "value": "JCB"
          },
          {
            "value": "MAESTRO"
          },
          {
            "value": "MASTERCARD"
          },
          {
            "value": "MIR"
          },
          {
            "value": "PRIVATE_LABEL"
          },
          {
            "value": "UNIONPAY"
          },
          {
            "value": "VISA"
          },
          {
            "value": "OTHER"
          }
        ],
        "type": "enum"
      }
    },
    "type_:CardProductTypeEnum": {
      "description": "An enumeration.",
      "name": "CardProductTypeEnum",
      "shape": {
        "values": [
          {
            "value": "CONSUMER"
          },
          {
            "value": "BUSINESS"
          },
          {
            "value": "GOVERNMENT"
          },
          {
            "value": "UNKNOWN"
          }
        ],
        "type": "enum"
      }
    },
    "type_:CardRegionRestrictionEnum": {
      "description": "An enumeration.",
      "name": "CardRegionRestrictionEnum",
      "shape": {
        "values": [
          {
            "value": "DOMESTIC_USE_ONLY"
          },
          {
            "value": "NONE"
          },
          {
            "value": "UNKNOWN"
          }
        ],
        "type": "enum"
      }
    },
    "type_:OrderDetailsApiSchema": {
      "name": "OrderDetailsApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The details of the line items of the order.",
            "key": "lineItems",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_:OrderLineItemsApiSchema",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "description": "The country in which the order is created",
            "key": "countryCode",
            "valueType": {
              "itemType": {
                "value": "type_:CountryCodeEnum",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "The country code of the retailer",
            "key": "retailerCountryCode",
            "valueType": {
              "itemType": {
                "value": "type_:CountryCodeEnum",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "The details of fees charged.",
            "key": "fees",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_:OrderFeesApiSchema",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "description": "The details of shipping charged.",
            "key": "shipping",
            "valueType": {
              "itemType": {
                "value": "type_:OrderShippingApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:OrderFeesApiSchema": {
      "name": "OrderFeesApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The fee amount charged to the customer, in minor  units. e.g. for $7, use `700`.",
            "key": "amount",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "description": "The type of fee. <span style=\"white-space: nowrap\">`non-empty`</span> <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "type",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "A description of the fee, e.g. \"Currency Conversion Fee\". <span style=\"white-space: nowrap\">`non-empty`</span> <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "description",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:OrderLineItemsApiSchema": {
      "description": "The details of the line items of the order.\n\nThe total amount of a line item is calculated like so: \n````\n  totalAmount = (amount * quantity) - discountAmount + taxAmount\n```\n",
      "name": "OrderLineItemsApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "A unique identifier for the line item. <span style=\"white-space: nowrap\">`non-empty`</span> <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "itemId",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "A name of the item. <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "A description of the item. <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "description",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The amount charged to the customer, in minor units. The minimum amount is 0.",
            "key": "amount",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "description": "The number of the particular line item that is being ordered.",
            "key": "quantity",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Any discount applicable to this item, in minor units. This discount is applied for the entire line item, and not per `quantity`.",
            "key": "discountAmount",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The tax charged on this item, in minor units. This tax amount is applied for the entire line item, and not per `quantity`.",
            "key": "taxAmount",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The tax code associated with this item, in minor units. This is required for Primer-initiated tax calculations. <span style=\"white-space: nowrap\">`non-empty`</span> <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "taxCode",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "An identifier for the product type.",
            "key": "productType",
            "valueType": {
              "itemType": {
                "value": "type_:ProductTypeEnum",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Details related to the product",
            "key": "productData",
            "valueType": {
              "itemType": {
                "value": "type_:OrderLineItemsProductDataApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:OrderLineItemsProductDataApiSchema": {
      "description": "Details related to the product",
      "name": "OrderLineItemsProductDataApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The product SKU <span style=\"white-space: nowrap\">`non-empty`</span> <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "sku",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The product brand <span style=\"white-space: nowrap\">`non-empty`</span> <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "brand",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The product color <span style=\"white-space: nowrap\">`non-empty`</span> <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "color",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The product Global Trade Item Number (e.g. ISBN) <span style=\"white-space: nowrap\">`non-empty`</span> <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "globalTradeItemNumber",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The product Manufacturer Part Number <span style=\"white-space: nowrap\">`non-empty`</span> <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "manufacturerPartNumber",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The product weight",
            "key": "weight",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "double"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The product weight unit (e.g. kg, g) <span style=\"white-space: nowrap\">`non-empty`</span> <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "weightUnit",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:OrderShippingApiSchema": {
      "name": "OrderShippingApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The shipping amount charged to the customer, in minor units. e.g. for $7, use `700`.",
            "key": "amount",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:CheckoutPaymentMethodOptionsApiSchema": {
      "name": "CheckoutPaymentMethodOptionsApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "Whether the payment method should be vaulted on a successful payment or not.",
            "key": "vaultOnSuccess",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Whether the payment method should be vaulted after a successful 3DS authentication or not.",
            "key": "vaultOn3DS",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "A description of the payment, as it would typically appear on a bank statement. <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "descriptor",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "paymentType",
            "valueType": {
              "itemType": {
                "value": "type_:RecurringPaymentTypeSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Additional options for the payment methods represented as dictionary \nwith key of [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) and value of corresponding options.\n",
            "key": "options",
            "valueType": {
              "itemType": {
                "value": "type_:CheckoutPaymentMethodOptionsApiSchemaOptions",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Allows to adjust the authorized amount after the authorization, if supported by payment method.\n`FINAL` - the authorized amount is final and can not be adjusted. Adjusting the amount can be only done via canceling the payment and re-authorization with new amount.\n`ESTIMATED` - the amount can be adjusted after the authorization, if supported by payment method.\n",
            "key": "authorizationType",
            "valueType": {
              "itemType": {
                "value": "type_:AuthorizationTypeEnum",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:CheckoutPaymentMethodOptionsApiSchemaOptions": {
      "description": "Additional options for the payment methods represented as dictionary \nwith key of [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) and value of corresponding options.\n",
      "name": "CheckoutPaymentMethodOptionsApiSchemaOptions",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "<PAYMENT_METHOD_TYPE>",
            "valueType": {
              "itemType": {
                "value": "type_:CheckoutPaymentMethodOptionApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "PAYMENT_CARD",
            "valueType": {
              "itemType": {
                "value": "type_:CheckoutPaymentMethodCardOptionApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:CheckoutPaymentMethodOptionApiSchema": {
      "description": "Options for the payment method of type `PAYMENT_METHOD_TYPE`.\n",
      "name": "CheckoutPaymentMethodOptionApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "Surcharge information",
            "key": "surcharge",
            "valueType": {
              "value": "type_:CheckoutPaymentMethodOptionSurchargeApiSchema",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:CheckoutPaymentMethodCardOptionApiSchema": {
      "name": "CheckoutPaymentMethodCardOptionApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "Dictionary of available card networks as a key with value of Payment Method Card Network Option.",
            "key": "networks",
            "valueType": {
              "itemType": {
                "value": "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema": {
      "name": "CheckoutPaymentMethodOptionCardNetworkApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "AMEX",
            "valueType": {
              "itemType": {
                "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "DANKORT",
            "valueType": {
              "itemType": {
                "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "DINERS_CLUB",
            "valueType": {
              "itemType": {
                "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "DISCOVER",
            "valueType": {
              "itemType": {
                "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "ENROUTE",
            "valueType": {
              "itemType": {
                "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "ELO",
            "valueType": {
              "itemType": {
                "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "HIPER",
            "valueType": {
              "itemType": {
                "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "INTERAC",
            "valueType": {
              "itemType": {
                "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "JCB",
            "valueType": {
              "itemType": {
                "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "MAESTRO",
            "valueType": {
              "itemType": {
                "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "MASTERCARD",
            "valueType": {
              "itemType": {
                "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "MIR",
            "valueType": {
              "itemType": {
                "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "PRIVATE_LABEL",
            "valueType": {
              "itemType": {
                "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "UNIONPAY",
            "valueType": {
              "itemType": {
                "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "VISA",
            "valueType": {
              "itemType": {
                "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "OTHER",
            "valueType": {
              "itemType": {
                "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema": {
      "name": "CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "Surcharge information",
            "key": "surcharge",
            "valueType": {
              "itemType": {
                "value": "type_:CheckoutPaymentMethodOptionSurchargeApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:CheckoutPaymentMethodOptionSurchargeApiSchema": {
      "name": "CheckoutPaymentMethodOptionSurchargeApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The surcharge amount, in minor units. Surcharge amount must be used in conjunction with line item amounts, if a top level amount is passed then surcharge will not be calculated.",
            "key": "amount",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:PaymentRequestPaymentMethodOptionsApiSchema": {
      "name": "PaymentRequestPaymentMethodOptionsApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "Whether the payment method should be vaulted on a successful payment or not.",
            "key": "vaultOnSuccess",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Whether the payment method should be vaulted after a successful 3DS authentication or not.",
            "key": "vaultOn3DS",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "A description of the payment, as it would typically appear on a bank statement. <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "descriptor",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "paymentType",
            "valueType": {
              "itemType": {
                "value": "type_:RecurringPaymentTypeSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Allows to adjust the authorized amount after the authorization, if supported by payment method.\n`FINAL` - the authorized amount is final and can not be adjusted. Adjusting the amount can be only done via canceling the payment and re-authorization with new amount.\n`ESTIMATED` - the amount can be adjusted after the authorization, if supported by payment method.\nDefaults to `FINAL`.\n",
            "key": "authorizationType",
            "valueType": {
              "itemType": {
                "value": "type_:AuthorizationTypeEnum",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:PaymentResponsePaymentMethodOptionsApiSchema": {
      "name": "PaymentResponsePaymentMethodOptionsApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The description of the payment, as it would typically appear\non a bank statement.\n <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "descriptor",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "paymentType",
            "valueType": {
              "itemType": {
                "value": "type_:RecurringPaymentTypeSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "The payment method token used to authorize the transaction.",
            "key": "paymentMethodToken",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Whether the payment method token represents a vaulted payment method and can be used for future payments.",
            "key": "isVaulted",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Unique analytics identifier corresponding to a payment method <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "analyticsId",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Payment method type used for payment authorization.",
            "key": "paymentMethodType",
            "valueType": {
              "itemType": {
                "value": "type_:PaymentMethodTypeEnum",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Payment method data",
            "key": "paymentMethodData",
            "valueType": {
              "itemType": {
                "value": "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "threeDSecureAuthentication",
            "valueType": {
              "itemType": {
                "value": "type_:ThreeDSecureAuthenticationApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Allows to adjust the authorized amount after the authorization, if supported by payment method. `FINAL` - the authorized amount is final and can not be adjusted. Adjusting the amount can be only done via canceling the payment and re-authorization with new amount. `ESTIMATED` - the amount can be adjusted after the authorization, if supported by payment method.",
            "key": "authorizationType",
            "valueType": {
              "itemType": {
                "value": "type_:AuthorizationTypeEnum",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData": {
      "description": "Payment method data",
      "name": "PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData",
      "shape": {
        "variants": [
          {
            "type": {
              "value": "type_:PaymentCardTokenApiSchema",
              "type": "id"
            }
          },
          {
            "type": {
              "value": "type_:PayPalOrderTokenApiSchema",
              "type": "id"
            }
          },
          {
            "type": {
              "value": "type_:PayPalBillingAgreementApiSchema",
              "type": "id"
            }
          },
          {
            "type": {
              "value": "type_:GoCardlessMandateApiSchema",
              "type": "id"
            }
          },
          {
            "type": {
              "value": "type_:KlarnaPaymentSessionApiSchema",
              "type": "id"
            }
          },
          {
            "type": {
              "value": "type_:KlarnaCustomerTokenApiSchema",
              "type": "id"
            }
          },
          {
            "type": {
              "value": "type_:IdealPayNlTokenApiSchema",
              "type": "id"
            }
          },
          {
            "type": {
              "value": "type_:ApayaCustomerTokenApiSchema",
              "type": "id"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      }
    },
    "type_:CheckoutCustomerDetailsApiSchema": {
      "name": "CheckoutCustomerDetailsApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "Customer email address. <br />Must be a valid email address. Supports internationalized email addresses.\n",
            "key": "emailAddress",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The customer's mobile number <span style=\"white-space: nowrap\">`non-empty`</span> <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "mobileNumber",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The customer's first name <span style=\"white-space: nowrap\">`non-empty`</span> <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "firstName",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The customer's last name <span style=\"white-space: nowrap\">`non-empty`</span> <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "lastName",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Customer billing address.\n",
            "key": "billingAddress",
            "valueType": {
              "itemType": {
                "value": "type_:OptionalAddressApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Customer shipping address",
            "key": "shippingAddress",
            "valueType": {
              "itemType": {
                "value": "type_:OptionalAddressApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "The customer's tax id number for tax exemptions <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "taxId",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The customer's national identification number <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "nationalDocumentId",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:CustomerDetailsApiSchema": {
      "name": "CustomerDetailsApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "Customer email address.\n\nNote: It is recommended to include this field if a 3DS check will be performed\n",
            "key": "emailAddress",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The customer's mobile number <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "mobileNumber",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The customer's first name <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "firstName",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The customer's last name <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "lastName",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Customer billing address.\n\nNote: It is recommended to include this field if a 3DS check will be performed\n",
            "key": "billingAddress",
            "valueType": {
              "itemType": {
                "value": "type_:OptionalAddressApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Customer shipping address",
            "key": "shippingAddress",
            "valueType": {
              "itemType": {
                "value": "type_:OptionalAddressApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "The customer's tax id number for tax exemptions <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "taxId",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The customer's national identification number <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "nationalDocumentId",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:ClientSessionWithTokenApiResponse": {
      "name": "ClientSessionWithTokenApiResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "Client token used to initialize the SDK on all platforms.",
            "key": "clientToken",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Expiration date & time of the client token (UTC with no timezoneinfo).",
            "key": "clientTokenExpirationDate",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "datetime"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Your reference for the payment.",
            "key": "orderId",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
            "key": "currencyCode",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for Â¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts.",
            "key": "amount",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "More information associated with the order.",
            "key": "order",
            "valueType": {
              "itemType": {
                "value": "type_:OrderDetailsApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "A unique identifier for your customer.",
            "key": "customerId",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "More information associated with the customer.",
            "key": "customer",
            "valueType": {
              "itemType": {
                "value": "type_:CustomerDetailsApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Additional data to be used throughout the payment lifecycle.\n",
            "key": "metadata",
            "valueType": {
              "itemType": {
                "keyType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "valueType": {
                  "type": "unknown"
                },
                "type": "map"
              },
              "type": "optional"
            }
          },
          {
            "description": "Enable certain options associated with the payment methods.",
            "key": "paymentMethod",
            "valueType": {
              "itemType": {
                "value": "type_:CheckoutPaymentMethodOptionsApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Warning messages to indicate missing information that are required for payment methods, checkout modules and other features; or when third-party services are unavailable.",
            "key": "warnings",
            "valueType": {
              "itemType": {
                "value": "type_:ClientSessionWarningsApiResponse",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:ClientSessionApiResponse": {
      "name": "ClientSessionApiResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "A unique identifier for your customer. <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "customerId",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Your reference for the payment. <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "orderId",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
            "key": "currencyCode",
            "valueType": {
              "itemType": {
                "value": "type_:Currency",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "The amount you are going to charge the customer, in minor units. This amount is calculated from the line items, shipping and other amounts provided in the `order`. \nIf a top-level amount is provided, it would override any calculated amount.",
            "key": "amount",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Additional data to be used throughout the payment lifecycle.\n",
            "key": "metadata",
            "valueType": {
              "itemType": {
                "keyType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "valueType": {
                  "type": "unknown"
                },
                "type": "map"
              },
              "type": "optional"
            }
          },
          {
            "description": "More information associated with the customer.",
            "key": "customer",
            "valueType": {
              "itemType": {
                "value": "type_:CustomerDetailsApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "More information associated with the order.",
            "key": "order",
            "valueType": {
              "itemType": {
                "value": "type_:OrderDetailsApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Enable certain options associated with the payment methods.",
            "key": "paymentMethod",
            "valueType": {
              "itemType": {
                "value": "type_:CheckoutPaymentMethodOptionsApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:ClientSessionWarningsApiResponse": {
      "name": "ClientSessionWarningsApiResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The type of the connection involved",
            "key": "type",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "A unique code describing the particular issue",
            "key": "code",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "More information as to the reason for the warning",
            "key": "message",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:CountryCodeEnum": {
      "description": "2-letter country code in <a href='https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements'>ISO 3166-1 alpha</a> format, \ne.g. <code>FR</code> for France and <code>GB</code> for the United Kingdom.\n",
      "name": "CountryCodeEnum",
      "shape": {
        "values": [
          {
            "value": "AW"
          },
          {
            "value": "AF"
          },
          {
            "value": "AO"
          },
          {
            "value": "AI"
          },
          {
            "value": "AX"
          },
          {
            "value": "AL"
          },
          {
            "value": "AD"
          },
          {
            "value": "AE"
          },
          {
            "value": "AR"
          },
          {
            "value": "AM"
          },
          {
            "value": "AS"
          },
          {
            "value": "AQ"
          },
          {
            "value": "TF"
          },
          {
            "value": "AG"
          },
          {
            "value": "AU"
          },
          {
            "value": "AT"
          },
          {
            "value": "AZ"
          },
          {
            "value": "BI"
          },
          {
            "value": "BE"
          },
          {
            "value": "BJ"
          },
          {
            "value": "BQ"
          },
          {
            "value": "BF"
          },
          {
            "value": "BD"
          },
          {
            "value": "BG"
          },
          {
            "value": "BH"
          },
          {
            "value": "BS"
          },
          {
            "value": "BA"
          },
          {
            "value": "BL"
          },
          {
            "value": "BY"
          },
          {
            "value": "BZ"
          },
          {
            "value": "BM"
          },
          {
            "value": "BO"
          },
          {
            "value": "BR"
          },
          {
            "value": "BB"
          },
          {
            "value": "BN"
          },
          {
            "value": "BT"
          },
          {
            "value": "BV"
          },
          {
            "value": "BW"
          },
          {
            "value": "CF"
          },
          {
            "value": "CA"
          },
          {
            "value": "CC"
          },
          {
            "value": "CH"
          },
          {
            "value": "CL"
          },
          {
            "value": "CN"
          },
          {
            "value": "CI"
          },
          {
            "value": "CM"
          },
          {
            "value": "CD"
          },
          {
            "value": "CG"
          },
          {
            "value": "CK"
          },
          {
            "value": "CO"
          },
          {
            "value": "KM"
          },
          {
            "value": "CV"
          },
          {
            "value": "CR"
          },
          {
            "value": "CU"
          },
          {
            "value": "CW"
          },
          {
            "value": "CX"
          },
          {
            "value": "KY"
          },
          {
            "value": "CY"
          },
          {
            "value": "CZ"
          },
          {
            "value": "DE"
          },
          {
            "value": "DJ"
          },
          {
            "value": "DM"
          },
          {
            "value": "DK"
          },
          {
            "value": "DO"
          },
          {
            "value": "DZ"
          },
          {
            "value": "EC"
          },
          {
            "value": "EG"
          },
          {
            "value": "ER"
          },
          {
            "value": "EH"
          },
          {
            "value": "ES"
          },
          {
            "value": "EE"
          },
          {
            "value": "ET"
          },
          {
            "value": "FI"
          },
          {
            "value": "FJ"
          },
          {
            "value": "FK"
          },
          {
            "value": "FR"
          },
          {
            "value": "FO"
          },
          {
            "value": "FM"
          },
          {
            "value": "GA"
          },
          {
            "value": "GB"
          },
          {
            "value": "GE"
          },
          {
            "value": "GG"
          },
          {
            "value": "GH"
          },
          {
            "value": "GI"
          },
          {
            "value": "GN"
          },
          {
            "value": "GP"
          },
          {
            "value": "GM"
          },
          {
            "value": "GW"
          },
          {
            "value": "GQ"
          },
          {
            "value": "GR"
          },
          {
            "value": "GD"
          },
          {
            "value": "GL"
          },
          {
            "value": "GT"
          },
          {
            "value": "GF"
          },
          {
            "value": "GU"
          },
          {
            "value": "GY"
          },
          {
            "value": "HK"
          },
          {
            "value": "HM"
          },
          {
            "value": "HN"
          },
          {
            "value": "HR"
          },
          {
            "value": "HT"
          },
          {
            "value": "HU"
          },
          {
            "value": "ID"
          },
          {
            "value": "IM"
          },
          {
            "value": "IN"
          },
          {
            "value": "IO"
          },
          {
            "value": "IE"
          },
          {
            "value": "IR"
          },
          {
            "value": "IQ"
          },
          {
            "value": "IS"
          },
          {
            "value": "IL"
          },
          {
            "value": "IT"
          },
          {
            "value": "JM"
          },
          {
            "value": "JE"
          },
          {
            "value": "JO"
          },
          {
            "value": "JP"
          },
          {
            "value": "KZ"
          },
          {
            "value": "KE"
          },
          {
            "value": "KG"
          },
          {
            "value": "KH"
          },
          {
            "value": "KI"
          },
          {
            "value": "KN"
          },
          {
            "value": "KR"
          },
          {
            "value": "KW"
          },
          {
            "value": "LA"
          },
          {
            "value": "LB"
          },
          {
            "value": "LR"
          },
          {
            "value": "LY"
          },
          {
            "value": "LC"
          },
          {
            "value": "LI"
          },
          {
            "value": "LK"
          },
          {
            "value": "LS"
          },
          {
            "value": "LT"
          },
          {
            "value": "LU"
          },
          {
            "value": "LV"
          },
          {
            "value": "MO"
          },
          {
            "value": "MF"
          },
          {
            "value": "MA"
          },
          {
            "value": "MC"
          },
          {
            "value": "MD"
          },
          {
            "value": "MG"
          },
          {
            "value": "MV"
          },
          {
            "value": "MX"
          },
          {
            "value": "MH"
          },
          {
            "value": "MK"
          },
          {
            "value": "ML"
          },
          {
            "value": "MT"
          },
          {
            "value": "MM"
          },
          {
            "value": "ME"
          },
          {
            "value": "MN"
          },
          {
            "value": "MP"
          },
          {
            "value": "MZ"
          },
          {
            "value": "MR"
          },
          {
            "value": "MS"
          },
          {
            "value": "MQ"
          },
          {
            "value": "MU"
          },
          {
            "value": "MW"
          },
          {
            "value": "MY"
          },
          {
            "value": "YT"
          },
          {
            "value": "NA"
          },
          {
            "value": "NC"
          },
          {
            "value": "NE"
          },
          {
            "value": "NF"
          },
          {
            "value": "NG"
          },
          {
            "value": "NI"
          },
          {
            "value": "NU"
          },
          {
            "value": "NL"
          },
          {
            "value": "NO"
          },
          {
            "value": "NP"
          },
          {
            "value": "NR"
          },
          {
            "value": "NZ"
          },
          {
            "value": "OM"
          },
          {
            "value": "PK"
          },
          {
            "value": "PA"
          },
          {
            "value": "PN"
          },
          {
            "value": "PE"
          },
          {
            "value": "PH"
          },
          {
            "value": "PW"
          },
          {
            "value": "PG"
          },
          {
            "value": "PL"
          },
          {
            "value": "PR"
          },
          {
            "value": "KP"
          },
          {
            "value": "PT"
          },
          {
            "value": "PY"
          },
          {
            "value": "PS"
          },
          {
            "value": "PF"
          },
          {
            "value": "QA"
          },
          {
            "value": "RE"
          },
          {
            "value": "RO"
          },
          {
            "value": "RU"
          },
          {
            "value": "RW"
          },
          {
            "value": "SA"
          },
          {
            "value": "SD"
          },
          {
            "value": "SN"
          },
          {
            "value": "SG"
          },
          {
            "value": "GS"
          },
          {
            "value": "SH"
          },
          {
            "value": "SJ"
          },
          {
            "value": "SB"
          },
          {
            "value": "SL"
          },
          {
            "value": "SV"
          },
          {
            "value": "SM"
          },
          {
            "value": "SO"
          },
          {
            "value": "PM"
          },
          {
            "value": "RS"
          },
          {
            "value": "SS"
          },
          {
            "value": "ST"
          },
          {
            "value": "SR"
          },
          {
            "value": "SK"
          },
          {
            "value": "SI"
          },
          {
            "value": "SE"
          },
          {
            "value": "SZ"
          },
          {
            "value": "SX"
          },
          {
            "value": "SC"
          },
          {
            "value": "SY"
          },
          {
            "value": "TC"
          },
          {
            "value": "TD"
          },
          {
            "value": "TG"
          },
          {
            "value": "TH"
          },
          {
            "value": "TJ"
          },
          {
            "value": "TK"
          },
          {
            "value": "TM"
          },
          {
            "value": "TL"
          },
          {
            "value": "TO"
          },
          {
            "value": "TT"
          },
          {
            "value": "TN"
          },
          {
            "value": "TR"
          },
          {
            "value": "TV"
          },
          {
            "value": "TW"
          },
          {
            "value": "TZ"
          },
          {
            "value": "UG"
          },
          {
            "value": "UA"
          },
          {
            "value": "UM"
          },
          {
            "value": "UY"
          },
          {
            "value": "US"
          },
          {
            "value": "UZ"
          },
          {
            "value": "VA"
          },
          {
            "value": "VC"
          },
          {
            "value": "VE"
          },
          {
            "value": "VG"
          },
          {
            "value": "VI"
          },
          {
            "value": "VN"
          },
          {
            "value": "VU"
          },
          {
            "value": "WF"
          },
          {
            "value": "WS"
          },
          {
            "value": "YE"
          },
          {
            "value": "ZA"
          },
          {
            "value": "ZM"
          },
          {
            "value": "ZW"
          }
        ],
        "type": "enum"
      }
    },
    "type_:Currency": {
      "description": "3-letter currency code in <a href='https://en.wikipedia.org/wiki/ISO_4217#Active_codes'>ISO 4217</a> format, \ne.g. <code>USD</code> for US dollars.\n",
      "name": "Currency",
      "shape": {
        "values": [
          {
            "value": "AED"
          },
          {
            "value": "AFN"
          },
          {
            "value": "ALL"
          },
          {
            "value": "AMD"
          },
          {
            "value": "ANG"
          },
          {
            "value": "AOA"
          },
          {
            "value": "ARS"
          },
          {
            "value": "AUD"
          },
          {
            "value": "AWG"
          },
          {
            "value": "AZN"
          },
          {
            "value": "BAM"
          },
          {
            "value": "BBD"
          },
          {
            "value": "BDT"
          },
          {
            "value": "BGN"
          },
          {
            "value": "BHD"
          },
          {
            "value": "BIF"
          },
          {
            "value": "BMD"
          },
          {
            "value": "BND"
          },
          {
            "value": "BOB"
          },
          {
            "value": "BOV"
          },
          {
            "value": "BRL"
          },
          {
            "value": "BSD"
          },
          {
            "value": "BTN"
          },
          {
            "value": "BWP"
          },
          {
            "value": "BYR"
          },
          {
            "value": "BYN"
          },
          {
            "value": "BZD"
          },
          {
            "value": "CAD"
          },
          {
            "value": "CDF"
          },
          {
            "value": "CHE"
          },
          {
            "value": "CHF"
          },
          {
            "value": "CHW"
          },
          {
            "value": "CLF"
          },
          {
            "value": "CLP"
          },
          {
            "value": "CNY"
          },
          {
            "value": "COP"
          },
          {
            "value": "COU"
          },
          {
            "value": "CRC"
          },
          {
            "value": "CUC"
          },
          {
            "value": "CUP"
          },
          {
            "value": "CVE"
          },
          {
            "value": "CZK"
          },
          {
            "value": "DJF"
          },
          {
            "value": "DKK"
          },
          {
            "value": "DOP"
          },
          {
            "value": "DZD"
          },
          {
            "value": "EGP"
          },
          {
            "value": "ERN"
          },
          {
            "value": "ETB"
          },
          {
            "value": "EUR"
          },
          {
            "value": "FJD"
          },
          {
            "value": "FKP"
          },
          {
            "value": "GBP"
          },
          {
            "value": "GEL"
          },
          {
            "value": "GHS"
          },
          {
            "value": "GIP"
          },
          {
            "value": "GMD"
          },
          {
            "value": "GNF"
          },
          {
            "value": "GTQ"
          },
          {
            "value": "GYD"
          },
          {
            "value": "HKD"
          },
          {
            "value": "HNL"
          },
          {
            "value": "HRK"
          },
          {
            "value": "HTG"
          },
          {
            "value": "HUF"
          },
          {
            "value": "IDR"
          },
          {
            "value": "ILS"
          },
          {
            "value": "INR"
          },
          {
            "value": "IQD"
          },
          {
            "value": "IRR"
          },
          {
            "value": "ISK"
          },
          {
            "value": "JMD"
          },
          {
            "value": "JOD"
          },
          {
            "value": "JPY"
          },
          {
            "value": "KES"
          },
          {
            "value": "KGS"
          },
          {
            "value": "KHR"
          },
          {
            "value": "KMF"
          },
          {
            "value": "KPW"
          },
          {
            "value": "KRW"
          },
          {
            "value": "KWD"
          },
          {
            "value": "KYD"
          },
          {
            "value": "KZT"
          },
          {
            "value": "LAK"
          },
          {
            "value": "LBP"
          },
          {
            "value": "LKR"
          },
          {
            "value": "LRD"
          },
          {
            "value": "LSL"
          },
          {
            "value": "LTL"
          },
          {
            "value": "LVL"
          },
          {
            "value": "LYD"
          },
          {
            "value": "MAD"
          },
          {
            "value": "MDL"
          },
          {
            "value": "MGA"
          },
          {
            "value": "MKD"
          },
          {
            "value": "MMK"
          },
          {
            "value": "MNT"
          },
          {
            "value": "MOP"
          },
          {
            "value": "MRO"
          },
          {
            "value": "MUR"
          },
          {
            "value": "MVR"
          },
          {
            "value": "MWK"
          },
          {
            "value": "MXN"
          },
          {
            "value": "MXV"
          },
          {
            "value": "MYR"
          },
          {
            "value": "MZN"
          },
          {
            "value": "NAD"
          },
          {
            "value": "NGN"
          },
          {
            "value": "NIO"
          },
          {
            "value": "NOK"
          },
          {
            "value": "NPR"
          },
          {
            "value": "NZD"
          },
          {
            "value": "OMR"
          },
          {
            "value": "PAB"
          },
          {
            "value": "PEN"
          },
          {
            "value": "PGK"
          },
          {
            "value": "PHP"
          },
          {
            "value": "PKR"
          },
          {
            "value": "PLN"
          },
          {
            "value": "PYG"
          },
          {
            "value": "QAR"
          },
          {
            "value": "RON"
          },
          {
            "value": "RSD"
          },
          {
            "value": "RUB"
          },
          {
            "value": "RWF"
          },
          {
            "value": "SAR"
          },
          {
            "value": "SBD"
          },
          {
            "value": "SCR"
          },
          {
            "value": "SDG"
          },
          {
            "value": "SEK"
          },
          {
            "value": "SGD"
          },
          {
            "value": "SHP"
          },
          {
            "value": "SLL"
          },
          {
            "value": "SOS"
          },
          {
            "value": "SRD"
          },
          {
            "value": "SSP"
          },
          {
            "value": "STD"
          },
          {
            "value": "SVC"
          },
          {
            "value": "SYP"
          },
          {
            "value": "SZL"
          },
          {
            "value": "THB"
          },
          {
            "value": "TJS"
          },
          {
            "value": "TMT"
          },
          {
            "value": "TND"
          },
          {
            "value": "TOP"
          },
          {
            "value": "TRY"
          },
          {
            "value": "TTD"
          },
          {
            "value": "TWD"
          },
          {
            "value": "TZS"
          },
          {
            "value": "UAH"
          },
          {
            "value": "UGX"
          },
          {
            "value": "USD"
          },
          {
            "value": "USN"
          },
          {
            "value": "USS"
          },
          {
            "value": "UYI"
          },
          {
            "value": "UYU"
          },
          {
            "value": "UZS"
          },
          {
            "value": "VEF"
          },
          {
            "value": "VND"
          },
          {
            "value": "VUV"
          },
          {
            "value": "WST"
          },
          {
            "value": "XAF"
          },
          {
            "value": "XAG"
          },
          {
            "value": "XAU"
          },
          {
            "value": "XBA"
          },
          {
            "value": "XBB"
          },
          {
            "value": "XBC"
          },
          {
            "value": "XBD"
          },
          {
            "value": "XCD"
          },
          {
            "value": "XDR"
          },
          {
            "value": "XFU"
          },
          {
            "value": "XOF"
          },
          {
            "value": "XPD"
          },
          {
            "value": "XPF"
          },
          {
            "value": "XPT"
          },
          {
            "value": "XSU"
          },
          {
            "value": "XTS"
          },
          {
            "value": "XUA"
          },
          {
            "value": "YER"
          },
          {
            "value": "ZAR"
          },
          {
            "value": "ZMW"
          },
          {
            "value": "ZWL"
          }
        ],
        "type": "enum"
      }
    },
    "type_:PaymentResponseProcessorApiSchema": {
      "name": "PaymentResponseProcessorApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The payment processor used for this payment. <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The merchant ID registered at the payment processor used for this payment. <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "processorMerchantId",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "If no capture was performed, this value will be set to `0`.\n\nIf one or more partial captures were performed, this value will be a sum\nof all partial capture amounts.\n",
            "key": "amountCaptured",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "If no refund was performed, this value will be set to `0`.\n\nIf one or more partial refunds were performed, this value will be a sum\nof all partial refund amounts.\n",
            "key": "amountRefunded",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:GoCardlessMandateApiSchema": {
      "name": "GoCardlessMandateApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier of a GoCardless mandate agreement",
            "key": "gocardlessMandateId",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:IdealPayNlTokenApiSchema": {
      "name": "IdealPayNlTokenApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "paymentMethodConfigId",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:KlarnaAddressApiSchema": {
      "name": "KlarnaAddressApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "title",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "firstName",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "lastName",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "email",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "phoneNumber",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "addressLine1",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "addressLine2",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "addressLine3",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "city",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "state",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "countryCode",
            "valueType": {
              "itemType": {
                "value": "type_:CountryCodeEnum",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "postalCode",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:KlarnaCustomerTokenApiSchema": {
      "name": "KlarnaCustomerTokenApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "klarnaCustomerToken",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "sessionData",
            "valueType": {
              "value": "type_:KlarnaSessionDetailsApiSchema",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:KlarnaPaymentSessionApiSchema": {
      "name": "KlarnaPaymentSessionApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "klarnaAuthorizationToken",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "sessionData",
            "valueType": {
              "value": "type_:KlarnaSessionDetailsApiSchema",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:KlarnaSessionDetailsApiSchema": {
      "name": "KlarnaSessionDetailsApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "recurringDescription",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "billingAddress",
            "valueType": {
              "value": "type_:KlarnaAddressApiSchema",
              "type": "id"
            }
          },
          {
            "key": "shippingAddress",
            "valueType": {
              "itemType": {
                "value": "type_:KlarnaAddressApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "purchaseCountry",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "purchaseCurrency",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "locale",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "orderLines",
            "valueType": {
              "itemType": {
                "type": "unknown"
              },
              "type": "list"
            }
          },
          {
            "key": "tokenDetails",
            "valueType": {
              "itemType": {
                "value": "type_:KlarnaTokenDetails",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:KlarnaTokenDetails": {
      "name": "KlarnaTokenDetails",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "brand",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "masked_number",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "expiry_date",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:PayPalBillingAgreementApiSchema": {
      "name": "PayPalBillingAgreementApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "paypalBillingAgreementId",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "Information about the PayPal customer",
            "key": "externalPayerInfo",
            "valueType": {
              "itemType": {
                "value": "type_:PayPalExternalPayerInfoApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "The PayPal customer's shipping address",
            "key": "shippingAddress",
            "valueType": {
              "itemType": {
                "value": "type_:AddressApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "paypalStatus",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:PayPalExternalPayerInfoApiSchema": {
      "name": "PayPalExternalPayerInfoApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "externalPayerId",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "email",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "firstName",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "lastName",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:PayPalOrderTokenApiSchema": {
      "name": "PayPalOrderTokenApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "paypalOrderId",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "Information about the PayPal customer",
            "key": "externalPayerInfo",
            "valueType": {
              "itemType": {
                "value": "type_:PayPalExternalPayerInfoApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "paypalStatus",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:PaymentApiResponse": {
      "name": "PaymentApiResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream\noperations.\n",
            "key": "id",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The date and time at which the payment was created in UTC format.",
            "key": "date",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "datetime"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "See the payment [status table](../docs#payment-status) for more information.",
            "key": "status",
            "valueType": {
              "itemType": {
                "value": "type_:PaymentStatus",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Your reference for the payment. <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "orderId",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
            "key": "currencyCode",
            "valueType": {
              "itemType": {
                "value": "type_:Currency",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "The amount you charged the customer, in minor units.",
            "key": "amount",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "More information associated with the order.",
            "key": "order",
            "valueType": {
              "itemType": {
                "value": "type_:OrderDetailsApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "The unique identifier for your customer. <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "customerId",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "More information associated with the customer.",
            "key": "customer",
            "valueType": {
              "itemType": {
                "value": "type_:CustomerDetailsApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Additional data to be used throughout the payment lifecycle.\n",
            "key": "metadata",
            "valueType": {
              "itemType": {
                "keyType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "valueType": {
                  "type": "unknown"
                },
                "type": "map"
              },
              "type": "optional"
            }
          },
          {
            "description": "The payment method options provided in the request, as well as the token used to process the payment.",
            "key": "paymentMethod",
            "valueType": {
              "itemType": {
                "value": "type_:PaymentResponsePaymentMethodOptionsApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "More information associated with the payment processor, including the processor name.",
            "key": "processor",
            "valueType": {
              "itemType": {
                "value": "type_:PaymentResponseProcessorApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Required action to perform in order to resume the payment workflow. This can be requiring a 3DS check from the customer for instance.",
            "key": "requiredAction",
            "valueType": {
              "itemType": {
                "value": "type_:PaymentRequiredActionApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Check this field for more information regarding the payment's status. This is especially useful when the status is `DECLINED` or `FAILED`.\n",
            "key": "statusReason",
            "valueType": {
              "itemType": {
                "value": "type_:StatusReasonApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "A list summarizing the transactions that occurred while processing the payment.\n\nNote: a refund is a separate transaction and so will appear in this `transactions` list if a refund was performed.",
            "key": "transactions",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_:TransactionOverviewApiSchema",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "key": "riskData",
            "valueType": {
              "itemType": {
                "value": "type_:RiskDataApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:PaymentCardTokenApiSchema": {
      "name": "PaymentCardTokenApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "<span style=\"white-space: nowrap\">`<= 6 characters`</span>",
            "key": "first6Digits",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "<span style=\"white-space: nowrap\">`<= 4 characters`</span>",
            "key": "last4Digits",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "<span style=\"white-space: nowrap\">`<= 2 characters`</span>",
            "key": "expirationMonth",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "<span style=\"white-space: nowrap\">`<= 4 characters`</span>",
            "key": "expirationYear",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "cardholderName",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "network",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "isNetworkTokenized",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "binData",
            "valueType": {
              "itemType": {
                "value": "type_:BinDataApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:StatusReasonApiSchema": {
      "name": "StatusReasonApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "Type of the status.",
            "key": "type",
            "valueType": {
              "value": "type_:PaymentStatusTypeEnum",
              "type": "id"
            }
          },
          {
            "description": "If the error is of type `ISSUER_DECLINED` this will be returned.\n\nDeclines of type `SOFT_DECLINE` may be retried,\nwhereas declines of type `HARD_DECLINE` should not be retried.\n",
            "key": "declineType",
            "valueType": {
              "itemType": {
                "value": "type_:DeclineTypeEnum",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "If the error is of type `ISSUER_DECLINED`, this will be returned.",
            "key": "code",
            "valueType": {
              "itemType": {
                "value": "type_:TransactionDeclineReasonV2Enum",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "In case of an error on the processor's part, we will return the message returned by the processor. This is usually a human readable error.",
            "key": "message",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:RiskDataApiSchema": {
      "description": "Risk data associated with this payment.\n",
      "name": "RiskDataApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "fraudCheck",
            "valueType": {
              "itemType": {
                "value": "type_:FraudCheckApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:FraudCheckApiSchema": {
      "description": "Results of the pre-authorization and post-authorization fraud checks.\n",
      "name": "FraudCheckApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "source",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "preAuthorizationResult",
            "valueType": {
              "itemType": {
                "value": "type_:FraudDecisionTypeEnum",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "postAuthorizationResult",
            "valueType": {
              "itemType": {
                "value": "type_:FraudDecisionTypeEnum",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:FraudDecisionTypeEnum": {
      "description": "Possible fraud check outcomes.",
      "name": "FraudDecisionTypeEnum",
      "shape": {
        "values": [
          {
            "value": "ACCEPT"
          },
          {
            "value": "REFUSE"
          },
          {
            "value": "FAILED"
          },
          {
            "value": "THREE_DS"
          }
        ],
        "type": "enum"
      }
    },
    "type_:PaymentMethodTypeEnum": {
      "description": "Payment method type, where `OFF_SESSION_PAYMENT` is used for APM (Alternative Payment Method) payments and `PAYMENT_CARD` for traditional debit or credit cards. Please note that this list is different from one indicated on [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) page and values of this field will be changed in the future versions of the API.",
      "name": "PaymentMethodTypeEnum",
      "shape": {
        "values": [
          {
            "value": "PAYMENT_CARD"
          },
          {
            "value": "PAYPAL_ORDER"
          },
          {
            "value": "PAYPAL_BILLING_AGREEMENT"
          },
          {
            "value": "GOCARDLESS_MANDATE"
          },
          {
            "value": "KLARNA_AUTHORIZATION_TOKEN"
          },
          {
            "value": "KLARNA_CUSTOMER_TOKEN"
          },
          {
            "value": "PAY_NL_IDEAL"
          },
          {
            "value": "APAYA"
          },
          {
            "value": "OFF_SESSION_PAYMENT"
          },
          {
            "value": "CARD_OFF_SESSION_PAYMENT"
          },
          {
            "value": "APPLE_PAY"
          },
          {
            "value": "APPLE_PAY_ENCRYPTED_TOKEN"
          },
          {
            "value": "GOOGLE_PAY"
          }
        ],
        "type": "enum"
      }
    },
    "type_:PaymentListApiResponse": {
      "name": "PaymentListApiResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_:PaymentSummaryApiSchema",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "key": "nextCursor",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "prevCursor",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:PaymentRequiredActionApiSchema": {
      "name": "PaymentRequiredActionApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "Action name",
            "key": "name",
            "valueType": {
              "value": "type_:BlockingPaymentActionTypeEnum",
              "type": "id"
            }
          },
          {
            "description": "Human description of the required action to perform.",
            "key": "description",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "The client token to be returned to the SDK if a required action is returned.",
            "key": "clientToken",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:PaymentSummaryApiSchema": {
      "name": "PaymentSummaryApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream\noperations.\n",
            "key": "id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "The date and time at which the payment was created in UTC format.",
            "key": "date",
            "valueType": {
              "value": {
                "type": "datetime"
              },
              "type": "primitive"
            }
          },
          {
            "description": "See the payment [status table](../docs#payment-status) for more information.",
            "key": "status",
            "valueType": {
              "value": "type_:PaymentStatus",
              "type": "id"
            }
          },
          {
            "description": "Your reference for the payment.",
            "key": "orderId",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "The payment processor used for this payment.",
            "key": "processor",
            "valueType": {
              "itemType": {
                "value": "type_:PaymentSummaryProcessorApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
            "key": "currencyCode",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "The payment amount, in minor units. e.g. $7 would show as `700`.",
            "key": "amount",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`\n",
            "key": "metadata",
            "valueType": {
              "itemType": {
                "keyType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "valueType": {
                  "type": "unknown"
                },
                "type": "map"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:PaymentAuthorizationRequestProcessorApiSchema": {
      "name": "PaymentAuthorizationRequestProcessorApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The processor's merchant ID used to authorize the payment.",
            "key": "processorMerchantId",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "The processor name should be provided if the processorMerchantId is not unique across all of your integrations.",
            "key": "name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:PaymentSummaryProcessorApiSchema": {
      "name": "PaymentSummaryProcessorApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The payment processor used for this payment.",
            "key": "name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "The merchant ID registered at the payment processor used for this payment.",
            "key": "processorMerchantId",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:PrepaidReloadableEnum": {
      "description": "An enumeration.",
      "name": "PrepaidReloadableEnum",
      "shape": {
        "values": [
          {
            "value": "RELOADABLE"
          },
          {
            "value": "NON_RELOADABLE"
          },
          {
            "value": "NOT_APPLICABLE"
          },
          {
            "value": "UNKNOWN"
          }
        ],
        "type": "enum"
      }
    },
    "type_:RecurringTransactionTypeEnum": {
      "description": "An enumeration.",
      "name": "RecurringTransactionTypeEnum",
      "shape": {
        "values": [
          {
            "value": "FIRST_PAYMENT"
          },
          {
            "value": "ECOMMERCE"
          },
          {
            "value": "SUBSCRIPTION"
          },
          {
            "value": "UNSCHEDULED"
          }
        ],
        "type": "enum"
      }
    },
    "type_:RecurringPaymentTypeSchema": {
      "description": "Payment types, primarily to be used for recurring payments.\nNote: If you successfully vault a `SINGLE_USE` token on payment creation, then there's no need to set a value for this field and it will be flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all possible values.\n\n| paymentType | Use case |\n| --- | --- |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario.\n| `ECOMMERCE` | a customer-initiated payment using stored payment details where the cardholder is present.\n| `SUBSCRIPTION` | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.\n| `UNSCHEDULED` | a merchant-initiated payment using stored payment details with no fixed schedule or amount.",
      "name": "RecurringPaymentTypeSchema",
      "shape": {
        "value": {
          "value": "type_:RecurringTransactionTypeEnum",
          "type": "id"
        },
        "type": "alias"
      }
    },
    "type_:ProductTypeEnum": {
      "description": "An enumeration",
      "name": "ProductTypeEnum",
      "shape": {
        "values": [
          {
            "value": "PHYSICAL"
          },
          {
            "value": "DIGITAL"
          }
        ],
        "type": "enum"
      }
    },
    "type_:ThreeDSecureAuthResponseCodeEnum": {
      "description": "An enumeration.",
      "name": "ThreeDSecureAuthResponseCodeEnum",
      "shape": {
        "values": [
          {
            "value": "NOT_PERFORMED"
          },
          {
            "value": "SKIPPED"
          },
          {
            "value": "AUTH_SUCCESS"
          },
          {
            "value": "AUTH_FAILED"
          },
          {
            "value": "CHALLENGE"
          },
          {
            "value": "METHOD"
          }
        ],
        "type": "enum"
      }
    },
    "type_:ThreeDSecureAuthenticationApiSchema": {
      "name": "ThreeDSecureAuthenticationApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "responseCode",
            "valueType": {
              "value": "type_:ThreeDSecureAuthResponseCodeEnum",
              "type": "id"
            }
          },
          {
            "key": "reasonCode",
            "valueType": {
              "itemType": {
                "value": "type_:ThreeDSecureAuthenticationApiSchemaReasonCode",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "reasonText",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "protocolVersion",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "challengeIssued",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:ThreeDSecureAuthenticationApiSchemaReasonCode": {
      "name": "ThreeDSecureAuthenticationApiSchemaReasonCode",
      "shape": {
        "variants": [
          {
            "type": {
              "value": "type_:ThreeDSecureSkippedReasonCodeEnum",
              "type": "id"
            }
          },
          {
            "type": {
              "value": "type_:ThreeDSecureFailedReasonCodeEnum",
              "type": "id"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      }
    },
    "type_:ThreeDSecureFailedReasonCodeEnum": {
      "description": "This enum is derived from the `transStatusReason` on page 218 of the\n[EMV Co 3DS protocol specification](https://www.emvco.com/terms-of-use/?u=/wp-content/uploads/documents/EMVCo_3DS_Spec_v220_122018.pdf)\n\n| Code | Description                             |\n|------|-----------------------------------------|\n| 01   | Card authentication failed              |\n| 02   | Unknown Device                          |\n| 03   | Unsupported Device                      |\n| 04   | Exceeds authentication frequency limit  |\n| 05   | Expired card                            |\n| 06   | Invalid card number                     |\n| 07   | Invalid transaction                     |\n| 08   | No Card record                          |\n| 09   | Security failure                        |\n| 10   | Stolen card                             |\n| 11   | Suspected fraud                         |\n| 12   | Transaction not permitted to cardholder |\n| 13   | Cardholder not enrolled in service      |\n| 14   | Transaction timed out at the ACS        |\n| 15   | Low confidence                          |\n| 16   | Medium confidence                       |",
      "name": "ThreeDSecureFailedReasonCodeEnum",
      "shape": {
        "values": [
          {
            "value": "UNKNOWN"
          },
          {
            "value": "REJECTED_BY_ISSUER"
          },
          {
            "value": "CARD_AUTHENTICATION_FAILED"
          },
          {
            "value": "UNKNOWN_DEVICE"
          },
          {
            "value": "UNSUPPORTED_DEVICE"
          },
          {
            "value": "EXCEEDS_AUTHENTICATION_FREQUENCY_LIMIT"
          },
          {
            "value": "EXPIRED_CARD"
          },
          {
            "value": "INVALID_CARD_NUMBER"
          },
          {
            "value": "INVALID_TRANSACTION"
          },
          {
            "value": "NO_CARD_RECORD"
          },
          {
            "value": "SECURITY_FAILURE"
          },
          {
            "value": "STOLEN_CARD"
          },
          {
            "value": "SUSPECTED_FRAUD"
          },
          {
            "value": "TRANSACTION_NOT_PERMITTED_TO_CARDHOLDER"
          },
          {
            "value": "CARDHOLDER_NOT_ENROLLED_IN_SERVICE"
          },
          {
            "value": "TRANSACTION_TIMED_OUT_AT_THE_ACS"
          },
          {
            "value": "LOW_CONFIDENCE"
          },
          {
            "value": "MEDIUM_CONFIDENCE"
          },
          {
            "value": "HIGH_CONFIDENCE"
          },
          {
            "value": "VERY_HIGH_CONFIDENCE"
          },
          {
            "value": "EXCEEDS_ACS_MAXIMUM_CHALLENGES"
          },
          {
            "value": "NON_PAYMENT_NOT_SUPPORTED"
          },
          {
            "value": "THREE_RI_NOT_SUPPORTED"
          },
          {
            "value": "ACS_TECHNICAL_ISSUE"
          },
          {
            "value": "DECOUPLED_REQUIRED_BY_ACS"
          },
          {
            "value": "DECOUPLED_MAX_EXPIRY_EXCEEDED"
          },
          {
            "value": "DECOUPLED_AUTHENTICATION_INSUFFICIENT_TIME"
          },
          {
            "value": "AUTHENTICATION_ATTEMPTED_BUT_NOT_PERFORMED_BY_CARDHOLDER"
          },
          {
            "value": "ACS_TIMED_OUT"
          },
          {
            "value": "INVALID_ACS_RESPONSE"
          },
          {
            "value": "ACS_SYSTEM_ERROR_RESPONSE"
          },
          {
            "value": "ERROR_GENERATING_CAVV"
          },
          {
            "value": "PROTOCOL_VERSION_NOT_SUPPORTED"
          },
          {
            "value": "TRANSACTION_EXCLUDED_FROM_ATTEMPTS_PROCESSING"
          },
          {
            "value": "REQUESTED_PROGRAM_NOT_SUPPORTED"
          }
        ],
        "type": "enum"
      }
    },
    "type_:ThreeDSecureSkippedReasonCodeEnum": {
      "description": "An enumeration.",
      "name": "ThreeDSecureSkippedReasonCodeEnum",
      "shape": {
        "values": [
          {
            "value": "GATEWAY_UNAVAILABLE"
          },
          {
            "value": "DISABLED_BY_MERCHANT"
          },
          {
            "value": "NOT_SUPPORTED_BY_ISSUER"
          },
          {
            "value": "FAILED_TO_NEGOTIATE"
          },
          {
            "value": "UNKNOWN_ACS_RESPONSE"
          },
          {
            "value": "3DS_SERVER_ERROR"
          },
          {
            "value": "ACQUIRER_NOT_CONFIGURED"
          },
          {
            "value": "ACQUIRER_NOT_PARTICIPATING"
          }
        ],
        "type": "enum"
      }
    },
    "type_:TokenTypeEnum": {
      "description": "An enumeration.",
      "name": "TokenTypeEnum",
      "shape": {
        "values": [
          {
            "value": "MULTI_USE"
          },
          {
            "value": "SINGLE_USE"
          }
        ],
        "type": "enum"
      }
    },
    "type_:DeclineTypeEnum": {
      "description": "An enumeration.",
      "name": "DeclineTypeEnum",
      "shape": {
        "values": [
          {
            "value": "SOFT_DECLINE"
          },
          {
            "value": "HARD_DECLINE"
          }
        ],
        "type": "enum"
      }
    },
    "type_:TransactionDeclineReasonV2Enum": {
      "description": "An enumeration.",
      "name": "TransactionDeclineReasonV2Enum",
      "shape": {
        "values": [
          {
            "value": "ERROR"
          },
          {
            "value": "INVALID_CARD_NUMBER"
          },
          {
            "value": "EXPIRED_CARD"
          },
          {
            "value": "LOST_OR_STOLEN_CARD"
          },
          {
            "value": "SUSPECTED_FRAUD"
          },
          {
            "value": "UNKNOWN"
          },
          {
            "value": "DECLINED"
          },
          {
            "value": "REFER_TO_CARD_ISSUER"
          },
          {
            "value": "DO_NOT_HONOR"
          },
          {
            "value": "INSUFFICIENT_FUNDS"
          },
          {
            "value": "WITHDRAWAL_LIMIT_EXCEEDED"
          },
          {
            "value": "ISSUER_TEMPORARILY_UNAVAILABLE"
          },
          {
            "value": "AUTHENTICATION_REQUIRED"
          }
        ],
        "type": "enum"
      }
    },
    "type_:TransactionOverviewApiSchema": {
      "name": "TransactionOverviewApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "Date & time of the transaction (UTC)",
            "key": "date",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "Transaction amount in minor units",
            "key": "amount",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "description": "\nThe 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
            "key": "currencyCode",
            "valueType": {
              "value": "type_:Currency",
              "type": "id"
            }
          },
          {
            "key": "transactionType",
            "valueType": {
              "itemType": {
                "value": "type_:TransactionTypeEnum",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Processor's unique identifier for the transaction",
            "key": "processorTransactionId",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "An identifier of a processor.",
            "key": "processorName",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Processor's main account identifier.\n\n* Adyen: Account code\n* Braintree: Merchant ID\n* Stripe: Account ID\"\n",
            "key": "processorMerchantId",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "Transaction status, please refer to the [Transaction Status Codes](#section/API-Usage-Guide/Payment-Status) table for more information",
            "key": "processorStatus",
            "valueType": {
              "itemType": {
                "value": "type_:PaymentStatus",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "If the transaction has a declined or failed status.\n\nOnly if the status is `DECLINED` or `FAILED`, otherwise `null`.\n",
            "key": "processorStatusReason",
            "valueType": {
              "itemType": {
                "value": "type_:StatusReasonApiSchema",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:PaymentStatus": {
      "description": "An enumeration.",
      "name": "PaymentStatus",
      "shape": {
        "values": [
          {
            "value": "PENDING"
          },
          {
            "value": "FAILED"
          },
          {
            "value": "AUTHORIZED"
          },
          {
            "value": "SETTLING"
          },
          {
            "value": "PARTIALLY_SETTLED"
          },
          {
            "value": "SETTLED"
          },
          {
            "value": "DECLINED"
          },
          {
            "value": "CANCELLED"
          }
        ],
        "type": "enum"
      }
    },
    "type_:PaymentStatusTypeEnum": {
      "description": "An enumeration.",
      "name": "PaymentStatusTypeEnum",
      "shape": {
        "values": [
          {
            "value": "APPLICATION_ERROR"
          },
          {
            "value": "GATEWAY_REJECTED"
          },
          {
            "value": "ISSUER_DECLINED"
          }
        ],
        "type": "enum"
      }
    },
    "type_:TransactionTypeEnum": {
      "description": "An enumeration.",
      "name": "TransactionTypeEnum",
      "shape": {
        "values": [
          {
            "value": "SALE"
          },
          {
            "value": "REFUND"
          }
        ],
        "type": "enum"
      }
    },
    "type_:OptionalAddressApiSchema": {
      "name": "OptionalAddressApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "<span style=\"white-space: nowrap\">`non-empty`</span> <span style=\"white-space: nowrap\">`<= 256 characters`</span>",
            "key": "firstName",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "<span style=\"white-space: nowrap\">`non-empty`</span> <span style=\"white-space: nowrap\">`<= 256 characters`</span>",
            "key": "lastName",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Street name, Company name or PO Box <span style=\"white-space: nowrap\">`non-empty`</span> <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "addressLine1",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Apartment, Unit or Building number <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "addressLine2",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Name of the city, district, town or village <span style=\"white-space: nowrap\">`non-empty`</span> <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "city",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "State, County or Province <span style=\"white-space: nowrap\">`non-empty`</span> <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "state",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Two letter ISO country code",
            "key": "countryCode",
            "valueType": {
              "itemType": {
                "value": "type_:CountryCodeEnum",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Postal or ZIP code <span style=\"white-space: nowrap\">`non-empty`</span> <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
            "key": "postalCode",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:AddressApiSchema": {
      "name": "AddressApiSchema",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "firstName",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "lastName",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Street name, Company name or PO Box",
            "key": "addressLine1",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "Apartment, Unit or Building number",
            "key": "addressLine2",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Name of the city, district, town or village",
            "key": "city",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "State, County or Province",
            "key": "state",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Two letter ISO country code",
            "key": "countryCode",
            "valueType": {
              "value": "type_:CountryCodeEnum",
              "type": "id"
            }
          },
          {
            "description": "Postal or ZIP code",
            "key": "postalCode",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:MerchantPaymentMethodTokenApiResponse": {
      "name": "MerchantPaymentMethodTokenApiResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "Creation date & time of the object (UTC)",
            "key": "createdAt",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "datetime"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Date & time when this object was revoked. (UTC)",
            "key": "deletedAt",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "datetime"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Whether or not this object has been revoked.",
            "key": "deleted",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The vaulted payment method token.",
            "key": "token",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "* `MULTI_USE` a vaulted token that can be re-used with subsequent payments",
            "key": "tokenType",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Unique analytics identifier corresponding to a payment method",
            "key": "analyticsId",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Payment method type associated with a token.",
            "key": "paymentMethodType",
            "valueType": {
              "itemType": {
                "value": "type_:PaymentMethodTypeEnum",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Payment method data",
            "key": "paymentMethodData",
            "valueType": {
              "itemType": {
                "value": "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "The ID representing the customer",
            "key": "customerId",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "A friendly description given by the user",
            "key": "description",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Whether or not this payment method is the default",
            "key": "default",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData": {
      "description": "Payment method data",
      "name": "MerchantPaymentMethodTokenApiResponsePaymentMethodData",
      "shape": {
        "variants": [
          {
            "type": {
              "value": "type_:PaymentCardTokenApiSchema",
              "type": "id"
            }
          },
          {
            "type": {
              "value": "type_:PayPalBillingAgreementApiSchema",
              "type": "id"
            }
          },
          {
            "type": {
              "value": "type_:GoCardlessMandateApiSchema",
              "type": "id"
            }
          },
          {
            "type": {
              "value": "type_:KlarnaCustomerTokenApiSchema",
              "type": "id"
            }
          },
          {
            "type": {
              "value": "type_:ApayaCustomerTokenApiSchema",
              "type": "id"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      }
    },
    "type_:VerifiedMerchantPaymentMethodTokenApiResponse": {
      "name": "VerifiedMerchantPaymentMethodTokenApiResponse",
      "shape": {
        "extends": ["type_:MerchantPaymentMethodTokenApiResponse"],
        "properties": [
          {
            "description": "Whether or not this payment method was verified",
            "key": "isVerified",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:VerifiedMerchantPaymentMethodTokenListApiResponse": {
      "name": "VerifiedMerchantPaymentMethodTokenListApiResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_:VerifiedMerchantPaymentMethodTokenApiResponse",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:LoyaltyApiBalanceResponse": {
      "name": "LoyaltyApiBalanceResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The unique identifier for the customer on the loyalty provider.",
            "key": "id",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "ID of the Primer connection configuration.",
            "key": "connectionId",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Name of the loyalty provider.",
            "key": "connectionName",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The loyalty customer's points balance.",
            "key": "balance",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:LoyaltyTransactionTypeEnum": {
      "description": "An enumeration.",
      "name": "LoyaltyTransactionTypeEnum",
      "shape": {
        "values": [
          {
            "value": "REDEMPTION"
          },
          {
            "value": "REFUND"
          }
        ],
        "type": "enum"
      }
    },
    "type_:LoyaltyApiTransactionResponse": {
      "name": "LoyaltyApiTransactionResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "Creation date & time of the transaction (UTC)",
            "key": "date",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "datetime"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Unique Primer identifier for the loyalty transaction.",
            "key": "id",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "ID of the Primer connection configuration.",
            "key": "connectionId",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The unique identifier for the customer on the loyalty provider.",
            "key": "customerId",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Unique identifier for the order.",
            "key": "orderId",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "ID of the transaction on the loyalty provider's side.",
            "key": "connectionTransactionId",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Name of the loyalty provider.",
            "key": "connectionName",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The type of the transaction.",
            "key": "type",
            "valueType": {
              "itemType": {
                "value": "type_:LoyaltyTransactionTypeEnum",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "The value of the transaction.",
            "key": "value",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:LoyaltyApiTransactionsListResponse": {
      "name": "LoyaltyApiTransactionsListResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The list of loyalty transactions",
            "key": "items",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_:LoyaltyApiTransactionResponse",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "description": "The total number of available results",
            "key": "total",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The limit of the paged result",
            "key": "limit",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The offset of the paged result",
            "key": "offset",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:PaymentsInsightsBinData": {
      "name": "PaymentsInsightsBinData",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "network",
            "valueType": {
              "itemType": {
                "value": "type_:CardNetworkEnum",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "2-letter country code in [ISO 3166-1](\nhttps://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) alpha format,\ne.g. FR for France and GB for the United Kingdom.\n    ",
            "key": "issuerCountryCode",
            "valueType": {
              "itemType": {
                "value": "type_:PaymentsInsightsBinDataIssuerCountryCode",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "The name of the issuing bank. <span style=\"white-space: nowrap\">`<= 250 characters`</span> ",
            "key": "issuerName",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The usage type of the payment card e.g. commercial, consumer. <span style=\"white-space: nowrap\">`<= 250 characters`</span> ",
            "key": "productUsageType",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The funding type of the payment card e.g. credit, debit, prepaid. <span style=\"white-space: nowrap\">`<= 250 characters`</span> ",
            "key": "accountFundingType",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:PaymentsInsightsBinDataIssuerCountryCode": {
      "description": "2-letter country code in [ISO 3166-1](\nhttps://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) alpha format,\ne.g. FR for France and GB for the United Kingdom.\n    ",
      "name": "PaymentsInsightsBinDataIssuerCountryCode",
      "shape": {
        "values": [
          {
            "value": "AW"
          },
          {
            "value": "AF"
          },
          {
            "value": "AO"
          },
          {
            "value": "AI"
          },
          {
            "value": "AX"
          },
          {
            "value": "AL"
          },
          {
            "value": "AD"
          },
          {
            "value": "AE"
          },
          {
            "value": "AR"
          },
          {
            "value": "AM"
          },
          {
            "value": "AS"
          },
          {
            "value": "AQ"
          },
          {
            "value": "TF"
          },
          {
            "value": "AG"
          },
          {
            "value": "AU"
          },
          {
            "value": "AT"
          },
          {
            "value": "AZ"
          },
          {
            "value": "BI"
          },
          {
            "value": "BE"
          },
          {
            "value": "BJ"
          },
          {
            "value": "BQ"
          },
          {
            "value": "BF"
          },
          {
            "value": "BD"
          },
          {
            "value": "BG"
          },
          {
            "value": "BH"
          },
          {
            "value": "BS"
          },
          {
            "value": "BA"
          },
          {
            "value": "BL"
          },
          {
            "value": "BY"
          },
          {
            "value": "BZ"
          },
          {
            "value": "BM"
          },
          {
            "value": "BO"
          },
          {
            "value": "BR"
          },
          {
            "value": "BB"
          },
          {
            "value": "BN"
          },
          {
            "value": "BT"
          },
          {
            "value": "BV"
          },
          {
            "value": "BW"
          },
          {
            "value": "CF"
          },
          {
            "value": "CA"
          },
          {
            "value": "CC"
          },
          {
            "value": "CH"
          },
          {
            "value": "CL"
          },
          {
            "value": "CN"
          },
          {
            "value": "CI"
          },
          {
            "value": "CM"
          },
          {
            "value": "CD"
          },
          {
            "value": "CG"
          },
          {
            "value": "CK"
          },
          {
            "value": "CO"
          },
          {
            "value": "KM"
          },
          {
            "value": "CV"
          },
          {
            "value": "CR"
          },
          {
            "value": "CU"
          },
          {
            "value": "CW"
          },
          {
            "value": "CX"
          },
          {
            "value": "KY"
          },
          {
            "value": "CY"
          },
          {
            "value": "CZ"
          },
          {
            "value": "DE"
          },
          {
            "value": "DJ"
          },
          {
            "value": "DM"
          },
          {
            "value": "DK"
          },
          {
            "value": "DO"
          },
          {
            "value": "DZ"
          },
          {
            "value": "EC"
          },
          {
            "value": "EG"
          },
          {
            "value": "ER"
          },
          {
            "value": "EH"
          },
          {
            "value": "ES"
          },
          {
            "value": "EE"
          },
          {
            "value": "ET"
          },
          {
            "value": "FI"
          },
          {
            "value": "FJ"
          },
          {
            "value": "FK"
          },
          {
            "value": "FR"
          },
          {
            "value": "FO"
          },
          {
            "value": "FM"
          },
          {
            "value": "GA"
          },
          {
            "value": "GB"
          },
          {
            "value": "GE"
          },
          {
            "value": "GG"
          },
          {
            "value": "GH"
          },
          {
            "value": "GI"
          },
          {
            "value": "GN"
          },
          {
            "value": "GP"
          },
          {
            "value": "GM"
          },
          {
            "value": "GW"
          },
          {
            "value": "GQ"
          },
          {
            "value": "GR"
          },
          {
            "value": "GD"
          },
          {
            "value": "GL"
          },
          {
            "value": "GT"
          },
          {
            "value": "GF"
          },
          {
            "value": "GU"
          },
          {
            "value": "GY"
          },
          {
            "value": "HK"
          },
          {
            "value": "HM"
          },
          {
            "value": "HN"
          },
          {
            "value": "HR"
          },
          {
            "value": "HT"
          },
          {
            "value": "HU"
          },
          {
            "value": "ID"
          },
          {
            "value": "IM"
          },
          {
            "value": "IN"
          },
          {
            "value": "IO"
          },
          {
            "value": "IE"
          },
          {
            "value": "IR"
          },
          {
            "value": "IQ"
          },
          {
            "value": "IS"
          },
          {
            "value": "IL"
          },
          {
            "value": "IT"
          },
          {
            "value": "JM"
          },
          {
            "value": "JE"
          },
          {
            "value": "JO"
          },
          {
            "value": "JP"
          },
          {
            "value": "KZ"
          },
          {
            "value": "KE"
          },
          {
            "value": "KG"
          },
          {
            "value": "KH"
          },
          {
            "value": "KI"
          },
          {
            "value": "KN"
          },
          {
            "value": "KR"
          },
          {
            "value": "KW"
          },
          {
            "value": "LA"
          },
          {
            "value": "LB"
          },
          {
            "value": "LR"
          },
          {
            "value": "LY"
          },
          {
            "value": "LC"
          },
          {
            "value": "LI"
          },
          {
            "value": "LK"
          },
          {
            "value": "LS"
          },
          {
            "value": "LT"
          },
          {
            "value": "LU"
          },
          {
            "value": "LV"
          },
          {
            "value": "MO"
          },
          {
            "value": "MF"
          },
          {
            "value": "MA"
          },
          {
            "value": "MC"
          },
          {
            "value": "MD"
          },
          {
            "value": "MG"
          },
          {
            "value": "MV"
          },
          {
            "value": "MX"
          },
          {
            "value": "MH"
          },
          {
            "value": "MK"
          },
          {
            "value": "ML"
          },
          {
            "value": "MT"
          },
          {
            "value": "MM"
          },
          {
            "value": "ME"
          },
          {
            "value": "MN"
          },
          {
            "value": "MP"
          },
          {
            "value": "MZ"
          },
          {
            "value": "MR"
          },
          {
            "value": "MS"
          },
          {
            "value": "MQ"
          },
          {
            "value": "MU"
          },
          {
            "value": "MW"
          },
          {
            "value": "MY"
          },
          {
            "value": "YT"
          },
          {
            "value": "NA"
          },
          {
            "value": "NC"
          },
          {
            "value": "NE"
          },
          {
            "value": "NF"
          },
          {
            "value": "NG"
          },
          {
            "value": "NI"
          },
          {
            "value": "NU"
          },
          {
            "value": "NL"
          },
          {
            "value": "NO"
          },
          {
            "value": "NP"
          },
          {
            "value": "NR"
          },
          {
            "value": "NZ"
          },
          {
            "value": "OM"
          },
          {
            "value": "PK"
          },
          {
            "value": "PA"
          },
          {
            "value": "PN"
          },
          {
            "value": "PE"
          },
          {
            "value": "PH"
          },
          {
            "value": "PW"
          },
          {
            "value": "PG"
          },
          {
            "value": "PL"
          },
          {
            "value": "PR"
          },
          {
            "value": "KP"
          },
          {
            "value": "PT"
          },
          {
            "value": "PY"
          },
          {
            "value": "PS"
          },
          {
            "value": "PF"
          },
          {
            "value": "QA"
          },
          {
            "value": "RE"
          },
          {
            "value": "RO"
          },
          {
            "value": "RU"
          },
          {
            "value": "RW"
          },
          {
            "value": "SA"
          },
          {
            "value": "SD"
          },
          {
            "value": "SN"
          },
          {
            "value": "SG"
          },
          {
            "value": "GS"
          },
          {
            "value": "SH"
          },
          {
            "value": "SJ"
          },
          {
            "value": "SB"
          },
          {
            "value": "SL"
          },
          {
            "value": "SV"
          },
          {
            "value": "SM"
          },
          {
            "value": "SO"
          },
          {
            "value": "PM"
          },
          {
            "value": "RS"
          },
          {
            "value": "SS"
          },
          {
            "value": "ST"
          },
          {
            "value": "SR"
          },
          {
            "value": "SK"
          },
          {
            "value": "SI"
          },
          {
            "value": "SE"
          },
          {
            "value": "SZ"
          },
          {
            "value": "SX"
          },
          {
            "value": "SC"
          },
          {
            "value": "SY"
          },
          {
            "value": "TC"
          },
          {
            "value": "TD"
          },
          {
            "value": "TG"
          },
          {
            "value": "TH"
          },
          {
            "value": "TJ"
          },
          {
            "value": "TK"
          },
          {
            "value": "TM"
          },
          {
            "value": "TL"
          },
          {
            "value": "TO"
          },
          {
            "value": "TT"
          },
          {
            "value": "TN"
          },
          {
            "value": "TR"
          },
          {
            "value": "TV"
          },
          {
            "value": "TW"
          },
          {
            "value": "TZ"
          },
          {
            "value": "UG"
          },
          {
            "value": "UA"
          },
          {
            "value": "UM"
          },
          {
            "value": "UY"
          },
          {
            "value": "US"
          },
          {
            "value": "UZ"
          },
          {
            "value": "VA"
          },
          {
            "value": "VC"
          },
          {
            "value": "VE"
          },
          {
            "value": "VG"
          },
          {
            "value": "VI"
          },
          {
            "value": "VN"
          },
          {
            "value": "VU"
          },
          {
            "value": "WF"
          },
          {
            "value": "WS"
          },
          {
            "value": "YE"
          },
          {
            "value": "ZA"
          },
          {
            "value": "ZM"
          },
          {
            "value": "ZW"
          }
        ],
        "type": "enum"
      }
    },
    "type_:PaymentsInsightsOrder": {
      "name": "PaymentsInsightsOrder",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The order reference for the payment. <span style=\"white-space: nowrap\">`<= 250 characters`</span> ",
            "key": "id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "2-letter country code in [ISO 3166-1](\nhttps://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) alpha format,\ne.g. FR for France and GB for the United Kingdom.",
            "key": "countryCode",
            "valueType": {
              "itemType": {
                "value": "type_:PaymentsInsightsOrderCountryCode",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:PaymentsInsightsOrderCountryCode": {
      "description": "2-letter country code in [ISO 3166-1](\nhttps://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) alpha format,\ne.g. FR for France and GB for the United Kingdom.",
      "name": "PaymentsInsightsOrderCountryCode",
      "shape": {
        "values": [
          {
            "value": "AW"
          },
          {
            "value": "AF"
          },
          {
            "value": "AO"
          },
          {
            "value": "AI"
          },
          {
            "value": "AX"
          },
          {
            "value": "AL"
          },
          {
            "value": "AD"
          },
          {
            "value": "AE"
          },
          {
            "value": "AR"
          },
          {
            "value": "AM"
          },
          {
            "value": "AS"
          },
          {
            "value": "AQ"
          },
          {
            "value": "TF"
          },
          {
            "value": "AG"
          },
          {
            "value": "AU"
          },
          {
            "value": "AT"
          },
          {
            "value": "AZ"
          },
          {
            "value": "BI"
          },
          {
            "value": "BE"
          },
          {
            "value": "BJ"
          },
          {
            "value": "BQ"
          },
          {
            "value": "BF"
          },
          {
            "value": "BD"
          },
          {
            "value": "BG"
          },
          {
            "value": "BH"
          },
          {
            "value": "BS"
          },
          {
            "value": "BA"
          },
          {
            "value": "BL"
          },
          {
            "value": "BY"
          },
          {
            "value": "BZ"
          },
          {
            "value": "BM"
          },
          {
            "value": "BO"
          },
          {
            "value": "BR"
          },
          {
            "value": "BB"
          },
          {
            "value": "BN"
          },
          {
            "value": "BT"
          },
          {
            "value": "BV"
          },
          {
            "value": "BW"
          },
          {
            "value": "CF"
          },
          {
            "value": "CA"
          },
          {
            "value": "CC"
          },
          {
            "value": "CH"
          },
          {
            "value": "CL"
          },
          {
            "value": "CN"
          },
          {
            "value": "CI"
          },
          {
            "value": "CM"
          },
          {
            "value": "CD"
          },
          {
            "value": "CG"
          },
          {
            "value": "CK"
          },
          {
            "value": "CO"
          },
          {
            "value": "KM"
          },
          {
            "value": "CV"
          },
          {
            "value": "CR"
          },
          {
            "value": "CU"
          },
          {
            "value": "CW"
          },
          {
            "value": "CX"
          },
          {
            "value": "KY"
          },
          {
            "value": "CY"
          },
          {
            "value": "CZ"
          },
          {
            "value": "DE"
          },
          {
            "value": "DJ"
          },
          {
            "value": "DM"
          },
          {
            "value": "DK"
          },
          {
            "value": "DO"
          },
          {
            "value": "DZ"
          },
          {
            "value": "EC"
          },
          {
            "value": "EG"
          },
          {
            "value": "ER"
          },
          {
            "value": "EH"
          },
          {
            "value": "ES"
          },
          {
            "value": "EE"
          },
          {
            "value": "ET"
          },
          {
            "value": "FI"
          },
          {
            "value": "FJ"
          },
          {
            "value": "FK"
          },
          {
            "value": "FR"
          },
          {
            "value": "FO"
          },
          {
            "value": "FM"
          },
          {
            "value": "GA"
          },
          {
            "value": "GB"
          },
          {
            "value": "GE"
          },
          {
            "value": "GG"
          },
          {
            "value": "GH"
          },
          {
            "value": "GI"
          },
          {
            "value": "GN"
          },
          {
            "value": "GP"
          },
          {
            "value": "GM"
          },
          {
            "value": "GW"
          },
          {
            "value": "GQ"
          },
          {
            "value": "GR"
          },
          {
            "value": "GD"
          },
          {
            "value": "GL"
          },
          {
            "value": "GT"
          },
          {
            "value": "GF"
          },
          {
            "value": "GU"
          },
          {
            "value": "GY"
          },
          {
            "value": "HK"
          },
          {
            "value": "HM"
          },
          {
            "value": "HN"
          },
          {
            "value": "HR"
          },
          {
            "value": "HT"
          },
          {
            "value": "HU"
          },
          {
            "value": "ID"
          },
          {
            "value": "IM"
          },
          {
            "value": "IN"
          },
          {
            "value": "IO"
          },
          {
            "value": "IE"
          },
          {
            "value": "IR"
          },
          {
            "value": "IQ"
          },
          {
            "value": "IS"
          },
          {
            "value": "IL"
          },
          {
            "value": "IT"
          },
          {
            "value": "JM"
          },
          {
            "value": "JE"
          },
          {
            "value": "JO"
          },
          {
            "value": "JP"
          },
          {
            "value": "KZ"
          },
          {
            "value": "KE"
          },
          {
            "value": "KG"
          },
          {
            "value": "KH"
          },
          {
            "value": "KI"
          },
          {
            "value": "KN"
          },
          {
            "value": "KR"
          },
          {
            "value": "KW"
          },
          {
            "value": "LA"
          },
          {
            "value": "LB"
          },
          {
            "value": "LR"
          },
          {
            "value": "LY"
          },
          {
            "value": "LC"
          },
          {
            "value": "LI"
          },
          {
            "value": "LK"
          },
          {
            "value": "LS"
          },
          {
            "value": "LT"
          },
          {
            "value": "LU"
          },
          {
            "value": "LV"
          },
          {
            "value": "MO"
          },
          {
            "value": "MF"
          },
          {
            "value": "MA"
          },
          {
            "value": "MC"
          },
          {
            "value": "MD"
          },
          {
            "value": "MG"
          },
          {
            "value": "MV"
          },
          {
            "value": "MX"
          },
          {
            "value": "MH"
          },
          {
            "value": "MK"
          },
          {
            "value": "ML"
          },
          {
            "value": "MT"
          },
          {
            "value": "MM"
          },
          {
            "value": "ME"
          },
          {
            "value": "MN"
          },
          {
            "value": "MP"
          },
          {
            "value": "MZ"
          },
          {
            "value": "MR"
          },
          {
            "value": "MS"
          },
          {
            "value": "MQ"
          },
          {
            "value": "MU"
          },
          {
            "value": "MW"
          },
          {
            "value": "MY"
          },
          {
            "value": "YT"
          },
          {
            "value": "NA"
          },
          {
            "value": "NC"
          },
          {
            "value": "NE"
          },
          {
            "value": "NF"
          },
          {
            "value": "NG"
          },
          {
            "value": "NI"
          },
          {
            "value": "NU"
          },
          {
            "value": "NL"
          },
          {
            "value": "NO"
          },
          {
            "value": "NP"
          },
          {
            "value": "NR"
          },
          {
            "value": "NZ"
          },
          {
            "value": "OM"
          },
          {
            "value": "PK"
          },
          {
            "value": "PA"
          },
          {
            "value": "PN"
          },
          {
            "value": "PE"
          },
          {
            "value": "PH"
          },
          {
            "value": "PW"
          },
          {
            "value": "PG"
          },
          {
            "value": "PL"
          },
          {
            "value": "PR"
          },
          {
            "value": "KP"
          },
          {
            "value": "PT"
          },
          {
            "value": "PY"
          },
          {
            "value": "PS"
          },
          {
            "value": "PF"
          },
          {
            "value": "QA"
          },
          {
            "value": "RE"
          },
          {
            "value": "RO"
          },
          {
            "value": "RU"
          },
          {
            "value": "RW"
          },
          {
            "value": "SA"
          },
          {
            "value": "SD"
          },
          {
            "value": "SN"
          },
          {
            "value": "SG"
          },
          {
            "value": "GS"
          },
          {
            "value": "SH"
          },
          {
            "value": "SJ"
          },
          {
            "value": "SB"
          },
          {
            "value": "SL"
          },
          {
            "value": "SV"
          },
          {
            "value": "SM"
          },
          {
            "value": "SO"
          },
          {
            "value": "PM"
          },
          {
            "value": "RS"
          },
          {
            "value": "SS"
          },
          {
            "value": "ST"
          },
          {
            "value": "SR"
          },
          {
            "value": "SK"
          },
          {
            "value": "SI"
          },
          {
            "value": "SE"
          },
          {
            "value": "SZ"
          },
          {
            "value": "SX"
          },
          {
            "value": "SC"
          },
          {
            "value": "SY"
          },
          {
            "value": "TC"
          },
          {
            "value": "TD"
          },
          {
            "value": "TG"
          },
          {
            "value": "TH"
          },
          {
            "value": "TJ"
          },
          {
            "value": "TK"
          },
          {
            "value": "TM"
          },
          {
            "value": "TL"
          },
          {
            "value": "TO"
          },
          {
            "value": "TT"
          },
          {
            "value": "TN"
          },
          {
            "value": "TR"
          },
          {
            "value": "TV"
          },
          {
            "value": "TW"
          },
          {
            "value": "TZ"
          },
          {
            "value": "UG"
          },
          {
            "value": "UA"
          },
          {
            "value": "UM"
          },
          {
            "value": "UY"
          },
          {
            "value": "US"
          },
          {
            "value": "UZ"
          },
          {
            "value": "VA"
          },
          {
            "value": "VC"
          },
          {
            "value": "VE"
          },
          {
            "value": "VG"
          },
          {
            "value": "VI"
          },
          {
            "value": "VN"
          },
          {
            "value": "VU"
          },
          {
            "value": "WF"
          },
          {
            "value": "WS"
          },
          {
            "value": "YE"
          },
          {
            "value": "ZA"
          },
          {
            "value": "ZM"
          },
          {
            "value": "ZW"
          }
        ],
        "type": "enum"
      }
    },
    "type_:PaymentsInsightsPaymentMethod": {
      "name": "PaymentsInsightsPaymentMethod",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "Payment method type used for payment authorization.",
            "key": "paymentMethodType",
            "valueType": {
              "value": "type_:PaymentMethodTypeEnum",
              "type": "id"
            }
          },
          {
            "key": "data",
            "valueType": {
              "itemType": {
                "value": "type_:PaymentsInsightsPaymentMethodData",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "threeDSecureAuthentication",
            "valueType": {
              "itemType": {
                "value": "type_:PaymentsInsightsThreeDSecureAuthentication",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:PaymentsInsightsPaymentMethodData": {
      "name": "PaymentsInsightsPaymentMethodData",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "binData",
            "valueType": {
              "itemType": {
                "value": "type_:PaymentsInsightsBinData",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "The first six digits of the card used for payment,\nalso known as the Bank Identification Number (BIN). <span style=\"white-space: nowrap\">`<= 250 characters`</span> ",
            "key": "first6Digits",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:PaymentsInsightsProcessor": {
      "name": "PaymentsInsightsProcessor",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The payment processor used for this payment.\nPrimer supports the above processors through the Payments API,\nhowever any value can be passed here.",
            "key": "name",
            "valueType": {
              "value": "type_:PaymentsInsightsProcessorName",
              "type": "id"
            }
          },
          {
            "description": "The merchant ID registered at the payment processor used for this payment. <span style=\"white-space: nowrap\">`<= 250 characters`</span> ",
            "key": "merchantId",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:PaymentsInsightsProcessorName": {
      "description": "The payment processor used for this payment.\nPrimer supports the above processors through the Payments API,\nhowever any value can be passed here.",
      "name": "PaymentsInsightsProcessorName",
      "shape": {
        "values": [
          {
            "value": "APAYA"
          },
          {
            "value": "ADYEN"
          },
          {
            "value": "AFTERPAY"
          },
          {
            "value": "AIRWALLEX"
          },
          {
            "value": "ALIANT"
          },
          {
            "value": "ALIPAY"
          },
          {
            "value": "ATOME"
          },
          {
            "value": "BANKED"
          },
          {
            "value": "BARCLAYCARD"
          },
          {
            "value": "BRAINTREE"
          },
          {
            "value": "BUCKAROO"
          },
          {
            "value": "BRIDGE"
          },
          {
            "value": "CHAI"
          },
          {
            "value": "CHECKOUT"
          },
          {
            "value": "CLEARPAY"
          },
          {
            "value": "COINBASE"
          },
          {
            "value": "CYBERSOURCE"
          },
          {
            "value": "DLOCAL"
          },
          {
            "value": "EBANX"
          },
          {
            "value": "ECOSPEND"
          },
          {
            "value": "FINTECTURE"
          },
          {
            "value": "GLOBAL_PAYMENTS"
          },
          {
            "value": "HOOLAH"
          },
          {
            "value": "INGENICO"
          },
          {
            "value": "INGENICO-CONNECT"
          },
          {
            "value": "KLARNA"
          },
          {
            "value": "LAYBUY"
          },
          {
            "value": "MPGS"
          },
          {
            "value": "MOLLIE"
          },
          {
            "value": "NEONOMICS"
          },
          {
            "value": "NEXI"
          },
          {
            "value": "NUVEI"
          },
          {
            "value": "OMISE"
          },
          {
            "value": "OPENNODE"
          },
          {
            "value": "PAY_NL"
          },
          {
            "value": "PAY-NL"
          },
          {
            "value": "PAYGENT"
          },
          {
            "value": "PAYPAL"
          },
          {
            "value": "PRIMER_TEST"
          },
          {
            "value": "STRIPE"
          },
          {
            "value": "TRILO"
          },
          {
            "value": "TRUELAYER"
          },
          {
            "value": "VOLT"
          },
          {
            "value": "VYNE"
          },
          {
            "value": "WORLDPAY"
          },
          {
            "value": "EMERCHANTPAY"
          },
          {
            "value": "XFERS"
          },
          {
            "value": "RAPYD"
          },
          {
            "value": "AUTHNET"
          },
          {
            "value": "NETS"
          },
          {
            "value": "NETAXEPT"
          },
          {
            "value": "PRIMER_PROCESSOR"
          },
          {
            "value": "REACH"
          },
          {
            "value": "TRUST_PAYMENTS"
          },
          {
            "value": "TWOC2P"
          },
          {
            "value": "MERCADO_PAGO"
          },
          {
            "value": "PAYU"
          },
          {
            "value": "XENDIT"
          },
          {
            "value": "FISERV"
          },
          {
            "value": "PACYPAY"
          },
          {
            "value": "SHOPEEPAY"
          },
          {
            "value": "TRIPLE_A"
          },
          {
            "value": "IPAY88"
          },
          {
            "value": "APPLE_PAY"
          },
          {
            "value": "GOOGLE_PAY"
          },
          {
            "value": "RISKIFIED"
          },
          {
            "value": "TAXJAR"
          },
          {
            "value": "STITCH"
          },
          {
            "value": "SIGNIFYD"
          }
        ],
        "type": "enum"
      }
    },
    "type_:PaymentsInsightsStatusReason": {
      "name": "PaymentsInsightsStatusReason",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "itemType": {
                "value": "type_:PaymentsInsightsStatusReasonType",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Declines of type `SOFT_DECLINE` may have been retried.\nWhereas declines of type `HARD_DECLINE` should have not been retried.\n",
            "key": "declineType",
            "valueType": {
              "itemType": {
                "value": "type_:PaymentsInsightsStatusReasonDeclineType",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Payment status code with the error code when\nthe issuer declined the payment.",
            "key": "code",
            "valueType": {
              "itemType": {
                "value": "type_:PaymentsInsightsStatusReasonCode",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Message detail returned by the processor when\nthe error on appeared on their part. <span style=\"white-space: nowrap\">`<= 250 characters`</span> ",
            "key": "message",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:PaymentsInsightsStatusReasonType": {
      "name": "PaymentsInsightsStatusReasonType",
      "shape": {
        "values": [
          {
            "value": "APPLICATION_ERROR"
          },
          {
            "value": "GATEWAY_REJECTED"
          },
          {
            "value": "ISSUER_DECLINED"
          }
        ],
        "type": "enum"
      }
    },
    "type_:PaymentsInsightsStatusReasonDeclineType": {
      "description": "Declines of type `SOFT_DECLINE` may have been retried.\nWhereas declines of type `HARD_DECLINE` should have not been retried.\n",
      "name": "PaymentsInsightsStatusReasonDeclineType",
      "shape": {
        "values": [
          {
            "value": "SOFT_DECLINE"
          },
          {
            "value": "HARD_DECLINE"
          }
        ],
        "type": "enum"
      }
    },
    "type_:PaymentsInsightsStatusReasonCode": {
      "description": "Payment status code with the error code when\nthe issuer declined the payment.",
      "name": "PaymentsInsightsStatusReasonCode",
      "shape": {
        "values": [
          {
            "value": "ERROR"
          },
          {
            "value": "INVALID_CARD_NUMBER"
          },
          {
            "value": "EXPIRED_CARD"
          },
          {
            "value": "LOST_OR_STOLEN_CARD"
          },
          {
            "value": "SUSPECTED_FRAUD"
          },
          {
            "value": "UNKNOWN"
          },
          {
            "value": "DECLINED"
          },
          {
            "value": "REFER_TO_CARD_ISSUER"
          },
          {
            "value": "DO_NOT_HONOR"
          },
          {
            "value": "INSUFFICIENT_FUNDS"
          },
          {
            "value": "WITHDRAWAL_LIMIT_EXCEEDED"
          },
          {
            "value": "ISSUER_TEMPORARILY_UNAVAILABLE"
          },
          {
            "value": "AUTHENTICATION_REQUIRED"
          }
        ],
        "type": "enum"
      }
    },
    "type_:PaymentsInsightsThreeDSecureAuthentication": {
      "name": "PaymentsInsightsThreeDSecureAuthentication",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "<span style=\"white-space: nowrap\">`<= 250 characters`</span>",
            "key": "transStatus",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "<span style=\"white-space: nowrap\">`<= 250 characters`</span>",
            "key": "transStatusReason",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The response returned during the 3D Secure authentication call.",
            "key": "responseCode",
            "valueType": {
              "itemType": {
                "value": "type_:PaymentsInsightsThreeDSecureAuthenticationResponseCode",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "The challenge status of the 3D Secure authentication.\nSet to false for frictionless 3D Secure authentication.",
            "key": "challengeIssued",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The protocol version used during 3D Secure authentication. <span style=\"white-space: nowrap\">`<= 250 characters`</span> ",
            "key": "protocolVersion",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The reason code for unsuccessful 3D Secure authentication attempts. <span style=\"white-space: nowrap\">`<= 250 characters`</span> ",
            "key": "reasonCode",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The human readable reason text for unsuccessful\n3D Secure authentication attempts. <span style=\"white-space: nowrap\">`<= 250 characters`</span> ",
            "key": "reasonText",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "E-commerce Indicator (ECI) <span style=\"white-space: nowrap\">`<= 250 characters`</span> ",
            "key": "eci",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:PaymentsInsightsThreeDSecureAuthenticationResponseCode": {
      "description": "The response returned during the 3D Secure authentication call.",
      "name": "PaymentsInsightsThreeDSecureAuthenticationResponseCode",
      "shape": {
        "values": [
          {
            "value": "NOT_PERFORMED"
          },
          {
            "value": "SKIPPED"
          },
          {
            "value": "AUTH_SUCCESS"
          },
          {
            "value": "AUTH_FAILED"
          },
          {
            "value": "CHALLENGE"
          },
          {
            "value": "METHOD"
          }
        ],
        "type": "enum"
      }
    },
    "type_:ErrorObject": {
      "description": "An object containing information about the error that occurred.",
      "name": "ErrorObject",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "An error ID",
            "key": "errorId",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "A human readable description of the error",
            "key": "description",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "An ID that you can quote when contacting the support team (support@primer.io).",
            "key": "diagnosticsId",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Returned in case of a badly formed request",
            "key": "validationErrors",
            "valueType": {
              "itemType": {
                "itemType": {
                  "keyType": {
                    "value": {
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "valueType": {
                    "type": "unknown"
                  },
                  "type": "map"
                },
                "type": "list"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:BadRequestErrorResponse": {
      "name": "BadRequestErrorResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "error",
            "valueType": {
              "value": "type_:ErrorObject",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:NotFoundErrorResponse": {
      "name": "NotFoundErrorResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "error",
            "valueType": {
              "value": "type_:ErrorObject",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:ConflictErrorResponse": {
      "name": "ConflictErrorResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "error",
            "valueType": {
              "value": "type_:ErrorObject",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:UnprocessableEntityErrorResponse": {
      "name": "UnprocessableEntityErrorResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "error",
            "valueType": {
              "value": "type_:ErrorObject",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_:AuthorizationTypeEnum": {
      "description": "Type of authorization for the payment.",
      "name": "AuthorizationTypeEnum",
      "shape": {
        "values": [
          {
            "value": "ESTIMATED"
          },
          {
            "value": "FINAL"
          }
        ],
        "type": "enum"
      }
    }
  },
  "subpackages": {
    "subpackage_clientSessionApi": {
      "subpackageId": "subpackage_clientSessionApi",
      "name": "Client Session API",
      "endpoints": [
        {
          "auth": true,
          "description": "This API call retrieves all the details associated with the client session corresponding to the client token that is provided in the request. The fields with empty values are excluded from the response.\n",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.primer.io"
            }
          ],
          "id": "retrieveClientSideToken",
          "name": "Retrieve a client session",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "",
                "type": "literal"
              },
              {
                "value": "/client-session",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Client token corresponding to the client session to retrieve",
              "key": "clientToken",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_:ClientSessionApiResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_:BadRequestErrorResponse",
                "type": "id"
              },
              "statusCode": 400
            },
            {
              "type": {
                "value": "type_:UnprocessableEntityErrorResponse",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "description": "Creating a client session generates a client token: a temporary key used to initialize [Universal Checkout](https://primer.io/docs/accept-payments/setup-universal-checkout/installation/web) and authenticate it against your account.\n\nUniversal Checkout automatically retrieves all the settings from the client session and the Dashboard to configure the payment methods and the checkout experience.\n\n<b>Note:</b>\nWhen creating a Client Session, please make sure to provide `currencyCode`, `orderId`, and at least one of `amount` or `lineItems`. \nIf any of these are not yet available, you can provide them w\nhen making the payment request.\n\n<code>POST /client-session</code> does not have required fields as all fields are not always known when a client session is created. \nUse <code>PATCH /client-session</code> to update the parameters throughout the checkout session.\n\nClient tokens expire after 24 hours.\n",
          "method": "POST",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.primer.io"
            }
          ],
          "id": "createClientSideToken",
          "name": "Create a client session",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "",
                "type": "literal"
              },
              {
                "value": "/client-session",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "description": "Your reference for the payment. <span style=\"white-space: nowrap\">`non-empty`</span> <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
                    "key": "orderId",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
                    "key": "currencyCode",
                    "valueType": {
                      "itemType": {
                        "value": "type_:Currency",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for Â¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts.",
                    "key": "amount",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "integer"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "More information associated with the order.",
                    "key": "order",
                    "valueType": {
                      "itemType": {
                        "value": "type_:OrderDetailsApiSchema",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "A unique identifier for your customer.\nCreate a client session token with a `customerId` to enable the client-side SDK to retrieve and manage your customer's saved payment methods. A client session token also enables saving payment methods against this customer id. <span style=\"white-space: nowrap\">`non-empty`</span> <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
                    "key": "customerId",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "More information associated with the customer.",
                    "key": "customer",
                    "valueType": {
                      "itemType": {
                        "value": "type_:CheckoutCustomerDetailsApiSchema",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`\n",
                    "key": "metadata",
                    "valueType": {
                      "itemType": {
                        "keyType": {
                          "value": {
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "valueType": {
                          "type": "unknown"
                        },
                        "type": "map"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "Enable certain options associated with the payment method.",
                    "key": "paymentMethod",
                    "valueType": {
                      "itemType": {
                        "value": "type_:CheckoutPaymentMethodOptionsApiSchema",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_:ClientSessionWithTokenApiResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_:BadRequestErrorResponse",
                "type": "id"
              },
              "statusCode": 400
            },
            {
              "type": {
                "value": "type_:UnprocessableEntityErrorResponse",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "description": "You can update a clients session created earlier with the `PATCH /client-session` [API call](#operation/create_client_side_token_client_session_post).\n\nThe only required field for the request is `clientToken`. Other supported request fields are same as for the `POST /client-session` [API call](#operation/create_client_side_token_client_session_post).\n\nYou need to specify only the fields you wish to update. However, if the items that are to be updated are of type `array`, then you need to provide the complete array along with modified items.\n\nIf you wish to update nested fields on the client session, such as the customer `emailAddress` field, you can pass the `customer` object with only one field, `emailAddress`, to update.\n\nIf you simply wish to clear the value of the field, pass `null` as your input.\n\nYou can update `paymentMethod.vaultOnSuccess` field but updating of the `paymentMethod.options` field through `PATCH /client-session` is not supported.\n\nThe response will contain all the fields of the client session including the ones that were changed.\n",
          "method": "PATCH",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.primer.io"
            }
          ],
          "id": "updateClientSideToken",
          "name": "Update client session",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "",
                "type": "literal"
              },
              {
                "value": "/client-session",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "description": "Client token for use in the Primer-JS SDK obtained via `POST` /client-session API call.",
                    "key": "clientToken",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "A unique identifier for your customer.",
                    "key": "customerId",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "Your reference for the order.",
                    "key": "orderId",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "\nThe 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
                    "key": "currencyCode",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for Â¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts.",
                    "key": "amount",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "integer"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "Additional data to be used throughout the payment lifecycle.\n\nProvide the entire object to update it. Anything provided previously will be overwritten.\n",
                    "key": "metadata",
                    "valueType": {
                      "itemType": {
                        "keyType": {
                          "value": {
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "valueType": {
                          "type": "unknown"
                        },
                        "type": "map"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "More information associated with the customer.\n\nEach of the fields in this object must be updated in its entirety, i.e. provide the entire object to update it. Anything provided previously will be overwritten.\n",
                    "key": "customer",
                    "valueType": {
                      "itemType": {
                        "value": "type_:CheckoutCustomerDetailsApiSchema",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "More information associated with the order.\n\nEach of the fields in this object must be updated in its entirety, i.e. provide the entire object to update it. Anything provided previously will be overwritten.\n",
                    "key": "order",
                    "valueType": {
                      "itemType": {
                        "value": "type_:OrderDetailsApiSchema",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "Enable certain options associated with the payment method. Provide the entire object to update it. Anything provided previously will be overwritten.",
                    "key": "paymentMethod",
                    "valueType": {
                      "itemType": {
                        "value": "type_:CheckoutPaymentMethodOptionsApiSchema",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_:ClientSessionApiResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_:BadRequestErrorResponse",
                "type": "id"
              },
              "statusCode": 400
            },
            {
              "type": {
                "value": "type_:UnprocessableEntityErrorResponse",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_paymentsApi": {
      "subpackageId": "subpackage_paymentsApi",
      "name": "Payments API",
      "endpoints": [
        {
          "auth": true,
          "description": "<p/>\n\nRetrieve a list of your payments.\n\nResults are paginated, they will only return up to 100 payments maximum.\nTo access the next page of result, set the `cursor` query parameter to the value of `nextCursor` in\nyour current result payload. Use `prevCursor` to go back to the previous page.\n\n**Note:** this endpoint returns a list of\nsummarized payments. Not all payments attributes are present. You can use\nthe query parameters to filter payments. You can separate multiple query parameters with the `&` symbol.\nQuery parameters with types of the form \"Array of strings\" (such as the status parameter) can be specified as a comma-separated list.\n\nFor example, if you wanted to get both `FAILED`  and `CANCELLED` payments, for customer `john-123`, you would use:\n```bash\ncurl --location --request GET 'https://api.primer.io/payments?status=FAILED,CANCELLED&customer_id=john-123' \\\n--header 'X-Api-Key: <YOUR_API_KEY>'\n```\n\nYou can alternatively specify a list by repeating the parameter multiple times.\n\n**Note:** payments will be available within a minute from being created.\n",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.primer.io"
            }
          ],
          "id": "listPayments",
          "name": "Search & list payments",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "",
                "type": "literal"
              },
              {
                "value": "/payments",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Filter payments by their status.",
              "key": "status",
              "type": {
                "itemType": {
                  "value": "type_:PaymentStatus",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "Filter payments by their payment method type.",
              "key": "payment_method_type",
              "type": {
                "itemType": {
                  "value": "type_:PaymentMethodTypeEnum",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "Filter payments by their payment processor.",
              "key": "processor",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Filter payments by their payment currency.\ne.g. use `USD` for US dollars.\n",
              "key": "currency_code",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Return only payments from this date (inclusive).",
              "key": "from_date",
              "type": {
                "itemType": {
                  "value": {
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Return only payments up to this date (inclusive).",
              "key": "to_date",
              "type": {
                "itemType": {
                  "value": {
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Return payments related to this order ID.",
              "key": "order_id",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Return payments of this amount minimum (inclusive).",
              "key": "min_amount",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Return payments of this amount max (inclusive).",
              "key": "max_amount",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "ID of the customer that has made the payment.",
              "key": "customer_id",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "ID of the merchant involved in the payment.",
              "key": "merchant_id",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Email of the customer that has made the payment.",
              "key": "customer_email_address",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Last 4 digits of the card used for the payment.",
              "key": "last_4_digits",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Paypal email address associated with the payment.",
              "key": "paypal_email",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Klarna email address associated with the payment.",
              "key": "klarna_email",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Maximum number of payments to return per page.",
              "key": "limit",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "If results are paginated, pass the `nextCursor` to access next page.",
              "key": "cursor",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_:PaymentListApiResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_:UnprocessableEntityErrorResponse",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "description": "<p/>\n\nCreate and authorize a payment for a given customer order. You\nshould provide a payment method token here to avoid PCI implications.\n\nIf only a payment method token is passed, the values passed with the Client Session is used to determine the amount, currency etc.\nNote: `amount`, `currencyCode` and `orderId` are required during payment creation. Make sure to pass these fields when creating a client session, or if not yet available, when creating a payment.\n\nAll fields provided on this request will take preference over any field on the `order` associated with the client session. E.g. if you pass `amount` on this request, it will override the `amount` on the `order` associated with the Client Session.\nParameters that are not on this request will be fetched from previously created Client Session and merged. E.g. if you specify `customer.billingAddress` in Client Session and then pass `customer.emailAddress` data with this request, it will automatically merge the `customer` fields and use both `billingAddress` and `emailAddress` for later calculations.\n",
          "method": "POST",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.primer.io"
            }
          ],
          "id": "createPayment",
          "name": "Create a payment",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "",
                "type": "literal"
              },
              {
                "value": "/payments",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "description": "Optional key to make the request idempotent. Learn more in the [Idempotency Key guide](../docs#idempotency-key).",
              "key": "X-Idempotency-Key",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            }
          ],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "description": "Your reference for the payment. <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
                    "key": "orderId",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
                    "key": "currencyCode",
                    "valueType": {
                      "itemType": {
                        "value": "type_:Currency",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for Â¥100, use `100`. The minimum amount is 0.",
                    "key": "amount",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "integer"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "More information associated with the order.",
                    "key": "order",
                    "valueType": {
                      "itemType": {
                        "value": "type_:OrderDetailsApiSchema",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "The payment method token used to authorize the payment.\n",
                    "key": "paymentMethodToken",
                    "valueType": {
                      "value": {
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "description": "A unique identifier for your customer.\nThis attribute is required if `paymentMethod.vaultOnSuccess` is set to `True`. <span style=\"white-space: nowrap\">`<= 256 characters`</span> ",
                    "key": "customerId",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "More information associated with the customer.\n",
                    "key": "customer",
                    "valueType": {
                      "itemType": {
                        "value": "type_:CustomerDetailsApiSchema",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`\n",
                    "key": "metadata",
                    "valueType": {
                      "itemType": {
                        "keyType": {
                          "value": {
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "valueType": {
                          "type": "unknown"
                        },
                        "type": "map"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "Enable certain options associated with the payment method.",
                    "key": "paymentMethod",
                    "valueType": {
                      "itemType": {
                        "value": "type_:PaymentRequestPaymentMethodOptionsApiSchema",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_:PaymentApiResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_:BadRequestErrorResponse",
                "type": "id"
              },
              "statusCode": 400
            },
            {
              "type": {
                "value": "type_:UnprocessableEntityErrorResponse",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "description": "<p/>\n\nManually authorize a payment using a provided processor. This is useful if you want to authorize a payment without a workflow action.\nThe processor merchant ID must be provided which can be found on the [Integrations page](https://dashboard.primer.io/integrations).\nThe processor name is optional but it must be provided if your account has multiple processors configured which share the same merchant IDs.\n",
          "method": "POST",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.primer.io"
            }
          ],
          "id": "authorizePayment",
          "name": "Authorize a payment",
          "path": {
            "pathParameters": [
              {
                "description": "ID of the payment to authorize.",
                "key": "id",
                "type": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                }
              }
            ],
            "parts": [
              {
                "value": "",
                "type": "literal"
              },
              {
                "value": "/payments/",
                "type": "literal"
              },
              {
                "value": "id",
                "type": "pathParameter"
              },
              {
                "value": "/authorize",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "description": "Optional key to make the request idempotent. Learn more in the [Idempotency Key guide](../docs#idempotency-key).",
              "key": "X-Idempotency-Key",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            }
          ],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "description": "The payment processor to use for this payment.",
                    "key": "processor",
                    "valueType": {
                      "value": "type_:PaymentAuthorizationRequestProcessorApiSchema",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_:PaymentApiResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_:BadRequestErrorResponse",
                "type": "id"
              },
              "statusCode": 400
            },
            {
              "type": {
                "value": "type_:NotFoundErrorResponse",
                "type": "id"
              },
              "statusCode": 404
            },
            {
              "type": {
                "value": "type_:ConflictErrorResponse",
                "type": "id"
              },
              "statusCode": 409
            },
            {
              "type": {
                "value": "type_:UnprocessableEntityErrorResponse",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "description": "<p/>\n\nIf you have successfully authorized a payment, you can now\nfully capture, or partially capture funds from the authorized payment, depending\non whether your selected payment processor supports it. The payment will\nbe updated to `SETTLED` or `SETTLING`, depending on the payment method type.\n\nThe payload sent in this capture request is completely optional. If you don't\nsend a payload with the capture request, the full amount that was authorized\nwill be sent for capture. Below are the available payload attributes, which\ngive you more granular control when capturing funds, if you require it.\n",
          "method": "POST",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.primer.io"
            }
          ],
          "id": "capturePayment",
          "name": "Capture a payment",
          "path": {
            "pathParameters": [
              {
                "description": "ID of the payment to capture.",
                "key": "id",
                "type": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                }
              }
            ],
            "parts": [
              {
                "value": "",
                "type": "literal"
              },
              {
                "value": "/payments/",
                "type": "literal"
              },
              {
                "value": "id",
                "type": "pathParameter"
              },
              {
                "value": "/capture",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "description": "Optional key to make the request idempotent. Learn more in the [Idempotency Key guide](../docs#idempotency-key).",
              "key": "X-Idempotency-Key",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            }
          ],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "description": "The amount you would like to capture, in minor units. The currency used on authorization is assumed.\n\nIf no amount is specified it defaults to the full amount.",
                    "key": "amount",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "integer"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "Indicates whether the capture request is the final capture request.\n\nAfter a final capture, no subsequent captures are allowed.",
                    "key": "final",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "boolean"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "More information associated with the order.",
                    "key": "order",
                    "valueType": {
                      "itemType": {
                        "value": "type_:PaymentCaptureApiRequestOrder",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_:PaymentApiResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_:BadRequestErrorResponse",
                "type": "id"
              },
              "statusCode": 400
            },
            {
              "type": {
                "value": "type_:UnprocessableEntityErrorResponse",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "description": "<p/>\n\nProvided the payment has not reached `SETTLED` status, Primer will\nsend a \"void\" request to the payment processor, thereby cancelling the payment\nand releasing the hold on customer funds. Upon success, the payment will transition\nto `CANCELLED`. The payload is optional.\n",
          "method": "POST",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.primer.io"
            }
          ],
          "id": "cancelPayment",
          "name": "Cancel a payment",
          "path": {
            "pathParameters": [
              {
                "description": "ID of payment to cancel.",
                "key": "id",
                "type": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                }
              }
            ],
            "parts": [
              {
                "value": "",
                "type": "literal"
              },
              {
                "value": "/payments/",
                "type": "literal"
              },
              {
                "value": "id",
                "type": "pathParameter"
              },
              {
                "value": "/cancel",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "description": "Optional key to make the request idempotent. Learn more in the [Idempotency Key guide](../docs#idempotency-key).",
              "key": "X-Idempotency-Key",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            }
          ],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "description": "You can optionally specify a reason for the cancellation. This is for your own records.",
                    "key": "reason",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_:PaymentApiResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_:BadRequestErrorResponse",
                "type": "id"
              },
              "statusCode": 400
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "description": "<p/>\n\nBy default, this request will refund the full amount.\n\nOptionally, pass in a lesser amount for a partial refund.\n",
          "method": "POST",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.primer.io"
            }
          ],
          "id": "refundPayment",
          "name": "Refund a payment",
          "path": {
            "pathParameters": [
              {
                "description": "ID of payment to refund.",
                "key": "id",
                "type": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                }
              }
            ],
            "parts": [
              {
                "value": "",
                "type": "literal"
              },
              {
                "value": "/payments/",
                "type": "literal"
              },
              {
                "value": "id",
                "type": "pathParameter"
              },
              {
                "value": "/refund",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "description": "Optional key to make the request idempotent. Learn more in the [Idempotency Key guide](../docs#idempotency-key).",
              "key": "X-Idempotency-Key",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            }
          ],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "description": "The amount you would like to refund the customer, in minor units. e.g. for $7, use `700`.\n\nDefaults to remaining non-refunded amount.",
                    "key": "amount",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "integer"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "Optionally you can pass a specific order ID for the refund.\n\nBy default this will be set to the original `orderId` given on payment creation.",
                    "key": "orderId",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "You can optionally specify a reason for the refund. This is for your own records.",
                    "key": "reason",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_:PaymentApiResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_:BadRequestErrorResponse",
                "type": "id"
              },
              "statusCode": 400
            },
            {
              "type": {
                "value": "type_:UnprocessableEntityErrorResponse",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "description": "<p/>\n\nResume a payment's workflow execution from a paused state. This\nis usually required when a Workflow was paused in order to get further information\nfrom the customer, or when waiting for an asynchronous response from a third\nparty connection.\n",
          "method": "POST",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.primer.io"
            }
          ],
          "id": "resumePayment",
          "name": "Resume a payment",
          "path": {
            "pathParameters": [
              {
                "description": "ID of payment to resume.",
                "key": "id",
                "type": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                }
              }
            ],
            "parts": [
              {
                "value": "",
                "type": "literal"
              },
              {
                "value": "/payments/",
                "type": "literal"
              },
              {
                "value": "id",
                "type": "pathParameter"
              },
              {
                "value": "/resume",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "description": "A token containing any information that is sent back from the checkout to complete a blocked payment flow.",
                    "key": "resumeToken",
                    "valueType": {
                      "value": {
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_:PaymentApiResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_:BadRequestErrorResponse",
                "type": "id"
              },
              "statusCode": 400
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "description": "<p/>\n\nAdjust authorized amount. This is only possible if `authorizationType` was set to \n`ESTIMATED` when the payment was created, and the mechanism is supported by the payment method.\n",
          "method": "POST",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.primer.io"
            }
          ],
          "id": "adjustAuthorization",
          "name": "Adjust authorized amount",
          "path": {
            "pathParameters": [
              {
                "description": "ID of payment for adjusting authorization.",
                "key": "id",
                "type": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                }
              }
            ],
            "parts": [
              {
                "value": "",
                "type": "literal"
              },
              {
                "value": "/payments/",
                "type": "literal"
              },
              {
                "value": "id",
                "type": "pathParameter"
              },
              {
                "value": "/adjust-authorization",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "description": "The **final** amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for Â¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts.",
                    "key": "amount",
                    "valueType": {
                      "value": {
                        "type": "integer"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_:PaymentApiResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_:BadRequestErrorResponse",
                "type": "id"
              },
              "statusCode": 400
            },
            {
              "type": {
                "value": "type_:NotFoundErrorResponse",
                "type": "id"
              },
              "statusCode": 404
            },
            {
              "type": {
                "value": "type_:UnprocessableEntityErrorResponse",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "description": "<p/>\n\nRetrieve a payment by its ID.\n",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.primer.io"
            }
          ],
          "id": "getPaymentById",
          "name": "Get a payment",
          "path": {
            "pathParameters": [
              {
                "description": "ID of payment to retrieve.",
                "key": "id",
                "type": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                }
              }
            ],
            "parts": [
              {
                "value": "",
                "type": "literal"
              },
              {
                "value": "/payments/",
                "type": "literal"
              },
              {
                "value": "id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_:PaymentApiResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_:BadRequestErrorResponse",
                "type": "id"
              },
              "statusCode": 400
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_paymentMethodsApi": {
      "subpackageId": "subpackage_paymentMethodsApi",
      "name": "Payment Methods API",
      "endpoints": [
        {
          "auth": true,
          "description": "<p/>\n\nSave a `SINGLE_USE` payment method token so it can be used\nagain later. You can optionally choose to verify the payment method\nbefore vaulting. If verification fails, no payment method data will\nbe vaulted. Verification can minimise fraud and boost subscription\nrates for recurring payments.\n\nIf you try to vault an already vaulted token, you will get the existing vaulted token back.\n",
          "method": "POST",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.primer.io"
            }
          ],
          "id": "vault_payment_method_payment_methods__token__vault_post",
          "name": "Save a payment method token",
          "path": {
            "pathParameters": [
              {
                "description": "Payment method token to store.",
                "key": "paymentMethodToken",
                "type": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                }
              }
            ],
            "parts": [
              {
                "value": "",
                "type": "literal"
              },
              {
                "value": "/payment-instruments/",
                "type": "literal"
              },
              {
                "value": "paymentMethodToken",
                "type": "pathParameter"
              },
              {
                "value": "/vault",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "description": "The ID representing the customer <span style=\"white-space: nowrap\">`non-empty`</span> ",
                    "key": "customerId",
                    "valueType": {
                      "value": {
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "description": "Whether the payment method should be verified before vaulting or not",
                    "key": "verify",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "boolean"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_:VerifiedMerchantPaymentMethodTokenApiResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_:BadRequestErrorResponse",
                "type": "id"
              },
              "statusCode": 400
            },
            {
              "type": {
                "value": "type_:UnprocessableEntityErrorResponse",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "description": "Retrieve a list of stored payment methods for a customer.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.primer.io"
            }
          ],
          "id": "get_payment_methods_payment_methods_get",
          "name": "List saved payment methods",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "",
                "type": "literal"
              },
              {
                "value": "/payment-instruments",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Return payment methods for this customer ID.",
              "key": "customer_id",
              "type": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_:VerifiedMerchantPaymentMethodTokenListApiResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "examples": []
        },
        {
          "auth": true,
          "description": "Delete a saved payment method.",
          "method": "DELETE",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.primer.io"
            }
          ],
          "id": "delete_payment_method_payment_methods__token__delete",
          "name": "Delete a saved payment method",
          "path": {
            "pathParameters": [
              {
                "description": "Saved payment method token to delete.",
                "key": "paymentMethodToken",
                "type": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                }
              }
            ],
            "parts": [
              {
                "value": "",
                "type": "literal"
              },
              {
                "value": "/payment-instruments/",
                "type": "literal"
              },
              {
                "value": "paymentMethodToken",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_:VerifiedMerchantPaymentMethodTokenApiResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_:BadRequestErrorResponse",
                "type": "id"
              },
              "statusCode": 400
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "description": "Update a saved payment method to be the default stored payment method for a customer.",
          "method": "POST",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.primer.io"
            }
          ],
          "id": "set_payment_method_default_payment_methods__token__default_post",
          "name": "Update the default saved payment method",
          "path": {
            "pathParameters": [
              {
                "description": "Saved payment method token to set to default.",
                "key": "paymentMethodToken",
                "type": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                }
              }
            ],
            "parts": [
              {
                "value": "",
                "type": "literal"
              },
              {
                "value": "/payment-instruments/",
                "type": "literal"
              },
              {
                "value": "paymentMethodToken",
                "type": "pathParameter"
              },
              {
                "value": "/default",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_:MerchantPaymentMethodTokenApiResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_:BadRequestErrorResponse",
                "type": "id"
              },
              "statusCode": 400
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_observabilityApi": {
      "subpackageId": "subpackage_observabilityApi",
      "name": "Observability API",
      "endpoints": [
        {
          "auth": true,
          "description": "The Observability API is currently in beta. Please contact [support@primer.io](mailto:support@primer.io) for access.\n\nCreating a payment with the Observability API sends external payments data to Primer to populate [Observability Payment Insights dashboards](https://primer.io/observability). Payments created through the [Payments API](/reference/create_payment_payments_post) will be automatically populated and do not need to be sent in the Observability API.\n\nCreate an API key with the `observability-payments:write` scope.\n\nEach record must be created with a unique `paymentId`. To update a payment record with new data use the `PATCH` endpoint.\n",
          "method": "POST",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.primer.io"
            }
          ],
          "id": "external_payment",
          "name": "Create an external payment",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "",
                "type": "literal"
              },
              {
                "value": "/observability/payments",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "value": {
                  "value": "type_:PaymentsInsightsPayment",
                  "type": "id"
                },
                "type": "reference"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_:PaymentsInsightsPayment",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "examples": []
        },
        {
          "auth": true,
          "description": "The Observability API is currently in beta. Please contact [support@primer.io](mailto:support@primer.io) for access.\n\nYou can update payments created earlier through the Observability API with this endpoint. The only required field for the request is `paymentId`. Other supported request fields are the same as for the [create an external payment](/reference/external_payment) API call.\n\nIf you wish to update nested fields on the payment, you only need to pass the fields that you wish to update. For example to update the processor name, you would pass in `processor.name` only.\n\nThe response will contain all the fields of the payment including the ones that were changed.\n",
          "method": "PATCH",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.primer.io"
            }
          ],
          "id": "external_payment_update",
          "name": "Update an external payment",
          "path": {
            "pathParameters": [
              {
                "key": "paymentId",
                "type": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                }
              }
            ],
            "parts": [
              {
                "value": "",
                "type": "literal"
              },
              {
                "value": "/observability/payments/",
                "type": "literal"
              },
              {
                "value": "paymentId",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "description": "The payment ID.\n\nThe payment ID must be unique. You can use this unique payment ID to update payment details. <span style=\"white-space: nowrap\">`<= 250 characters`</span> ",
                    "key": "paymentId",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "The 3-letter currency code in\n[ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\n\ne.g. use `USD` for US dollars.",
                    "key": "currencyCode",
                    "valueType": {
                      "itemType": {
                        "value": "type_:PaymentsInsightsPatchedPaymentCurrencyCode",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "processor",
                    "valueType": {
                      "itemType": {
                        "value": "type_:PaymentsInsightsProcessor",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "The amount you would like to charge the customer,\nin minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units.\nIn this case you should use the value as it is, without any formatting.\nFor example for Â¥100, use `100`.\nThe minimum amount is 0.",
                    "key": "amount",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "integer"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "The payment creation date and time (UTC) in [ISO 8601 format](\nhttps://en.wikipedia.org/wiki/ISO_8601).\n\nCannot be updated in partial updates PATCH.",
                    "key": "createdAt",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "datetime"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "order",
                    "valueType": {
                      "itemType": {
                        "value": "type_:PaymentsInsightsOrder",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "See the payment [status table](\nhttps://apiref.primer.io/docs#payment-status) for more information.",
                    "key": "status",
                    "valueType": {
                      "itemType": {
                        "value": "type_:PaymentsInsightsPatchedPaymentStatus",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "Pass more information regarding the payment's status in this field.\n\nThis is especially useful when the status is `DECLINED` or `FAILED`.",
                    "key": "statusReason",
                    "valueType": {
                      "itemType": {
                        "value": "type_:PaymentsInsightsStatusReason",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "paymentMethod",
                    "valueType": {
                      "itemType": {
                        "value": "type_:PaymentsInsightsPaymentMethod",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "Additional data to be used throughout the payment lifecycle.\n\nAd dictionary of key-value pairs where the values can only be strings or integers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"88278a\"}`",
                    "key": "metadata",
                    "valueType": {
                      "itemType": {
                        "keyType": {
                          "value": {
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "valueType": {
                          "type": "unknown"
                        },
                        "type": "map"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "Payment types, primarily to be used for recurring payments.\n\nNote: If you successfully vault a `SINGLE_USE` token on payment\ncreation, then there's no need to set a value for this field and it will\nbe flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all\npossible values.\n\n\n| paymentType | Use case |\n| --- | --- |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE` | a customer-initiated payment using stored payment details where the cardholder is present. |\n| `SUBSCRIPTION` | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount. |\n| `UNSCHEDULED` | a merchant-initiated payment using stored payment details with no fixed schedule or amount. |\n| `MOTO` | a merchant-initiated mail order or telephone order payment. |\n| `IN_STORE` | a customer-initiated payment where the customer is physically present in a shop. |",
                    "key": "paymentType",
                    "valueType": {
                      "itemType": {
                        "value": "type_:PaymentsInsightsPatchedPaymentPaymentType",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "A description of the payment,\nas it would typically appear on a bank statement. <span style=\"white-space: nowrap\">`<= 250 characters`</span> ",
                    "key": "descriptor",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_:PaymentsInsightsPayment",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_loyaltyApi": {
      "subpackageId": "subpackage_loyaltyApi",
      "name": "Loyalty API",
      "endpoints": [
        {
          "auth": true,
          "description": "The Loyalty API is currently in beta.\nPlease contact [support@primer.io](mailto:support@primer.io) for access.\n\nCreate an API key with the `loyalty-transactions:read` scopes.\n\nGet a loyalty customer by ID and connection ID. This includes the customer's points balance.\n\nThe `connectionId` is the unique Primer identifier for your loyalty provider connection. Primer will provide this once the loyalty provider connection is created.\n\nThe `customerId` refers to the customer identifier on the loyalty provider's side.\n",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.primer.io"
            }
          ],
          "id": "get_loyalty_customer",
          "name": "Get a loyalty customer's points balance",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier for the customer on the loyalty provider.",
                "key": "id",
                "type": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                }
              }
            ],
            "parts": [
              {
                "value": "",
                "type": "literal"
              },
              {
                "value": "/loyalty-customers/",
                "type": "literal"
              },
              {
                "value": "id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "ID of the Primer connection configuration.",
              "key": "connectionId",
              "type": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_:LoyaltyApiBalanceResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_:BadRequestErrorResponse",
                "type": "id"
              },
              "statusCode": 400
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "description": "The Loyalty API is currently in beta.\nPlease contact [support@primer.io](mailto:support@primer.io) for access.\n\nCreate an API key with the `loyalty-transactions:read` scopes.\n\nGet all your loyalty transactions. You can filter by `connectionId` (recommended) and by `customerId` and `orderId`.\n\nAdditionally provide a `limit` to restrict the number of transactions in the response, and an `offset` to determine where to start.\n",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.primer.io"
            }
          ],
          "id": "get_loyalty_customer_transactions",
          "name": "List the transactions for a customer",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "",
                "type": "literal"
              },
              {
                "value": "/loyalty-transactions",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Filter transactions by customer Id.",
              "key": "connectionId",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Filter transactions by customer Id.",
              "key": "customerId",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Filter transactions by orderId.",
              "key": "orderId",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Limit the number of returned results",
              "key": "limit",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "The number of items to skip before returning results",
              "key": "offset",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_:LoyaltyApiTransactionsListResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_:BadRequestErrorResponse",
                "type": "id"
              },
              "statusCode": 400
            },
            {
              "type": {
                "value": "type_:UnprocessableEntityErrorResponse",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "description": "The Loyalty API is currently in beta.\nPlease contact [support@primer.io](mailto:support@primer.io) for access.\n\nCreate an API key with the `loyalty-transactions:write` scopes.\n\nCreate a loyalty transaction. This is either a points redemption or a points refund.\n",
          "method": "POST",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.primer.io"
            }
          ],
          "id": "post_loyalty_transaction",
          "name": "Create a loyalty transaction",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "",
                "type": "literal"
              },
              {
                "value": "/loyalty-transactions",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "description": "ID of the Primer connection configuration.",
                    "key": "connectionId",
                    "valueType": {
                      "value": {
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "description": "The unique identifier for the customer on the loyalty provider.",
                    "key": "customerId",
                    "valueType": {
                      "value": {
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "description": "Unique identifier for the order.",
                    "key": "orderId",
                    "valueType": {
                      "value": {
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "description": "The type of the transaction.",
                    "key": "type",
                    "valueType": {
                      "itemType": {
                        "value": "type_:LoyaltyTransactionTypeEnum",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "The value of points to redeem.",
                    "key": "value",
                    "valueType": {
                      "value": {
                        "type": "integer"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_:LoyaltyApiTransactionResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_:BadRequestErrorResponse",
                "type": "id"
              },
              "statusCode": 400
            },
            {
              "type": {
                "value": "type_:UnprocessableEntityErrorResponse",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [],
      "subpackages": []
    }
  },
  "rootPackage": {
    "endpoints": [],
    "webhooks": [],
    "types": [
      "type_:PaymentCaptureApiRequestOrder",
      "type_:PaymentsInsightsPayment",
      "type_:PaymentsInsightsPaymentCurrencyCode",
      "type_:PaymentsInsightsPaymentStatus",
      "type_:PaymentsInsightsPaymentPaymentType",
      "type_:PaymentsInsightsPatchedPaymentCurrencyCode",
      "type_:PaymentsInsightsPatchedPaymentStatus",
      "type_:PaymentsInsightsPatchedPaymentPaymentType",
      "type_:AccountFundingTypeEnum",
      "type_:ApayaCustomerTokenApiSchema",
      "type_:BinDataApiSchema",
      "type_:BlockingPaymentActionTypeEnum",
      "type_:CardAccountNumberTypeEnum",
      "type_:CardNetworkEnum",
      "type_:CardProductTypeEnum",
      "type_:CardRegionRestrictionEnum",
      "type_:OrderDetailsApiSchema",
      "type_:OrderFeesApiSchema",
      "type_:OrderLineItemsApiSchema",
      "type_:OrderLineItemsProductDataApiSchema",
      "type_:OrderShippingApiSchema",
      "type_:CheckoutPaymentMethodOptionsApiSchema",
      "type_:CheckoutPaymentMethodOptionsApiSchemaOptions",
      "type_:CheckoutPaymentMethodOptionApiSchema",
      "type_:CheckoutPaymentMethodCardOptionApiSchema",
      "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema",
      "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
      "type_:CheckoutPaymentMethodOptionSurchargeApiSchema",
      "type_:PaymentRequestPaymentMethodOptionsApiSchema",
      "type_:PaymentResponsePaymentMethodOptionsApiSchema",
      "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData",
      "type_:CheckoutCustomerDetailsApiSchema",
      "type_:CustomerDetailsApiSchema",
      "type_:ClientSessionWithTokenApiResponse",
      "type_:ClientSessionApiResponse",
      "type_:ClientSessionWarningsApiResponse",
      "type_:CountryCodeEnum",
      "type_:Currency",
      "type_:PaymentResponseProcessorApiSchema",
      "type_:GoCardlessMandateApiSchema",
      "type_:IdealPayNlTokenApiSchema",
      "type_:KlarnaAddressApiSchema",
      "type_:KlarnaCustomerTokenApiSchema",
      "type_:KlarnaPaymentSessionApiSchema",
      "type_:KlarnaSessionDetailsApiSchema",
      "type_:KlarnaTokenDetails",
      "type_:PayPalBillingAgreementApiSchema",
      "type_:PayPalExternalPayerInfoApiSchema",
      "type_:PayPalOrderTokenApiSchema",
      "type_:PaymentApiResponse",
      "type_:PaymentCardTokenApiSchema",
      "type_:StatusReasonApiSchema",
      "type_:RiskDataApiSchema",
      "type_:FraudCheckApiSchema",
      "type_:FraudDecisionTypeEnum",
      "type_:PaymentMethodTypeEnum",
      "type_:PaymentListApiResponse",
      "type_:PaymentRequiredActionApiSchema",
      "type_:PaymentSummaryApiSchema",
      "type_:PaymentAuthorizationRequestProcessorApiSchema",
      "type_:PaymentSummaryProcessorApiSchema",
      "type_:PrepaidReloadableEnum",
      "type_:RecurringTransactionTypeEnum",
      "type_:RecurringPaymentTypeSchema",
      "type_:ProductTypeEnum",
      "type_:ThreeDSecureAuthResponseCodeEnum",
      "type_:ThreeDSecureAuthenticationApiSchema",
      "type_:ThreeDSecureAuthenticationApiSchemaReasonCode",
      "type_:ThreeDSecureFailedReasonCodeEnum",
      "type_:ThreeDSecureSkippedReasonCodeEnum",
      "type_:TokenTypeEnum",
      "type_:DeclineTypeEnum",
      "type_:TransactionDeclineReasonV2Enum",
      "type_:TransactionOverviewApiSchema",
      "type_:PaymentStatus",
      "type_:PaymentStatusTypeEnum",
      "type_:TransactionTypeEnum",
      "type_:OptionalAddressApiSchema",
      "type_:AddressApiSchema",
      "type_:MerchantPaymentMethodTokenApiResponse",
      "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData",
      "type_:VerifiedMerchantPaymentMethodTokenApiResponse",
      "type_:VerifiedMerchantPaymentMethodTokenListApiResponse",
      "type_:LoyaltyApiBalanceResponse",
      "type_:LoyaltyTransactionTypeEnum",
      "type_:LoyaltyApiTransactionResponse",
      "type_:LoyaltyApiTransactionsListResponse",
      "type_:PaymentsInsightsBinData",
      "type_:PaymentsInsightsBinDataIssuerCountryCode",
      "type_:PaymentsInsightsOrder",
      "type_:PaymentsInsightsOrderCountryCode",
      "type_:PaymentsInsightsPaymentMethod",
      "type_:PaymentsInsightsPaymentMethodData",
      "type_:PaymentsInsightsProcessor",
      "type_:PaymentsInsightsProcessorName",
      "type_:PaymentsInsightsStatusReason",
      "type_:PaymentsInsightsStatusReasonType",
      "type_:PaymentsInsightsStatusReasonDeclineType",
      "type_:PaymentsInsightsStatusReasonCode",
      "type_:PaymentsInsightsThreeDSecureAuthentication",
      "type_:PaymentsInsightsThreeDSecureAuthenticationResponseCode",
      "type_:ErrorObject",
      "type_:BadRequestErrorResponse",
      "type_:NotFoundErrorResponse",
      "type_:ConflictErrorResponse",
      "type_:UnprocessableEntityErrorResponse",
      "type_:AuthorizationTypeEnum"
    ],
    "subpackages": [
      "subpackage_clientSessionApi",
      "subpackage_paymentsApi",
      "subpackage_paymentMethodsApi",
      "subpackage_observabilityApi",
      "subpackage_loyaltyApi"
    ]
  },
  "auth": {
    "headerWireValue": "X-API-KEY",
    "nameOverride": "apiKey",
    "type": "header"
  }
}
