/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernRegistry from "../../../../../index";
import express from "express";
export interface LatestServiceMethods {
    getApiLatest(req: express.Request<{
        apiDefinitionId: FernRegistry.ApiDefinitionId;
    }, FernRegistry.api.latest.ApiDefinition, never, never>, res: {
        send: (responseBody: FernRegistry.api.latest.ApiDefinition) => Promise<void>;
        cookie: (cookie: string, value: string, options?: express.CookieOptions) => void;
        locals: any;
    }, next: express.NextFunction): void | Promise<void>;
}
export declare class LatestService {
    private readonly methods;
    private router;
    constructor(methods: LatestServiceMethods, middleware?: express.RequestHandler[]);
    addMiddleware(handler: express.RequestHandler): this;
    toRouter(): express.Router;
}
