{
  "id": "73803ef9-1d14-46c9-9c0b-ece23481f286",
  "rootPackage": {
    "endpoints": [],
    "subpackages": ["subpackage_clientSessionApi", "subpackage_paymentsApi", "subpackage_paymentMethodsApi"],
    "types": [
      "type_:ClientSessionApiRequest",
      "type_:ClientSessionUpdateApiRequest",
      "type_:PaymentCaptureApiRequest",
      "type_:PaymentCancelApiRequest",
      "type_:PaymentRefundApiRequest",
      "type_:AccountFundingTypeEnum",
      "type_:ApayaCustomerTokenApiSchema",
      "type_:BinDataOptionalApiSchema",
      "type_:BinDataApiSchema",
      "type_:BlockingPaymentActionTypeEnum",
      "type_:CardAccountNumberTypeEnum",
      "type_:CardNetworkEnum",
      "type_:CardProductTypeEnum",
      "type_:CardRegionRestrictionEnum",
      "type_:OrderDetailsApiSchema",
      "type_:OrderFeesApiSchema",
      "type_:OrderLineItemsApiSchema",
      "type_:OrderShippingApiSchema",
      "type_:CheckoutPaymentMethodOptionsApiSchema",
      "type_:CheckoutPaymentMethodOptionsApiSchemaOptions",
      "type_:CheckoutPaymentMethodOptionApiSchema",
      "type_:CheckoutPaymentMethodCardOptionApiSchema",
      "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema",
      "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
      "type_:CheckoutPaymentMethodOptionSurchargeApiSchema",
      "type_:PaymentRequestPaymentMethodOptionsApiSchema",
      "type_:PaymentResponsePaymentMethodOptionsApiSchema",
      "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData",
      "type_:CheckoutCustomerDetailsApiSchema",
      "type_:CustomerDetailsApiSchema",
      "type_:ClientSessionWithTokenApiResponse",
      "type_:ClientSessionApiResponse",
      "type_:ClientSessionWarningsApiResponse",
      "type_:CountryCodeEnum",
      "type_:Currency",
      "type_:PaymentResponseProcessorApiSchema",
      "type_:GoCardlessMandateApiSchema",
      "type_:IdealPayNlTokenApiSchema",
      "type_:KlarnaAddressApiSchema",
      "type_:KlarnaCustomerTokenApiSchema",
      "type_:KlarnaPaymentSessionApiSchema",
      "type_:KlarnaSessionDetailsApiSchema",
      "type_:KlarnaTokenDetails",
      "type_:PayPalBillingAgreementApiSchema",
      "type_:PayPalExternalPayerInfoApiSchema",
      "type_:PayPalOrderTokenApiSchema",
      "type_:PaymentApiResponse",
      "type_:PaymentCardTokenApiSchema",
      "type_:StatusReasonApiSchema",
      "type_:PaymentMethodTypeEnum",
      "type_:PaymentListApiResponse",
      "type_:PaymentRequiredActionApiSchema",
      "type_:PaymentSummaryApiSchema",
      "type_:PaymentSummaryProcessorApiSchema",
      "type_:PrepaidReloadableEnum",
      "type_:RecurringTransactionTypeEnum",
      "type_:RecurringPaymentTypeSchema",
      "type_:ProductTypeEnum",
      "type_:ThreeDSecureAuthResponseCodeEnum",
      "type_:ThreeDSecureAuthenticationApiSchema",
      "type_:ThreeDSecureAuthenticationApiSchemaReasonCode",
      "type_:ThreeDSecureFailedReasonCodeEnum",
      "type_:ThreeDSecureSkippedReasonCodeEnum",
      "type_:TokenTypeEnum",
      "type_:DeclineTypeEnum",
      "type_:TransactionDeclineReasonV2Enum",
      "type_:TransactionOverviewApiSchema",
      "type_:PaymentStatus",
      "type_:PaymentStatusTypeEnum",
      "type_:TransactionTypeEnum",
      "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema",
      "type_:AddressApiSchema",
      "type_:MerchantPaymentMethodTokenApiResponse",
      "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData",
      "type_:VerifiedMerchantPaymentMethodTokenApiResponse",
      "type_:MerchantPaymentMethodTokenListApiResponse",
      "type_:VerifiedMerchantPaymentMethodTokenListApiResponse",
      "type_:PaymentCardTokenApiSchemaPaymentMethodsApi",
      "type_:ErrorObject",
      "type_:BadRequestErrorResponse",
      "type_:UnprocessableEntityErrorResponse"
    ],
    "webhooks": []
  },
  "types": {
    "type_:ClientSessionApiRequest": {
      "description": null,
      "name": "ClientSessionApiRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Your reference for the payment.",
            "htmlDescription": "<p>Your reference for the payment.</p>\n",
            "key": "orderId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
            "htmlDescription": "<p>The 3-letter currency code in <a href=\"https://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 format</a>.\ne.g. use <code>USD</code> for US dollars.</p>\n",
            "key": "currencyCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": true
          },
          {
            "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts.",
            "htmlDescription": "<p>The amount you would like to charge the customer, in minor units. e.g. for $7, use <code>700</code>.</p>\n<p>Some currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use <code>100</code>.</p>\n<p>If the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts.</p>\n",
            "key": "amount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "descriptionContainsMarkdown": true
          },
          {
            "description": "More information associated with the order.",
            "htmlDescription": "<p>More information associated with the order.</p>\n",
            "key": "order",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:OrderDetailsApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "A unique identifier for your customer.\nCreate a client session token with a `customerId` to enable the client-side SDK to retrieve and manage your customer's saved payment methods. A client session token also enables saving payment methods against this customer id.",
            "htmlDescription": "<p>A unique identifier for your customer.\nCreate a client session token with a <code>customerId</code> to enable the client-side SDK to retrieve and manage your customer&#39;s saved payment methods. A client session token also enables saving payment methods against this customer id.</p>\n",
            "key": "customerId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": true
          },
          {
            "description": "More information associated with the customer.",
            "htmlDescription": "<p>More information associated with the customer.</p>\n",
            "key": "customer",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CheckoutCustomerDetailsApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`\n",
            "htmlDescription": "<p>Additional data to be used throughout the payment lifecycle.</p>\n<p>A dictionary of key-value pairs where the values can only be strings or\nintegers.</p>\n<p>e.g. <code>{&quot;productId&quot;: 1001, &quot;merchantId&quot;: &quot;a13bsd62s&quot;}</code></p>\n",
            "key": "metadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            },
            "descriptionContainsMarkdown": true
          },
          {
            "description": "Enable certain options associated with the payment method.",
            "htmlDescription": "<p>Enable certain options associated with the payment method.</p>\n",
            "key": "paymentMethod",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CheckoutPaymentMethodOptionsApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:ClientSessionUpdateApiRequest": {
      "description": null,
      "name": "ClientSessionUpdateApiRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Client token for use in the Primer-JS SDK obtained via `POST` /client-session API call.",
            "htmlDescription": "<p>Client token for use in the Primer-JS SDK obtained via <code>POST</code> /client-session API call.</p>\n",
            "key": "clientToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": true
          },
          {
            "description": "A unique identifier for your customer.",
            "htmlDescription": "<p>A unique identifier for your customer.</p>\n",
            "key": "customerId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Your reference for the order.",
            "htmlDescription": "<p>Your reference for the order.</p>\n",
            "key": "orderId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "\nThe 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
            "htmlDescription": "<p>The 3-letter currency code in <a href=\"https://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 format</a>.\ne.g. use <code>USD</code> for US dollars.</p>\n",
            "key": "currencyCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": true
          },
          {
            "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts.",
            "htmlDescription": "<p>The amount you would like to charge the customer, in minor units. e.g. for $7, use <code>700</code>.</p>\n<p>Some currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use <code>100</code>.</p>\n<p>If the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts.</p>\n",
            "key": "amount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "descriptionContainsMarkdown": true
          },
          {
            "description": "Additional data to be used throughout the payment lifecycle.\n\nProvide the entire object to update it. Anything provided previously will be overwritten.\n",
            "htmlDescription": "<p>Additional data to be used throughout the payment lifecycle.</p>\n<p>Provide the entire object to update it. Anything provided previously will be overwritten.</p>\n",
            "key": "metadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "More information associated with the customer.\n\nEach of the fields in this object must be updated in its entirety, i.e. provide the entire object to update it. Anything provided previously will be overwritten.\n",
            "htmlDescription": "<p>More information associated with the customer.</p>\n<p>Each of the fields in this object must be updated in its entirety, i.e. provide the entire object to update it. Anything provided previously will be overwritten.</p>\n",
            "key": "customer",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CheckoutCustomerDetailsApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "More information associated with the order.\n\nEach of the fields in this object must be updated in its entirety, i.e. provide the entire object to update it. Anything provided previously will be overwritten.\n",
            "htmlDescription": "<p>More information associated with the order.</p>\n<p>Each of the fields in this object must be updated in its entirety, i.e. provide the entire object to update it. Anything provided previously will be overwritten.</p>\n",
            "key": "order",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:OrderDetailsApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Enable certain options associated with the payment method. Provide the entire object to update it. Anything provided previously will be overwritten.",
            "htmlDescription": "<p>Enable certain options associated with the payment method. Provide the entire object to update it. Anything provided previously will be overwritten.</p>\n",
            "key": "paymentMethod",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CheckoutPaymentMethodOptionsApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:PaymentCaptureApiRequest": {
      "description": null,
      "name": "PaymentCaptureApiRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The amount you would like to capture, in minor units. The currency used on authorization is assumed.\n\nIf no amount is specified it defaults to the full amount.",
            "htmlDescription": "<p>The amount you would like to capture, in minor units. The currency used on authorization is assumed.</p>\n<p>If no amount is specified it defaults to the full amount.</p>\n",
            "key": "amount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Indicates whether the capture request is the final capture request.\n\nAfter a final capture, no subsequent captures are allowed.",
            "htmlDescription": "<p>Indicates whether the capture request is the final capture request.</p>\n<p>After a final capture, no subsequent captures are allowed.</p>\n",
            "key": "final",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Additional payment metadata.\nThis only takes effect if the payment was created via the New Workflows ([read more here](https://primer.io/docs/changelog/migration-guides/new-workflows)).\nA dictionary of key-value pairs where the values can only be strings or integers. Keys  which already exist in the payment metadata will be overwritten.",
            "htmlDescription": "<p>Additional payment metadata.\nThis only takes effect if the payment was created via the New Workflows (<a href=\"https://primer.io/docs/changelog/migration-guides/new-workflows\">read more here</a>).\nA dictionary of key-value pairs where the values can only be strings or integers. Keys  which already exist in the payment metadata will be overwritten.</p>\n",
            "key": "metadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            },
            "descriptionContainsMarkdown": true
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:PaymentCancelApiRequest": {
      "description": null,
      "name": "PaymentCancelApiRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "You can optionally specify a reason for the cancellation. This is for your own records.",
            "htmlDescription": "<p>You can optionally specify a reason for the cancellation. This is for your own records.</p>\n",
            "key": "reason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:PaymentRefundApiRequest": {
      "description": null,
      "name": "PaymentRefundApiRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The amount you would like to refund the customer, in minor units. e.g. for $7, use `700`.\n\nDefaults to remaining non-refunded amount.",
            "htmlDescription": "<p>The amount you would like to refund the customer, in minor units. e.g. for $7, use <code>700</code>.</p>\n<p>Defaults to remaining non-refunded amount.</p>\n",
            "key": "amount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "descriptionContainsMarkdown": true
          },
          {
            "description": "Optionally you can pass a specific order ID for the refund.\n\nBy default this will be set to the original `orderId` given on payment creation.",
            "htmlDescription": "<p>Optionally you can pass a specific order ID for the refund.</p>\n<p>By default this will be set to the original <code>orderId</code> given on payment creation.</p>\n",
            "key": "orderId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": true
          },
          {
            "description": "You can optionally specify a reason for the refund. This is for your own records.",
            "htmlDescription": "<p>You can optionally specify a reason for the refund. This is for your own records.</p>\n",
            "key": "reason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:AccountFundingTypeEnum": {
      "description": "An enumeration.",
      "htmlDescription": "<p>An enumeration.</p>\n",
      "name": "AccountFundingTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": null,
            "value": "CREDIT",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "DEBIT",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "PREPAID",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CHARGE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "DEFERRED_DEBIT",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "UNKNOWN",
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:ApayaCustomerTokenApiSchema": {
      "description": null,
      "name": "ApayaCustomerTokenApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": null,
            "key": "mx",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "mnc",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "mcc",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:BinDataOptionalApiSchema": {
      "description": null,
      "name": "BinDataOptionalApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": null,
            "key": "network",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CardNetworkEnum"
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:BinDataApiSchema": {
      "description": null,
      "name": "BinDataApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": null,
            "key": "network",
            "valueType": {
              "type": "id",
              "value": "type_:CardNetworkEnum"
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "issuerCountryCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CountryCodeEnum"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "issuerName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "issuerCurrencyCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:Currency"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "regionalRestriction",
            "valueType": {
              "type": "id",
              "value": "type_:CardRegionRestrictionEnum"
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "accountNumberType",
            "valueType": {
              "type": "id",
              "value": "type_:CardAccountNumberTypeEnum"
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "accountFundingType",
            "valueType": {
              "type": "id",
              "value": "type_:AccountFundingTypeEnum"
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "prepaidReloadableIndicator",
            "valueType": {
              "type": "id",
              "value": "type_:PrepaidReloadableEnum"
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "productUsageType",
            "valueType": {
              "type": "id",
              "value": "type_:CardProductTypeEnum"
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "productCode",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "productName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:BlockingPaymentActionTypeEnum": {
      "description": "An enumeration.",
      "htmlDescription": "<p>An enumeration.</p>\n",
      "name": "BlockingPaymentActionTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": null,
            "value": "3DS_AUTHENTICATION",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "USE_PRIMER_SDK",
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:CardAccountNumberTypeEnum": {
      "description": "An enumeration.",
      "htmlDescription": "<p>An enumeration.</p>\n",
      "name": "CardAccountNumberTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": null,
            "value": "PRIMARY_ACCOUNT_NUMBER",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "NETWORK_TOKEN",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "UNKNOWN",
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:CardNetworkEnum": {
      "description": "The list of available card networks.\n",
      "htmlDescription": "<p>The list of available card networks.</p>\n",
      "name": "CardNetworkEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": null,
            "value": "AMEX",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "DANKORT",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "DINERS_CLUB",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "DISCOVER",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "ENROUTE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "ELO",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "HIPER",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "INTERAC",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "JCB",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MAESTRO",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MASTERCARD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MIR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "PRIVATE_LABEL",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "UNIONPAY",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "VISA",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "OTHER",
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:CardProductTypeEnum": {
      "description": "An enumeration.",
      "htmlDescription": "<p>An enumeration.</p>\n",
      "name": "CardProductTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": null,
            "value": "CONSUMER",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BUSINESS",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "GOVERNMENT",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "UNKNOWN",
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:CardRegionRestrictionEnum": {
      "description": "An enumeration.",
      "htmlDescription": "<p>An enumeration.</p>\n",
      "name": "CardRegionRestrictionEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": null,
            "value": "DOMESTIC_USE_ONLY",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "NONE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "UNKNOWN",
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:OrderDetailsApiSchema": {
      "description": null,
      "name": "OrderDetailsApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The details of the line items of the order.",
            "htmlDescription": "<p>The details of the line items of the order.</p>\n",
            "key": "lineItems",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:OrderLineItemsApiSchema"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "The country in which the order is created",
            "htmlDescription": "<p>The country in which the order is created</p>\n",
            "key": "countryCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CountryCodeEnum"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "The details of fees charged.",
            "htmlDescription": "<p>The details of fees charged.</p>\n",
            "key": "fees",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:OrderFeesApiSchema"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "The details of shipping charged.",
            "htmlDescription": "<p>The details of shipping charged.</p>\n",
            "key": "shipping",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:OrderShippingApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:OrderFeesApiSchema": {
      "description": null,
      "name": "OrderFeesApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The fee amount charged to the customer, in minor  units. e.g. for $7, use `700`.",
            "htmlDescription": "<p>The fee amount charged to the customer, in minor  units. e.g. for $7, use <code>700</code>.</p>\n",
            "key": "amount",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            },
            "descriptionContainsMarkdown": true
          },
          {
            "description": "The type of fee.",
            "htmlDescription": "<p>The type of fee.</p>\n",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "A description of the fee, e.g. \"Currency Conversion Fee\".",
            "htmlDescription": "<p>A description of the fee, e.g. &quot;Currency Conversion Fee&quot;.</p>\n",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:OrderLineItemsApiSchema": {
      "description": "The details of the line items of the order.\n\nThe total amount of a line item is calculated like so: \n````\n  totalAmount = (amount * quantity) - discountAmount + taxAmount\n```\n",
      "htmlDescription": "<p>The details of the line items of the order.</p>\n<p>The total amount of a line item is calculated like so: </p>\n<pre><code>  totalAmount = (amount * quantity) - discountAmount + taxAmount\n```\n</code></pre>\n",
      "name": "OrderLineItemsApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A unique identifier for the line item.",
            "htmlDescription": "<p>A unique identifier for the line item.</p>\n",
            "key": "itemId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "A description of the item.",
            "htmlDescription": "<p>A description of the item.</p>\n",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "The amount charged to the customer, in minor units. The minimum amount is 0.",
            "htmlDescription": "<p>The amount charged to the customer, in minor units. The minimum amount is 0.</p>\n",
            "key": "amount",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "The number of the particular line item that is being ordered.",
            "htmlDescription": "<p>The number of the particular line item that is being ordered.</p>\n",
            "key": "quantity",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Any discount applicable to this item, in minor units. This discount is applied for the entire line item, and not per `quantity`.",
            "htmlDescription": "<p>Any discount applicable to this item, in minor units. This discount is applied for the entire line item, and not per <code>quantity</code>.</p>\n",
            "key": "discountAmount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "descriptionContainsMarkdown": true
          },
          {
            "description": "The tax charged on this item, in minor units. This tax amount is applied for the entire line item, and not per `quantity`.",
            "htmlDescription": "<p>The tax charged on this item, in minor units. This tax amount is applied for the entire line item, and not per <code>quantity</code>.</p>\n",
            "key": "taxAmount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "The tax code associated with this item, in minor units. This is required for Primer-initiated tax calculations.",
            "htmlDescription": "<p>The tax code associated with this item, in minor units. This is required for Primer-initiated tax calculations.</p>\n",
            "key": "taxCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "An identifier for the product type.",
            "htmlDescription": "<p>An identifier for the product type.</p>\n",
            "key": "productType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:ProductTypeEnum"
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": true
    },
    "type_:OrderShippingApiSchema": {
      "description": null,
      "name": "OrderShippingApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The shipping amount charged to the customer, in minor units. e.g. for $7, use `700`.",
            "htmlDescription": "<p>The shipping amount charged to the customer, in minor units. e.g. for $7, use <code>700</code>.</p>\n",
            "key": "amount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:CheckoutPaymentMethodOptionsApiSchema": {
      "description": null,
      "name": "CheckoutPaymentMethodOptionsApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Whether the payment method should be vaulted on a successful payment or not.",
            "htmlDescription": "<p>Whether the payment method should be vaulted on a successful payment or not.</p>\n",
            "key": "vaultOnSuccess",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "A description of the payment, as it would typically appear on a bank statement.",
            "htmlDescription": "<p>A description of the payment, as it would typically appear on a bank statement.</p>\n",
            "key": "descriptor",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "paymentType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:RecurringPaymentTypeSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Additional options for the payment methods represented as dictionary \nwith key of [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) and value of corresponding options.\n",
            "htmlDescription": "<p>Additional options for the payment methods represented as dictionary \nwith key of <a href=\"https://primer.io/docs/payment-methods/available-payment-methods\">available payment methods</a> and value of corresponding options.</p>\n",
            "key": "options",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CheckoutPaymentMethodOptionsApiSchemaOptions"
              }
            },
            "descriptionContainsMarkdown": true
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:CheckoutPaymentMethodOptionsApiSchemaOptions": {
      "description": "Additional options for the payment methods represented as dictionary \nwith key of [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) and value of corresponding options.\n",
      "htmlDescription": "<p>Additional options for the payment methods represented as dictionary \nwith key of <a href=\"https://primer.io/docs/payment-methods/available-payment-methods\">available payment methods</a> and value of corresponding options.</p>\n",
      "name": "CheckoutPaymentMethodOptionsApiSchemaOptions",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": null,
            "key": "<PAYMENT_METHOD_TYPE>",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CheckoutPaymentMethodOptionApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "PAYMENT_CARD",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CheckoutPaymentMethodCardOptionApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": true
    },
    "type_:CheckoutPaymentMethodOptionApiSchema": {
      "description": "Options for the payment method of type `PAYMENT_METHOD_TYPE`.\n",
      "htmlDescription": "<p>Options for the payment method of type <code>PAYMENT_METHOD_TYPE</code>.</p>\n",
      "name": "CheckoutPaymentMethodOptionApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Surcharge information",
            "htmlDescription": "<p>Surcharge information</p>\n",
            "key": "surcharge",
            "valueType": {
              "type": "id",
              "value": "type_:CheckoutPaymentMethodOptionSurchargeApiSchema"
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": true
    },
    "type_:CheckoutPaymentMethodCardOptionApiSchema": {
      "description": null,
      "name": "CheckoutPaymentMethodCardOptionApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Dictionary of available card networks as a key with value of Payment Method Card Network Option.",
            "htmlDescription": "<p>Dictionary of available card networks as a key with value of Payment Method Card Network Option.</p>\n",
            "key": "networks",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema": {
      "description": null,
      "name": "CheckoutPaymentMethodOptionCardNetworkApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": null,
            "key": "AMEX",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "DANKORT",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "DINERS_CLUB",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "DISCOVER",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "ENROUTE",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "ELO",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "HIPER",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "INTERAC",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "JCB",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "MAESTRO",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "MASTERCARD",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "MIR",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "PRIVATE_LABEL",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "UNIONPAY",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "VISA",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "OTHER",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema": {
      "description": null,
      "name": "CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Surcharge information",
            "htmlDescription": "<p>Surcharge information</p>\n",
            "key": "surcharge",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CheckoutPaymentMethodOptionSurchargeApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:CheckoutPaymentMethodOptionSurchargeApiSchema": {
      "description": null,
      "name": "CheckoutPaymentMethodOptionSurchargeApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The surcharge amount, in minor units. Surcharge amount must be used in conjunction with line item amounts, if a top level amount is passed then surcharge will not be calculated.",
            "htmlDescription": "<p>The surcharge amount, in minor units. Surcharge amount must be used in conjunction with line item amounts, if a top level amount is passed then surcharge will not be calculated.</p>\n",
            "key": "amount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:PaymentRequestPaymentMethodOptionsApiSchema": {
      "description": null,
      "name": "PaymentRequestPaymentMethodOptionsApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Whether the payment method should be vaulted on a successful payment or not.",
            "htmlDescription": "<p>Whether the payment method should be vaulted on a successful payment or not.</p>\n",
            "key": "vaultOnSuccess",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "A description of the payment, as it would typically appear on a bank statement.",
            "htmlDescription": "<p>A description of the payment, as it would typically appear on a bank statement.</p>\n",
            "key": "descriptor",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "paymentType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:RecurringPaymentTypeSchema"
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:PaymentResponsePaymentMethodOptionsApiSchema": {
      "description": null,
      "name": "PaymentResponsePaymentMethodOptionsApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The description of the payment, as it would typically appear on a bank statement.",
            "htmlDescription": "<p>The description of the payment, as it would typically appear on a bank statement.</p>\n",
            "key": "descriptor",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "paymentType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:RecurringPaymentTypeSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "The payment method token used to authorize the transaction.",
            "htmlDescription": "<p>The payment method token used to authorize the transaction.</p>\n",
            "key": "paymentMethodToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Whether the payment method token represents a vaulted payment method and can be used for future payments.",
            "htmlDescription": "<p>Whether the payment method token represents a vaulted payment method and can be used for future payments.</p>\n",
            "key": "isVaulted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Unique analytics identifier corresponding to a payment method",
            "htmlDescription": "<p>Unique analytics identifier corresponding to a payment method</p>\n",
            "key": "analyticsId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Payment method type",
            "htmlDescription": "<p>Payment method type</p>\n",
            "key": "paymentMethodType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:PaymentMethodTypeEnum"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Payment method data",
            "htmlDescription": "<p>Payment method data</p>\n",
            "key": "paymentMethodData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "threeDSecureAuthentication",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:ThreeDSecureAuthenticationApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData": {
      "description": "Payment method data",
      "htmlDescription": "<p>Payment method data</p>\n",
      "name": "PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "description": null,
            "type": {
              "type": "id",
              "value": "type_:PaymentCardTokenApiSchema"
            },
            "displayName": "Payment Card Token Api Schema",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "type": {
              "type": "id",
              "value": "type_:PayPalOrderTokenApiSchema"
            },
            "displayName": "Pay Pal Order Token Api Schema",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "type": {
              "type": "id",
              "value": "type_:PayPalBillingAgreementApiSchema"
            },
            "displayName": "Pay Pal Billing Agreement Api Schema",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "type": {
              "type": "id",
              "value": "type_:GoCardlessMandateApiSchema"
            },
            "displayName": "Go Cardless Mandate Api Schema",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "type": {
              "type": "id",
              "value": "type_:KlarnaPaymentSessionApiSchema"
            },
            "displayName": "Klarna Payment Session Api Schema",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "type": {
              "type": "id",
              "value": "type_:KlarnaCustomerTokenApiSchema"
            },
            "displayName": "Klarna Customer Token Api Schema",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "type": {
              "type": "id",
              "value": "type_:IdealPayNlTokenApiSchema"
            },
            "displayName": "Ideal Pay Nl Token Api Schema",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "type": {
              "type": "id",
              "value": "type_:ApayaCustomerTokenApiSchema"
            },
            "displayName": "Apaya Customer Token Api Schema",
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:CheckoutCustomerDetailsApiSchema": {
      "description": null,
      "name": "CheckoutCustomerDetailsApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Customer email address.\n",
            "htmlDescription": "<p>Customer email address.</p>\n",
            "key": "emailAddress",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "The customer's mobile number",
            "htmlDescription": "<p>The customer&#39;s mobile number</p>\n",
            "key": "mobileNumber",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "The customer's first name",
            "htmlDescription": "<p>The customer&#39;s first name</p>\n",
            "key": "firstName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "The customer's last name",
            "htmlDescription": "<p>The customer&#39;s last name</p>\n",
            "key": "lastName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Customer billing address.\n",
            "htmlDescription": "<p>Customer billing address.</p>\n",
            "key": "billingAddress",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Customer shipping address",
            "htmlDescription": "<p>Customer shipping address</p>\n",
            "key": "shippingAddress",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "The customer's tax id number for tax exemptions",
            "htmlDescription": "<p>The customer&#39;s tax id number for tax exemptions</p>\n",
            "key": "taxId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "The customer's national identification number",
            "htmlDescription": "<p>The customer&#39;s national identification number</p>\n",
            "key": "nationalDocumentId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:CustomerDetailsApiSchema": {
      "description": null,
      "name": "CustomerDetailsApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Customer email address.\n\nNote: It is recommended to include this field if a 3DS check will be performed\n",
            "htmlDescription": "<p>Customer email address.</p>\n<p>Note: It is recommended to include this field if a 3DS check will be performed</p>\n",
            "key": "emailAddress",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "The customer's mobile number",
            "htmlDescription": "<p>The customer&#39;s mobile number</p>\n",
            "key": "mobileNumber",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "The customer's first name",
            "htmlDescription": "<p>The customer&#39;s first name</p>\n",
            "key": "firstName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "The customer's last name",
            "htmlDescription": "<p>The customer&#39;s last name</p>\n",
            "key": "lastName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Customer billing address.\n\nNote: It is recommended to include this field if a 3DS check will be performed\n",
            "htmlDescription": "<p>Customer billing address.</p>\n<p>Note: It is recommended to include this field if a 3DS check will be performed</p>\n",
            "key": "billingAddress",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Customer shipping address",
            "htmlDescription": "<p>Customer shipping address</p>\n",
            "key": "shippingAddress",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "The customer's tax id number for tax exemptions",
            "htmlDescription": "<p>The customer&#39;s tax id number for tax exemptions</p>\n",
            "key": "taxId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "The customer's national identification number",
            "htmlDescription": "<p>The customer&#39;s national identification number</p>\n",
            "key": "nationalDocumentId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:ClientSessionWithTokenApiResponse": {
      "description": null,
      "name": "ClientSessionWithTokenApiResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Client token used to initialize the SDK on all platforms.",
            "htmlDescription": "<p>Client token used to initialize the SDK on all platforms.</p>\n",
            "key": "clientToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Expiration date & time of the client token (UTC with no timezoneinfo).",
            "htmlDescription": "<p>Expiration date &amp; time of the client token (UTC with no timezoneinfo).</p>\n",
            "key": "clientTokenExpirationDate",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Your reference for the payment.",
            "htmlDescription": "<p>Your reference for the payment.</p>\n",
            "key": "orderId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
            "htmlDescription": "<p>The 3-letter currency code in <a href=\"https://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 format</a>.\ne.g. use <code>USD</code> for US dollars.</p>\n",
            "key": "currencyCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": true
          },
          {
            "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts.",
            "htmlDescription": "<p>The amount you would like to charge the customer, in minor units. e.g. for $7, use <code>700</code>.</p>\n<p>Some currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use <code>100</code>.</p>\n<p>If the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts.</p>\n",
            "key": "amount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "descriptionContainsMarkdown": true
          },
          {
            "description": "More information associated with the order.",
            "htmlDescription": "<p>More information associated with the order.</p>\n",
            "key": "order",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:OrderDetailsApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "A unique identifier for your customer.",
            "htmlDescription": "<p>A unique identifier for your customer.</p>\n",
            "key": "customerId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "More information associated with the customer.",
            "htmlDescription": "<p>More information associated with the customer.</p>\n",
            "key": "customer",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CustomerDetailsApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Additional data to be used throughout the payment lifecycle.\n",
            "htmlDescription": "<p>Additional data to be used throughout the payment lifecycle.</p>\n",
            "key": "metadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Enable certain options associated with the payment methods.",
            "htmlDescription": "<p>Enable certain options associated with the payment methods.</p>\n",
            "key": "paymentMethod",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CheckoutPaymentMethodOptionsApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Warning messages to indicate missing information that are required for payment methods, checkout modules and other features; or when third-party services are unavailable.",
            "htmlDescription": "<p>Warning messages to indicate missing information that are required for payment methods, checkout modules and other features; or when third-party services are unavailable.</p>\n",
            "key": "warnings",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:ClientSessionWarningsApiResponse"
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:ClientSessionApiResponse": {
      "description": null,
      "name": "ClientSessionApiResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A unique identifier for your customer.",
            "htmlDescription": "<p>A unique identifier for your customer.</p>\n",
            "key": "customerId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Your reference for the payment.",
            "htmlDescription": "<p>Your reference for the payment.</p>\n",
            "key": "orderId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
            "htmlDescription": "<p>The 3-letter currency code in <a href=\"https://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 format</a>.\ne.g. use <code>USD</code> for US dollars.</p>\n",
            "key": "currencyCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": true
          },
          {
            "description": "The amount you are going to charge the customer, in minor units. This amount is calculated from the line items, shipping and other amounts provided in the `order`. \nIf a top-level amount is provided, it would override any calculated amount.",
            "htmlDescription": "<p>The amount you are going to charge the customer, in minor units. This amount is calculated from the line items, shipping and other amounts provided in the <code>order</code>. \nIf a top-level amount is provided, it would override any calculated amount.</p>\n",
            "key": "amount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "descriptionContainsMarkdown": true
          },
          {
            "description": "Additional data to be used throughout the payment lifecycle.\n",
            "htmlDescription": "<p>Additional data to be used throughout the payment lifecycle.</p>\n",
            "key": "metadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "More information associated with the customer.",
            "htmlDescription": "<p>More information associated with the customer.</p>\n",
            "key": "customer",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CustomerDetailsApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "More information associated with the order.",
            "htmlDescription": "<p>More information associated with the order.</p>\n",
            "key": "order",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:OrderDetailsApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Enable certain options associated with the payment methods.",
            "htmlDescription": "<p>Enable certain options associated with the payment methods.</p>\n",
            "key": "paymentMethod",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CheckoutPaymentMethodOptionsApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:ClientSessionWarningsApiResponse": {
      "description": null,
      "name": "ClientSessionWarningsApiResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the connection involved",
            "htmlDescription": "<p>The type of the connection involved</p>\n",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "A unique code describing the particular issue",
            "htmlDescription": "<p>A unique code describing the particular issue</p>\n",
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "More information as to the reason for the warning",
            "htmlDescription": "<p>More information as to the reason for the warning</p>\n",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:CountryCodeEnum": {
      "description": "An enumeration.",
      "htmlDescription": "<p>An enumeration.</p>\n",
      "name": "CountryCodeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": null,
            "value": "AW",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "AF",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "AO",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "AI",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "AX",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "AL",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "AD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "AE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "AR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "AM",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "AS",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "AQ",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "TF",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "AG",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "AU",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "AT",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "AZ",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BI",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BJ",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BQ",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BF",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BG",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BH",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BS",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BA",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BL",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BY",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BZ",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BM",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BO",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BB",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BN",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BT",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BV",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BW",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CF",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CA",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CC",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CH",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CL",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CN",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CI",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CM",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CG",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CK",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CO",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "KM",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CV",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CU",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CW",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CX",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "KY",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CY",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CZ",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "DE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "DJ",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "DM",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "DK",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "DO",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "DZ",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "EC",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "EG",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "ER",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "EH",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "ES",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "EE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "ET",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "FI",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "FJ",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "FK",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "FR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "FO",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "FM",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "GA",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "GB",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "GE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "GG",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "GH",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "GI",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "GN",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "GP",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "GM",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "GW",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "GQ",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "GR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "GD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "GL",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "GT",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "GF",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "GU",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "GY",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "HK",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "HM",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "HN",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "HR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "HT",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "HU",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "ID",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "IM",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "IN",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "IO",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "IE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "IR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "IQ",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "IS",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "IL",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "IT",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "JM",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "JE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "JO",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "JP",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "KZ",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "KE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "KG",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "KH",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "KI",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "KN",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "KR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "KW",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "LA",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "LB",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "LR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "LY",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "LC",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "LI",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "LK",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "LS",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "LT",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "LU",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "LV",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MO",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MF",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MA",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MC",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MG",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MV",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MX",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MH",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MK",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "ML",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MT",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MM",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "ME",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MN",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MP",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MZ",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MS",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MQ",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MU",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MW",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MY",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "YT",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "NA",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "NC",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "NE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "NF",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "NG",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "NI",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "NU",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "NL",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "NO",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "NP",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "NR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "NZ",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "OM",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "PK",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "PA",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "PN",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "PE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "PH",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "PW",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "PG",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "PL",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "PR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "KP",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "PT",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "PY",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "PS",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "PF",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "QA",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "RE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "RO",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "RU",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "RW",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SA",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SN",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SG",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "GS",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SH",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SJ",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SB",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SL",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SV",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SM",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SO",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "PM",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "RS",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SS",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "ST",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SK",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SI",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SZ",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SX",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SC",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SY",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "TC",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "TD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "TG",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "TH",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "TJ",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "TK",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "TM",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "TL",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "TO",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "TT",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "TN",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "TR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "TV",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "TW",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "TZ",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "UG",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "UA",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "UM",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "UY",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "US",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "UZ",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "VA",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "VC",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "VE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "VG",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "VI",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "VN",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "VU",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "WF",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "WS",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "YE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "ZA",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "ZM",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "ZW",
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:Currency": {
      "description": "Enumerates all supported currencies",
      "htmlDescription": "<p>Enumerates all supported currencies</p>\n",
      "name": "Currency",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": null,
            "value": "AED",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "AFN",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "ALL",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "AMD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "ANG",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "AOA",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "ARS",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "AUD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "AWG",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "AZN",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BAM",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BBD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BDT",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BGN",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BHD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BIF",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BMD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BND",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BOB",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BOV",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BRL",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BSD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BTN",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BWP",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BYR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BYN",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "BZD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CAD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CDF",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CHE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CHF",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CHW",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CLF",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CLP",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CNY",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "COP",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "COU",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CRC",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CUC",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CUP",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CVE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CZK",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "DJF",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "DKK",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "DOP",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "DZD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "EGP",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "ERN",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "ETB",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "EUR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "FJD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "FKP",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "GBP",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "GEL",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "GHS",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "GIP",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "GMD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "GNF",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "GTQ",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "GYD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "HKD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "HNL",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "HRK",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "HTG",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "HUF",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "IDR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "ILS",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "INR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "IQD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "IRR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "ISK",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "JMD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "JOD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "JPY",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "KES",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "KGS",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "KHR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "KMF",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "KPW",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "KRW",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "KWD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "KYD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "KZT",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "LAK",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "LBP",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "LKR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "LRD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "LSL",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "LTL",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "LVL",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "LYD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MAD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MDL",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MGA",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MKD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MMK",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MNT",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MOP",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MRO",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MUR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MVR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MWK",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MXN",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MXV",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MYR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MZN",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "NAD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "NGN",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "NIO",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "NOK",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "NPR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "NZD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "OMR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "PAB",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "PEN",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "PGK",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "PHP",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "PKR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "PLN",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "PYG",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "QAR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "RON",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "RSD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "RUB",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "RWF",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SAR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SBD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SCR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SDG",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SEK",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SGD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SHP",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SLL",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SOS",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SRD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SSP",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "STD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SVC",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SYP",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SZL",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "THB",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "TJS",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "TMT",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "TND",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "TOP",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "TRY",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "TTD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "TWD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "TZS",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "UAH",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "UGX",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "USD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "USN",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "USS",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "UYI",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "UYU",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "UZS",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "VEF",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "VND",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "VUV",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "WST",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "XAF",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "XAG",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "XAU",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "XBA",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "XBB",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "XBC",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "XBD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "XCD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "XDR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "XFU",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "XOF",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "XPD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "XPF",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "XPT",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "XSU",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "XTS",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "XUA",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "YER",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "ZAR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "ZMW",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "ZWL",
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:PaymentResponseProcessorApiSchema": {
      "description": null,
      "name": "PaymentResponseProcessorApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The payment processor used for this payment.",
            "htmlDescription": "<p>The payment processor used for this payment.</p>\n",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "The merchant ID registered at the payment processor used for this payment.",
            "htmlDescription": "<p>The merchant ID registered at the payment processor used for this payment.</p>\n",
            "key": "processorMerchantId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "If no capture was performed, this value will be set to `0`.\n\nIf one or more partial captures were performed, this value will be a sum\nof all partial capture amounts.\n",
            "htmlDescription": "<p>If no capture was performed, this value will be set to <code>0</code>.</p>\n<p>If one or more partial captures were performed, this value will be a sum\nof all partial capture amounts.</p>\n",
            "key": "amountCaptured",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "descriptionContainsMarkdown": true
          },
          {
            "description": "If no refund was performed, this value will be set to `0`.\n\nIf one or more partial refunds were performed, this value will be a sum\nof all partial refund amounts.\n",
            "htmlDescription": "<p>If no refund was performed, this value will be set to <code>0</code>.</p>\n<p>If one or more partial refunds were performed, this value will be a sum\nof all partial refund amounts.</p>\n",
            "key": "amountRefunded",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:GoCardlessMandateApiSchema": {
      "description": null,
      "name": "GoCardlessMandateApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier of a GoCardless mandate agreement",
            "htmlDescription": "<p>Unique identifier of a GoCardless mandate agreement</p>\n",
            "key": "gocardlessMandateId",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:IdealPayNlTokenApiSchema": {
      "description": null,
      "name": "IdealPayNlTokenApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": null,
            "key": "paymentMethodConfigId",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:KlarnaAddressApiSchema": {
      "description": null,
      "name": "KlarnaAddressApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": null,
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "firstName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "lastName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "phoneNumber",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "addressLine1",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "addressLine2",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "addressLine3",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "city",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "countryCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CountryCodeEnum"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "postalCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:KlarnaCustomerTokenApiSchema": {
      "description": null,
      "name": "KlarnaCustomerTokenApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": null,
            "key": "klarnaCustomerToken",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "sessionData",
            "valueType": {
              "type": "id",
              "value": "type_:KlarnaSessionDetailsApiSchema"
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:KlarnaPaymentSessionApiSchema": {
      "description": null,
      "name": "KlarnaPaymentSessionApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": null,
            "key": "klarnaAuthorizationToken",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "sessionData",
            "valueType": {
              "type": "id",
              "value": "type_:KlarnaSessionDetailsApiSchema"
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:KlarnaSessionDetailsApiSchema": {
      "description": null,
      "name": "KlarnaSessionDetailsApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": null,
            "key": "recurringDescription",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "billingAddress",
            "valueType": {
              "type": "id",
              "value": "type_:KlarnaAddressApiSchema"
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "shippingAddress",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:KlarnaAddressApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "purchaseCountry",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "purchaseCurrency",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "locale",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "orderLines",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "unknown"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "tokenDetails",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:KlarnaTokenDetails"
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:KlarnaTokenDetails": {
      "description": null,
      "name": "KlarnaTokenDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": null,
            "key": "type",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "brand",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "masked_number",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "expiry_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:PayPalBillingAgreementApiSchema": {
      "description": null,
      "name": "PayPalBillingAgreementApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": null,
            "key": "paypalBillingAgreementId",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Information about the PayPal customer",
            "htmlDescription": "<p>Information about the PayPal customer</p>\n",
            "key": "externalPayerInfo",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:PayPalExternalPayerInfoApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "The PayPal customer's shipping address",
            "htmlDescription": "<p>The PayPal customer&#39;s shipping address</p>\n",
            "key": "shippingAddress",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:AddressApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "paypalStatus",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:PayPalExternalPayerInfoApiSchema": {
      "description": null,
      "name": "PayPalExternalPayerInfoApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": null,
            "key": "externalPayerId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "firstName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "lastName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:PayPalOrderTokenApiSchema": {
      "description": null,
      "name": "PayPalOrderTokenApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": null,
            "key": "paypalOrderId",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Information about the PayPal customer",
            "htmlDescription": "<p>Information about the PayPal customer</p>\n",
            "key": "externalPayerInfo",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:PayPalExternalPayerInfoApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "paypalStatus",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:PaymentApiResponse": {
      "description": null,
      "name": "PaymentApiResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream\noperations.\n",
            "htmlDescription": "<p>The unique payment ID.</p>\n<p>You can use this ID to retrieve the payment details, or perform downstream\noperations.</p>\n",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "The date and time at which the payment was created in UTC format.",
            "htmlDescription": "<p>The date and time at which the payment was created in UTC format.</p>\n",
            "key": "date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "See the payment [status table](../docs#payment-status) for more information.",
            "htmlDescription": "<p>See the payment <a href=\"../docs#payment-status\">status table</a> for more information.</p>\n",
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:PaymentStatus"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Your reference for the payment.",
            "htmlDescription": "<p>Your reference for the payment.</p>\n",
            "key": "orderId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
            "htmlDescription": "<p>The 3-letter currency code in <a href=\"https://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 format</a>.\ne.g. use <code>USD</code> for US dollars.</p>\n",
            "key": "currencyCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": true
          },
          {
            "description": "The amount you charged the customer, in minor units.",
            "htmlDescription": "<p>The amount you charged the customer, in minor units.</p>\n",
            "key": "amount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "More information associated with the order.",
            "htmlDescription": "<p>More information associated with the order.</p>\n",
            "key": "order",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:OrderDetailsApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "The unique identifier for your customer.",
            "htmlDescription": "<p>The unique identifier for your customer.</p>\n",
            "key": "customerId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "More information associated with the customer.",
            "htmlDescription": "<p>More information associated with the customer.</p>\n",
            "key": "customer",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CustomerDetailsApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Additional data to be used throughout the payment lifecycle.\n",
            "htmlDescription": "<p>Additional data to be used throughout the payment lifecycle.</p>\n",
            "key": "metadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "The payment method options provided in the request, as well as the token used to process the payment.",
            "htmlDescription": "<p>The payment method options provided in the request, as well as the token used to process the payment.</p>\n",
            "key": "paymentMethod",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:PaymentResponsePaymentMethodOptionsApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "More information associated with the payment processor, including the processor name.",
            "htmlDescription": "<p>More information associated with the payment processor, including the processor name.</p>\n",
            "key": "processor",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:PaymentResponseProcessorApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Required action to perform in order to resume the payment workflow. This can be requiring a 3DS check from the customer for instance.",
            "htmlDescription": "<p>Required action to perform in order to resume the payment workflow. This can be requiring a 3DS check from the customer for instance.</p>\n",
            "key": "requiredAction",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:PaymentRequiredActionApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Check this field for more information regarding the payment's status. This is especially useful when the status is `DECLINED` or `FAILED`.\n",
            "htmlDescription": "<p>Check this field for more information regarding the payment&#39;s status. This is especially useful when the status is <code>DECLINED</code> or <code>FAILED</code>.</p>\n",
            "key": "statusReason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:StatusReasonApiSchema"
              }
            },
            "descriptionContainsMarkdown": true
          },
          {
            "description": "A list summarizing the transactions that occurred while processing the payment.\n\nNote: a refund is a separate transaction and so will appear in this `transactions` list if a refund was performed.",
            "htmlDescription": "<p>A list summarizing the transactions that occurred while processing the payment.</p>\n<p>Note: a refund is a separate transaction and so will appear in this <code>transactions</code> list if a refund was performed.</p>\n",
            "key": "transactions",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:TransactionOverviewApiSchema"
                }
              }
            },
            "descriptionContainsMarkdown": true
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:PaymentCardTokenApiSchema": {
      "description": null,
      "name": "PaymentCardTokenApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": null,
            "key": "first6Digits",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "last4Digits",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "expirationMonth",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "expirationYear",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "cardholderName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "network",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "isNetworkTokenized",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "binData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:BinDataApiSchema"
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:StatusReasonApiSchema": {
      "description": null,
      "name": "StatusReasonApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Type of the status.",
            "htmlDescription": "<p>Type of the status.</p>\n",
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_:PaymentStatusTypeEnum"
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "If the error is of type `ISSUER_DECLINED` this will be returned.\n\nDeclines of type `SOFT_DECLINE` may be retried,\nwhereas declines of type `HARD_DECLINE` should not be retried.\n",
            "htmlDescription": "<p>If the error is of type <code>ISSUER_DECLINED</code> this will be returned.</p>\n<p>Declines of type <code>SOFT_DECLINE</code> may be retried,\nwhereas declines of type <code>HARD_DECLINE</code> should not be retried.</p>\n",
            "key": "declineType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:DeclineTypeEnum"
              }
            },
            "descriptionContainsMarkdown": true
          },
          {
            "description": "If the error is of type `ISSUER_DECLINED`, this will be returned.",
            "htmlDescription": "<p>If the error is of type <code>ISSUER_DECLINED</code>, this will be returned.</p>\n",
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:TransactionDeclineReasonV2Enum"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "In case of an error on the processor's part, we will return the message returned by the processor. This is usually a human readable error.",
            "htmlDescription": "<p>In case of an error on the processor&#39;s part, we will return the message returned by the processor. This is usually a human readable error.</p>\n",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:PaymentMethodTypeEnum": {
      "description": "Payment method type, where `OFF_SESSION_PAYMENT` is used for APM (Alternative Payment Method) payments and `PAYMENT_CARD` for traditional debit or credit cards. Please note that this list is different from one indicated on [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) page and values of this field will be changed in the future versions of the API.",
      "htmlDescription": "<p>Payment method type, where <code>OFF_SESSION_PAYMENT</code> is used for APM (Alternative Payment Method) payments and <code>PAYMENT_CARD</code> for traditional debit or credit cards. Please note that this list is different from one indicated on <a href=\"https://primer.io/docs/payment-methods/available-payment-methods\">available payment methods</a> page and values of this field will be changed in the future versions of the API.</p>\n",
      "name": "PaymentMethodTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": null,
            "value": "PAYMENT_CARD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "PAYPAL_ORDER",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "PAYPAL_BILLING_AGREEMENT",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "GOCARDLESS_MANDATE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "KLARNA_AUTHORIZATION_TOKEN",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "KLARNA_CUSTOMER_TOKEN",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "PAY_NL_IDEAL",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "APAYA",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "OFF_SESSION_PAYMENT",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CARD_OFF_SESSION_PAYMENT",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "APPLE_PAY",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "APPLE_PAY_ENCRYPTED_TOKEN",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "GOOGLE_PAY",
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": true
    },
    "type_:PaymentListApiResponse": {
      "description": null,
      "name": "PaymentListApiResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": null,
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:PaymentSummaryApiSchema"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "nextCursor",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "prevCursor",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:PaymentRequiredActionApiSchema": {
      "description": null,
      "name": "PaymentRequiredActionApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Action name",
            "htmlDescription": "<p>Action name</p>\n",
            "key": "name",
            "valueType": {
              "type": "id",
              "value": "type_:BlockingPaymentActionTypeEnum"
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Human description of the required action to perform.",
            "htmlDescription": "<p>Human description of the required action to perform.</p>\n",
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "The client token to be returned to the SDK if a required action is returned.",
            "htmlDescription": "<p>The client token to be returned to the SDK if a required action is returned.</p>\n",
            "key": "clientToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:PaymentSummaryApiSchema": {
      "description": null,
      "name": "PaymentSummaryApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream\noperations.\n",
            "htmlDescription": "<p>The unique payment ID.</p>\n<p>You can use this ID to retrieve the payment details, or perform downstream\noperations.</p>\n",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "The date and time at which the payment was created in UTC format.",
            "htmlDescription": "<p>The date and time at which the payment was created in UTC format.</p>\n",
            "key": "date",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "See the payment [status table](../docs#payment-status) for more information.",
            "htmlDescription": "<p>See the payment <a href=\"../docs#payment-status\">status table</a> for more information.</p>\n",
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "type_:PaymentStatus"
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Your reference for the payment.",
            "htmlDescription": "<p>Your reference for the payment.</p>\n",
            "key": "orderId",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "The payment processor used for this payment.",
            "htmlDescription": "<p>The payment processor used for this payment.</p>\n",
            "key": "processor",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
            "htmlDescription": "<p>The 3-letter currency code in <a href=\"https://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 format</a>.\ne.g. use <code>USD</code> for US dollars.</p>\n",
            "key": "currencyCode",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "descriptionContainsMarkdown": true
          },
          {
            "description": "The payment amount, in minor units. e.g. $7 would show as `700`.",
            "htmlDescription": "<p>The payment amount, in minor units. e.g. $7 would show as <code>700</code>.</p>\n",
            "key": "amount",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            },
            "descriptionContainsMarkdown": true
          },
          {
            "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`\n",
            "htmlDescription": "<p>Additional data to be used throughout the payment lifecycle.</p>\n<p>A dictionary of key-value pairs where the values can only be strings or\nintegers.</p>\n<p>e.g. <code>{&quot;productId&quot;: 1001, &quot;merchantId&quot;: &quot;a13bsd62s&quot;}</code></p>\n",
            "key": "metadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            },
            "descriptionContainsMarkdown": true
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:PaymentSummaryProcessorApiSchema": {
      "description": null,
      "name": "PaymentSummaryProcessorApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The payment processor used for this payment.",
            "htmlDescription": "<p>The payment processor used for this payment.</p>\n",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "The merchant ID registered at the payment processor used for this payment.",
            "htmlDescription": "<p>The merchant ID registered at the payment processor used for this payment.</p>\n",
            "key": "processorMerchantId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:PrepaidReloadableEnum": {
      "description": "An enumeration.",
      "htmlDescription": "<p>An enumeration.</p>\n",
      "name": "PrepaidReloadableEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": null,
            "value": "RELOADABLE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "NON_RELOADABLE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "NOT_APPLICABLE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "UNKNOWN",
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:RecurringTransactionTypeEnum": {
      "description": "An enumeration.",
      "htmlDescription": "<p>An enumeration.</p>\n",
      "name": "RecurringTransactionTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": null,
            "value": "FIRST_PAYMENT",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "ECOMMERCE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SUBSCRIPTION",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "UNSCHEDULED",
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:RecurringPaymentTypeSchema": {
      "description": "Payment types, primarily to be used for recurring payments.\nNote: If you successfully vault a `SINGLE_USE` token on payment creation, then there's no need to set a value for this field and it will be flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all possible values.\n\n| paymentType | Use case |\n| --- | --- |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario.\n| `ECOMMERCE` | a customer-initiated payment using stored payment details where the cardholder is present.\n| `SUBSCRIPTION` | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.\n| `UNSCHEDULED` | a merchant-initiated payment using stored payment details with no fixed schedule or amount.",
      "htmlDescription": "<p>Payment types, primarily to be used for recurring payments.\nNote: If you successfully vault a <code>SINGLE_USE</code> token on payment creation, then there&#39;s no need to set a value for this field and it will be flagged as <code>FIRST_PAYMENT</code>. Otherwise, see the table below for all possible values.</p>\n<table>\n<thead>\n<tr>\n<th>paymentType</th>\n<th>Use case</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>FIRST_PAYMENT</code></td>\n<td>a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario.</td>\n</tr>\n<tr>\n<td><code>ECOMMERCE</code></td>\n<td>a customer-initiated payment using stored payment details where the cardholder is present.</td>\n</tr>\n<tr>\n<td><code>SUBSCRIPTION</code></td>\n<td>a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.</td>\n</tr>\n<tr>\n<td><code>UNSCHEDULED</code></td>\n<td>a merchant-initiated payment using stored payment details with no fixed schedule or amount.</td>\n</tr>\n</tbody></table>\n",
      "name": "RecurringPaymentTypeSchema",
      "shape": {
        "type": "alias",
        "value": {
          "type": "id",
          "value": "type_:RecurringTransactionTypeEnum"
        }
      },
      "descriptionContainsMarkdown": true
    },
    "type_:ProductTypeEnum": {
      "description": "An enumeration",
      "htmlDescription": "<p>An enumeration</p>\n",
      "name": "ProductTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": null,
            "value": "PHYSICAL",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "DIGITAL",
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:ThreeDSecureAuthResponseCodeEnum": {
      "description": "An enumeration.",
      "htmlDescription": "<p>An enumeration.</p>\n",
      "name": "ThreeDSecureAuthResponseCodeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": null,
            "value": "NOT_PERFORMED",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SKIPPED",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "AUTH_SUCCESS",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "AUTH_FAILED",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CHALLENGE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "METHOD",
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:ThreeDSecureAuthenticationApiSchema": {
      "description": null,
      "name": "ThreeDSecureAuthenticationApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": null,
            "key": "responseCode",
            "valueType": {
              "type": "id",
              "value": "type_:ThreeDSecureAuthResponseCodeEnum"
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "reasonCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:ThreeDSecureAuthenticationApiSchemaReasonCode"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "reasonText",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "protocolVersion",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "challengeIssued",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:ThreeDSecureAuthenticationApiSchemaReasonCode": {
      "description": null,
      "name": "ThreeDSecureAuthenticationApiSchemaReasonCode",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "description": null,
            "type": {
              "type": "id",
              "value": "type_:ThreeDSecureSkippedReasonCodeEnum"
            },
            "displayName": "Three D Secure Skipped Reason Code Enum",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "type": {
              "type": "id",
              "value": "type_:ThreeDSecureFailedReasonCodeEnum"
            },
            "displayName": "Three D Secure Failed Reason Code Enum",
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:ThreeDSecureFailedReasonCodeEnum": {
      "description": "This enum is derived from the `transStatusReason` on page 218 of the\n[EMV Co 3DS protocol specification](https://www.emvco.com/terms-of-use/?u=/wp-content/uploads/documents/EMVCo_3DS_Spec_v220_122018.pdf)\n\n| Code | Description                             |\n|------|-----------------------------------------|\n| 01   | Card authentication failed              |\n| 02   | Unknown Device                          |\n| 03   | Unsupported Device                      |\n| 04   | Exceeds authentication frequency limit  |\n| 05   | Expired card                            |\n| 06   | Invalid card number                     |\n| 07   | Invalid transaction                     |\n| 08   | No Card record                          |\n| 09   | Security failure                        |\n| 10   | Stolen card                             |\n| 11   | Suspected fraud                         |\n| 12   | Transaction not permitted to cardholder |\n| 13   | Cardholder not enrolled in service      |\n| 14   | Transaction timed out at the ACS        |\n| 15   | Low confidence                          |\n| 16   | Medium confidence                       |",
      "htmlDescription": "<p>This enum is derived from the <code>transStatusReason</code> on page 218 of the\n<a href=\"https://www.emvco.com/terms-of-use/?u=/wp-content/uploads/documents/EMVCo_3DS_Spec_v220_122018.pdf\">EMV Co 3DS protocol specification</a></p>\n<table>\n<thead>\n<tr>\n<th>Code</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>01</td>\n<td>Card authentication failed</td>\n</tr>\n<tr>\n<td>02</td>\n<td>Unknown Device</td>\n</tr>\n<tr>\n<td>03</td>\n<td>Unsupported Device</td>\n</tr>\n<tr>\n<td>04</td>\n<td>Exceeds authentication frequency limit</td>\n</tr>\n<tr>\n<td>05</td>\n<td>Expired card</td>\n</tr>\n<tr>\n<td>06</td>\n<td>Invalid card number</td>\n</tr>\n<tr>\n<td>07</td>\n<td>Invalid transaction</td>\n</tr>\n<tr>\n<td>08</td>\n<td>No Card record</td>\n</tr>\n<tr>\n<td>09</td>\n<td>Security failure</td>\n</tr>\n<tr>\n<td>10</td>\n<td>Stolen card</td>\n</tr>\n<tr>\n<td>11</td>\n<td>Suspected fraud</td>\n</tr>\n<tr>\n<td>12</td>\n<td>Transaction not permitted to cardholder</td>\n</tr>\n<tr>\n<td>13</td>\n<td>Cardholder not enrolled in service</td>\n</tr>\n<tr>\n<td>14</td>\n<td>Transaction timed out at the ACS</td>\n</tr>\n<tr>\n<td>15</td>\n<td>Low confidence</td>\n</tr>\n<tr>\n<td>16</td>\n<td>Medium confidence</td>\n</tr>\n</tbody></table>\n",
      "name": "ThreeDSecureFailedReasonCodeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": null,
            "value": "UNKNOWN",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "REJECTED_BY_ISSUER",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CARD_AUTHENTICATION_FAILED",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "UNKNOWN_DEVICE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "UNSUPPORTED_DEVICE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "EXCEEDS_AUTHENTICATION_FREQUENCY_LIMIT",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "EXPIRED_CARD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "INVALID_CARD_NUMBER",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "INVALID_TRANSACTION",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "NO_CARD_RECORD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SECURITY_FAILURE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "STOLEN_CARD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SUSPECTED_FRAUD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "TRANSACTION_NOT_PERMITTED_TO_CARDHOLDER",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CARDHOLDER_NOT_ENROLLED_IN_SERVICE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "TRANSACTION_TIMED_OUT_AT_THE_ACS",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "LOW_CONFIDENCE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "MEDIUM_CONFIDENCE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "HIGH_CONFIDENCE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "VERY_HIGH_CONFIDENCE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "EXCEEDS_ACS_MAXIMUM_CHALLENGES",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "NON_PAYMENT_NOT_SUPPORTED",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "THREE_RI_NOT_SUPPORTED",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "ACS_TECHNICAL_ISSUE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "DECOUPLED_REQUIRED_BY_ACS",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "DECOUPLED_MAX_EXPIRY_EXCEEDED",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "DECOUPLED_AUTHENTICATION_INSUFFICIENT_TIME",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "AUTHENTICATION_ATTEMPTED_BUT_NOT_PERFORMED_BY_CARDHOLDER",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "ACS_TIMED_OUT",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "INVALID_ACS_RESPONSE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "ACS_SYSTEM_ERROR_RESPONSE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "ERROR_GENERATING_CAVV",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "PROTOCOL_VERSION_NOT_SUPPORTED",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "TRANSACTION_EXCLUDED_FROM_ATTEMPTS_PROCESSING",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "REQUESTED_PROGRAM_NOT_SUPPORTED",
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": true
    },
    "type_:ThreeDSecureSkippedReasonCodeEnum": {
      "description": "An enumeration.",
      "htmlDescription": "<p>An enumeration.</p>\n",
      "name": "ThreeDSecureSkippedReasonCodeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": null,
            "value": "GATEWAY_UNAVAILABLE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "DISABLED_BY_MERCHANT",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "NOT_SUPPORTED_BY_ISSUER",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "FAILED_TO_NEGOTIATE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "UNKNOWN_ACS_RESPONSE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "3DS_SERVER_ERROR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "ACQUIRER_NOT_CONFIGURED",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "ACQUIRER_NOT_PARTICIPATING",
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:TokenTypeEnum": {
      "description": "An enumeration.",
      "htmlDescription": "<p>An enumeration.</p>\n",
      "name": "TokenTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": null,
            "value": "MULTI_USE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SINGLE_USE",
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:DeclineTypeEnum": {
      "description": "An enumeration.",
      "htmlDescription": "<p>An enumeration.</p>\n",
      "name": "DeclineTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": null,
            "value": "SOFT_DECLINE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "HARD_DECLINE",
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:TransactionDeclineReasonV2Enum": {
      "description": "An enumeration.",
      "htmlDescription": "<p>An enumeration.</p>\n",
      "name": "TransactionDeclineReasonV2Enum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": null,
            "value": "ERROR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "INVALID_CARD_NUMBER",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "EXPIRED_CARD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "LOST_OR_STOLEN_CARD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SUSPECTED_FRAUD",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "UNKNOWN",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "DECLINED",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "REFER_TO_CARD_ISSUER",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "DO_NOT_HONOR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "INSUFFICIENT_FUNDS",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "WITHDRAWAL_LIMIT_EXCEEDED",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "ISSUER_TEMPORARILY_UNAVAILABLE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "AUTHENTICATION_REQUIRED",
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:TransactionOverviewApiSchema": {
      "description": null,
      "name": "TransactionOverviewApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Date & time of the transaction (UTC)",
            "htmlDescription": "<p>Date &amp; time of the transaction (UTC)</p>\n",
            "key": "date",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Transaction amount in minor units",
            "htmlDescription": "<p>Transaction amount in minor units</p>\n",
            "key": "amount",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "\nThe 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
            "htmlDescription": "<p>The 3-letter currency code in <a href=\"https://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 format</a>.\ne.g. use <code>USD</code> for US dollars.</p>\n",
            "key": "currencyCode",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "descriptionContainsMarkdown": true
          },
          {
            "description": null,
            "key": "transactionType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:TransactionTypeEnum"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Processor's unique identifier for the transaction",
            "htmlDescription": "<p>Processor&#39;s unique identifier for the transaction</p>\n",
            "key": "processorTransactionId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "An identifier of a processor.",
            "htmlDescription": "<p>An identifier of a processor.</p>\n",
            "key": "processorName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Processor's main account identifier.\n\n* Adyen: Account code\n* Braintree: Merchant ID\n* Stripe: Account ID\"\n",
            "htmlDescription": "<p>Processor&#39;s main account identifier.</p>\n<ul>\n<li>Adyen: Account code</li>\n<li>Braintree: Merchant ID</li>\n<li>Stripe: Account ID&quot;</li>\n</ul>\n",
            "key": "processorMerchantId",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "descriptionContainsMarkdown": true
          },
          {
            "description": "Transaction status, please refer to the [Transaction Status Codes](#section/API-Usage-Guide/Payment-Status) table for more information",
            "htmlDescription": "<p>Transaction status, please refer to the <a href=\"#section/API-Usage-Guide/Payment-Status\">Transaction Status Codes</a> table for more information</p>\n",
            "key": "processorStatus",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:PaymentStatus"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "If the transaction has a declined or failed status.\n\nOnly if the status is `DECLINED` or `FAILED`, otherwise `null`.\n",
            "htmlDescription": "<p>If the transaction has a declined or failed status.</p>\n<p>Only if the status is <code>DECLINED</code> or <code>FAILED</code>, otherwise <code>null</code>.</p>\n",
            "key": "processorStatusReason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:StatusReasonApiSchema"
              }
            },
            "descriptionContainsMarkdown": true
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:PaymentStatus": {
      "description": "An enumeration.",
      "htmlDescription": "<p>An enumeration.</p>\n",
      "name": "PaymentStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": null,
            "value": "PENDING",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "FAILED",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "AUTHORIZED",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SETTLING",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "PARTIALLY_SETTLED",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "SETTLED",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "DECLINED",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "CANCELLED",
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:PaymentStatusTypeEnum": {
      "description": "An enumeration.",
      "htmlDescription": "<p>An enumeration.</p>\n",
      "name": "PaymentStatusTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": null,
            "value": "APPLICATION_ERROR",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "GATEWAY_REJECTED",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "ISSUER_DECLINED",
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:TransactionTypeEnum": {
      "description": "An enumeration.",
      "htmlDescription": "<p>An enumeration.</p>\n",
      "name": "TransactionTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": null,
            "value": "SALE",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "value": "REFUND",
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema": {
      "description": null,
      "name": "CoreApiApiCommonsSchemasAddessAddressApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": null,
            "key": "firstName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "lastName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "addressLine1",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "addressLine2",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "city",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "countryCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CountryCodeEnum"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "postalCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:AddressApiSchema": {
      "description": null,
      "name": "AddressApiSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": null,
            "key": "firstName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "lastName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Street name, Company name or PO Box",
            "htmlDescription": "<p>Street name, Company name or PO Box</p>\n",
            "key": "addressLine1",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Apartment, Unit or Building number",
            "htmlDescription": "<p>Apartment, Unit or Building number</p>\n",
            "key": "addressLine2",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Name of the city, district, town or village",
            "htmlDescription": "<p>Name of the city, district, town or village</p>\n",
            "key": "city",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "State, County or Province",
            "htmlDescription": "<p>State, County or Province</p>\n",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Two letter ISO country code",
            "htmlDescription": "<p>Two letter ISO country code</p>\n",
            "key": "countryCode",
            "valueType": {
              "type": "id",
              "value": "type_:CountryCodeEnum"
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Postal or ZIP code",
            "htmlDescription": "<p>Postal or ZIP code</p>\n",
            "key": "postalCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:MerchantPaymentMethodTokenApiResponse": {
      "description": null,
      "name": "MerchantPaymentMethodTokenApiResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Creation date & time of the object (UTC)",
            "htmlDescription": "<p>Creation date &amp; time of the object (UTC)</p>\n",
            "key": "createdAt",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Date & time when this object was revoked. (UTC)",
            "htmlDescription": "<p>Date &amp; time when this object was revoked. (UTC)</p>\n",
            "key": "deletedAt",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Whether or not this object has been revoked.",
            "htmlDescription": "<p>Whether or not this object has been revoked.</p>\n",
            "key": "deleted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "The vaulted payment method token.",
            "htmlDescription": "<p>The vaulted payment method token.</p>\n",
            "key": "token",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "* `MULTI_USE` a vaulted token that can be re-used with subsequent payments",
            "htmlDescription": "<ul>\n<li><code>MULTI_USE</code> a vaulted token that can be re-used with subsequent payments</li>\n</ul>\n",
            "key": "tokenType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": true
          },
          {
            "description": "Unique analytics identifier corresponding to a payment method",
            "htmlDescription": "<p>Unique analytics identifier corresponding to a payment method</p>\n",
            "key": "analyticsId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Payment method type associated with a token.",
            "htmlDescription": "<p>Payment method type associated with a token.</p>\n",
            "key": "paymentMethodType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:PaymentMethodTypeEnum"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Payment method data",
            "htmlDescription": "<p>Payment method data</p>\n",
            "key": "paymentMethodData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "The ID representing the customer",
            "htmlDescription": "<p>The ID representing the customer</p>\n",
            "key": "customerId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "A friendly description given by the user",
            "htmlDescription": "<p>A friendly description given by the user</p>\n",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Whether or not this payment method is the default",
            "htmlDescription": "<p>Whether or not this payment method is the default</p>\n",
            "key": "default",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData": {
      "description": "Payment method data",
      "htmlDescription": "<p>Payment method data</p>\n",
      "name": "MerchantPaymentMethodTokenApiResponsePaymentMethodData",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "description": null,
            "type": {
              "type": "id",
              "value": "type_:PaymentCardTokenApiSchemaPaymentMethodsApi"
            },
            "displayName": "Payment Card Token Api Schema Payment Methods Api",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "type": {
              "type": "id",
              "value": "type_:PayPalBillingAgreementApiSchema"
            },
            "displayName": "Pay Pal Billing Agreement Api Schema",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "type": {
              "type": "id",
              "value": "type_:GoCardlessMandateApiSchema"
            },
            "displayName": "Go Cardless Mandate Api Schema",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "type": {
              "type": "id",
              "value": "type_:KlarnaCustomerTokenApiSchema"
            },
            "displayName": "Klarna Customer Token Api Schema",
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "type": {
              "type": "id",
              "value": "type_:ApayaCustomerTokenApiSchema"
            },
            "displayName": "Apaya Customer Token Api Schema",
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:VerifiedMerchantPaymentMethodTokenApiResponse": {
      "description": null,
      "name": "VerifiedMerchantPaymentMethodTokenApiResponse",
      "shape": {
        "type": "object",
        "extends": ["type_:MerchantPaymentMethodTokenApiResponse"],
        "properties": [
          {
            "description": "Whether or not this payment method was verified",
            "htmlDescription": "<p>Whether or not this payment method was verified</p>\n",
            "key": "isVerified",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:MerchantPaymentMethodTokenListApiResponse": {
      "description": null,
      "name": "MerchantPaymentMethodTokenListApiResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": null,
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:MerchantPaymentMethodTokenApiResponse"
                }
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:VerifiedMerchantPaymentMethodTokenListApiResponse": {
      "description": null,
      "name": "VerifiedMerchantPaymentMethodTokenListApiResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": null,
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:VerifiedMerchantPaymentMethodTokenApiResponse"
                }
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:PaymentCardTokenApiSchemaPaymentMethodsApi": {
      "description": "Used exclusively by the Payment Methods API",
      "htmlDescription": "<p>Used exclusively by the Payment Methods API</p>\n",
      "name": "PaymentCardTokenApiSchemaPaymentMethodsApi",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": null,
            "key": "last4Digits",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "expirationMonth",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "expirationYear",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "cardholderName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": null,
            "key": "network",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "An ID for the transaction assigned by the card network. Used to correlate recurring payments.",
            "htmlDescription": "<p>An ID for the transaction assigned by the card network. Used to correlate recurring payments.</p>\n",
            "key": "networkTransactionId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "The type of card, e.g. Debit, Credit",
            "htmlDescription": "<p>The type of card, e.g. Debit, Credit</p>\n",
            "key": "accountFundingType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:AccountFundingTypeEnum"
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:ErrorObject": {
      "description": null,
      "name": "ErrorObject",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "An error ID",
            "htmlDescription": "<p>An error ID</p>\n",
            "key": "errorId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "A human description of the error",
            "htmlDescription": "<p>A human description of the error</p>\n",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "An ID that you can quote when contacting the support team (support@primer.io).",
            "htmlDescription": "<p>An ID that you can quote when contacting the support team (<a href=\"mailto:support@primer.io\">support@primer.io</a>).</p>\n",
            "key": "diagnosticsId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "descriptionContainsMarkdown": false
          },
          {
            "description": "Returned in case of a badly formed request",
            "htmlDescription": "<p>Returned in case of a badly formed request</p>\n",
            "key": "validationErrors",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "map",
                  "keyType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  },
                  "valueType": {
                    "type": "unknown"
                  }
                }
              }
            },
            "descriptionContainsMarkdown": false
          }
        ]
      },
      "descriptionContainsMarkdown": false
    },
    "type_:BadRequestErrorResponse": {
      "description": null,
      "name": "BadRequestErrorResponse",
      "shape": {
        "type": "alias",
        "value": {
          "type": "id",
          "value": "type_:ErrorObject"
        }
      },
      "descriptionContainsMarkdown": false
    },
    "type_:UnprocessableEntityErrorResponse": {
      "description": null,
      "name": "UnprocessableEntityErrorResponse",
      "shape": {
        "type": "alias",
        "value": {
          "type": "id",
          "value": "type_:ErrorObject"
        }
      },
      "descriptionContainsMarkdown": false
    }
  },
  "subpackages": {
    "subpackage_clientSessionApi": {
      "subpackageId": "subpackage_clientSessionApi",
      "name": "Client Session API",
      "endpoints": [
        {
          "environments": [],
          "availability": null,
          "defaultEnvironment": null,
          "urlSlug": "retrieve-a-client-session",
          "method": "GET",
          "id": "retrieveClientSideToken",
          "name": "Retrieve a client session",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/client-session"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "clientToken",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Client token corresponding to the client session to retrieve"
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:ClientSessionApiResponse"
              }
            }
          },
          "errors": [
            {
              "type": {
                "type": "id",
                "value": "type_:BadRequestErrorResponse"
              },
              "statusCode": 400,
              "description": null
            },
            {
              "type": {
                "type": "id",
                "value": "type_:UnprocessableEntityErrorResponse"
              },
              "statusCode": 422,
              "description": null
            }
          ],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:BadRequestErrorResponse"
                }
              },
              "statusCode": 400,
              "description": null
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:UnprocessableEntityErrorResponse"
                }
              },
              "statusCode": 422,
              "description": null
            }
          ],
          "examples": [
            {
              "descriptionContainsMarkdown": false,
              "path": "/client-session",
              "pathParameters": {},
              "queryParameters": {
                "clientToken": "string"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "customerId": "string",
                "orderId": "string",
                "currencyCode": "string",
                "amount": 0,
                "metadata": {
                  "string": {}
                },
                "customer": {
                  "emailAddress": "string",
                  "mobileNumber": "string",
                  "firstName": "string",
                  "lastName": "string",
                  "billingAddress": {
                    "firstName": "string",
                    "lastName": "string",
                    "addressLine1": "string",
                    "addressLine2": "string",
                    "city": "string",
                    "state": "string",
                    "countryCode": "AW",
                    "postalCode": "string"
                  },
                  "shippingAddress": {
                    "firstName": "string",
                    "lastName": "string",
                    "addressLine1": "string",
                    "addressLine2": "string",
                    "city": "string",
                    "state": "string",
                    "countryCode": "AW",
                    "postalCode": "string"
                  },
                  "taxId": "string",
                  "nationalDocumentId": "string"
                },
                "order": {
                  "lineItems": [
                    {
                      "itemId": "string",
                      "description": "string",
                      "amount": 0,
                      "quantity": 0,
                      "discountAmount": 0,
                      "taxAmount": 0,
                      "taxCode": "string",
                      "productType": "PHYSICAL"
                    }
                  ],
                  "countryCode": "AW",
                  "fees": [
                    {
                      "amount": 0,
                      "type": "string",
                      "description": "string"
                    }
                  ],
                  "shipping": {
                    "amount": 0
                  }
                },
                "paymentMethod": {
                  "vaultOnSuccess": true,
                  "descriptor": "string",
                  "paymentType": "FIRST_PAYMENT",
                  "options": {
                    "<PAYMENT_METHOD_TYPE>": {
                      "surcharge": {
                        "amount": 0
                      }
                    },
                    "PAYMENT_CARD": {
                      "networks": {
                        "AMEX": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "DANKORT": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "DINERS_CLUB": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "DISCOVER": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "ENROUTE": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "ELO": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "HIPER": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "INTERAC": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "JCB": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "MAESTRO": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "MASTERCARD": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "MIR": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "PRIVATE_LABEL": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "UNIONPAY": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "VISA": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "OTHER": {
                          "surcharge": {
                            "amount": 0
                          }
                        }
                      }
                    }
                  }
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              }
            },
            {
              "descriptionContainsMarkdown": false,
              "path": "/client-session",
              "pathParameters": {},
              "queryParameters": {
                "clientToken": "string"
              },
              "headers": {},
              "responseStatusCode": 400,
              "responseBody": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              }
            },
            {
              "descriptionContainsMarkdown": false,
              "path": "/client-session",
              "pathParameters": {},
              "queryParameters": {
                "clientToken": "string"
              },
              "headers": {},
              "responseStatusCode": 422,
              "responseBody": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              }
            }
          ],
          "description": "This API call retrieves all the details associated with the client session corresponding to the client token that is provided in the request. The fields with empty values are excluded from the response.\n",
          "htmlDescription": "<p>This API call retrieves all the details associated with the client session corresponding to the client token that is provided in the request. The fields with empty values are excluded from the response.</p>\n",
          "authed": true,
          "descriptionContainsMarkdown": false
        },
        {
          "environments": [],
          "availability": null,
          "defaultEnvironment": null,
          "urlSlug": "create-a-client-session",
          "method": "POST",
          "id": "createClientSideToken",
          "name": "Create a client session",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/client-session"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:ClientSessionApiRequest"
              }
            },
            "descriptionContainsMarkdown": false
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:ClientSessionWithTokenApiResponse"
              }
            }
          },
          "errors": [
            {
              "type": {
                "type": "id",
                "value": "type_:BadRequestErrorResponse"
              },
              "statusCode": 400,
              "description": null
            },
            {
              "type": {
                "type": "id",
                "value": "type_:UnprocessableEntityErrorResponse"
              },
              "statusCode": 422,
              "description": null
            }
          ],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:BadRequestErrorResponse"
                }
              },
              "statusCode": 400,
              "description": null
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:UnprocessableEntityErrorResponse"
                }
              },
              "statusCode": 422,
              "description": null
            }
          ],
          "examples": [
            {
              "descriptionContainsMarkdown": false,
              "path": "/client-session",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "clientToken": "string",
                "clientTokenExpirationDate": "2023-01-01T00:00:00Z",
                "orderId": "string",
                "currencyCode": "string",
                "amount": 0,
                "order": {
                  "lineItems": [
                    {
                      "itemId": "string",
                      "description": "string",
                      "amount": 0,
                      "quantity": 0,
                      "discountAmount": 0,
                      "taxAmount": 0,
                      "taxCode": "string",
                      "productType": "PHYSICAL"
                    }
                  ],
                  "countryCode": "AW",
                  "fees": [
                    {
                      "amount": 0,
                      "type": "string",
                      "description": "string"
                    }
                  ],
                  "shipping": {
                    "amount": 0
                  }
                },
                "customerId": "string",
                "customer": {
                  "emailAddress": "string",
                  "mobileNumber": "string",
                  "firstName": "string",
                  "lastName": "string",
                  "billingAddress": {
                    "firstName": "string",
                    "lastName": "string",
                    "addressLine1": "string",
                    "addressLine2": "string",
                    "city": "string",
                    "state": "string",
                    "countryCode": "AW",
                    "postalCode": "string"
                  },
                  "shippingAddress": {
                    "firstName": "string",
                    "lastName": "string",
                    "addressLine1": "string",
                    "addressLine2": "string",
                    "city": "string",
                    "state": "string",
                    "countryCode": "AW",
                    "postalCode": "string"
                  },
                  "taxId": "string",
                  "nationalDocumentId": "string"
                },
                "metadata": {
                  "string": {}
                },
                "paymentMethod": {
                  "vaultOnSuccess": true,
                  "descriptor": "string",
                  "paymentType": "FIRST_PAYMENT",
                  "options": {
                    "<PAYMENT_METHOD_TYPE>": {
                      "surcharge": {
                        "amount": 0
                      }
                    },
                    "PAYMENT_CARD": {
                      "networks": {
                        "AMEX": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "DANKORT": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "DINERS_CLUB": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "DISCOVER": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "ENROUTE": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "ELO": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "HIPER": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "INTERAC": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "JCB": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "MAESTRO": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "MASTERCARD": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "MIR": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "PRIVATE_LABEL": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "UNIONPAY": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "VISA": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "OTHER": {
                          "surcharge": {
                            "amount": 0
                          }
                        }
                      }
                    }
                  }
                },
                "warnings": {
                  "type": "string",
                  "code": "string",
                  "message": "string"
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              }
            },
            {
              "descriptionContainsMarkdown": false,
              "path": "/client-session",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 400,
              "responseBody": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              }
            },
            {
              "descriptionContainsMarkdown": false,
              "path": "/client-session",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 422,
              "responseBody": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              }
            }
          ],
          "description": "Creating a client session generates a client token: a temporary key used to initialize [Universal Checkout](https://primer.io/docs/accept-payments/setup-universal-checkout/installation/web) and authenticate it against your account.\n\nUniversal Checkout automatically retrieves all the settings from the client session and the Dashboard to configure the payment methods and the checkout experience.\n\n<b>Note:</b>\nWhen creating a Client Session, please make sure to provide `currencyCode`, `orderId`, and at least one of `amount` or `lineItems`. \nIf any of these are not yet available, you can provide them when making the payment request.\n\n`POST /client-session` does not have required fields as all fields are not always known when a client session is created. \nUse `PATCH /client-session` to update the parameters throughout the checkout session.\n\nClient tokens expire after 24 hours.\n",
          "htmlDescription": "<p>Creating a client session generates a client token: a temporary key used to initialize <a href=\"https://primer.io/docs/accept-payments/setup-universal-checkout/installation/web\">Universal Checkout</a> and authenticate it against your account.</p>\n<p>Universal Checkout automatically retrieves all the settings from the client session and the Dashboard to configure the payment methods and the checkout experience.</p>\n<p><b>Note:</b>\nWhen creating a Client Session, please make sure to provide <code>currencyCode</code>, <code>orderId</code>, and at least one of <code>amount</code> or <code>lineItems</code>. \nIf any of these are not yet available, you can provide them when making the payment request.</p>\n<p><code>POST /client-session</code> does not have required fields as all fields are not always known when a client session is created. \nUse <code>PATCH /client-session</code> to update the parameters throughout the checkout session.</p>\n<p>Client tokens expire after 24 hours.</p>\n",
          "authed": true,
          "descriptionContainsMarkdown": true
        },
        {
          "environments": [],
          "availability": null,
          "defaultEnvironment": null,
          "urlSlug": "update-client-session",
          "method": "PATCH",
          "id": "updateClientSideToken",
          "name": "Update client session",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/client-session"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:ClientSessionUpdateApiRequest"
              }
            },
            "descriptionContainsMarkdown": false
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:ClientSessionApiResponse"
              }
            }
          },
          "errors": [
            {
              "type": {
                "type": "id",
                "value": "type_:BadRequestErrorResponse"
              },
              "statusCode": 400,
              "description": null
            },
            {
              "type": {
                "type": "id",
                "value": "type_:UnprocessableEntityErrorResponse"
              },
              "statusCode": 422,
              "description": null
            }
          ],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:BadRequestErrorResponse"
                }
              },
              "statusCode": 400,
              "description": null
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:UnprocessableEntityErrorResponse"
                }
              },
              "statusCode": 422,
              "description": null
            }
          ],
          "examples": [
            {
              "descriptionContainsMarkdown": false,
              "path": "/client-session",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "customerId": "string",
                "orderId": "string",
                "currencyCode": "string",
                "amount": 0,
                "metadata": {
                  "string": {}
                },
                "customer": {
                  "emailAddress": "string",
                  "mobileNumber": "string",
                  "firstName": "string",
                  "lastName": "string",
                  "billingAddress": {
                    "firstName": "string",
                    "lastName": "string",
                    "addressLine1": "string",
                    "addressLine2": "string",
                    "city": "string",
                    "state": "string",
                    "countryCode": "AW",
                    "postalCode": "string"
                  },
                  "shippingAddress": {
                    "firstName": "string",
                    "lastName": "string",
                    "addressLine1": "string",
                    "addressLine2": "string",
                    "city": "string",
                    "state": "string",
                    "countryCode": "AW",
                    "postalCode": "string"
                  },
                  "taxId": "string",
                  "nationalDocumentId": "string"
                },
                "order": {
                  "lineItems": [
                    {
                      "itemId": "string",
                      "description": "string",
                      "amount": 0,
                      "quantity": 0,
                      "discountAmount": 0,
                      "taxAmount": 0,
                      "taxCode": "string",
                      "productType": "PHYSICAL"
                    }
                  ],
                  "countryCode": "AW",
                  "fees": [
                    {
                      "amount": 0,
                      "type": "string",
                      "description": "string"
                    }
                  ],
                  "shipping": {
                    "amount": 0
                  }
                },
                "paymentMethod": {
                  "vaultOnSuccess": true,
                  "descriptor": "string",
                  "paymentType": "FIRST_PAYMENT",
                  "options": {
                    "<PAYMENT_METHOD_TYPE>": {
                      "surcharge": {
                        "amount": 0
                      }
                    },
                    "PAYMENT_CARD": {
                      "networks": {
                        "AMEX": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "DANKORT": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "DINERS_CLUB": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "DISCOVER": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "ENROUTE": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "ELO": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "HIPER": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "INTERAC": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "JCB": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "MAESTRO": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "MASTERCARD": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "MIR": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "PRIVATE_LABEL": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "UNIONPAY": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "VISA": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "OTHER": {
                          "surcharge": {
                            "amount": 0
                          }
                        }
                      }
                    }
                  }
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              }
            },
            {
              "descriptionContainsMarkdown": false,
              "path": "/client-session",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 400,
              "responseBody": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              }
            },
            {
              "descriptionContainsMarkdown": false,
              "path": "/client-session",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 422,
              "responseBody": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              }
            }
          ],
          "description": "You can update a clients session created earlier with the `PATCH /client-session` [API call](#operation/create_client_side_token_client_session_post).\n\nThe only required field for the request is `clientToken`. Other supported request fields are same as for the `POST /client-session` [API call](#operation/create_client_side_token_client_session_post).\n\nYou need to specify only the fields you wish to update. However, if the items that are to be updated are of type `array`, then you need to provide the complete array along with modified items.\n\nIf you wish to update nested fields on the client session, such as the customer `emailAddress` field, you can pass the `customer` object with only one field, `emailAddress`, to update.\n\nIf you simply wish to clear the value of the field, pass `null` as your input.\n\nYou can update `paymentMethod.vaultOnSuccess` field but updating of the `paymentMethod.options` field through `PATCH /client-session` is not supported.\n\nThe response will contain all the fields of the client session including the ones that were changed.\n",
          "htmlDescription": "<p>You can update a clients session created earlier with the <code>PATCH /client-session</code> <a href=\"#operation/create_client_side_token_client_session_post\">API call</a>.</p>\n<p>The only required field for the request is <code>clientToken</code>. Other supported request fields are same as for the <code>POST /client-session</code> <a href=\"#operation/create_client_side_token_client_session_post\">API call</a>.</p>\n<p>You need to specify only the fields you wish to update. However, if the items that are to be updated are of type <code>array</code>, then you need to provide the complete array along with modified items.</p>\n<p>If you wish to update nested fields on the client session, such as the customer <code>emailAddress</code> field, you can pass the <code>customer</code> object with only one field, <code>emailAddress</code>, to update.</p>\n<p>If you simply wish to clear the value of the field, pass <code>null</code> as your input.</p>\n<p>You can update <code>paymentMethod.vaultOnSuccess</code> field but updating of the <code>paymentMethod.options</code> field through <code>PATCH /client-session</code> is not supported.</p>\n<p>The response will contain all the fields of the client session including the ones that were changed.</p>\n",
          "authed": true,
          "descriptionContainsMarkdown": true
        }
      ],
      "types": [],
      "subpackages": [],
      "pointsTo": null,
      "urlSlug": "client-session-api",
      "description": null,
      "webhooks": [],
      "descriptionContainsMarkdown": false
    },
    "subpackage_paymentsApi": {
      "subpackageId": "subpackage_paymentsApi",
      "name": "Payments API",
      "endpoints": [
        {
          "environments": [],
          "availability": null,
          "defaultEnvironment": null,
          "urlSlug": "search-list-payments",
          "method": "GET",
          "id": "listPayments",
          "name": "Search & list payments",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/payments"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "status",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_:PaymentStatus"
                }
              },
              "description": "Filter payments by their status."
            },
            {
              "key": "payment_method_type",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_:PaymentMethodTypeEnum"
                }
              },
              "description": "Filter payments by their payment method type."
            },
            {
              "key": "processor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Filter payments by their payment processor."
            },
            {
              "key": "currency_code",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Filter payments by their payment currency.\ne.g. use `USD` for US dollars.\n"
            },
            {
              "key": "from_date",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "Return only payments from this date (inclusive)."
            },
            {
              "key": "to_date",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "Return only payments up to this date (inclusive)."
            },
            {
              "key": "order_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Return payments related to this order ID."
            },
            {
              "key": "min_amount",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "Return payments of this amount minimum (inclusive)."
            },
            {
              "key": "max_amount",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "Return payments of this amount max (inclusive)."
            },
            {
              "key": "customer_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "ID of the customer that has made the payment."
            },
            {
              "key": "merchant_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "ID of the merchant involved in the payment."
            },
            {
              "key": "customer_email_address",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Email of the customer that has made the payment."
            },
            {
              "key": "last_4_digits",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Last 4 digits of the card used for the payment."
            },
            {
              "key": "paypal_email",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Paypal email address associated with the payment."
            },
            {
              "key": "klarna_email",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Klarna email address associated with the payment."
            },
            {
              "key": "limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "Maximum number of payments to return per page."
            },
            {
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "If results are paginated, pass the `nextCursor` to access next page."
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:PaymentListApiResponse"
              }
            }
          },
          "errors": [
            {
              "type": {
                "type": "id",
                "value": "type_:UnprocessableEntityErrorResponse"
              },
              "statusCode": 422,
              "description": null
            }
          ],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:UnprocessableEntityErrorResponse"
                }
              },
              "statusCode": 422,
              "description": null
            }
          ],
          "examples": [
            {
              "descriptionContainsMarkdown": false,
              "path": "/payments",
              "pathParameters": {},
              "queryParameters": {
                "status": "PENDING",
                "payment_method_type": "PAYMENT_CARD"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "data": [
                  {
                    "id": "string",
                    "date": "2023-01-01T00:00:00Z",
                    "status": "PENDING",
                    "orderId": "string",
                    "processor": "string",
                    "currencyCode": "string",
                    "amount": 0,
                    "metadata": {
                      "string": {}
                    }
                  }
                ],
                "nextCursor": "string",
                "prevCursor": "string"
              },
              "codeExamples": {
                "nodeAxios": ""
              }
            },
            {
              "descriptionContainsMarkdown": false,
              "path": "/payments",
              "pathParameters": {},
              "queryParameters": {
                "status": "PENDING",
                "payment_method_type": "PAYMENT_CARD"
              },
              "headers": {},
              "responseStatusCode": 422,
              "responseBody": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              }
            }
          ],
          "description": "<p/>\n\nRetrieve a list of your payments.\n\nResults are paginated, they will only return up to 100 payments maximum.\nTo access the next page of result, set the `cursor` query parameter to the value of `nextCursor` in\nyour current result payload. Use `prevCursor` to go back to the previous page.\n\n**Note:** this endpoint returns a list of\nsummarized payments. Not all payments attributes are present. You can use\nthe query parameters to filter payments. You can separate multiple query parameters with the `&` symbol.\nQuery parameters with types of the form \"Array of strings\" (such as the status parameter) can be specified as a comma-separated list.\n\n**Note:** payments will be available within a minute from being created.\n",
          "htmlDescription": "<p/>\n\n<p>Retrieve a list of your payments.</p>\n<p>Results are paginated, they will only return up to 100 payments maximum.\nTo access the next page of result, set the <code>cursor</code> query parameter to the value of <code>nextCursor</code> in\nyour current result payload. Use <code>prevCursor</code> to go back to the previous page.</p>\n<p><strong>Note:</strong> this endpoint returns a list of\nsummarized payments. Not all payments attributes are present. You can use\nthe query parameters to filter payments. You can separate multiple query parameters with the <code>&amp;</code> symbol.\nQuery parameters with types of the form &quot;Array of strings&quot; (such as the status parameter) can be specified as a comma-separated list.</p>\n<p><strong>Note:</strong> payments will be available within a minute from being created.</p>\n",
          "authed": true,
          "descriptionContainsMarkdown": true
        },
        {
          "environments": [],
          "availability": null,
          "defaultEnvironment": null,
          "urlSlug": "create-a-payment",
          "method": "POST",
          "id": "createPayment",
          "name": "Create a payment",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/payments"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "X-Idempotency-Key",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Optional key to make the request idempotent. Learn more in the [Idempotency Key guide](../docs#idempotency-key)."
            }
          ],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "orderId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Your reference for the payment."
                },
                {
                  "key": "currencyCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n"
                },
                {
                  "key": "amount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  },
                  "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`. The minimum amount is 0."
                },
                {
                  "key": "order",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OrderDetailsApiSchema"
                    }
                  },
                  "description": "More information associated with the order."
                },
                {
                  "key": "paymentMethodToken",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  },
                  "description": "The payment method token used to authorize the payment.\n"
                },
                {
                  "key": "customerId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "A unique identifier for your customer.\nThis attribute is required if `paymentMethod.vaultOnSuccess` is set to `True`."
                },
                {
                  "key": "customer",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CustomerDetailsApiSchema"
                    }
                  },
                  "description": "More information associated with the customer.\n"
                },
                {
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  },
                  "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`\n"
                },
                {
                  "key": "paymentMethod",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentRequestPaymentMethodOptionsApiSchema"
                    }
                  },
                  "description": "Enable certain options associated with the payment method."
                }
              ]
            },
            "descriptionContainsMarkdown": false
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:PaymentApiResponse"
              }
            }
          },
          "errors": [
            {
              "type": {
                "type": "id",
                "value": "type_:BadRequestErrorResponse"
              },
              "statusCode": 400,
              "description": null
            },
            {
              "type": {
                "type": "id",
                "value": "type_:UnprocessableEntityErrorResponse"
              },
              "statusCode": 422,
              "description": null
            }
          ],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:BadRequestErrorResponse"
                }
              },
              "statusCode": 400,
              "description": null
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:UnprocessableEntityErrorResponse"
                }
              },
              "statusCode": 422,
              "description": null
            }
          ],
          "examples": [
            {
              "descriptionContainsMarkdown": false,
              "path": "/payments",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "X-Idempotency-Key": "string"
              },
              "requestBody": {
                "paymentMethodToken": "string"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "string",
                "date": "2023-01-01T00:00:00Z",
                "status": "PENDING",
                "orderId": "string",
                "currencyCode": "string",
                "amount": 0,
                "order": {
                  "lineItems": [
                    {
                      "itemId": "string",
                      "description": "string",
                      "amount": 0,
                      "quantity": 0,
                      "discountAmount": 0,
                      "taxAmount": 0,
                      "taxCode": "string",
                      "productType": "PHYSICAL"
                    }
                  ],
                  "countryCode": "AW",
                  "fees": [
                    {
                      "amount": 0,
                      "type": "string",
                      "description": "string"
                    }
                  ],
                  "shipping": {
                    "amount": 0
                  }
                },
                "customerId": "string",
                "customer": {
                  "emailAddress": "string",
                  "mobileNumber": "string",
                  "firstName": "string",
                  "lastName": "string",
                  "billingAddress": {
                    "firstName": "string",
                    "lastName": "string",
                    "addressLine1": "string",
                    "addressLine2": "string",
                    "city": "string",
                    "state": "string",
                    "countryCode": "AW",
                    "postalCode": "string"
                  },
                  "shippingAddress": {
                    "firstName": "string",
                    "lastName": "string",
                    "addressLine1": "string",
                    "addressLine2": "string",
                    "city": "string",
                    "state": "string",
                    "countryCode": "AW",
                    "postalCode": "string"
                  },
                  "taxId": "string",
                  "nationalDocumentId": "string"
                },
                "metadata": {
                  "string": {}
                },
                "paymentMethod": {
                  "descriptor": "string",
                  "paymentType": "FIRST_PAYMENT",
                  "paymentMethodToken": "string",
                  "isVaulted": true,
                  "analyticsId": "string",
                  "paymentMethodType": "PAYMENT_CARD",
                  "paymentMethodData": {
                    "first6Digits": "string",
                    "last4Digits": "string",
                    "expirationMonth": "string",
                    "expirationYear": "string",
                    "cardholderName": "string",
                    "network": "string",
                    "isNetworkTokenized": true,
                    "binData": {
                      "network": "AMEX",
                      "issuerCountryCode": "AW",
                      "issuerName": "string",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "DOMESTIC_USE_ONLY",
                      "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                      "accountFundingType": "CREDIT",
                      "prepaidReloadableIndicator": "RELOADABLE",
                      "productUsageType": "CONSUMER",
                      "productCode": "string",
                      "productName": "string"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE",
                    "reasonText": "string",
                    "protocolVersion": "string",
                    "challengeIssued": true
                  }
                },
                "processor": {
                  "name": "string",
                  "processorMerchantId": "string",
                  "amountCaptured": 0,
                  "amountRefunded": 0
                },
                "requiredAction": {
                  "name": "3DS_AUTHENTICATION",
                  "description": "string",
                  "clientToken": "string"
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR",
                  "message": "string"
                },
                "transactions": [
                  {
                    "date": "string",
                    "amount": 0,
                    "currencyCode": "string",
                    "transactionType": "SALE",
                    "processorTransactionId": "string",
                    "processorName": "string",
                    "processorMerchantId": "string",
                    "processorStatus": "PENDING",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR",
                      "message": "string"
                    }
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              }
            },
            {
              "descriptionContainsMarkdown": false,
              "path": "/payments",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "X-Idempotency-Key": "string"
              },
              "requestBody": {
                "paymentMethodToken": "string"
              },
              "responseStatusCode": 400,
              "responseBody": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              }
            },
            {
              "descriptionContainsMarkdown": false,
              "path": "/payments",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "X-Idempotency-Key": "string"
              },
              "requestBody": {
                "paymentMethodToken": "string"
              },
              "responseStatusCode": 422,
              "responseBody": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              }
            }
          ],
          "description": "<p/>\n\nCreate and authorize a payment for a given customer order. You\nshould provide a payment method token here to avoid PCI implications.\n\nIf only a payment method token is passed, the values passed with the Client Session determine the amount, currency etc.\n\nNote: `amount`, `currencyCode` and `orderId` are required during payment creation. Make sure to pass these fields when creating a client session, or if not yet available, when creating a payment.\n\nAll fields provided on this request will take preference over any field on the `order` associated with the client session. E.g. if you pass `amount` on this request, it will override the `amount` on the `order` associated with the Client Session.\n",
          "htmlDescription": "<p/>\n\n<p>Create and authorize a payment for a given customer order. You\nshould provide a payment method token here to avoid PCI implications.</p>\n<p>If only a payment method token is passed, the values passed with the Client Session determine the amount, currency etc.</p>\n<p>Note: <code>amount</code>, <code>currencyCode</code> and <code>orderId</code> are required during payment creation. Make sure to pass these fields when creating a client session, or if not yet available, when creating a payment.</p>\n<p>All fields provided on this request will take preference over any field on the <code>order</code> associated with the client session. E.g. if you pass <code>amount</code> on this request, it will override the <code>amount</code> on the <code>order</code> associated with the Client Session.</p>\n",
          "authed": true,
          "descriptionContainsMarkdown": true
        },
        {
          "environments": [],
          "availability": null,
          "defaultEnvironment": null,
          "urlSlug": "capture-a-payment",
          "method": "POST",
          "id": "capturePayment",
          "name": "Capture a payment",
          "path": {
            "pathParameters": [
              {
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "description": "ID of the payment to capture."
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/payments/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/capture"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "X-Idempotency-Key",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Optional key to make the request idempotent. Learn more in the [Idempotency Key guide](../docs#idempotency-key)."
            }
          ],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:PaymentCaptureApiRequest"
              }
            },
            "descriptionContainsMarkdown": false
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:PaymentApiResponse"
              }
            }
          },
          "errors": [
            {
              "type": {
                "type": "id",
                "value": "type_:BadRequestErrorResponse"
              },
              "statusCode": 400,
              "description": null
            },
            {
              "type": {
                "type": "id",
                "value": "type_:UnprocessableEntityErrorResponse"
              },
              "statusCode": 422,
              "description": null
            }
          ],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:BadRequestErrorResponse"
                }
              },
              "statusCode": 400,
              "description": null
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:UnprocessableEntityErrorResponse"
                }
              },
              "statusCode": 422,
              "description": null
            }
          ],
          "examples": [
            {
              "descriptionContainsMarkdown": false,
              "path": "/payments/:id/capture",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {
                "X-Idempotency-Key": "string"
              },
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "string",
                "date": "2023-01-01T00:00:00Z",
                "status": "PENDING",
                "orderId": "string",
                "currencyCode": "string",
                "amount": 0,
                "order": {
                  "lineItems": [
                    {
                      "itemId": "string",
                      "description": "string",
                      "amount": 0,
                      "quantity": 0,
                      "discountAmount": 0,
                      "taxAmount": 0,
                      "taxCode": "string",
                      "productType": "PHYSICAL"
                    }
                  ],
                  "countryCode": "AW",
                  "fees": [
                    {
                      "amount": 0,
                      "type": "string",
                      "description": "string"
                    }
                  ],
                  "shipping": {
                    "amount": 0
                  }
                },
                "customerId": "string",
                "customer": {
                  "emailAddress": "string",
                  "mobileNumber": "string",
                  "firstName": "string",
                  "lastName": "string",
                  "billingAddress": {
                    "firstName": "string",
                    "lastName": "string",
                    "addressLine1": "string",
                    "addressLine2": "string",
                    "city": "string",
                    "state": "string",
                    "countryCode": "AW",
                    "postalCode": "string"
                  },
                  "shippingAddress": {
                    "firstName": "string",
                    "lastName": "string",
                    "addressLine1": "string",
                    "addressLine2": "string",
                    "city": "string",
                    "state": "string",
                    "countryCode": "AW",
                    "postalCode": "string"
                  },
                  "taxId": "string",
                  "nationalDocumentId": "string"
                },
                "metadata": {
                  "string": {}
                },
                "paymentMethod": {
                  "descriptor": "string",
                  "paymentType": "FIRST_PAYMENT",
                  "paymentMethodToken": "string",
                  "isVaulted": true,
                  "analyticsId": "string",
                  "paymentMethodType": "PAYMENT_CARD",
                  "paymentMethodData": {
                    "first6Digits": "string",
                    "last4Digits": "string",
                    "expirationMonth": "string",
                    "expirationYear": "string",
                    "cardholderName": "string",
                    "network": "string",
                    "isNetworkTokenized": true,
                    "binData": {
                      "network": "AMEX",
                      "issuerCountryCode": "AW",
                      "issuerName": "string",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "DOMESTIC_USE_ONLY",
                      "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                      "accountFundingType": "CREDIT",
                      "prepaidReloadableIndicator": "RELOADABLE",
                      "productUsageType": "CONSUMER",
                      "productCode": "string",
                      "productName": "string"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE",
                    "reasonText": "string",
                    "protocolVersion": "string",
                    "challengeIssued": true
                  }
                },
                "processor": {
                  "name": "string",
                  "processorMerchantId": "string",
                  "amountCaptured": 0,
                  "amountRefunded": 0
                },
                "requiredAction": {
                  "name": "3DS_AUTHENTICATION",
                  "description": "string",
                  "clientToken": "string"
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR",
                  "message": "string"
                },
                "transactions": [
                  {
                    "date": "string",
                    "amount": 0,
                    "currencyCode": "string",
                    "transactionType": "SALE",
                    "processorTransactionId": "string",
                    "processorName": "string",
                    "processorMerchantId": "string",
                    "processorStatus": "PENDING",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR",
                      "message": "string"
                    }
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              }
            },
            {
              "descriptionContainsMarkdown": false,
              "path": "/payments/:id/capture",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {
                "X-Idempotency-Key": "string"
              },
              "requestBody": {},
              "responseStatusCode": 400,
              "responseBody": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              }
            },
            {
              "descriptionContainsMarkdown": false,
              "path": "/payments/:id/capture",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {
                "X-Idempotency-Key": "string"
              },
              "requestBody": {},
              "responseStatusCode": 422,
              "responseBody": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              }
            }
          ],
          "description": "<p/>\n\nIf you have successfully authorized a payment, you can now\nfully capture, or partially capture funds from the authorized payment, depending\non whether your selected payment processor supports it. The payment will\nbe updated to `SETTLED` or `SETTLING`, depending on the payment method type.\n\nThe payload sent in this capture request is completely optional. If you don't\nsend a payload with the capture request, the full amount that was authorized\nwill be sent for capture. Below are the available payload attributes, which\ngive you more granular control when capturing funds, if you require it.\n",
          "htmlDescription": "<p/>\n\n<p>If you have successfully authorized a payment, you can now\nfully capture, or partially capture funds from the authorized payment, depending\non whether your selected payment processor supports it. The payment will\nbe updated to <code>SETTLED</code> or <code>SETTLING</code>, depending on the payment method type.</p>\n<p>The payload sent in this capture request is completely optional. If you don&#39;t\nsend a payload with the capture request, the full amount that was authorized\nwill be sent for capture. Below are the available payload attributes, which\ngive you more granular control when capturing funds, if you require it.</p>\n",
          "authed": true,
          "descriptionContainsMarkdown": true
        },
        {
          "environments": [],
          "availability": null,
          "defaultEnvironment": null,
          "urlSlug": "cancel-a-payment",
          "method": "POST",
          "id": "cancelPayment",
          "name": "Cancel a payment",
          "path": {
            "pathParameters": [
              {
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "description": "ID of payment to cancel."
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/payments/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/cancel"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "X-Idempotency-Key",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Optional key to make the request idempotent. Learn more in the [Idempotency Key guide](../docs#idempotency-key)."
            }
          ],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:PaymentCancelApiRequest"
              }
            },
            "descriptionContainsMarkdown": false
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:PaymentApiResponse"
              }
            }
          },
          "errors": [
            {
              "type": {
                "type": "id",
                "value": "type_:BadRequestErrorResponse"
              },
              "statusCode": 400,
              "description": null
            }
          ],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:BadRequestErrorResponse"
                }
              },
              "statusCode": 400,
              "description": null
            }
          ],
          "examples": [
            {
              "descriptionContainsMarkdown": false,
              "path": "/payments/:id/cancel",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {
                "X-Idempotency-Key": "string"
              },
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "string",
                "date": "2023-01-01T00:00:00Z",
                "status": "PENDING",
                "orderId": "string",
                "currencyCode": "string",
                "amount": 0,
                "order": {
                  "lineItems": [
                    {
                      "itemId": "string",
                      "description": "string",
                      "amount": 0,
                      "quantity": 0,
                      "discountAmount": 0,
                      "taxAmount": 0,
                      "taxCode": "string",
                      "productType": "PHYSICAL"
                    }
                  ],
                  "countryCode": "AW",
                  "fees": [
                    {
                      "amount": 0,
                      "type": "string",
                      "description": "string"
                    }
                  ],
                  "shipping": {
                    "amount": 0
                  }
                },
                "customerId": "string",
                "customer": {
                  "emailAddress": "string",
                  "mobileNumber": "string",
                  "firstName": "string",
                  "lastName": "string",
                  "billingAddress": {
                    "firstName": "string",
                    "lastName": "string",
                    "addressLine1": "string",
                    "addressLine2": "string",
                    "city": "string",
                    "state": "string",
                    "countryCode": "AW",
                    "postalCode": "string"
                  },
                  "shippingAddress": {
                    "firstName": "string",
                    "lastName": "string",
                    "addressLine1": "string",
                    "addressLine2": "string",
                    "city": "string",
                    "state": "string",
                    "countryCode": "AW",
                    "postalCode": "string"
                  },
                  "taxId": "string",
                  "nationalDocumentId": "string"
                },
                "metadata": {
                  "string": {}
                },
                "paymentMethod": {
                  "descriptor": "string",
                  "paymentType": "FIRST_PAYMENT",
                  "paymentMethodToken": "string",
                  "isVaulted": true,
                  "analyticsId": "string",
                  "paymentMethodType": "PAYMENT_CARD",
                  "paymentMethodData": {
                    "first6Digits": "string",
                    "last4Digits": "string",
                    "expirationMonth": "string",
                    "expirationYear": "string",
                    "cardholderName": "string",
                    "network": "string",
                    "isNetworkTokenized": true,
                    "binData": {
                      "network": "AMEX",
                      "issuerCountryCode": "AW",
                      "issuerName": "string",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "DOMESTIC_USE_ONLY",
                      "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                      "accountFundingType": "CREDIT",
                      "prepaidReloadableIndicator": "RELOADABLE",
                      "productUsageType": "CONSUMER",
                      "productCode": "string",
                      "productName": "string"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE",
                    "reasonText": "string",
                    "protocolVersion": "string",
                    "challengeIssued": true
                  }
                },
                "processor": {
                  "name": "string",
                  "processorMerchantId": "string",
                  "amountCaptured": 0,
                  "amountRefunded": 0
                },
                "requiredAction": {
                  "name": "3DS_AUTHENTICATION",
                  "description": "string",
                  "clientToken": "string"
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR",
                  "message": "string"
                },
                "transactions": [
                  {
                    "date": "string",
                    "amount": 0,
                    "currencyCode": "string",
                    "transactionType": "SALE",
                    "processorTransactionId": "string",
                    "processorName": "string",
                    "processorMerchantId": "string",
                    "processorStatus": "PENDING",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR",
                      "message": "string"
                    }
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              }
            },
            {
              "descriptionContainsMarkdown": false,
              "path": "/payments/:id/cancel",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {
                "X-Idempotency-Key": "string"
              },
              "requestBody": {},
              "responseStatusCode": 400,
              "responseBody": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              }
            }
          ],
          "description": "<p/>\n\nProvided the payment has not reached `SETTLED` status, Primer will\nsend a \"void\" request to the payment processor, thereby cancelling the payment\nand releasing the hold on customer funds. Upon success, the payment will transition\nto `CANCELLED`. The payload is optional.\n",
          "htmlDescription": "<p/>\n\n<p>Provided the payment has not reached <code>SETTLED</code> status, Primer will\nsend a &quot;void&quot; request to the payment processor, thereby cancelling the payment\nand releasing the hold on customer funds. Upon success, the payment will transition\nto <code>CANCELLED</code>. The payload is optional.</p>\n",
          "authed": true,
          "descriptionContainsMarkdown": true
        },
        {
          "environments": [],
          "availability": null,
          "defaultEnvironment": null,
          "urlSlug": "refund-a-payment",
          "method": "POST",
          "id": "refundPayment",
          "name": "Refund a payment",
          "path": {
            "pathParameters": [
              {
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "description": "ID of payment to refund."
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/payments/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/refund"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "X-Idempotency-Key",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Optional key to make the request idempotent. Learn more in the [Idempotency Key guide](../docs#idempotency-key)."
            }
          ],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:PaymentRefundApiRequest"
              }
            },
            "descriptionContainsMarkdown": false
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:PaymentApiResponse"
              }
            }
          },
          "errors": [
            {
              "type": {
                "type": "id",
                "value": "type_:BadRequestErrorResponse"
              },
              "statusCode": 400,
              "description": null
            },
            {
              "type": {
                "type": "id",
                "value": "type_:UnprocessableEntityErrorResponse"
              },
              "statusCode": 422,
              "description": null
            }
          ],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:BadRequestErrorResponse"
                }
              },
              "statusCode": 400,
              "description": null
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:UnprocessableEntityErrorResponse"
                }
              },
              "statusCode": 422,
              "description": null
            }
          ],
          "examples": [
            {
              "descriptionContainsMarkdown": false,
              "path": "/payments/:id/refund",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {
                "X-Idempotency-Key": "string"
              },
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "string",
                "date": "2023-01-01T00:00:00Z",
                "status": "PENDING",
                "orderId": "string",
                "currencyCode": "string",
                "amount": 0,
                "order": {
                  "lineItems": [
                    {
                      "itemId": "string",
                      "description": "string",
                      "amount": 0,
                      "quantity": 0,
                      "discountAmount": 0,
                      "taxAmount": 0,
                      "taxCode": "string",
                      "productType": "PHYSICAL"
                    }
                  ],
                  "countryCode": "AW",
                  "fees": [
                    {
                      "amount": 0,
                      "type": "string",
                      "description": "string"
                    }
                  ],
                  "shipping": {
                    "amount": 0
                  }
                },
                "customerId": "string",
                "customer": {
                  "emailAddress": "string",
                  "mobileNumber": "string",
                  "firstName": "string",
                  "lastName": "string",
                  "billingAddress": {
                    "firstName": "string",
                    "lastName": "string",
                    "addressLine1": "string",
                    "addressLine2": "string",
                    "city": "string",
                    "state": "string",
                    "countryCode": "AW",
                    "postalCode": "string"
                  },
                  "shippingAddress": {
                    "firstName": "string",
                    "lastName": "string",
                    "addressLine1": "string",
                    "addressLine2": "string",
                    "city": "string",
                    "state": "string",
                    "countryCode": "AW",
                    "postalCode": "string"
                  },
                  "taxId": "string",
                  "nationalDocumentId": "string"
                },
                "metadata": {
                  "string": {}
                },
                "paymentMethod": {
                  "descriptor": "string",
                  "paymentType": "FIRST_PAYMENT",
                  "paymentMethodToken": "string",
                  "isVaulted": true,
                  "analyticsId": "string",
                  "paymentMethodType": "PAYMENT_CARD",
                  "paymentMethodData": {
                    "first6Digits": "string",
                    "last4Digits": "string",
                    "expirationMonth": "string",
                    "expirationYear": "string",
                    "cardholderName": "string",
                    "network": "string",
                    "isNetworkTokenized": true,
                    "binData": {
                      "network": "AMEX",
                      "issuerCountryCode": "AW",
                      "issuerName": "string",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "DOMESTIC_USE_ONLY",
                      "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                      "accountFundingType": "CREDIT",
                      "prepaidReloadableIndicator": "RELOADABLE",
                      "productUsageType": "CONSUMER",
                      "productCode": "string",
                      "productName": "string"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE",
                    "reasonText": "string",
                    "protocolVersion": "string",
                    "challengeIssued": true
                  }
                },
                "processor": {
                  "name": "string",
                  "processorMerchantId": "string",
                  "amountCaptured": 0,
                  "amountRefunded": 0
                },
                "requiredAction": {
                  "name": "3DS_AUTHENTICATION",
                  "description": "string",
                  "clientToken": "string"
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR",
                  "message": "string"
                },
                "transactions": [
                  {
                    "date": "string",
                    "amount": 0,
                    "currencyCode": "string",
                    "transactionType": "SALE",
                    "processorTransactionId": "string",
                    "processorName": "string",
                    "processorMerchantId": "string",
                    "processorStatus": "PENDING",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR",
                      "message": "string"
                    }
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              }
            },
            {
              "descriptionContainsMarkdown": false,
              "path": "/payments/:id/refund",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {
                "X-Idempotency-Key": "string"
              },
              "requestBody": {},
              "responseStatusCode": 400,
              "responseBody": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              }
            },
            {
              "descriptionContainsMarkdown": false,
              "path": "/payments/:id/refund",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {
                "X-Idempotency-Key": "string"
              },
              "requestBody": {},
              "responseStatusCode": 422,
              "responseBody": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              }
            }
          ],
          "description": "<p/>\n\nBy default, this request will refund the full amount.\n\nOptionally, pass in a lesser amount for a partial refund.\n",
          "htmlDescription": "<p/>\n\n<p>By default, this request will refund the full amount.</p>\n<p>Optionally, pass in a lesser amount for a partial refund.</p>\n",
          "authed": true,
          "descriptionContainsMarkdown": true
        },
        {
          "environments": [],
          "availability": null,
          "defaultEnvironment": null,
          "urlSlug": "resume-a-payment",
          "method": "POST",
          "id": "resumePayment",
          "name": "Resume a payment",
          "path": {
            "pathParameters": [
              {
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "description": "ID of payment to resume."
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/payments/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/resume"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "resumeToken",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  },
                  "description": "A token containing any information that is sent back from the checkout to complete a blocked payment flow."
                }
              ]
            },
            "descriptionContainsMarkdown": false
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:PaymentApiResponse"
              }
            }
          },
          "errors": [
            {
              "type": {
                "type": "id",
                "value": "type_:BadRequestErrorResponse"
              },
              "statusCode": 400,
              "description": null
            }
          ],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:BadRequestErrorResponse"
                }
              },
              "statusCode": 400,
              "description": null
            }
          ],
          "examples": [
            {
              "descriptionContainsMarkdown": false,
              "path": "/payments/:id/resume",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "resumeToken": "string"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "string",
                "date": "2023-01-01T00:00:00Z",
                "status": "PENDING",
                "orderId": "string",
                "currencyCode": "string",
                "amount": 0,
                "order": {
                  "lineItems": [
                    {
                      "itemId": "string",
                      "description": "string",
                      "amount": 0,
                      "quantity": 0,
                      "discountAmount": 0,
                      "taxAmount": 0,
                      "taxCode": "string",
                      "productType": "PHYSICAL"
                    }
                  ],
                  "countryCode": "AW",
                  "fees": [
                    {
                      "amount": 0,
                      "type": "string",
                      "description": "string"
                    }
                  ],
                  "shipping": {
                    "amount": 0
                  }
                },
                "customerId": "string",
                "customer": {
                  "emailAddress": "string",
                  "mobileNumber": "string",
                  "firstName": "string",
                  "lastName": "string",
                  "billingAddress": {
                    "firstName": "string",
                    "lastName": "string",
                    "addressLine1": "string",
                    "addressLine2": "string",
                    "city": "string",
                    "state": "string",
                    "countryCode": "AW",
                    "postalCode": "string"
                  },
                  "shippingAddress": {
                    "firstName": "string",
                    "lastName": "string",
                    "addressLine1": "string",
                    "addressLine2": "string",
                    "city": "string",
                    "state": "string",
                    "countryCode": "AW",
                    "postalCode": "string"
                  },
                  "taxId": "string",
                  "nationalDocumentId": "string"
                },
                "metadata": {
                  "string": {}
                },
                "paymentMethod": {
                  "descriptor": "string",
                  "paymentType": "FIRST_PAYMENT",
                  "paymentMethodToken": "string",
                  "isVaulted": true,
                  "analyticsId": "string",
                  "paymentMethodType": "PAYMENT_CARD",
                  "paymentMethodData": {
                    "first6Digits": "string",
                    "last4Digits": "string",
                    "expirationMonth": "string",
                    "expirationYear": "string",
                    "cardholderName": "string",
                    "network": "string",
                    "isNetworkTokenized": true,
                    "binData": {
                      "network": "AMEX",
                      "issuerCountryCode": "AW",
                      "issuerName": "string",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "DOMESTIC_USE_ONLY",
                      "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                      "accountFundingType": "CREDIT",
                      "prepaidReloadableIndicator": "RELOADABLE",
                      "productUsageType": "CONSUMER",
                      "productCode": "string",
                      "productName": "string"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE",
                    "reasonText": "string",
                    "protocolVersion": "string",
                    "challengeIssued": true
                  }
                },
                "processor": {
                  "name": "string",
                  "processorMerchantId": "string",
                  "amountCaptured": 0,
                  "amountRefunded": 0
                },
                "requiredAction": {
                  "name": "3DS_AUTHENTICATION",
                  "description": "string",
                  "clientToken": "string"
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR",
                  "message": "string"
                },
                "transactions": [
                  {
                    "date": "string",
                    "amount": 0,
                    "currencyCode": "string",
                    "transactionType": "SALE",
                    "processorTransactionId": "string",
                    "processorName": "string",
                    "processorMerchantId": "string",
                    "processorStatus": "PENDING",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR",
                      "message": "string"
                    }
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              }
            },
            {
              "descriptionContainsMarkdown": false,
              "path": "/payments/:id/resume",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "resumeToken": "string"
              },
              "responseStatusCode": 400,
              "responseBody": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              }
            }
          ],
          "description": "<p/>\n\nResume a payment's workflow execution from a paused state. This\nis usually required when a Workflow was paused in order to get further information\nfrom the customer, or when waiting for an asynchronous response from a third\nparty connection.\n",
          "htmlDescription": "<p/>\n\n<p>Resume a payment&#39;s workflow execution from a paused state. This\nis usually required when a Workflow was paused in order to get further information\nfrom the customer, or when waiting for an asynchronous response from a third\nparty connection.</p>\n",
          "authed": true,
          "descriptionContainsMarkdown": true
        },
        {
          "environments": [],
          "availability": null,
          "defaultEnvironment": null,
          "urlSlug": "get-a-payment",
          "method": "GET",
          "id": "getPaymentById",
          "name": "Get a payment",
          "path": {
            "pathParameters": [
              {
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "description": "ID of payment to retrieve."
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/payments/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:PaymentApiResponse"
              }
            }
          },
          "errors": [
            {
              "type": {
                "type": "id",
                "value": "type_:BadRequestErrorResponse"
              },
              "statusCode": 400,
              "description": null
            }
          ],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:BadRequestErrorResponse"
                }
              },
              "statusCode": 400,
              "description": null
            }
          ],
          "examples": [
            {
              "descriptionContainsMarkdown": false,
              "path": "/payments/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "string",
                "date": "2023-01-01T00:00:00Z",
                "status": "PENDING",
                "orderId": "string",
                "currencyCode": "string",
                "amount": 0,
                "order": {
                  "lineItems": [
                    {
                      "itemId": "string",
                      "description": "string",
                      "amount": 0,
                      "quantity": 0,
                      "discountAmount": 0,
                      "taxAmount": 0,
                      "taxCode": "string",
                      "productType": "PHYSICAL"
                    }
                  ],
                  "countryCode": "AW",
                  "fees": [
                    {
                      "amount": 0,
                      "type": "string",
                      "description": "string"
                    }
                  ],
                  "shipping": {
                    "amount": 0
                  }
                },
                "customerId": "string",
                "customer": {
                  "emailAddress": "string",
                  "mobileNumber": "string",
                  "firstName": "string",
                  "lastName": "string",
                  "billingAddress": {
                    "firstName": "string",
                    "lastName": "string",
                    "addressLine1": "string",
                    "addressLine2": "string",
                    "city": "string",
                    "state": "string",
                    "countryCode": "AW",
                    "postalCode": "string"
                  },
                  "shippingAddress": {
                    "firstName": "string",
                    "lastName": "string",
                    "addressLine1": "string",
                    "addressLine2": "string",
                    "city": "string",
                    "state": "string",
                    "countryCode": "AW",
                    "postalCode": "string"
                  },
                  "taxId": "string",
                  "nationalDocumentId": "string"
                },
                "metadata": {
                  "string": {}
                },
                "paymentMethod": {
                  "descriptor": "string",
                  "paymentType": "FIRST_PAYMENT",
                  "paymentMethodToken": "string",
                  "isVaulted": true,
                  "analyticsId": "string",
                  "paymentMethodType": "PAYMENT_CARD",
                  "paymentMethodData": {
                    "first6Digits": "string",
                    "last4Digits": "string",
                    "expirationMonth": "string",
                    "expirationYear": "string",
                    "cardholderName": "string",
                    "network": "string",
                    "isNetworkTokenized": true,
                    "binData": {
                      "network": "AMEX",
                      "issuerCountryCode": "AW",
                      "issuerName": "string",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "DOMESTIC_USE_ONLY",
                      "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                      "accountFundingType": "CREDIT",
                      "prepaidReloadableIndicator": "RELOADABLE",
                      "productUsageType": "CONSUMER",
                      "productCode": "string",
                      "productName": "string"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE",
                    "reasonText": "string",
                    "protocolVersion": "string",
                    "challengeIssued": true
                  }
                },
                "processor": {
                  "name": "string",
                  "processorMerchantId": "string",
                  "amountCaptured": 0,
                  "amountRefunded": 0
                },
                "requiredAction": {
                  "name": "3DS_AUTHENTICATION",
                  "description": "string",
                  "clientToken": "string"
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR",
                  "message": "string"
                },
                "transactions": [
                  {
                    "date": "string",
                    "amount": 0,
                    "currencyCode": "string",
                    "transactionType": "SALE",
                    "processorTransactionId": "string",
                    "processorName": "string",
                    "processorMerchantId": "string",
                    "processorStatus": "PENDING",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR",
                      "message": "string"
                    }
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              }
            },
            {
              "descriptionContainsMarkdown": false,
              "path": "/payments/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 400,
              "responseBody": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              }
            }
          ],
          "description": "<p/>\n\nRetrieve a payment by its ID.\n",
          "htmlDescription": "<p/>\n\n<p>Retrieve a payment by its ID.</p>\n",
          "authed": true,
          "descriptionContainsMarkdown": true
        }
      ],
      "types": [],
      "subpackages": [],
      "pointsTo": null,
      "urlSlug": "payments-api",
      "description": null,
      "webhooks": [],
      "descriptionContainsMarkdown": false
    },
    "subpackage_paymentMethodsApi": {
      "subpackageId": "subpackage_paymentMethodsApi",
      "name": "Payment Methods API",
      "endpoints": [
        {
          "environments": [],
          "availability": null,
          "defaultEnvironment": null,
          "urlSlug": "save-a-payment-method-token",
          "method": "POST",
          "id": "vault_payment_method_payment_methods__token__vault_post",
          "name": "Save a payment method token",
          "path": {
            "pathParameters": [
              {
                "key": "paymentMethodToken",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "description": "Payment method token to store."
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/payment-instruments/"
              },
              {
                "type": "pathParameter",
                "value": "paymentMethodToken"
              },
              {
                "type": "literal",
                "value": "/vault"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "customerId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  },
                  "description": "The ID representing the customer"
                },
                {
                  "key": "verify",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  },
                  "description": "Whether the payment method should be verified before vaulting or not"
                }
              ]
            },
            "descriptionContainsMarkdown": false
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:VerifiedMerchantPaymentMethodTokenApiResponse"
              }
            }
          },
          "errors": [
            {
              "type": {
                "type": "id",
                "value": "type_:BadRequestErrorResponse"
              },
              "statusCode": 400,
              "description": null
            },
            {
              "type": {
                "type": "id",
                "value": "type_:UnprocessableEntityErrorResponse"
              },
              "statusCode": 422,
              "description": null
            }
          ],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:BadRequestErrorResponse"
                }
              },
              "statusCode": 400,
              "description": null
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:UnprocessableEntityErrorResponse"
                }
              },
              "statusCode": 422,
              "description": null
            }
          ],
          "examples": [
            {
              "descriptionContainsMarkdown": false,
              "path": "/payment-instruments/:paymentMethodToken/vault",
              "pathParameters": {
                "paymentMethodToken": ":paymentMethodToken"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "customerId": "string"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "isVerified": true,
                "createdAt": "2023-01-01T00:00:00Z",
                "deletedAt": "2023-01-01T00:00:00Z",
                "deleted": true,
                "token": "string",
                "tokenType": "string",
                "analyticsId": "string",
                "paymentMethodType": "PAYMENT_CARD",
                "paymentMethodData": {
                  "last4Digits": "string",
                  "expirationMonth": "string",
                  "expirationYear": "string",
                  "cardholderName": "string",
                  "network": "string",
                  "networkTransactionId": "string",
                  "accountFundingType": "CREDIT"
                },
                "customerId": "string",
                "description": "string",
                "default": true
              },
              "codeExamples": {
                "nodeAxios": ""
              }
            },
            {
              "descriptionContainsMarkdown": false,
              "path": "/payment-instruments/:paymentMethodToken/vault",
              "pathParameters": {
                "paymentMethodToken": ":paymentMethodToken"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "customerId": "string"
              },
              "responseStatusCode": 400,
              "responseBody": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              }
            },
            {
              "descriptionContainsMarkdown": false,
              "path": "/payment-instruments/:paymentMethodToken/vault",
              "pathParameters": {
                "paymentMethodToken": ":paymentMethodToken"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "customerId": "string"
              },
              "responseStatusCode": 422,
              "responseBody": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              }
            }
          ],
          "description": "<p/>\n\nSave a `SINGLE_USE` payment method token so it can be used\nagain later. You can optionally choose to verify the payment method\nbefore vaulting. If verification fails, no payment method data will\nbe vaulted. Verification can minimise fraud and boost subscription\nrates for recurring payments.\n\nIf you try to vault an already vaulted token, you will get the existing vaulted token back.\n",
          "htmlDescription": "<p/>\n\n<p>Save a <code>SINGLE_USE</code> payment method token so it can be used\nagain later. You can optionally choose to verify the payment method\nbefore vaulting. If verification fails, no payment method data will\nbe vaulted. Verification can minimise fraud and boost subscription\nrates for recurring payments.</p>\n<p>If you try to vault an already vaulted token, you will get the existing vaulted token back.</p>\n",
          "authed": true,
          "descriptionContainsMarkdown": true
        },
        {
          "environments": [],
          "availability": null,
          "defaultEnvironment": null,
          "urlSlug": "list-saved-payment-methods",
          "method": "GET",
          "id": "get_payment_methods_payment_methods_get",
          "name": "List saved payment methods",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/payment-instruments"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "customer_id",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "description": "Return payment methods for this customer ID."
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:VerifiedMerchantPaymentMethodTokenListApiResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "descriptionContainsMarkdown": false,
              "path": "/payment-instruments",
              "pathParameters": {},
              "queryParameters": {
                "customer_id": "string"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "data": [
                  {
                    "isVerified": true,
                    "createdAt": "2023-01-01T00:00:00Z",
                    "deletedAt": "2023-01-01T00:00:00Z",
                    "deleted": true,
                    "token": "string",
                    "tokenType": "string",
                    "analyticsId": "string",
                    "paymentMethodType": "PAYMENT_CARD",
                    "paymentMethodData": {
                      "last4Digits": "string",
                      "expirationMonth": "string",
                      "expirationYear": "string",
                      "cardholderName": "string",
                      "network": "string",
                      "networkTransactionId": "string",
                      "accountFundingType": "CREDIT"
                    },
                    "customerId": "string",
                    "description": "string",
                    "default": true
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              }
            }
          ],
          "description": "Retrieve a list of stored payment methods for a customer.",
          "htmlDescription": "<p>Retrieve a list of stored payment methods for a customer.</p>\n",
          "authed": true,
          "descriptionContainsMarkdown": false
        },
        {
          "environments": [],
          "availability": null,
          "defaultEnvironment": null,
          "urlSlug": "delete-a-saved-payment-method",
          "method": "DELETE",
          "id": "delete_payment_method_payment_methods__token__delete",
          "name": "Delete a saved payment method",
          "path": {
            "pathParameters": [
              {
                "key": "paymentMethodToken",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "description": "Saved payment method token to delete."
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/payment-instruments/"
              },
              {
                "type": "pathParameter",
                "value": "paymentMethodToken"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:VerifiedMerchantPaymentMethodTokenApiResponse"
              }
            }
          },
          "errors": [
            {
              "type": {
                "type": "id",
                "value": "type_:BadRequestErrorResponse"
              },
              "statusCode": 400,
              "description": null
            }
          ],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:BadRequestErrorResponse"
                }
              },
              "statusCode": 400,
              "description": null
            }
          ],
          "examples": [
            {
              "descriptionContainsMarkdown": false,
              "path": "/payment-instruments/:paymentMethodToken",
              "pathParameters": {
                "paymentMethodToken": ":paymentMethodToken"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "isVerified": true,
                "createdAt": "2023-01-01T00:00:00Z",
                "deletedAt": "2023-01-01T00:00:00Z",
                "deleted": true,
                "token": "string",
                "tokenType": "string",
                "analyticsId": "string",
                "paymentMethodType": "PAYMENT_CARD",
                "paymentMethodData": {
                  "last4Digits": "string",
                  "expirationMonth": "string",
                  "expirationYear": "string",
                  "cardholderName": "string",
                  "network": "string",
                  "networkTransactionId": "string",
                  "accountFundingType": "CREDIT"
                },
                "customerId": "string",
                "description": "string",
                "default": true
              },
              "codeExamples": {
                "nodeAxios": ""
              }
            },
            {
              "descriptionContainsMarkdown": false,
              "path": "/payment-instruments/:paymentMethodToken",
              "pathParameters": {
                "paymentMethodToken": ":paymentMethodToken"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 400,
              "responseBody": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              }
            }
          ],
          "description": "Delete a saved payment method.",
          "htmlDescription": "<p>Delete a saved payment method.</p>\n",
          "authed": true,
          "descriptionContainsMarkdown": false
        },
        {
          "environments": [],
          "availability": null,
          "defaultEnvironment": null,
          "urlSlug": "update-the-default-saved-payment-method",
          "method": "POST",
          "id": "set_payment_method_default_payment_methods__token__default_post",
          "name": "Update the default saved payment method",
          "path": {
            "pathParameters": [
              {
                "key": "paymentMethodToken",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "description": "Saved payment method token to set to default."
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/payment-instruments/"
              },
              {
                "type": "pathParameter",
                "value": "paymentMethodToken"
              },
              {
                "type": "literal",
                "value": "/default"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:MerchantPaymentMethodTokenApiResponse"
              }
            }
          },
          "errors": [
            {
              "type": {
                "type": "id",
                "value": "type_:BadRequestErrorResponse"
              },
              "statusCode": 400,
              "description": null
            }
          ],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:BadRequestErrorResponse"
                }
              },
              "statusCode": 400,
              "description": null
            }
          ],
          "examples": [
            {
              "descriptionContainsMarkdown": false,
              "path": "/payment-instruments/:paymentMethodToken/default",
              "pathParameters": {
                "paymentMethodToken": ":paymentMethodToken"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "createdAt": "2023-01-01T00:00:00Z",
                "deletedAt": "2023-01-01T00:00:00Z",
                "deleted": true,
                "token": "string",
                "tokenType": "string",
                "analyticsId": "string",
                "paymentMethodType": "PAYMENT_CARD",
                "paymentMethodData": {
                  "last4Digits": "string",
                  "expirationMonth": "string",
                  "expirationYear": "string",
                  "cardholderName": "string",
                  "network": "string",
                  "networkTransactionId": "string",
                  "accountFundingType": "CREDIT"
                },
                "customerId": "string",
                "description": "string",
                "default": true
              },
              "codeExamples": {
                "nodeAxios": ""
              }
            },
            {
              "descriptionContainsMarkdown": false,
              "path": "/payment-instruments/:paymentMethodToken/default",
              "pathParameters": {
                "paymentMethodToken": ":paymentMethodToken"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 400,
              "responseBody": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              }
            }
          ],
          "description": "Update a saved payment method to be the default stored payment method for a customer.",
          "htmlDescription": "<p>Update a saved payment method to be the default stored payment method for a customer.</p>\n",
          "authed": true,
          "descriptionContainsMarkdown": false
        }
      ],
      "types": [],
      "subpackages": [],
      "pointsTo": null,
      "urlSlug": "payment-methods-api",
      "description": null,
      "webhooks": [],
      "descriptionContainsMarkdown": false
    }
  },
  "auth": {
    "type": "header",
    "headerWireValue": "X-API-KEY",
    "nameOverride": "apiKey"
  },
  "hasMultipleBaseUrls": false
}
