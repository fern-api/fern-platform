{
  "algoliaSearchIndex": "primer.docs.buildwithfern.com_629977af-5710-4b90-839a-f16a8b21d52f",
  "config": {
    "navigation": {
      "versions": [
        {
          "urlSlug": "v2.2",
          "availability": "Stable",
          "version": "v2.2",
          "config": {
            "items": [
              {
                "type": "section",
                "title": "Introduction",
                "urlSlug": "introduction",
                "collapsed": false,
                "items": [
                  {
                    "type": "page",
                    "id": "introduction/getting-started.md",
                    "title": "Getting Started",
                    "urlSlug": "getting-started"
                  },
                  {
                    "type": "page",
                    "id": "introduction/authentication.md",
                    "title": "Authentication",
                    "urlSlug": "authentication"
                  },
                  {
                    "type": "page",
                    "id": "introduction/responses.md",
                    "title": "API Responses",
                    "urlSlug": "api-responses"
                  },
                  {
                    "type": "page",
                    "id": "introduction/idempotency-key.md",
                    "title": "Idempotency Key",
                    "urlSlug": "idempotency-key"
                  },
                  {
                    "type": "page",
                    "id": "introduction/loyalty-transactions.md",
                    "title": "Loyalty Transactions",
                    "urlSlug": "loyalty-transactions"
                  }
                ],
                "skipUrlSlug": false
              },
              {
                "type": "section",
                "title": "Changelog",
                "urlSlug": "changelog",
                "collapsed": true,
                "items": [
                  {
                    "type": "page",
                    "id": "changelog/migration-guide.md",
                    "title": "API Migration Guide",
                    "urlSlug": "api-migration-guide"
                  },
                  {
                    "type": "page",
                    "id": "changelog/api-v22.md",
                    "title": "API v2.2",
                    "urlSlug": "api-v-2-2"
                  },
                  {
                    "type": "page",
                    "id": "changelog/api-v21.md",
                    "title": "API v2.1",
                    "urlSlug": "api-v-2-1"
                  },
                  {
                    "type": "page",
                    "id": "changelog/api-v2.md",
                    "title": "API v2",
                    "urlSlug": "api-v-2"
                  }
                ],
                "skipUrlSlug": false
              },
              {
                "type": "api",
                "title": "API Reference",
                "api": "d0eefb20-05d3-41e0-af7a-29afd2b1694e",
                "showErrors": true,
                "urlSlug": "api-reference",
                "skipUrlSlug": false
              },
              {
                "type": "api",
                "title": "Webhooks",
                "api": "67c83aa4-e686-4f16-b02d-4c27a6e92f91",
                "showErrors": false,
                "urlSlug": "webhooks",
                "skipUrlSlug": false
              }
            ]
          }
        },
        {
          "urlSlug": "v2.1",
          "availability": null,
          "version": "v2.1",
          "config": {
            "items": [
              {
                "type": "section",
                "title": "Introduction",
                "urlSlug": "introduction",
                "collapsed": false,
                "items": [
                  {
                    "type": "page",
                    "id": "introduction/getting-started.md",
                    "title": "Getting Started",
                    "urlSlug": "getting-started"
                  },
                  {
                    "type": "page",
                    "id": "introduction/authentication.md",
                    "title": "Authentication",
                    "urlSlug": "authentication"
                  },
                  {
                    "type": "page",
                    "id": "introduction/responses.md",
                    "title": "API Responses",
                    "urlSlug": "api-responses"
                  },
                  {
                    "type": "page",
                    "id": "introduction/idempotency-key.md",
                    "title": "Idempotency Key",
                    "urlSlug": "idempotency-key"
                  },
                  {
                    "type": "page",
                    "id": "introduction/loyalty-transactions.md",
                    "title": "Loyalty Transactions",
                    "urlSlug": "loyalty-transactions"
                  }
                ],
                "skipUrlSlug": false
              },
              {
                "type": "api",
                "title": "Primer API",
                "api": "73803ef9-1d14-46c9-9c0b-ece23481f286",
                "showErrors": true,
                "urlSlug": "primer-api",
                "skipUrlSlug": false
              }
            ]
          }
        },
        {
          "urlSlug": "v2",
          "availability": null,
          "version": "v2",
          "config": {
            "items": [
              {
                "type": "section",
                "title": "Introduction",
                "urlSlug": "introduction",
                "collapsed": false,
                "items": [
                  {
                    "type": "page",
                    "id": "introduction/getting-started.md",
                    "title": "Getting Started",
                    "urlSlug": "getting-started"
                  },
                  {
                    "type": "page",
                    "id": "introduction/authentication.md",
                    "title": "Authentication",
                    "urlSlug": "authentication"
                  },
                  {
                    "type": "page",
                    "id": "introduction/responses.md",
                    "title": "API Responses",
                    "urlSlug": "api-responses"
                  },
                  {
                    "type": "page",
                    "id": "introduction/idempotency-key.md",
                    "title": "Idempotency Key",
                    "urlSlug": "idempotency-key"
                  },
                  {
                    "type": "page",
                    "id": "introduction/loyalty-transactions.md",
                    "title": "Loyalty Transactions",
                    "urlSlug": "loyalty-transactions"
                  }
                ],
                "skipUrlSlug": false
              },
              {
                "type": "api",
                "title": "Primer API",
                "api": "95ddda06-15e0-44ae-8e19-3131ee929616",
                "showErrors": true,
                "urlSlug": "primer-api",
                "skipUrlSlug": false
              }
            ]
          }
        }
      ]
    },
    "logoV2": {
      "dark": null,
      "light": "22cb155c-f785-4cc0-9bf8-4189100247aa"
    },
    "logoHeight": 24,
    "logoHref": "https://primer.io",
    "colorsV2": {
      "accentPrimary": {
        "type": "themed",
        "dark": null,
        "light": {
          "r": 224,
          "g": 99,
          "b": 76
        }
      },
      "background": {
        "type": "themed",
        "dark": null,
        "light": {
          "r": 255,
          "g": 255,
          "b": 255
        }
      }
    },
    "colorsV3": {
      "type": "light",
      "accentPrimary": {
        "r": 224,
        "g": 99,
        "b": 76
      },
      "background": {
        "type": "solid",
        "r": 255,
        "g": 255,
        "b": 255
      },
      "logo": "22cb155c-f785-4cc0-9bf8-4189100247aa"
    },
    "navbarLinks": [
      {
        "type": "secondary",
        "text": "Postman",
        "url": "https://www.postman.com/fern-api/workspace/fern-primer"
      },
      {
        "type": "secondary",
        "text": "Blog",
        "url": "https://primer.io/blog"
      },
      {
        "type": "secondary",
        "text": "Community",
        "url": "https://bit.ly/3f5vvJ2"
      },
      {
        "type": "primary",
        "text": "Log In",
        "url": "https://dash.readme.com/to/primerapi"
      }
    ],
    "title": "Primer | API Reference",
    "favicon": "1cab403a-f25b-4425-a4e8-1e3617c94eab",
    "backgroundImage": null,
    "typography": {
      "headingsFont": {
        "name": "font:headings:219d4fa0-5c92-45c8-8914-6a28af639477",
        "fontFile": "219d4fa0-5c92-45c8-8914-6a28af639477"
      },
      "bodyFont": {
        "name": "font:body:af4ad780-06f3-4e34-8405-115bd0e16445",
        "fontFile": "af4ad780-06f3-4e34-8405-115bd0e16445"
      },
      "codeFont": {
        "name": "font:code:872ac0af-ac51-4894-a284-6d9337583e46",
        "fontFile": "872ac0af-ac51-4894-a284-6d9337583e46"
      }
    }
  },
  "apis": {
    "73803ef9-1d14-46c9-9c0b-ece23481f286": {
      "id": "73803ef9-1d14-46c9-9c0b-ece23481f286",
      "rootPackage": {
        "endpoints": [],
        "subpackages": ["subpackage_clientSessionApi", "subpackage_paymentsApi", "subpackage_paymentMethodsApi"],
        "types": [
          "type_:ClientSessionApiRequest",
          "type_:ClientSessionUpdateApiRequest",
          "type_:PaymentCaptureApiRequest",
          "type_:PaymentCancelApiRequest",
          "type_:PaymentRefundApiRequest",
          "type_:AccountFundingTypeEnum",
          "type_:ApayaCustomerTokenApiSchema",
          "type_:BinDataOptionalApiSchema",
          "type_:BinDataApiSchema",
          "type_:BlockingPaymentActionTypeEnum",
          "type_:CardAccountNumberTypeEnum",
          "type_:CardNetworkEnum",
          "type_:CardProductTypeEnum",
          "type_:CardRegionRestrictionEnum",
          "type_:OrderDetailsApiSchema",
          "type_:OrderFeesApiSchema",
          "type_:OrderLineItemsApiSchema",
          "type_:OrderShippingApiSchema",
          "type_:CheckoutPaymentMethodOptionsApiSchema",
          "type_:CheckoutPaymentMethodOptionsApiSchemaOptions",
          "type_:CheckoutPaymentMethodOptionApiSchema",
          "type_:CheckoutPaymentMethodCardOptionApiSchema",
          "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema",
          "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
          "type_:CheckoutPaymentMethodOptionSurchargeApiSchema",
          "type_:PaymentRequestPaymentMethodOptionsApiSchema",
          "type_:PaymentResponsePaymentMethodOptionsApiSchema",
          "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData",
          "type_:CheckoutCustomerDetailsApiSchema",
          "type_:CustomerDetailsApiSchema",
          "type_:ClientSessionWithTokenApiResponse",
          "type_:ClientSessionApiResponse",
          "type_:ClientSessionWarningsApiResponse",
          "type_:CountryCodeEnum",
          "type_:Currency",
          "type_:PaymentResponseProcessorApiSchema",
          "type_:GoCardlessMandateApiSchema",
          "type_:IdealPayNlTokenApiSchema",
          "type_:KlarnaAddressApiSchema",
          "type_:KlarnaCustomerTokenApiSchema",
          "type_:KlarnaPaymentSessionApiSchema",
          "type_:KlarnaSessionDetailsApiSchema",
          "type_:KlarnaTokenDetails",
          "type_:PayPalBillingAgreementApiSchema",
          "type_:PayPalExternalPayerInfoApiSchema",
          "type_:PayPalOrderTokenApiSchema",
          "type_:PaymentApiResponse",
          "type_:PaymentCardTokenApiSchema",
          "type_:StatusReasonApiSchema",
          "type_:PaymentMethodTypeEnum",
          "type_:PaymentListApiResponse",
          "type_:PaymentRequiredActionApiSchema",
          "type_:PaymentSummaryApiSchema",
          "type_:PaymentSummaryProcessorApiSchema",
          "type_:PrepaidReloadableEnum",
          "type_:RecurringTransactionTypeEnum",
          "type_:RecurringPaymentTypeSchema",
          "type_:ProductTypeEnum",
          "type_:ThreeDSecureAuthResponseCodeEnum",
          "type_:ThreeDSecureAuthenticationApiSchema",
          "type_:ThreeDSecureAuthenticationApiSchemaReasonCode",
          "type_:ThreeDSecureFailedReasonCodeEnum",
          "type_:ThreeDSecureSkippedReasonCodeEnum",
          "type_:TokenTypeEnum",
          "type_:DeclineTypeEnum",
          "type_:TransactionDeclineReasonV2Enum",
          "type_:TransactionOverviewApiSchema",
          "type_:PaymentStatus",
          "type_:PaymentStatusTypeEnum",
          "type_:TransactionTypeEnum",
          "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema",
          "type_:AddressApiSchema",
          "type_:MerchantPaymentMethodTokenApiResponse",
          "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData",
          "type_:VerifiedMerchantPaymentMethodTokenApiResponse",
          "type_:MerchantPaymentMethodTokenListApiResponse",
          "type_:VerifiedMerchantPaymentMethodTokenListApiResponse",
          "type_:PaymentCardTokenApiSchemaPaymentMethodsApi",
          "type_:ErrorObject",
          "type_:BadRequestErrorResponse",
          "type_:UnprocessableEntityErrorResponse"
        ],
        "webhooks": []
      },
      "types": {
        "type_:ClientSessionApiRequest": {
          "description": null,
          "name": "ClientSessionApiRequest",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Your reference for the payment.",
                "htmlDescription": "<p>Your reference for the payment.</p>\n",
                "key": "orderId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
                "htmlDescription": "<p>The 3-letter currency code in <a href=\"https://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 format</a>.\ne.g. use <code>USD</code> for US dollars.</p>\n",
                "key": "currencyCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts.",
                "htmlDescription": "<p>The amount you would like to charge the customer, in minor units. e.g. for $7, use <code>700</code>.</p>\n<p>Some currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use <code>100</code>.</p>\n<p>If the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "More information associated with the order.",
                "htmlDescription": "<p>More information associated with the order.</p>\n",
                "key": "order",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:OrderDetailsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "A unique identifier for your customer.\nCreate a client session token with a `customerId` to enable the client-side SDK to retrieve and manage your customer's saved payment methods. A client session token also enables saving payment methods against this customer id.",
                "htmlDescription": "<p>A unique identifier for your customer.\nCreate a client session token with a <code>customerId</code> to enable the client-side SDK to retrieve and manage your customer&#39;s saved payment methods. A client session token also enables saving payment methods against this customer id.</p>\n",
                "key": "customerId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "More information associated with the customer.",
                "htmlDescription": "<p>More information associated with the customer.</p>\n",
                "key": "customer",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutCustomerDetailsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`\n",
                "htmlDescription": "<p>Additional data to be used throughout the payment lifecycle.</p>\n<p>A dictionary of key-value pairs where the values can only be strings or\nintegers.</p>\n<p>e.g. <code>{&quot;productId&quot;: 1001, &quot;merchantId&quot;: &quot;a13bsd62s&quot;}</code></p>\n",
                "key": "metadata",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "unknown"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "Enable certain options associated with the payment method.",
                "htmlDescription": "<p>Enable certain options associated with the payment method.</p>\n",
                "key": "paymentMethod",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ClientSessionUpdateApiRequest": {
          "description": null,
          "name": "ClientSessionUpdateApiRequest",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Client token for use in the Primer-JS SDK obtained via `POST` /client-session API call.",
                "htmlDescription": "<p>Client token for use in the Primer-JS SDK obtained via <code>POST</code> /client-session API call.</p>\n",
                "key": "clientToken",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "A unique identifier for your customer.",
                "htmlDescription": "<p>A unique identifier for your customer.</p>\n",
                "key": "customerId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Your reference for the order.",
                "htmlDescription": "<p>Your reference for the order.</p>\n",
                "key": "orderId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "\nThe 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
                "htmlDescription": "<p>The 3-letter currency code in <a href=\"https://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 format</a>.\ne.g. use <code>USD</code> for US dollars.</p>\n",
                "key": "currencyCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts.",
                "htmlDescription": "<p>The amount you would like to charge the customer, in minor units. e.g. for $7, use <code>700</code>.</p>\n<p>Some currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use <code>100</code>.</p>\n<p>If the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "Additional data to be used throughout the payment lifecycle.\n\nProvide the entire object to update it. Anything provided previously will be overwritten.\n",
                "htmlDescription": "<p>Additional data to be used throughout the payment lifecycle.</p>\n<p>Provide the entire object to update it. Anything provided previously will be overwritten.</p>\n",
                "key": "metadata",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "unknown"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "More information associated with the customer.\n\nEach of the fields in this object must be updated in its entirety, i.e. provide the entire object to update it. Anything provided previously will be overwritten.\n",
                "htmlDescription": "<p>More information associated with the customer.</p>\n<p>Each of the fields in this object must be updated in its entirety, i.e. provide the entire object to update it. Anything provided previously will be overwritten.</p>\n",
                "key": "customer",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutCustomerDetailsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "More information associated with the order.\n\nEach of the fields in this object must be updated in its entirety, i.e. provide the entire object to update it. Anything provided previously will be overwritten.\n",
                "htmlDescription": "<p>More information associated with the order.</p>\n<p>Each of the fields in this object must be updated in its entirety, i.e. provide the entire object to update it. Anything provided previously will be overwritten.</p>\n",
                "key": "order",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:OrderDetailsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Enable certain options associated with the payment method. Provide the entire object to update it. Anything provided previously will be overwritten.",
                "htmlDescription": "<p>Enable certain options associated with the payment method. Provide the entire object to update it. Anything provided previously will be overwritten.</p>\n",
                "key": "paymentMethod",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentCaptureApiRequest": {
          "description": null,
          "name": "PaymentCaptureApiRequest",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The amount you would like to capture, in minor units. The currency used on authorization is assumed.\n\nIf no amount is specified it defaults to the full amount.",
                "htmlDescription": "<p>The amount you would like to capture, in minor units. The currency used on authorization is assumed.</p>\n<p>If no amount is specified it defaults to the full amount.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Indicates whether the capture request is the final capture request.\n\nAfter a final capture, no subsequent captures are allowed.",
                "htmlDescription": "<p>Indicates whether the capture request is the final capture request.</p>\n<p>After a final capture, no subsequent captures are allowed.</p>\n",
                "key": "final",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Additional payment metadata.\nThis only takes effect if the payment was created via the New Workflows ([read more here](https://primer.io/docs/changelog/migration-guides/new-workflows)).\nA dictionary of key-value pairs where the values can only be strings or integers. Keys  which already exist in the payment metadata will be overwritten.",
                "htmlDescription": "<p>Additional payment metadata.\nThis only takes effect if the payment was created via the New Workflows (<a href=\"https://primer.io/docs/changelog/migration-guides/new-workflows\">read more here</a>).\nA dictionary of key-value pairs where the values can only be strings or integers. Keys  which already exist in the payment metadata will be overwritten.</p>\n",
                "key": "metadata",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "unknown"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentCancelApiRequest": {
          "description": null,
          "name": "PaymentCancelApiRequest",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "You can optionally specify a reason for the cancellation. This is for your own records.",
                "htmlDescription": "<p>You can optionally specify a reason for the cancellation. This is for your own records.</p>\n",
                "key": "reason",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentRefundApiRequest": {
          "description": null,
          "name": "PaymentRefundApiRequest",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The amount you would like to refund the customer, in minor units. e.g. for $7, use `700`.\n\nDefaults to remaining non-refunded amount.",
                "htmlDescription": "<p>The amount you would like to refund the customer, in minor units. e.g. for $7, use <code>700</code>.</p>\n<p>Defaults to remaining non-refunded amount.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "Optionally you can pass a specific order ID for the refund.\n\nBy default this will be set to the original `orderId` given on payment creation.",
                "htmlDescription": "<p>Optionally you can pass a specific order ID for the refund.</p>\n<p>By default this will be set to the original <code>orderId</code> given on payment creation.</p>\n",
                "key": "orderId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "You can optionally specify a reason for the refund. This is for your own records.",
                "htmlDescription": "<p>You can optionally specify a reason for the refund. This is for your own records.</p>\n",
                "key": "reason",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:AccountFundingTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "AccountFundingTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "CREDIT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DEBIT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PREPAID",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CHARGE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DEFERRED_DEBIT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNKNOWN",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ApayaCustomerTokenApiSchema": {
          "description": null,
          "name": "ApayaCustomerTokenApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "mx",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "mnc",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "mcc",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:BinDataOptionalApiSchema": {
          "description": null,
          "name": "BinDataOptionalApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "network",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CardNetworkEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:BinDataApiSchema": {
          "description": null,
          "name": "BinDataApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "network",
                "valueType": {
                  "type": "id",
                  "value": "type_:CardNetworkEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "issuerCountryCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CountryCodeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "issuerName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "issuerCurrencyCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:Currency"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "regionalRestriction",
                "valueType": {
                  "type": "id",
                  "value": "type_:CardRegionRestrictionEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "accountNumberType",
                "valueType": {
                  "type": "id",
                  "value": "type_:CardAccountNumberTypeEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "accountFundingType",
                "valueType": {
                  "type": "id",
                  "value": "type_:AccountFundingTypeEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "prepaidReloadableIndicator",
                "valueType": {
                  "type": "id",
                  "value": "type_:PrepaidReloadableEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "productUsageType",
                "valueType": {
                  "type": "id",
                  "value": "type_:CardProductTypeEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "productCode",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "productName",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:BlockingPaymentActionTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "BlockingPaymentActionTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "3DS_AUTHENTICATION",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "USE_PRIMER_SDK",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CardAccountNumberTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "CardAccountNumberTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "PRIMARY_ACCOUNT_NUMBER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NETWORK_TOKEN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNKNOWN",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CardNetworkEnum": {
          "description": "The list of available card networks.\n",
          "htmlDescription": "<p>The list of available card networks.</p>\n",
          "name": "CardNetworkEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "AMEX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DANKORT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DINERS_CLUB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DISCOVER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ENROUTE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ELO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HIPER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "INTERAC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JCB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MAESTRO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MASTERCARD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MIR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PRIVATE_LABEL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNIONPAY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VISA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "OTHER",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CardProductTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "CardProductTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "CONSUMER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BUSINESS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GOVERNMENT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNKNOWN",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CardRegionRestrictionEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "CardRegionRestrictionEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "DOMESTIC_USE_ONLY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NONE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNKNOWN",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:OrderDetailsApiSchema": {
          "description": null,
          "name": "OrderDetailsApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The details of the line items of the order.",
                "htmlDescription": "<p>The details of the line items of the order.</p>\n",
                "key": "lineItems",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OrderLineItemsApiSchema"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The country in which the order is created",
                "htmlDescription": "<p>The country in which the order is created</p>\n",
                "key": "countryCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CountryCodeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The details of fees charged.",
                "htmlDescription": "<p>The details of fees charged.</p>\n",
                "key": "fees",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OrderFeesApiSchema"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The details of shipping charged.",
                "htmlDescription": "<p>The details of shipping charged.</p>\n",
                "key": "shipping",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:OrderShippingApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:OrderFeesApiSchema": {
          "description": null,
          "name": "OrderFeesApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The fee amount charged to the customer, in minor  units. e.g. for $7, use `700`.",
                "htmlDescription": "<p>The fee amount charged to the customer, in minor  units. e.g. for $7, use <code>700</code>.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "The type of fee.",
                "htmlDescription": "<p>The type of fee.</p>\n",
                "key": "type",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "A description of the fee, e.g. \"Currency Conversion Fee\".",
                "htmlDescription": "<p>A description of the fee, e.g. &quot;Currency Conversion Fee&quot;.</p>\n",
                "key": "description",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:OrderLineItemsApiSchema": {
          "description": "The details of the line items of the order.\n\nThe total amount of a line item is calculated like so: \n````\n  totalAmount = (amount * quantity) - discountAmount + taxAmount\n```\n",
          "htmlDescription": "<p>The details of the line items of the order.</p>\n<p>The total amount of a line item is calculated like so: </p>\n<pre><code>  totalAmount = (amount * quantity) - discountAmount + taxAmount\n```\n</code></pre>\n",
          "name": "OrderLineItemsApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "A unique identifier for the line item.",
                "htmlDescription": "<p>A unique identifier for the line item.</p>\n",
                "key": "itemId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "A description of the item.",
                "htmlDescription": "<p>A description of the item.</p>\n",
                "key": "description",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The amount charged to the customer, in minor units. The minimum amount is 0.",
                "htmlDescription": "<p>The amount charged to the customer, in minor units. The minimum amount is 0.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The number of the particular line item that is being ordered.",
                "htmlDescription": "<p>The number of the particular line item that is being ordered.</p>\n",
                "key": "quantity",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Any discount applicable to this item, in minor units. This discount is applied for the entire line item, and not per `quantity`.",
                "htmlDescription": "<p>Any discount applicable to this item, in minor units. This discount is applied for the entire line item, and not per <code>quantity</code>.</p>\n",
                "key": "discountAmount",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "The tax charged on this item, in minor units. This tax amount is applied for the entire line item, and not per `quantity`.",
                "htmlDescription": "<p>The tax charged on this item, in minor units. This tax amount is applied for the entire line item, and not per <code>quantity</code>.</p>\n",
                "key": "taxAmount",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The tax code associated with this item, in minor units. This is required for Primer-initiated tax calculations.",
                "htmlDescription": "<p>The tax code associated with this item, in minor units. This is required for Primer-initiated tax calculations.</p>\n",
                "key": "taxCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "An identifier for the product type.",
                "htmlDescription": "<p>An identifier for the product type.</p>\n",
                "key": "productType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:ProductTypeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": true
        },
        "type_:OrderShippingApiSchema": {
          "description": null,
          "name": "OrderShippingApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The shipping amount charged to the customer, in minor units. e.g. for $7, use `700`.",
                "htmlDescription": "<p>The shipping amount charged to the customer, in minor units. e.g. for $7, use <code>700</code>.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CheckoutPaymentMethodOptionsApiSchema": {
          "description": null,
          "name": "CheckoutPaymentMethodOptionsApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Whether the payment method should be vaulted on a successful payment or not.",
                "htmlDescription": "<p>Whether the payment method should be vaulted on a successful payment or not.</p>\n",
                "key": "vaultOnSuccess",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "A description of the payment, as it would typically appear on a bank statement.",
                "htmlDescription": "<p>A description of the payment, as it would typically appear on a bank statement.</p>\n",
                "key": "descriptor",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "paymentType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:RecurringPaymentTypeSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Additional options for the payment methods represented as dictionary \nwith key of [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) and value of corresponding options.\n",
                "htmlDescription": "<p>Additional options for the payment methods represented as dictionary \nwith key of <a href=\"https://primer.io/docs/payment-methods/available-payment-methods\">available payment methods</a> and value of corresponding options.</p>\n",
                "key": "options",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionsApiSchemaOptions"
                  }
                },
                "descriptionContainsMarkdown": true
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CheckoutPaymentMethodOptionsApiSchemaOptions": {
          "description": "Additional options for the payment methods represented as dictionary \nwith key of [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) and value of corresponding options.\n",
          "htmlDescription": "<p>Additional options for the payment methods represented as dictionary \nwith key of <a href=\"https://primer.io/docs/payment-methods/available-payment-methods\">available payment methods</a> and value of corresponding options.</p>\n",
          "name": "CheckoutPaymentMethodOptionsApiSchemaOptions",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "<PAYMENT_METHOD_TYPE>",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "PAYMENT_CARD",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodCardOptionApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": true
        },
        "type_:CheckoutPaymentMethodOptionApiSchema": {
          "description": "Options for the payment method of type `PAYMENT_METHOD_TYPE`.\n",
          "htmlDescription": "<p>Options for the payment method of type <code>PAYMENT_METHOD_TYPE</code>.</p>\n",
          "name": "CheckoutPaymentMethodOptionApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Surcharge information",
                "htmlDescription": "<p>Surcharge information</p>\n",
                "key": "surcharge",
                "valueType": {
                  "type": "id",
                  "value": "type_:CheckoutPaymentMethodOptionSurchargeApiSchema"
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": true
        },
        "type_:CheckoutPaymentMethodCardOptionApiSchema": {
          "description": null,
          "name": "CheckoutPaymentMethodCardOptionApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Dictionary of available card networks as a key with value of Payment Method Card Network Option.",
                "htmlDescription": "<p>Dictionary of available card networks as a key with value of Payment Method Card Network Option.</p>\n",
                "key": "networks",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema": {
          "description": null,
          "name": "CheckoutPaymentMethodOptionCardNetworkApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "AMEX",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "DANKORT",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "DINERS_CLUB",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "DISCOVER",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "ENROUTE",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "ELO",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "HIPER",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "INTERAC",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "JCB",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "MAESTRO",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "MASTERCARD",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "MIR",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "PRIVATE_LABEL",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "UNIONPAY",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "VISA",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "OTHER",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema": {
          "description": null,
          "name": "CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Surcharge information",
                "htmlDescription": "<p>Surcharge information</p>\n",
                "key": "surcharge",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CheckoutPaymentMethodOptionSurchargeApiSchema": {
          "description": null,
          "name": "CheckoutPaymentMethodOptionSurchargeApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The surcharge amount, in minor units. Surcharge amount must be used in conjunction with line item amounts, if a top level amount is passed then surcharge will not be calculated.",
                "htmlDescription": "<p>The surcharge amount, in minor units. Surcharge amount must be used in conjunction with line item amounts, if a top level amount is passed then surcharge will not be calculated.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentRequestPaymentMethodOptionsApiSchema": {
          "description": null,
          "name": "PaymentRequestPaymentMethodOptionsApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Whether the payment method should be vaulted on a successful payment or not.",
                "htmlDescription": "<p>Whether the payment method should be vaulted on a successful payment or not.</p>\n",
                "key": "vaultOnSuccess",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "A description of the payment, as it would typically appear on a bank statement.",
                "htmlDescription": "<p>A description of the payment, as it would typically appear on a bank statement.</p>\n",
                "key": "descriptor",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "paymentType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:RecurringPaymentTypeSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentResponsePaymentMethodOptionsApiSchema": {
          "description": null,
          "name": "PaymentResponsePaymentMethodOptionsApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The description of the payment, as it would typically appear on a bank statement.",
                "htmlDescription": "<p>The description of the payment, as it would typically appear on a bank statement.</p>\n",
                "key": "descriptor",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "paymentType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:RecurringPaymentTypeSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The payment method token used to authorize the transaction.",
                "htmlDescription": "<p>The payment method token used to authorize the transaction.</p>\n",
                "key": "paymentMethodToken",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Whether the payment method token represents a vaulted payment method and can be used for future payments.",
                "htmlDescription": "<p>Whether the payment method token represents a vaulted payment method and can be used for future payments.</p>\n",
                "key": "isVaulted",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Unique analytics identifier corresponding to a payment method",
                "htmlDescription": "<p>Unique analytics identifier corresponding to a payment method</p>\n",
                "key": "analyticsId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Payment method type",
                "htmlDescription": "<p>Payment method type</p>\n",
                "key": "paymentMethodType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentMethodTypeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Payment method data",
                "htmlDescription": "<p>Payment method data</p>\n",
                "key": "paymentMethodData",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "threeDSecureAuthentication",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:ThreeDSecureAuthenticationApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData": {
          "description": "Payment method data",
          "htmlDescription": "<p>Payment method data</p>\n",
          "name": "PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData",
          "shape": {
            "type": "undiscriminatedUnion",
            "variants": [
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:PaymentCardTokenApiSchema"
                },
                "displayName": "Payment Card Token Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:PayPalOrderTokenApiSchema"
                },
                "displayName": "Pay Pal Order Token Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:PayPalBillingAgreementApiSchema"
                },
                "displayName": "Pay Pal Billing Agreement Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:GoCardlessMandateApiSchema"
                },
                "displayName": "Go Cardless Mandate Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:KlarnaPaymentSessionApiSchema"
                },
                "displayName": "Klarna Payment Session Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:KlarnaCustomerTokenApiSchema"
                },
                "displayName": "Klarna Customer Token Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:IdealPayNlTokenApiSchema"
                },
                "displayName": "Ideal Pay Nl Token Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:ApayaCustomerTokenApiSchema"
                },
                "displayName": "Apaya Customer Token Api Schema",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CheckoutCustomerDetailsApiSchema": {
          "description": null,
          "name": "CheckoutCustomerDetailsApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Customer email address.\n",
                "htmlDescription": "<p>Customer email address.</p>\n",
                "key": "emailAddress",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The customer's mobile number",
                "htmlDescription": "<p>The customer&#39;s mobile number</p>\n",
                "key": "mobileNumber",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The customer's first name",
                "htmlDescription": "<p>The customer&#39;s first name</p>\n",
                "key": "firstName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The customer's last name",
                "htmlDescription": "<p>The customer&#39;s last name</p>\n",
                "key": "lastName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Customer billing address.\n",
                "htmlDescription": "<p>Customer billing address.</p>\n",
                "key": "billingAddress",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Customer shipping address",
                "htmlDescription": "<p>Customer shipping address</p>\n",
                "key": "shippingAddress",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The customer's tax id number for tax exemptions",
                "htmlDescription": "<p>The customer&#39;s tax id number for tax exemptions</p>\n",
                "key": "taxId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The customer's national identification number",
                "htmlDescription": "<p>The customer&#39;s national identification number</p>\n",
                "key": "nationalDocumentId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CustomerDetailsApiSchema": {
          "description": null,
          "name": "CustomerDetailsApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Customer email address.\n\nNote: It is recommended to include this field if a 3DS check will be performed\n",
                "htmlDescription": "<p>Customer email address.</p>\n<p>Note: It is recommended to include this field if a 3DS check will be performed</p>\n",
                "key": "emailAddress",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The customer's mobile number",
                "htmlDescription": "<p>The customer&#39;s mobile number</p>\n",
                "key": "mobileNumber",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The customer's first name",
                "htmlDescription": "<p>The customer&#39;s first name</p>\n",
                "key": "firstName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The customer's last name",
                "htmlDescription": "<p>The customer&#39;s last name</p>\n",
                "key": "lastName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Customer billing address.\n\nNote: It is recommended to include this field if a 3DS check will be performed\n",
                "htmlDescription": "<p>Customer billing address.</p>\n<p>Note: It is recommended to include this field if a 3DS check will be performed</p>\n",
                "key": "billingAddress",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Customer shipping address",
                "htmlDescription": "<p>Customer shipping address</p>\n",
                "key": "shippingAddress",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The customer's tax id number for tax exemptions",
                "htmlDescription": "<p>The customer&#39;s tax id number for tax exemptions</p>\n",
                "key": "taxId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The customer's national identification number",
                "htmlDescription": "<p>The customer&#39;s national identification number</p>\n",
                "key": "nationalDocumentId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ClientSessionWithTokenApiResponse": {
          "description": null,
          "name": "ClientSessionWithTokenApiResponse",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Client token used to initialize the SDK on all platforms.",
                "htmlDescription": "<p>Client token used to initialize the SDK on all platforms.</p>\n",
                "key": "clientToken",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Expiration date & time of the client token (UTC with no timezoneinfo).",
                "htmlDescription": "<p>Expiration date &amp; time of the client token (UTC with no timezoneinfo).</p>\n",
                "key": "clientTokenExpirationDate",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Your reference for the payment.",
                "htmlDescription": "<p>Your reference for the payment.</p>\n",
                "key": "orderId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
                "htmlDescription": "<p>The 3-letter currency code in <a href=\"https://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 format</a>.\ne.g. use <code>USD</code> for US dollars.</p>\n",
                "key": "currencyCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts.",
                "htmlDescription": "<p>The amount you would like to charge the customer, in minor units. e.g. for $7, use <code>700</code>.</p>\n<p>Some currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use <code>100</code>.</p>\n<p>If the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "More information associated with the order.",
                "htmlDescription": "<p>More information associated with the order.</p>\n",
                "key": "order",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:OrderDetailsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "A unique identifier for your customer.",
                "htmlDescription": "<p>A unique identifier for your customer.</p>\n",
                "key": "customerId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "More information associated with the customer.",
                "htmlDescription": "<p>More information associated with the customer.</p>\n",
                "key": "customer",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CustomerDetailsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Additional data to be used throughout the payment lifecycle.\n",
                "htmlDescription": "<p>Additional data to be used throughout the payment lifecycle.</p>\n",
                "key": "metadata",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "unknown"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Enable certain options associated with the payment methods.",
                "htmlDescription": "<p>Enable certain options associated with the payment methods.</p>\n",
                "key": "paymentMethod",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Warning messages to indicate missing information that are required for payment methods, checkout modules and other features; or when third-party services are unavailable.",
                "htmlDescription": "<p>Warning messages to indicate missing information that are required for payment methods, checkout modules and other features; or when third-party services are unavailable.</p>\n",
                "key": "warnings",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:ClientSessionWarningsApiResponse"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ClientSessionApiResponse": {
          "description": null,
          "name": "ClientSessionApiResponse",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "A unique identifier for your customer.",
                "htmlDescription": "<p>A unique identifier for your customer.</p>\n",
                "key": "customerId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Your reference for the payment.",
                "htmlDescription": "<p>Your reference for the payment.</p>\n",
                "key": "orderId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
                "htmlDescription": "<p>The 3-letter currency code in <a href=\"https://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 format</a>.\ne.g. use <code>USD</code> for US dollars.</p>\n",
                "key": "currencyCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "The amount you are going to charge the customer, in minor units. This amount is calculated from the line items, shipping and other amounts provided in the `order`. \nIf a top-level amount is provided, it would override any calculated amount.",
                "htmlDescription": "<p>The amount you are going to charge the customer, in minor units. This amount is calculated from the line items, shipping and other amounts provided in the <code>order</code>. \nIf a top-level amount is provided, it would override any calculated amount.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "Additional data to be used throughout the payment lifecycle.\n",
                "htmlDescription": "<p>Additional data to be used throughout the payment lifecycle.</p>\n",
                "key": "metadata",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "unknown"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "More information associated with the customer.",
                "htmlDescription": "<p>More information associated with the customer.</p>\n",
                "key": "customer",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CustomerDetailsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "More information associated with the order.",
                "htmlDescription": "<p>More information associated with the order.</p>\n",
                "key": "order",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:OrderDetailsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Enable certain options associated with the payment methods.",
                "htmlDescription": "<p>Enable certain options associated with the payment methods.</p>\n",
                "key": "paymentMethod",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ClientSessionWarningsApiResponse": {
          "description": null,
          "name": "ClientSessionWarningsApiResponse",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The type of the connection involved",
                "htmlDescription": "<p>The type of the connection involved</p>\n",
                "key": "type",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "A unique code describing the particular issue",
                "htmlDescription": "<p>A unique code describing the particular issue</p>\n",
                "key": "code",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "More information as to the reason for the warning",
                "htmlDescription": "<p>More information as to the reason for the warning</p>\n",
                "key": "message",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CountryCodeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "CountryCodeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "AW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BJ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DJ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ES",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ET",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FJ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ID",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ML",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ME",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "YT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "OM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "QA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SJ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ST",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TJ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "US",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "WF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "WS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "YE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZW",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:Currency": {
          "description": "Enumerates all supported currencies",
          "htmlDescription": "<p>Enumerates all supported currencies</p>\n",
          "name": "Currency",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "AED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AFN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ALL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AMD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ANG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AOA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ARS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AUD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AWG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AZN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BAM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BBD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BDT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BGN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BHD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BIF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BMD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BND",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BOB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BOV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BRL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BSD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BTN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BWP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BYR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BYN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BZD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CAD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CDF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CHE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CHF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CHW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CLF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CLP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CNY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "COP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "COU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CRC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CUC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CUP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CVE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CZK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DJF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DKK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DOP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DZD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EGP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ERN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ETB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EUR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FJD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FKP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GBP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GEL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GHS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GIP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GMD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GNF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GTQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GYD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HKD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HNL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HRK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HTG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HUF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IDR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ILS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "INR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IQD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IRR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ISK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JMD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JOD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JPY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KES",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KGS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KHR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KMF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KPW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KRW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KWD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KYD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KZT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LAK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LBP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LKR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LRD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LSL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LTL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LVL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LYD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MAD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MDL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MGA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MKD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MMK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MNT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MOP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MRO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MUR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MVR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MWK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MXN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MXV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MYR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MZN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NAD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NGN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NIO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NOK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NPR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NZD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "OMR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PAB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PEN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PGK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PHP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PKR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PLN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PYG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "QAR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RON",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RSD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RUB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RWF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SAR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SBD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SCR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SDG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SEK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SGD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SHP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SLL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SOS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SRD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SSP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "STD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SVC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SYP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SZL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "THB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TJS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TMT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TND",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TOP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TRY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TTD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TWD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TZS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UAH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UGX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "USD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "USN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "USS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UYI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UYU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UZS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VEF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VND",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VUV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "WST",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XAF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XAG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XAU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XBA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XBB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XBC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XBD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XCD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XDR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XFU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XOF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XPD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XPF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XPT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XSU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XTS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XUA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "YER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZAR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZMW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZWL",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentResponseProcessorApiSchema": {
          "description": null,
          "name": "PaymentResponseProcessorApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The payment processor used for this payment.",
                "htmlDescription": "<p>The payment processor used for this payment.</p>\n",
                "key": "name",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The merchant ID registered at the payment processor used for this payment.",
                "htmlDescription": "<p>The merchant ID registered at the payment processor used for this payment.</p>\n",
                "key": "processorMerchantId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "If no capture was performed, this value will be set to `0`.\n\nIf one or more partial captures were performed, this value will be a sum\nof all partial capture amounts.\n",
                "htmlDescription": "<p>If no capture was performed, this value will be set to <code>0</code>.</p>\n<p>If one or more partial captures were performed, this value will be a sum\nof all partial capture amounts.</p>\n",
                "key": "amountCaptured",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "If no refund was performed, this value will be set to `0`.\n\nIf one or more partial refunds were performed, this value will be a sum\nof all partial refund amounts.\n",
                "htmlDescription": "<p>If no refund was performed, this value will be set to <code>0</code>.</p>\n<p>If one or more partial refunds were performed, this value will be a sum\nof all partial refund amounts.</p>\n",
                "key": "amountRefunded",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:GoCardlessMandateApiSchema": {
          "description": null,
          "name": "GoCardlessMandateApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Unique identifier of a GoCardless mandate agreement",
                "htmlDescription": "<p>Unique identifier of a GoCardless mandate agreement</p>\n",
                "key": "gocardlessMandateId",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:IdealPayNlTokenApiSchema": {
          "description": null,
          "name": "IdealPayNlTokenApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "paymentMethodConfigId",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:KlarnaAddressApiSchema": {
          "description": null,
          "name": "KlarnaAddressApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "title",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "firstName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "lastName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "email",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "phoneNumber",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "addressLine1",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "addressLine2",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "addressLine3",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "city",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "state",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "countryCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CountryCodeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "postalCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:KlarnaCustomerTokenApiSchema": {
          "description": null,
          "name": "KlarnaCustomerTokenApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "klarnaCustomerToken",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "sessionData",
                "valueType": {
                  "type": "id",
                  "value": "type_:KlarnaSessionDetailsApiSchema"
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:KlarnaPaymentSessionApiSchema": {
          "description": null,
          "name": "KlarnaPaymentSessionApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "klarnaAuthorizationToken",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "sessionData",
                "valueType": {
                  "type": "id",
                  "value": "type_:KlarnaSessionDetailsApiSchema"
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:KlarnaSessionDetailsApiSchema": {
          "description": null,
          "name": "KlarnaSessionDetailsApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "recurringDescription",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "billingAddress",
                "valueType": {
                  "type": "id",
                  "value": "type_:KlarnaAddressApiSchema"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "shippingAddress",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:KlarnaAddressApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "purchaseCountry",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "purchaseCurrency",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "locale",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "orderLines",
                "valueType": {
                  "type": "list",
                  "itemType": {
                    "type": "unknown"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "tokenDetails",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:KlarnaTokenDetails"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:KlarnaTokenDetails": {
          "description": null,
          "name": "KlarnaTokenDetails",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "type",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "brand",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "masked_number",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "expiry_date",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PayPalBillingAgreementApiSchema": {
          "description": null,
          "name": "PayPalBillingAgreementApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "paypalBillingAgreementId",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Information about the PayPal customer",
                "htmlDescription": "<p>Information about the PayPal customer</p>\n",
                "key": "externalPayerInfo",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PayPalExternalPayerInfoApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The PayPal customer's shipping address",
                "htmlDescription": "<p>The PayPal customer&#39;s shipping address</p>\n",
                "key": "shippingAddress",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:AddressApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "paypalStatus",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PayPalExternalPayerInfoApiSchema": {
          "description": null,
          "name": "PayPalExternalPayerInfoApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "externalPayerId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "email",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "firstName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "lastName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PayPalOrderTokenApiSchema": {
          "description": null,
          "name": "PayPalOrderTokenApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "paypalOrderId",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Information about the PayPal customer",
                "htmlDescription": "<p>Information about the PayPal customer</p>\n",
                "key": "externalPayerInfo",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PayPalExternalPayerInfoApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "paypalStatus",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentApiResponse": {
          "description": null,
          "name": "PaymentApiResponse",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream\noperations.\n",
                "htmlDescription": "<p>The unique payment ID.</p>\n<p>You can use this ID to retrieve the payment details, or perform downstream\noperations.</p>\n",
                "key": "id",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The date and time at which the payment was created in UTC format.",
                "htmlDescription": "<p>The date and time at which the payment was created in UTC format.</p>\n",
                "key": "date",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "See the payment [status table](../docs#payment-status) for more information.",
                "htmlDescription": "<p>See the payment <a href=\"../docs#payment-status\">status table</a> for more information.</p>\n",
                "key": "status",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentStatus"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Your reference for the payment.",
                "htmlDescription": "<p>Your reference for the payment.</p>\n",
                "key": "orderId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
                "htmlDescription": "<p>The 3-letter currency code in <a href=\"https://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 format</a>.\ne.g. use <code>USD</code> for US dollars.</p>\n",
                "key": "currencyCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "The amount you charged the customer, in minor units.",
                "htmlDescription": "<p>The amount you charged the customer, in minor units.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "More information associated with the order.",
                "htmlDescription": "<p>More information associated with the order.</p>\n",
                "key": "order",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:OrderDetailsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The unique identifier for your customer.",
                "htmlDescription": "<p>The unique identifier for your customer.</p>\n",
                "key": "customerId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "More information associated with the customer.",
                "htmlDescription": "<p>More information associated with the customer.</p>\n",
                "key": "customer",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CustomerDetailsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Additional data to be used throughout the payment lifecycle.\n",
                "htmlDescription": "<p>Additional data to be used throughout the payment lifecycle.</p>\n",
                "key": "metadata",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "unknown"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The payment method options provided in the request, as well as the token used to process the payment.",
                "htmlDescription": "<p>The payment method options provided in the request, as well as the token used to process the payment.</p>\n",
                "key": "paymentMethod",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentResponsePaymentMethodOptionsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "More information associated with the payment processor, including the processor name.",
                "htmlDescription": "<p>More information associated with the payment processor, including the processor name.</p>\n",
                "key": "processor",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentResponseProcessorApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Required action to perform in order to resume the payment workflow. This can be requiring a 3DS check from the customer for instance.",
                "htmlDescription": "<p>Required action to perform in order to resume the payment workflow. This can be requiring a 3DS check from the customer for instance.</p>\n",
                "key": "requiredAction",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentRequiredActionApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Check this field for more information regarding the payment's status. This is especially useful when the status is `DECLINED` or `FAILED`.\n",
                "htmlDescription": "<p>Check this field for more information regarding the payment&#39;s status. This is especially useful when the status is <code>DECLINED</code> or <code>FAILED</code>.</p>\n",
                "key": "statusReason",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:StatusReasonApiSchema"
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "A list summarizing the transactions that occurred while processing the payment.\n\nNote: a refund is a separate transaction and so will appear in this `transactions` list if a refund was performed.",
                "htmlDescription": "<p>A list summarizing the transactions that occurred while processing the payment.</p>\n<p>Note: a refund is a separate transaction and so will appear in this <code>transactions</code> list if a refund was performed.</p>\n",
                "key": "transactions",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_:TransactionOverviewApiSchema"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentCardTokenApiSchema": {
          "description": null,
          "name": "PaymentCardTokenApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "first6Digits",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "last4Digits",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "expirationMonth",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "expirationYear",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "cardholderName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "network",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "isNetworkTokenized",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "binData",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:BinDataApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:StatusReasonApiSchema": {
          "description": null,
          "name": "StatusReasonApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Type of the status.",
                "htmlDescription": "<p>Type of the status.</p>\n",
                "key": "type",
                "valueType": {
                  "type": "id",
                  "value": "type_:PaymentStatusTypeEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "If the error is of type `ISSUER_DECLINED` this will be returned.\n\nDeclines of type `SOFT_DECLINE` may be retried,\nwhereas declines of type `HARD_DECLINE` should not be retried.\n",
                "htmlDescription": "<p>If the error is of type <code>ISSUER_DECLINED</code> this will be returned.</p>\n<p>Declines of type <code>SOFT_DECLINE</code> may be retried,\nwhereas declines of type <code>HARD_DECLINE</code> should not be retried.</p>\n",
                "key": "declineType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:DeclineTypeEnum"
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "If the error is of type `ISSUER_DECLINED`, this will be returned.",
                "htmlDescription": "<p>If the error is of type <code>ISSUER_DECLINED</code>, this will be returned.</p>\n",
                "key": "code",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:TransactionDeclineReasonV2Enum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "In case of an error on the processor's part, we will return the message returned by the processor. This is usually a human readable error.",
                "htmlDescription": "<p>In case of an error on the processor&#39;s part, we will return the message returned by the processor. This is usually a human readable error.</p>\n",
                "key": "message",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentMethodTypeEnum": {
          "description": "Payment method type, where `OFF_SESSION_PAYMENT` is used for APM (Alternative Payment Method) payments and `PAYMENT_CARD` for traditional debit or credit cards. Please note that this list is different from one indicated on [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) page and values of this field will be changed in the future versions of the API.",
          "htmlDescription": "<p>Payment method type, where <code>OFF_SESSION_PAYMENT</code> is used for APM (Alternative Payment Method) payments and <code>PAYMENT_CARD</code> for traditional debit or credit cards. Please note that this list is different from one indicated on <a href=\"https://primer.io/docs/payment-methods/available-payment-methods\">available payment methods</a> page and values of this field will be changed in the future versions of the API.</p>\n",
          "name": "PaymentMethodTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "PAYMENT_CARD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PAYPAL_ORDER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PAYPAL_BILLING_AGREEMENT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GOCARDLESS_MANDATE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KLARNA_AUTHORIZATION_TOKEN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KLARNA_CUSTOMER_TOKEN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PAY_NL_IDEAL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "APAYA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "OFF_SESSION_PAYMENT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CARD_OFF_SESSION_PAYMENT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "APPLE_PAY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "APPLE_PAY_ENCRYPTED_TOKEN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GOOGLE_PAY",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": true
        },
        "type_:PaymentListApiResponse": {
          "description": null,
          "name": "PaymentListApiResponse",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "data",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentSummaryApiSchema"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "nextCursor",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "prevCursor",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentRequiredActionApiSchema": {
          "description": null,
          "name": "PaymentRequiredActionApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Action name",
                "htmlDescription": "<p>Action name</p>\n",
                "key": "name",
                "valueType": {
                  "type": "id",
                  "value": "type_:BlockingPaymentActionTypeEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Human description of the required action to perform.",
                "htmlDescription": "<p>Human description of the required action to perform.</p>\n",
                "key": "description",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The client token to be returned to the SDK if a required action is returned.",
                "htmlDescription": "<p>The client token to be returned to the SDK if a required action is returned.</p>\n",
                "key": "clientToken",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentSummaryApiSchema": {
          "description": null,
          "name": "PaymentSummaryApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream\noperations.\n",
                "htmlDescription": "<p>The unique payment ID.</p>\n<p>You can use this ID to retrieve the payment details, or perform downstream\noperations.</p>\n",
                "key": "id",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The date and time at which the payment was created in UTC format.",
                "htmlDescription": "<p>The date and time at which the payment was created in UTC format.</p>\n",
                "key": "date",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "See the payment [status table](../docs#payment-status) for more information.",
                "htmlDescription": "<p>See the payment <a href=\"../docs#payment-status\">status table</a> for more information.</p>\n",
                "key": "status",
                "valueType": {
                  "type": "id",
                  "value": "type_:PaymentStatus"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Your reference for the payment.",
                "htmlDescription": "<p>Your reference for the payment.</p>\n",
                "key": "orderId",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The payment processor used for this payment.",
                "htmlDescription": "<p>The payment processor used for this payment.</p>\n",
                "key": "processor",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
                "htmlDescription": "<p>The 3-letter currency code in <a href=\"https://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 format</a>.\ne.g. use <code>USD</code> for US dollars.</p>\n",
                "key": "currencyCode",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "The payment amount, in minor units. e.g. $7 would show as `700`.",
                "htmlDescription": "<p>The payment amount, in minor units. e.g. $7 would show as <code>700</code>.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`\n",
                "htmlDescription": "<p>Additional data to be used throughout the payment lifecycle.</p>\n<p>A dictionary of key-value pairs where the values can only be strings or\nintegers.</p>\n<p>e.g. <code>{&quot;productId&quot;: 1001, &quot;merchantId&quot;: &quot;a13bsd62s&quot;}</code></p>\n",
                "key": "metadata",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "unknown"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentSummaryProcessorApiSchema": {
          "description": null,
          "name": "PaymentSummaryProcessorApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The payment processor used for this payment.",
                "htmlDescription": "<p>The payment processor used for this payment.</p>\n",
                "key": "name",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The merchant ID registered at the payment processor used for this payment.",
                "htmlDescription": "<p>The merchant ID registered at the payment processor used for this payment.</p>\n",
                "key": "processorMerchantId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PrepaidReloadableEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "PrepaidReloadableEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "RELOADABLE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NON_RELOADABLE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NOT_APPLICABLE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNKNOWN",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:RecurringTransactionTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "RecurringTransactionTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "FIRST_PAYMENT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ECOMMERCE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SUBSCRIPTION",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNSCHEDULED",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:RecurringPaymentTypeSchema": {
          "description": "Payment types, primarily to be used for recurring payments.\nNote: If you successfully vault a `SINGLE_USE` token on payment creation, then there's no need to set a value for this field and it will be flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all possible values.\n\n| paymentType | Use case |\n| --- | --- |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario.\n| `ECOMMERCE` | a customer-initiated payment using stored payment details where the cardholder is present.\n| `SUBSCRIPTION` | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.\n| `UNSCHEDULED` | a merchant-initiated payment using stored payment details with no fixed schedule or amount.",
          "htmlDescription": "<p>Payment types, primarily to be used for recurring payments.\nNote: If you successfully vault a <code>SINGLE_USE</code> token on payment creation, then there&#39;s no need to set a value for this field and it will be flagged as <code>FIRST_PAYMENT</code>. Otherwise, see the table below for all possible values.</p>\n<table>\n<thead>\n<tr>\n<th>paymentType</th>\n<th>Use case</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>FIRST_PAYMENT</code></td>\n<td>a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario.</td>\n</tr>\n<tr>\n<td><code>ECOMMERCE</code></td>\n<td>a customer-initiated payment using stored payment details where the cardholder is present.</td>\n</tr>\n<tr>\n<td><code>SUBSCRIPTION</code></td>\n<td>a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.</td>\n</tr>\n<tr>\n<td><code>UNSCHEDULED</code></td>\n<td>a merchant-initiated payment using stored payment details with no fixed schedule or amount.</td>\n</tr>\n</tbody></table>\n",
          "name": "RecurringPaymentTypeSchema",
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "value": "type_:RecurringTransactionTypeEnum"
            }
          },
          "descriptionContainsMarkdown": true
        },
        "type_:ProductTypeEnum": {
          "description": "An enumeration",
          "htmlDescription": "<p>An enumeration</p>\n",
          "name": "ProductTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "PHYSICAL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DIGITAL",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ThreeDSecureAuthResponseCodeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "ThreeDSecureAuthResponseCodeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "NOT_PERFORMED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SKIPPED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AUTH_SUCCESS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AUTH_FAILED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CHALLENGE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "METHOD",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ThreeDSecureAuthenticationApiSchema": {
          "description": null,
          "name": "ThreeDSecureAuthenticationApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "responseCode",
                "valueType": {
                  "type": "id",
                  "value": "type_:ThreeDSecureAuthResponseCodeEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "reasonCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:ThreeDSecureAuthenticationApiSchemaReasonCode"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "reasonText",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "protocolVersion",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "challengeIssued",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ThreeDSecureAuthenticationApiSchemaReasonCode": {
          "description": null,
          "name": "ThreeDSecureAuthenticationApiSchemaReasonCode",
          "shape": {
            "type": "undiscriminatedUnion",
            "variants": [
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:ThreeDSecureSkippedReasonCodeEnum"
                },
                "displayName": "Three D Secure Skipped Reason Code Enum",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:ThreeDSecureFailedReasonCodeEnum"
                },
                "displayName": "Three D Secure Failed Reason Code Enum",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ThreeDSecureFailedReasonCodeEnum": {
          "description": "This enum is derived from the `transStatusReason` on page 218 of the\n[EMV Co 3DS protocol specification](https://www.emvco.com/terms-of-use/?u=/wp-content/uploads/documents/EMVCo_3DS_Spec_v220_122018.pdf)\n\n| Code | Description                             |\n|------|-----------------------------------------|\n| 01   | Card authentication failed              |\n| 02   | Unknown Device                          |\n| 03   | Unsupported Device                      |\n| 04   | Exceeds authentication frequency limit  |\n| 05   | Expired card                            |\n| 06   | Invalid card number                     |\n| 07   | Invalid transaction                     |\n| 08   | No Card record                          |\n| 09   | Security failure                        |\n| 10   | Stolen card                             |\n| 11   | Suspected fraud                         |\n| 12   | Transaction not permitted to cardholder |\n| 13   | Cardholder not enrolled in service      |\n| 14   | Transaction timed out at the ACS        |\n| 15   | Low confidence                          |\n| 16   | Medium confidence                       |",
          "htmlDescription": "<p>This enum is derived from the <code>transStatusReason</code> on page 218 of the\n<a href=\"https://www.emvco.com/terms-of-use/?u=/wp-content/uploads/documents/EMVCo_3DS_Spec_v220_122018.pdf\">EMV Co 3DS protocol specification</a></p>\n<table>\n<thead>\n<tr>\n<th>Code</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>01</td>\n<td>Card authentication failed</td>\n</tr>\n<tr>\n<td>02</td>\n<td>Unknown Device</td>\n</tr>\n<tr>\n<td>03</td>\n<td>Unsupported Device</td>\n</tr>\n<tr>\n<td>04</td>\n<td>Exceeds authentication frequency limit</td>\n</tr>\n<tr>\n<td>05</td>\n<td>Expired card</td>\n</tr>\n<tr>\n<td>06</td>\n<td>Invalid card number</td>\n</tr>\n<tr>\n<td>07</td>\n<td>Invalid transaction</td>\n</tr>\n<tr>\n<td>08</td>\n<td>No Card record</td>\n</tr>\n<tr>\n<td>09</td>\n<td>Security failure</td>\n</tr>\n<tr>\n<td>10</td>\n<td>Stolen card</td>\n</tr>\n<tr>\n<td>11</td>\n<td>Suspected fraud</td>\n</tr>\n<tr>\n<td>12</td>\n<td>Transaction not permitted to cardholder</td>\n</tr>\n<tr>\n<td>13</td>\n<td>Cardholder not enrolled in service</td>\n</tr>\n<tr>\n<td>14</td>\n<td>Transaction timed out at the ACS</td>\n</tr>\n<tr>\n<td>15</td>\n<td>Low confidence</td>\n</tr>\n<tr>\n<td>16</td>\n<td>Medium confidence</td>\n</tr>\n</tbody></table>\n",
          "name": "ThreeDSecureFailedReasonCodeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "UNKNOWN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "REJECTED_BY_ISSUER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CARD_AUTHENTICATION_FAILED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNKNOWN_DEVICE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNSUPPORTED_DEVICE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EXCEEDS_AUTHENTICATION_FREQUENCY_LIMIT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EXPIRED_CARD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "INVALID_CARD_NUMBER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "INVALID_TRANSACTION",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NO_CARD_RECORD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SECURITY_FAILURE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "STOLEN_CARD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SUSPECTED_FRAUD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TRANSACTION_NOT_PERMITTED_TO_CARDHOLDER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CARDHOLDER_NOT_ENROLLED_IN_SERVICE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TRANSACTION_TIMED_OUT_AT_THE_ACS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LOW_CONFIDENCE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MEDIUM_CONFIDENCE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HIGH_CONFIDENCE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VERY_HIGH_CONFIDENCE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EXCEEDS_ACS_MAXIMUM_CHALLENGES",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NON_PAYMENT_NOT_SUPPORTED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "THREE_RI_NOT_SUPPORTED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ACS_TECHNICAL_ISSUE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DECOUPLED_REQUIRED_BY_ACS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DECOUPLED_MAX_EXPIRY_EXCEEDED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DECOUPLED_AUTHENTICATION_INSUFFICIENT_TIME",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AUTHENTICATION_ATTEMPTED_BUT_NOT_PERFORMED_BY_CARDHOLDER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ACS_TIMED_OUT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "INVALID_ACS_RESPONSE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ACS_SYSTEM_ERROR_RESPONSE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ERROR_GENERATING_CAVV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PROTOCOL_VERSION_NOT_SUPPORTED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TRANSACTION_EXCLUDED_FROM_ATTEMPTS_PROCESSING",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "REQUESTED_PROGRAM_NOT_SUPPORTED",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": true
        },
        "type_:ThreeDSecureSkippedReasonCodeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "ThreeDSecureSkippedReasonCodeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "GATEWAY_UNAVAILABLE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DISABLED_BY_MERCHANT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NOT_SUPPORTED_BY_ISSUER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FAILED_TO_NEGOTIATE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNKNOWN_ACS_RESPONSE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "3DS_SERVER_ERROR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ACQUIRER_NOT_CONFIGURED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ACQUIRER_NOT_PARTICIPATING",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:TokenTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "TokenTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "MULTI_USE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SINGLE_USE",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:DeclineTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "DeclineTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "SOFT_DECLINE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HARD_DECLINE",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:TransactionDeclineReasonV2Enum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "TransactionDeclineReasonV2Enum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "ERROR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "INVALID_CARD_NUMBER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EXPIRED_CARD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LOST_OR_STOLEN_CARD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SUSPECTED_FRAUD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNKNOWN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DECLINED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "REFER_TO_CARD_ISSUER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DO_NOT_HONOR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "INSUFFICIENT_FUNDS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "WITHDRAWAL_LIMIT_EXCEEDED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ISSUER_TEMPORARILY_UNAVAILABLE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AUTHENTICATION_REQUIRED",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:TransactionOverviewApiSchema": {
          "description": null,
          "name": "TransactionOverviewApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Date & time of the transaction (UTC)",
                "htmlDescription": "<p>Date &amp; time of the transaction (UTC)</p>\n",
                "key": "date",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Transaction amount in minor units",
                "htmlDescription": "<p>Transaction amount in minor units</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "\nThe 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
                "htmlDescription": "<p>The 3-letter currency code in <a href=\"https://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 format</a>.\ne.g. use <code>USD</code> for US dollars.</p>\n",
                "key": "currencyCode",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": null,
                "key": "transactionType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:TransactionTypeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Processor's unique identifier for the transaction",
                "htmlDescription": "<p>Processor&#39;s unique identifier for the transaction</p>\n",
                "key": "processorTransactionId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "An identifier of a processor.",
                "htmlDescription": "<p>An identifier of a processor.</p>\n",
                "key": "processorName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Processor's main account identifier.\n\n* Adyen: Account code\n* Braintree: Merchant ID\n* Stripe: Account ID\"\n",
                "htmlDescription": "<p>Processor&#39;s main account identifier.</p>\n<ul>\n<li>Adyen: Account code</li>\n<li>Braintree: Merchant ID</li>\n<li>Stripe: Account ID&quot;</li>\n</ul>\n",
                "key": "processorMerchantId",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "Transaction status, please refer to the [Transaction Status Codes](#section/API-Usage-Guide/Payment-Status) table for more information",
                "htmlDescription": "<p>Transaction status, please refer to the <a href=\"#section/API-Usage-Guide/Payment-Status\">Transaction Status Codes</a> table for more information</p>\n",
                "key": "processorStatus",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentStatus"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "If the transaction has a declined or failed status.\n\nOnly if the status is `DECLINED` or `FAILED`, otherwise `null`.\n",
                "htmlDescription": "<p>If the transaction has a declined or failed status.</p>\n<p>Only if the status is <code>DECLINED</code> or <code>FAILED</code>, otherwise <code>null</code>.</p>\n",
                "key": "processorStatusReason",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:StatusReasonApiSchema"
                  }
                },
                "descriptionContainsMarkdown": true
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentStatus": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "PaymentStatus",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "PENDING",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FAILED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AUTHORIZED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SETTLING",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PARTIALLY_SETTLED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SETTLED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DECLINED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CANCELLED",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentStatusTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "PaymentStatusTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "APPLICATION_ERROR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GATEWAY_REJECTED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ISSUER_DECLINED",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:TransactionTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "TransactionTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "SALE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "REFUND",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema": {
          "description": null,
          "name": "CoreApiApiCommonsSchemasAddessAddressApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "firstName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "lastName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "addressLine1",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "addressLine2",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "city",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "state",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "countryCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CountryCodeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "postalCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:AddressApiSchema": {
          "description": null,
          "name": "AddressApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "firstName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "lastName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Street name, Company name or PO Box",
                "htmlDescription": "<p>Street name, Company name or PO Box</p>\n",
                "key": "addressLine1",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Apartment, Unit or Building number",
                "htmlDescription": "<p>Apartment, Unit or Building number</p>\n",
                "key": "addressLine2",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Name of the city, district, town or village",
                "htmlDescription": "<p>Name of the city, district, town or village</p>\n",
                "key": "city",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "State, County or Province",
                "htmlDescription": "<p>State, County or Province</p>\n",
                "key": "state",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Two letter ISO country code",
                "htmlDescription": "<p>Two letter ISO country code</p>\n",
                "key": "countryCode",
                "valueType": {
                  "type": "id",
                  "value": "type_:CountryCodeEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Postal or ZIP code",
                "htmlDescription": "<p>Postal or ZIP code</p>\n",
                "key": "postalCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:MerchantPaymentMethodTokenApiResponse": {
          "description": null,
          "name": "MerchantPaymentMethodTokenApiResponse",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Creation date & time of the object (UTC)",
                "htmlDescription": "<p>Creation date &amp; time of the object (UTC)</p>\n",
                "key": "createdAt",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Date & time when this object was revoked. (UTC)",
                "htmlDescription": "<p>Date &amp; time when this object was revoked. (UTC)</p>\n",
                "key": "deletedAt",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Whether or not this object has been revoked.",
                "htmlDescription": "<p>Whether or not this object has been revoked.</p>\n",
                "key": "deleted",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The vaulted payment method token.",
                "htmlDescription": "<p>The vaulted payment method token.</p>\n",
                "key": "token",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "* `MULTI_USE` a vaulted token that can be re-used with subsequent payments",
                "htmlDescription": "<ul>\n<li><code>MULTI_USE</code> a vaulted token that can be re-used with subsequent payments</li>\n</ul>\n",
                "key": "tokenType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "Unique analytics identifier corresponding to a payment method",
                "htmlDescription": "<p>Unique analytics identifier corresponding to a payment method</p>\n",
                "key": "analyticsId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Payment method type associated with a token.",
                "htmlDescription": "<p>Payment method type associated with a token.</p>\n",
                "key": "paymentMethodType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentMethodTypeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Payment method data",
                "htmlDescription": "<p>Payment method data</p>\n",
                "key": "paymentMethodData",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The ID representing the customer",
                "htmlDescription": "<p>The ID representing the customer</p>\n",
                "key": "customerId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "A friendly description given by the user",
                "htmlDescription": "<p>A friendly description given by the user</p>\n",
                "key": "description",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Whether or not this payment method is the default",
                "htmlDescription": "<p>Whether or not this payment method is the default</p>\n",
                "key": "default",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData": {
          "description": "Payment method data",
          "htmlDescription": "<p>Payment method data</p>\n",
          "name": "MerchantPaymentMethodTokenApiResponsePaymentMethodData",
          "shape": {
            "type": "undiscriminatedUnion",
            "variants": [
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:PaymentCardTokenApiSchemaPaymentMethodsApi"
                },
                "displayName": "Payment Card Token Api Schema Payment Methods Api",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:PayPalBillingAgreementApiSchema"
                },
                "displayName": "Pay Pal Billing Agreement Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:GoCardlessMandateApiSchema"
                },
                "displayName": "Go Cardless Mandate Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:KlarnaCustomerTokenApiSchema"
                },
                "displayName": "Klarna Customer Token Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:ApayaCustomerTokenApiSchema"
                },
                "displayName": "Apaya Customer Token Api Schema",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:VerifiedMerchantPaymentMethodTokenApiResponse": {
          "description": null,
          "name": "VerifiedMerchantPaymentMethodTokenApiResponse",
          "shape": {
            "type": "object",
            "extends": ["type_:MerchantPaymentMethodTokenApiResponse"],
            "properties": [
              {
                "description": "Whether or not this payment method was verified",
                "htmlDescription": "<p>Whether or not this payment method was verified</p>\n",
                "key": "isVerified",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:MerchantPaymentMethodTokenListApiResponse": {
          "description": null,
          "name": "MerchantPaymentMethodTokenListApiResponse",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "data",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_:MerchantPaymentMethodTokenApiResponse"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:VerifiedMerchantPaymentMethodTokenListApiResponse": {
          "description": null,
          "name": "VerifiedMerchantPaymentMethodTokenListApiResponse",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "data",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_:VerifiedMerchantPaymentMethodTokenApiResponse"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentCardTokenApiSchemaPaymentMethodsApi": {
          "description": "Used exclusively by the Payment Methods API",
          "htmlDescription": "<p>Used exclusively by the Payment Methods API</p>\n",
          "name": "PaymentCardTokenApiSchemaPaymentMethodsApi",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "last4Digits",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "expirationMonth",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "expirationYear",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "cardholderName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "network",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "An ID for the transaction assigned by the card network. Used to correlate recurring payments.",
                "htmlDescription": "<p>An ID for the transaction assigned by the card network. Used to correlate recurring payments.</p>\n",
                "key": "networkTransactionId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The type of card, e.g. Debit, Credit",
                "htmlDescription": "<p>The type of card, e.g. Debit, Credit</p>\n",
                "key": "accountFundingType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:AccountFundingTypeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ErrorObject": {
          "description": null,
          "name": "ErrorObject",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "An error ID",
                "htmlDescription": "<p>An error ID</p>\n",
                "key": "errorId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "A human description of the error",
                "htmlDescription": "<p>A human description of the error</p>\n",
                "key": "description",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "An ID that you can quote when contacting the support team (support@primer.io).",
                "htmlDescription": "<p>An ID that you can quote when contacting the support team (<a href=\"mailto:support@primer.io\">support@primer.io</a>).</p>\n",
                "key": "diagnosticsId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Returned in case of a badly formed request",
                "htmlDescription": "<p>Returned in case of a badly formed request</p>\n",
                "key": "validationErrors",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "list",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:BadRequestErrorResponse": {
          "description": null,
          "name": "BadRequestErrorResponse",
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "value": "type_:ErrorObject"
            }
          },
          "descriptionContainsMarkdown": false
        },
        "type_:UnprocessableEntityErrorResponse": {
          "description": null,
          "name": "UnprocessableEntityErrorResponse",
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "value": "type_:ErrorObject"
            }
          },
          "descriptionContainsMarkdown": false
        }
      },
      "subpackages": {
        "subpackage_clientSessionApi": {
          "subpackageId": "subpackage_clientSessionApi",
          "name": "Client Session API",
          "endpoints": [
            {
              "environments": [],
              "availability": null,
              "defaultEnvironment": null,
              "urlSlug": "retrieve-a-client-session",
              "method": "GET",
              "id": "retrieveClientSideToken",
              "name": "Retrieve a client session",
              "path": {
                "pathParameters": [],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/client-session"
                  }
                ]
              },
              "queryParameters": [
                {
                  "key": "clientToken",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Client token corresponding to the client session to retrieve"
                }
              ],
              "headers": [],
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:ClientSessionApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:UnprocessableEntityErrorResponse"
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:UnprocessableEntityErrorResponse"
                    }
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/client-session",
                  "pathParameters": {},
                  "queryParameters": {
                    "clientToken": "string"
                  },
                  "headers": {},
                  "responseStatusCode": 200,
                  "responseBody": {
                    "customerId": "string",
                    "orderId": "string",
                    "currencyCode": "string",
                    "amount": 0,
                    "metadata": {
                      "string": {}
                    },
                    "customer": {
                      "emailAddress": "string",
                      "mobileNumber": "string",
                      "firstName": "string",
                      "lastName": "string",
                      "billingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "shippingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "taxId": "string",
                      "nationalDocumentId": "string"
                    },
                    "order": {
                      "lineItems": [
                        {
                          "itemId": "string",
                          "description": "string",
                          "amount": 0,
                          "quantity": 0,
                          "discountAmount": 0,
                          "taxAmount": 0,
                          "taxCode": "string",
                          "productType": "PHYSICAL"
                        }
                      ],
                      "countryCode": "AW",
                      "fees": [
                        {
                          "amount": 0,
                          "type": "string",
                          "description": "string"
                        }
                      ],
                      "shipping": {
                        "amount": 0
                      }
                    },
                    "paymentMethod": {
                      "vaultOnSuccess": true,
                      "descriptor": "string",
                      "paymentType": "FIRST_PAYMENT",
                      "options": {
                        "<PAYMENT_METHOD_TYPE>": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "PAYMENT_CARD": {
                          "networks": {
                            "AMEX": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "DANKORT": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "DINERS_CLUB": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "DISCOVER": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "ENROUTE": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "ELO": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "HIPER": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "INTERAC": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "JCB": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "MAESTRO": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "MASTERCARD": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "MIR": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "PRIVATE_LABEL": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "UNIONPAY": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "VISA": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "OTHER": {
                              "surcharge": {
                                "amount": 0
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/client-session",
                  "pathParameters": {},
                  "queryParameters": {
                    "clientToken": "string"
                  },
                  "headers": {},
                  "responseStatusCode": 400,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "diagnosticsId": "string",
                    "validationErrors": [
                      {
                        "string": {}
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/client-session",
                  "pathParameters": {},
                  "queryParameters": {
                    "clientToken": "string"
                  },
                  "headers": {},
                  "responseStatusCode": 422,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "diagnosticsId": "string",
                    "validationErrors": [
                      {
                        "string": {}
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "This API call retrieves all the details associated with the client session corresponding to the client token that is provided in the request. The fields with empty values are excluded from the response.\n",
              "htmlDescription": "<p>This API call retrieves all the details associated with the client session corresponding to the client token that is provided in the request. The fields with empty values are excluded from the response.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": false
            },
            {
              "environments": [],
              "availability": null,
              "defaultEnvironment": null,
              "urlSlug": "create-a-client-session",
              "method": "POST",
              "id": "createClientSideToken",
              "name": "Create a client session",
              "path": {
                "pathParameters": [],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/client-session"
                  }
                ]
              },
              "queryParameters": [],
              "headers": [],
              "request": {
                "contentType": "application/json",
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:ClientSessionApiRequest"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:ClientSessionWithTokenApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:UnprocessableEntityErrorResponse"
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:UnprocessableEntityErrorResponse"
                    }
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/client-session",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {},
                  "responseStatusCode": 200,
                  "responseBody": {
                    "clientToken": "string",
                    "clientTokenExpirationDate": "2023-01-01T00:00:00Z",
                    "orderId": "string",
                    "currencyCode": "string",
                    "amount": 0,
                    "order": {
                      "lineItems": [
                        {
                          "itemId": "string",
                          "description": "string",
                          "amount": 0,
                          "quantity": 0,
                          "discountAmount": 0,
                          "taxAmount": 0,
                          "taxCode": "string",
                          "productType": "PHYSICAL"
                        }
                      ],
                      "countryCode": "AW",
                      "fees": [
                        {
                          "amount": 0,
                          "type": "string",
                          "description": "string"
                        }
                      ],
                      "shipping": {
                        "amount": 0
                      }
                    },
                    "customerId": "string",
                    "customer": {
                      "emailAddress": "string",
                      "mobileNumber": "string",
                      "firstName": "string",
                      "lastName": "string",
                      "billingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "shippingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "taxId": "string",
                      "nationalDocumentId": "string"
                    },
                    "metadata": {
                      "string": {}
                    },
                    "paymentMethod": {
                      "vaultOnSuccess": true,
                      "descriptor": "string",
                      "paymentType": "FIRST_PAYMENT",
                      "options": {
                        "<PAYMENT_METHOD_TYPE>": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "PAYMENT_CARD": {
                          "networks": {
                            "AMEX": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "DANKORT": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "DINERS_CLUB": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "DISCOVER": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "ENROUTE": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "ELO": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "HIPER": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "INTERAC": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "JCB": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "MAESTRO": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "MASTERCARD": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "MIR": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "PRIVATE_LABEL": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "UNIONPAY": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "VISA": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "OTHER": {
                              "surcharge": {
                                "amount": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    "warnings": {
                      "type": "string",
                      "code": "string",
                      "message": "string"
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/client-session",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {},
                  "responseStatusCode": 400,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "diagnosticsId": "string",
                    "validationErrors": [
                      {
                        "string": {}
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/client-session",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {},
                  "responseStatusCode": 422,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "diagnosticsId": "string",
                    "validationErrors": [
                      {
                        "string": {}
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "Creating a client session generates a client token: a temporary key used to initialize [Universal Checkout](https://primer.io/docs/accept-payments/setup-universal-checkout/installation/web) and authenticate it against your account.\n\nUniversal Checkout automatically retrieves all the settings from the client session and the Dashboard to configure the payment methods and the checkout experience.\n\n<b>Note:</b>\nWhen creating a Client Session, please make sure to provide `currencyCode`, `orderId`, and at least one of `amount` or `lineItems`. \nIf any of these are not yet available, you can provide them when making the payment request.\n\n`POST /client-session` does not have required fields as all fields are not always known when a client session is created. \nUse `PATCH /client-session` to update the parameters throughout the checkout session.\n\nClient tokens expire after 24 hours.\n",
              "htmlDescription": "<p>Creating a client session generates a client token: a temporary key used to initialize <a href=\"https://primer.io/docs/accept-payments/setup-universal-checkout/installation/web\">Universal Checkout</a> and authenticate it against your account.</p>\n<p>Universal Checkout automatically retrieves all the settings from the client session and the Dashboard to configure the payment methods and the checkout experience.</p>\n<p><b>Note:</b>\nWhen creating a Client Session, please make sure to provide <code>currencyCode</code>, <code>orderId</code>, and at least one of <code>amount</code> or <code>lineItems</code>. \nIf any of these are not yet available, you can provide them when making the payment request.</p>\n<p><code>POST /client-session</code> does not have required fields as all fields are not always known when a client session is created. \nUse <code>PATCH /client-session</code> to update the parameters throughout the checkout session.</p>\n<p>Client tokens expire after 24 hours.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            },
            {
              "environments": [],
              "availability": null,
              "defaultEnvironment": null,
              "urlSlug": "update-client-session",
              "method": "PATCH",
              "id": "updateClientSideToken",
              "name": "Update client session",
              "path": {
                "pathParameters": [],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/client-session"
                  }
                ]
              },
              "queryParameters": [],
              "headers": [],
              "request": {
                "contentType": "application/json",
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:ClientSessionUpdateApiRequest"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:ClientSessionApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:UnprocessableEntityErrorResponse"
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:UnprocessableEntityErrorResponse"
                    }
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/client-session",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {},
                  "responseStatusCode": 200,
                  "responseBody": {
                    "customerId": "string",
                    "orderId": "string",
                    "currencyCode": "string",
                    "amount": 0,
                    "metadata": {
                      "string": {}
                    },
                    "customer": {
                      "emailAddress": "string",
                      "mobileNumber": "string",
                      "firstName": "string",
                      "lastName": "string",
                      "billingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "shippingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "taxId": "string",
                      "nationalDocumentId": "string"
                    },
                    "order": {
                      "lineItems": [
                        {
                          "itemId": "string",
                          "description": "string",
                          "amount": 0,
                          "quantity": 0,
                          "discountAmount": 0,
                          "taxAmount": 0,
                          "taxCode": "string",
                          "productType": "PHYSICAL"
                        }
                      ],
                      "countryCode": "AW",
                      "fees": [
                        {
                          "amount": 0,
                          "type": "string",
                          "description": "string"
                        }
                      ],
                      "shipping": {
                        "amount": 0
                      }
                    },
                    "paymentMethod": {
                      "vaultOnSuccess": true,
                      "descriptor": "string",
                      "paymentType": "FIRST_PAYMENT",
                      "options": {
                        "<PAYMENT_METHOD_TYPE>": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "PAYMENT_CARD": {
                          "networks": {
                            "AMEX": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "DANKORT": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "DINERS_CLUB": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "DISCOVER": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "ENROUTE": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "ELO": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "HIPER": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "INTERAC": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "JCB": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "MAESTRO": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "MASTERCARD": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "MIR": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "PRIVATE_LABEL": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "UNIONPAY": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "VISA": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "OTHER": {
                              "surcharge": {
                                "amount": 0
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/client-session",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {},
                  "responseStatusCode": 400,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "diagnosticsId": "string",
                    "validationErrors": [
                      {
                        "string": {}
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/client-session",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {},
                  "responseStatusCode": 422,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "diagnosticsId": "string",
                    "validationErrors": [
                      {
                        "string": {}
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "You can update a clients session created earlier with the `PATCH /client-session` [API call](#operation/create_client_side_token_client_session_post).\n\nThe only required field for the request is `clientToken`. Other supported request fields are same as for the `POST /client-session` [API call](#operation/create_client_side_token_client_session_post).\n\nYou need to specify only the fields you wish to update. However, if the items that are to be updated are of type `array`, then you need to provide the complete array along with modified items.\n\nIf you wish to update nested fields on the client session, such as the customer `emailAddress` field, you can pass the `customer` object with only one field, `emailAddress`, to update.\n\nIf you simply wish to clear the value of the field, pass `null` as your input.\n\nYou can update `paymentMethod.vaultOnSuccess` field but updating of the `paymentMethod.options` field through `PATCH /client-session` is not supported.\n\nThe response will contain all the fields of the client session including the ones that were changed.\n",
              "htmlDescription": "<p>You can update a clients session created earlier with the <code>PATCH /client-session</code> <a href=\"#operation/create_client_side_token_client_session_post\">API call</a>.</p>\n<p>The only required field for the request is <code>clientToken</code>. Other supported request fields are same as for the <code>POST /client-session</code> <a href=\"#operation/create_client_side_token_client_session_post\">API call</a>.</p>\n<p>You need to specify only the fields you wish to update. However, if the items that are to be updated are of type <code>array</code>, then you need to provide the complete array along with modified items.</p>\n<p>If you wish to update nested fields on the client session, such as the customer <code>emailAddress</code> field, you can pass the <code>customer</code> object with only one field, <code>emailAddress</code>, to update.</p>\n<p>If you simply wish to clear the value of the field, pass <code>null</code> as your input.</p>\n<p>You can update <code>paymentMethod.vaultOnSuccess</code> field but updating of the <code>paymentMethod.options</code> field through <code>PATCH /client-session</code> is not supported.</p>\n<p>The response will contain all the fields of the client session including the ones that were changed.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            }
          ],
          "types": [],
          "subpackages": [],
          "pointsTo": null,
          "urlSlug": "client-session-api",
          "description": null,
          "webhooks": [],
          "descriptionContainsMarkdown": false
        },
        "subpackage_paymentsApi": {
          "subpackageId": "subpackage_paymentsApi",
          "name": "Payments API",
          "endpoints": [
            {
              "environments": [],
              "availability": null,
              "defaultEnvironment": null,
              "urlSlug": "search-list-payments",
              "method": "GET",
              "id": "listPayments",
              "name": "Search & list payments",
              "path": {
                "pathParameters": [],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payments"
                  }
                ]
              },
              "queryParameters": [
                {
                  "key": "status",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentStatus"
                    }
                  },
                  "description": "Filter payments by their status."
                },
                {
                  "key": "payment_method_type",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentMethodTypeEnum"
                    }
                  },
                  "description": "Filter payments by their payment method type."
                },
                {
                  "key": "processor",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Filter payments by their payment processor."
                },
                {
                  "key": "currency_code",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Filter payments by their payment currency.\ne.g. use `USD` for US dollars.\n"
                },
                {
                  "key": "from_date",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  },
                  "description": "Return only payments from this date (inclusive)."
                },
                {
                  "key": "to_date",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  },
                  "description": "Return only payments up to this date (inclusive)."
                },
                {
                  "key": "order_id",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Return payments related to this order ID."
                },
                {
                  "key": "min_amount",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  },
                  "description": "Return payments of this amount minimum (inclusive)."
                },
                {
                  "key": "max_amount",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  },
                  "description": "Return payments of this amount max (inclusive)."
                },
                {
                  "key": "customer_id",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "ID of the customer that has made the payment."
                },
                {
                  "key": "merchant_id",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "ID of the merchant involved in the payment."
                },
                {
                  "key": "customer_email_address",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Email of the customer that has made the payment."
                },
                {
                  "key": "last_4_digits",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Last 4 digits of the card used for the payment."
                },
                {
                  "key": "paypal_email",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Paypal email address associated with the payment."
                },
                {
                  "key": "klarna_email",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Klarna email address associated with the payment."
                },
                {
                  "key": "limit",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  },
                  "description": "Maximum number of payments to return per page."
                },
                {
                  "key": "cursor",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "If results are paginated, pass the `nextCursor` to access next page."
                }
              ],
              "headers": [],
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:PaymentListApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:UnprocessableEntityErrorResponse"
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:UnprocessableEntityErrorResponse"
                    }
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments",
                  "pathParameters": {},
                  "queryParameters": {
                    "status": "PENDING",
                    "payment_method_type": "PAYMENT_CARD"
                  },
                  "headers": {},
                  "responseStatusCode": 200,
                  "responseBody": {
                    "data": [
                      {
                        "id": "string",
                        "date": "2023-01-01T00:00:00Z",
                        "status": "PENDING",
                        "orderId": "string",
                        "processor": "string",
                        "currencyCode": "string",
                        "amount": 0,
                        "metadata": {
                          "string": {}
                        }
                      }
                    ],
                    "nextCursor": "string",
                    "prevCursor": "string"
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments",
                  "pathParameters": {},
                  "queryParameters": {
                    "status": "PENDING",
                    "payment_method_type": "PAYMENT_CARD"
                  },
                  "headers": {},
                  "responseStatusCode": 422,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "diagnosticsId": "string",
                    "validationErrors": [
                      {
                        "string": {}
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "<p/>\n\nRetrieve a list of your payments.\n\nResults are paginated, they will only return up to 100 payments maximum.\nTo access the next page of result, set the `cursor` query parameter to the value of `nextCursor` in\nyour current result payload. Use `prevCursor` to go back to the previous page.\n\n**Note:** this endpoint returns a list of\nsummarized payments. Not all payments attributes are present. You can use\nthe query parameters to filter payments. You can separate multiple query parameters with the `&` symbol.\nQuery parameters with types of the form \"Array of strings\" (such as the status parameter) can be specified as a comma-separated list.\n\n**Note:** payments will be available within a minute from being created.\n",
              "htmlDescription": "<p/>\n\n<p>Retrieve a list of your payments.</p>\n<p>Results are paginated, they will only return up to 100 payments maximum.\nTo access the next page of result, set the <code>cursor</code> query parameter to the value of <code>nextCursor</code> in\nyour current result payload. Use <code>prevCursor</code> to go back to the previous page.</p>\n<p><strong>Note:</strong> this endpoint returns a list of\nsummarized payments. Not all payments attributes are present. You can use\nthe query parameters to filter payments. You can separate multiple query parameters with the <code>&amp;</code> symbol.\nQuery parameters with types of the form &quot;Array of strings&quot; (such as the status parameter) can be specified as a comma-separated list.</p>\n<p><strong>Note:</strong> payments will be available within a minute from being created.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            },
            {
              "environments": [],
              "availability": null,
              "defaultEnvironment": null,
              "urlSlug": "create-a-payment",
              "method": "POST",
              "id": "createPayment",
              "name": "Create a payment",
              "path": {
                "pathParameters": [],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payments"
                  }
                ]
              },
              "queryParameters": [],
              "headers": [
                {
                  "key": "X-Idempotency-Key",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Optional key to make the request idempotent. Learn more in the [Idempotency Key guide](../docs#idempotency-key)."
                }
              ],
              "request": {
                "contentType": "application/json",
                "type": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "orderId",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "Your reference for the payment."
                    },
                    {
                      "key": "currencyCode",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n"
                    },
                    {
                      "key": "amount",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "integer"
                          }
                        }
                      },
                      "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`. The minimum amount is 0."
                    },
                    {
                      "key": "order",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "id",
                          "value": "type_:OrderDetailsApiSchema"
                        }
                      },
                      "description": "More information associated with the order."
                    },
                    {
                      "key": "paymentMethodToken",
                      "valueType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "description": "The payment method token used to authorize the payment.\n"
                    },
                    {
                      "key": "customerId",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "A unique identifier for your customer.\nThis attribute is required if `paymentMethod.vaultOnSuccess` is set to `True`."
                    },
                    {
                      "key": "customer",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "id",
                          "value": "type_:CustomerDetailsApiSchema"
                        }
                      },
                      "description": "More information associated with the customer.\n"
                    },
                    {
                      "key": "metadata",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "map",
                          "keyType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          },
                          "valueType": {
                            "type": "unknown"
                          }
                        }
                      },
                      "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`\n"
                    },
                    {
                      "key": "paymentMethod",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "id",
                          "value": "type_:PaymentRequestPaymentMethodOptionsApiSchema"
                        }
                      },
                      "description": "Enable certain options associated with the payment method."
                    }
                  ]
                },
                "descriptionContainsMarkdown": false
              },
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:PaymentApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:UnprocessableEntityErrorResponse"
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:UnprocessableEntityErrorResponse"
                    }
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {
                    "paymentMethodToken": "string"
                  },
                  "responseStatusCode": 200,
                  "responseBody": {
                    "id": "string",
                    "date": "2023-01-01T00:00:00Z",
                    "status": "PENDING",
                    "orderId": "string",
                    "currencyCode": "string",
                    "amount": 0,
                    "order": {
                      "lineItems": [
                        {
                          "itemId": "string",
                          "description": "string",
                          "amount": 0,
                          "quantity": 0,
                          "discountAmount": 0,
                          "taxAmount": 0,
                          "taxCode": "string",
                          "productType": "PHYSICAL"
                        }
                      ],
                      "countryCode": "AW",
                      "fees": [
                        {
                          "amount": 0,
                          "type": "string",
                          "description": "string"
                        }
                      ],
                      "shipping": {
                        "amount": 0
                      }
                    },
                    "customerId": "string",
                    "customer": {
                      "emailAddress": "string",
                      "mobileNumber": "string",
                      "firstName": "string",
                      "lastName": "string",
                      "billingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "shippingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "taxId": "string",
                      "nationalDocumentId": "string"
                    },
                    "metadata": {
                      "string": {}
                    },
                    "paymentMethod": {
                      "descriptor": "string",
                      "paymentType": "FIRST_PAYMENT",
                      "paymentMethodToken": "string",
                      "isVaulted": true,
                      "analyticsId": "string",
                      "paymentMethodType": "PAYMENT_CARD",
                      "paymentMethodData": {
                        "first6Digits": "string",
                        "last4Digits": "string",
                        "expirationMonth": "string",
                        "expirationYear": "string",
                        "cardholderName": "string",
                        "network": "string",
                        "isNetworkTokenized": true,
                        "binData": {
                          "network": "AMEX",
                          "issuerCountryCode": "AW",
                          "issuerName": "string",
                          "issuerCurrencyCode": "AED",
                          "regionalRestriction": "DOMESTIC_USE_ONLY",
                          "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                          "accountFundingType": "CREDIT",
                          "prepaidReloadableIndicator": "RELOADABLE",
                          "productUsageType": "CONSUMER",
                          "productCode": "string",
                          "productName": "string"
                        }
                      },
                      "threeDSecureAuthentication": {
                        "responseCode": "NOT_PERFORMED",
                        "reasonCode": "GATEWAY_UNAVAILABLE",
                        "reasonText": "string",
                        "protocolVersion": "string",
                        "challengeIssued": true
                      }
                    },
                    "processor": {
                      "name": "string",
                      "processorMerchantId": "string",
                      "amountCaptured": 0,
                      "amountRefunded": 0
                    },
                    "requiredAction": {
                      "name": "3DS_AUTHENTICATION",
                      "description": "string",
                      "clientToken": "string"
                    },
                    "statusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR",
                      "message": "string"
                    },
                    "transactions": [
                      {
                        "date": "string",
                        "amount": 0,
                        "currencyCode": "string",
                        "transactionType": "SALE",
                        "processorTransactionId": "string",
                        "processorName": "string",
                        "processorMerchantId": "string",
                        "processorStatus": "PENDING",
                        "processorStatusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR",
                          "message": "string"
                        }
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {
                    "paymentMethodToken": "string"
                  },
                  "responseStatusCode": 400,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "diagnosticsId": "string",
                    "validationErrors": [
                      {
                        "string": {}
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {
                    "paymentMethodToken": "string"
                  },
                  "responseStatusCode": 422,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "diagnosticsId": "string",
                    "validationErrors": [
                      {
                        "string": {}
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "<p/>\n\nCreate and authorize a payment for a given customer order. You\nshould provide a payment method token here to avoid PCI implications.\n\nIf only a payment method token is passed, the values passed with the Client Session determine the amount, currency etc.\n\nNote: `amount`, `currencyCode` and `orderId` are required during payment creation. Make sure to pass these fields when creating a client session, or if not yet available, when creating a payment.\n\nAll fields provided on this request will take preference over any field on the `order` associated with the client session. E.g. if you pass `amount` on this request, it will override the `amount` on the `order` associated with the Client Session.\n",
              "htmlDescription": "<p/>\n\n<p>Create and authorize a payment for a given customer order. You\nshould provide a payment method token here to avoid PCI implications.</p>\n<p>If only a payment method token is passed, the values passed with the Client Session determine the amount, currency etc.</p>\n<p>Note: <code>amount</code>, <code>currencyCode</code> and <code>orderId</code> are required during payment creation. Make sure to pass these fields when creating a client session, or if not yet available, when creating a payment.</p>\n<p>All fields provided on this request will take preference over any field on the <code>order</code> associated with the client session. E.g. if you pass <code>amount</code> on this request, it will override the <code>amount</code> on the <code>order</code> associated with the Client Session.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            },
            {
              "environments": [],
              "availability": null,
              "defaultEnvironment": null,
              "urlSlug": "capture-a-payment",
              "method": "POST",
              "id": "capturePayment",
              "name": "Capture a payment",
              "path": {
                "pathParameters": [
                  {
                    "key": "id",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "description": "ID of the payment to capture."
                  }
                ],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payments/"
                  },
                  {
                    "type": "pathParameter",
                    "value": "id"
                  },
                  {
                    "type": "literal",
                    "value": "/capture"
                  }
                ]
              },
              "queryParameters": [],
              "headers": [
                {
                  "key": "X-Idempotency-Key",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Optional key to make the request idempotent. Learn more in the [Idempotency Key guide](../docs#idempotency-key)."
                }
              ],
              "request": {
                "contentType": "application/json",
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:PaymentCaptureApiRequest"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:PaymentApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:UnprocessableEntityErrorResponse"
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:UnprocessableEntityErrorResponse"
                    }
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/capture",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {},
                  "responseStatusCode": 200,
                  "responseBody": {
                    "id": "string",
                    "date": "2023-01-01T00:00:00Z",
                    "status": "PENDING",
                    "orderId": "string",
                    "currencyCode": "string",
                    "amount": 0,
                    "order": {
                      "lineItems": [
                        {
                          "itemId": "string",
                          "description": "string",
                          "amount": 0,
                          "quantity": 0,
                          "discountAmount": 0,
                          "taxAmount": 0,
                          "taxCode": "string",
                          "productType": "PHYSICAL"
                        }
                      ],
                      "countryCode": "AW",
                      "fees": [
                        {
                          "amount": 0,
                          "type": "string",
                          "description": "string"
                        }
                      ],
                      "shipping": {
                        "amount": 0
                      }
                    },
                    "customerId": "string",
                    "customer": {
                      "emailAddress": "string",
                      "mobileNumber": "string",
                      "firstName": "string",
                      "lastName": "string",
                      "billingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "shippingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "taxId": "string",
                      "nationalDocumentId": "string"
                    },
                    "metadata": {
                      "string": {}
                    },
                    "paymentMethod": {
                      "descriptor": "string",
                      "paymentType": "FIRST_PAYMENT",
                      "paymentMethodToken": "string",
                      "isVaulted": true,
                      "analyticsId": "string",
                      "paymentMethodType": "PAYMENT_CARD",
                      "paymentMethodData": {
                        "first6Digits": "string",
                        "last4Digits": "string",
                        "expirationMonth": "string",
                        "expirationYear": "string",
                        "cardholderName": "string",
                        "network": "string",
                        "isNetworkTokenized": true,
                        "binData": {
                          "network": "AMEX",
                          "issuerCountryCode": "AW",
                          "issuerName": "string",
                          "issuerCurrencyCode": "AED",
                          "regionalRestriction": "DOMESTIC_USE_ONLY",
                          "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                          "accountFundingType": "CREDIT",
                          "prepaidReloadableIndicator": "RELOADABLE",
                          "productUsageType": "CONSUMER",
                          "productCode": "string",
                          "productName": "string"
                        }
                      },
                      "threeDSecureAuthentication": {
                        "responseCode": "NOT_PERFORMED",
                        "reasonCode": "GATEWAY_UNAVAILABLE",
                        "reasonText": "string",
                        "protocolVersion": "string",
                        "challengeIssued": true
                      }
                    },
                    "processor": {
                      "name": "string",
                      "processorMerchantId": "string",
                      "amountCaptured": 0,
                      "amountRefunded": 0
                    },
                    "requiredAction": {
                      "name": "3DS_AUTHENTICATION",
                      "description": "string",
                      "clientToken": "string"
                    },
                    "statusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR",
                      "message": "string"
                    },
                    "transactions": [
                      {
                        "date": "string",
                        "amount": 0,
                        "currencyCode": "string",
                        "transactionType": "SALE",
                        "processorTransactionId": "string",
                        "processorName": "string",
                        "processorMerchantId": "string",
                        "processorStatus": "PENDING",
                        "processorStatusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR",
                          "message": "string"
                        }
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/capture",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {},
                  "responseStatusCode": 400,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "diagnosticsId": "string",
                    "validationErrors": [
                      {
                        "string": {}
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/capture",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {},
                  "responseStatusCode": 422,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "diagnosticsId": "string",
                    "validationErrors": [
                      {
                        "string": {}
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "<p/>\n\nIf you have successfully authorized a payment, you can now\nfully capture, or partially capture funds from the authorized payment, depending\non whether your selected payment processor supports it. The payment will\nbe updated to `SETTLED` or `SETTLING`, depending on the payment method type.\n\nThe payload sent in this capture request is completely optional. If you don't\nsend a payload with the capture request, the full amount that was authorized\nwill be sent for capture. Below are the available payload attributes, which\ngive you more granular control when capturing funds, if you require it.\n",
              "htmlDescription": "<p/>\n\n<p>If you have successfully authorized a payment, you can now\nfully capture, or partially capture funds from the authorized payment, depending\non whether your selected payment processor supports it. The payment will\nbe updated to <code>SETTLED</code> or <code>SETTLING</code>, depending on the payment method type.</p>\n<p>The payload sent in this capture request is completely optional. If you don&#39;t\nsend a payload with the capture request, the full amount that was authorized\nwill be sent for capture. Below are the available payload attributes, which\ngive you more granular control when capturing funds, if you require it.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            },
            {
              "environments": [],
              "availability": null,
              "defaultEnvironment": null,
              "urlSlug": "cancel-a-payment",
              "method": "POST",
              "id": "cancelPayment",
              "name": "Cancel a payment",
              "path": {
                "pathParameters": [
                  {
                    "key": "id",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "description": "ID of payment to cancel."
                  }
                ],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payments/"
                  },
                  {
                    "type": "pathParameter",
                    "value": "id"
                  },
                  {
                    "type": "literal",
                    "value": "/cancel"
                  }
                ]
              },
              "queryParameters": [],
              "headers": [
                {
                  "key": "X-Idempotency-Key",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Optional key to make the request idempotent. Learn more in the [Idempotency Key guide](../docs#idempotency-key)."
                }
              ],
              "request": {
                "contentType": "application/json",
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:PaymentCancelApiRequest"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:PaymentApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/cancel",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {},
                  "responseStatusCode": 200,
                  "responseBody": {
                    "id": "string",
                    "date": "2023-01-01T00:00:00Z",
                    "status": "PENDING",
                    "orderId": "string",
                    "currencyCode": "string",
                    "amount": 0,
                    "order": {
                      "lineItems": [
                        {
                          "itemId": "string",
                          "description": "string",
                          "amount": 0,
                          "quantity": 0,
                          "discountAmount": 0,
                          "taxAmount": 0,
                          "taxCode": "string",
                          "productType": "PHYSICAL"
                        }
                      ],
                      "countryCode": "AW",
                      "fees": [
                        {
                          "amount": 0,
                          "type": "string",
                          "description": "string"
                        }
                      ],
                      "shipping": {
                        "amount": 0
                      }
                    },
                    "customerId": "string",
                    "customer": {
                      "emailAddress": "string",
                      "mobileNumber": "string",
                      "firstName": "string",
                      "lastName": "string",
                      "billingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "shippingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "taxId": "string",
                      "nationalDocumentId": "string"
                    },
                    "metadata": {
                      "string": {}
                    },
                    "paymentMethod": {
                      "descriptor": "string",
                      "paymentType": "FIRST_PAYMENT",
                      "paymentMethodToken": "string",
                      "isVaulted": true,
                      "analyticsId": "string",
                      "paymentMethodType": "PAYMENT_CARD",
                      "paymentMethodData": {
                        "first6Digits": "string",
                        "last4Digits": "string",
                        "expirationMonth": "string",
                        "expirationYear": "string",
                        "cardholderName": "string",
                        "network": "string",
                        "isNetworkTokenized": true,
                        "binData": {
                          "network": "AMEX",
                          "issuerCountryCode": "AW",
                          "issuerName": "string",
                          "issuerCurrencyCode": "AED",
                          "regionalRestriction": "DOMESTIC_USE_ONLY",
                          "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                          "accountFundingType": "CREDIT",
                          "prepaidReloadableIndicator": "RELOADABLE",
                          "productUsageType": "CONSUMER",
                          "productCode": "string",
                          "productName": "string"
                        }
                      },
                      "threeDSecureAuthentication": {
                        "responseCode": "NOT_PERFORMED",
                        "reasonCode": "GATEWAY_UNAVAILABLE",
                        "reasonText": "string",
                        "protocolVersion": "string",
                        "challengeIssued": true
                      }
                    },
                    "processor": {
                      "name": "string",
                      "processorMerchantId": "string",
                      "amountCaptured": 0,
                      "amountRefunded": 0
                    },
                    "requiredAction": {
                      "name": "3DS_AUTHENTICATION",
                      "description": "string",
                      "clientToken": "string"
                    },
                    "statusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR",
                      "message": "string"
                    },
                    "transactions": [
                      {
                        "date": "string",
                        "amount": 0,
                        "currencyCode": "string",
                        "transactionType": "SALE",
                        "processorTransactionId": "string",
                        "processorName": "string",
                        "processorMerchantId": "string",
                        "processorStatus": "PENDING",
                        "processorStatusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR",
                          "message": "string"
                        }
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/cancel",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {},
                  "responseStatusCode": 400,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "diagnosticsId": "string",
                    "validationErrors": [
                      {
                        "string": {}
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "<p/>\n\nProvided the payment has not reached `SETTLED` status, Primer will\nsend a \"void\" request to the payment processor, thereby cancelling the payment\nand releasing the hold on customer funds. Upon success, the payment will transition\nto `CANCELLED`. The payload is optional.\n",
              "htmlDescription": "<p/>\n\n<p>Provided the payment has not reached <code>SETTLED</code> status, Primer will\nsend a &quot;void&quot; request to the payment processor, thereby cancelling the payment\nand releasing the hold on customer funds. Upon success, the payment will transition\nto <code>CANCELLED</code>. The payload is optional.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            },
            {
              "environments": [],
              "availability": null,
              "defaultEnvironment": null,
              "urlSlug": "refund-a-payment",
              "method": "POST",
              "id": "refundPayment",
              "name": "Refund a payment",
              "path": {
                "pathParameters": [
                  {
                    "key": "id",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "description": "ID of payment to refund."
                  }
                ],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payments/"
                  },
                  {
                    "type": "pathParameter",
                    "value": "id"
                  },
                  {
                    "type": "literal",
                    "value": "/refund"
                  }
                ]
              },
              "queryParameters": [],
              "headers": [
                {
                  "key": "X-Idempotency-Key",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Optional key to make the request idempotent. Learn more in the [Idempotency Key guide](../docs#idempotency-key)."
                }
              ],
              "request": {
                "contentType": "application/json",
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:PaymentRefundApiRequest"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:PaymentApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:UnprocessableEntityErrorResponse"
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:UnprocessableEntityErrorResponse"
                    }
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/refund",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {},
                  "responseStatusCode": 200,
                  "responseBody": {
                    "id": "string",
                    "date": "2023-01-01T00:00:00Z",
                    "status": "PENDING",
                    "orderId": "string",
                    "currencyCode": "string",
                    "amount": 0,
                    "order": {
                      "lineItems": [
                        {
                          "itemId": "string",
                          "description": "string",
                          "amount": 0,
                          "quantity": 0,
                          "discountAmount": 0,
                          "taxAmount": 0,
                          "taxCode": "string",
                          "productType": "PHYSICAL"
                        }
                      ],
                      "countryCode": "AW",
                      "fees": [
                        {
                          "amount": 0,
                          "type": "string",
                          "description": "string"
                        }
                      ],
                      "shipping": {
                        "amount": 0
                      }
                    },
                    "customerId": "string",
                    "customer": {
                      "emailAddress": "string",
                      "mobileNumber": "string",
                      "firstName": "string",
                      "lastName": "string",
                      "billingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "shippingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "taxId": "string",
                      "nationalDocumentId": "string"
                    },
                    "metadata": {
                      "string": {}
                    },
                    "paymentMethod": {
                      "descriptor": "string",
                      "paymentType": "FIRST_PAYMENT",
                      "paymentMethodToken": "string",
                      "isVaulted": true,
                      "analyticsId": "string",
                      "paymentMethodType": "PAYMENT_CARD",
                      "paymentMethodData": {
                        "first6Digits": "string",
                        "last4Digits": "string",
                        "expirationMonth": "string",
                        "expirationYear": "string",
                        "cardholderName": "string",
                        "network": "string",
                        "isNetworkTokenized": true,
                        "binData": {
                          "network": "AMEX",
                          "issuerCountryCode": "AW",
                          "issuerName": "string",
                          "issuerCurrencyCode": "AED",
                          "regionalRestriction": "DOMESTIC_USE_ONLY",
                          "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                          "accountFundingType": "CREDIT",
                          "prepaidReloadableIndicator": "RELOADABLE",
                          "productUsageType": "CONSUMER",
                          "productCode": "string",
                          "productName": "string"
                        }
                      },
                      "threeDSecureAuthentication": {
                        "responseCode": "NOT_PERFORMED",
                        "reasonCode": "GATEWAY_UNAVAILABLE",
                        "reasonText": "string",
                        "protocolVersion": "string",
                        "challengeIssued": true
                      }
                    },
                    "processor": {
                      "name": "string",
                      "processorMerchantId": "string",
                      "amountCaptured": 0,
                      "amountRefunded": 0
                    },
                    "requiredAction": {
                      "name": "3DS_AUTHENTICATION",
                      "description": "string",
                      "clientToken": "string"
                    },
                    "statusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR",
                      "message": "string"
                    },
                    "transactions": [
                      {
                        "date": "string",
                        "amount": 0,
                        "currencyCode": "string",
                        "transactionType": "SALE",
                        "processorTransactionId": "string",
                        "processorName": "string",
                        "processorMerchantId": "string",
                        "processorStatus": "PENDING",
                        "processorStatusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR",
                          "message": "string"
                        }
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/refund",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {},
                  "responseStatusCode": 400,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "diagnosticsId": "string",
                    "validationErrors": [
                      {
                        "string": {}
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/refund",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {},
                  "responseStatusCode": 422,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "diagnosticsId": "string",
                    "validationErrors": [
                      {
                        "string": {}
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "<p/>\n\nBy default, this request will refund the full amount.\n\nOptionally, pass in a lesser amount for a partial refund.\n",
              "htmlDescription": "<p/>\n\n<p>By default, this request will refund the full amount.</p>\n<p>Optionally, pass in a lesser amount for a partial refund.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            },
            {
              "environments": [],
              "availability": null,
              "defaultEnvironment": null,
              "urlSlug": "resume-a-payment",
              "method": "POST",
              "id": "resumePayment",
              "name": "Resume a payment",
              "path": {
                "pathParameters": [
                  {
                    "key": "id",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "description": "ID of payment to resume."
                  }
                ],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payments/"
                  },
                  {
                    "type": "pathParameter",
                    "value": "id"
                  },
                  {
                    "type": "literal",
                    "value": "/resume"
                  }
                ]
              },
              "queryParameters": [],
              "headers": [],
              "request": {
                "contentType": "application/json",
                "type": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "resumeToken",
                      "valueType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "description": "A token containing any information that is sent back from the checkout to complete a blocked payment flow."
                    }
                  ]
                },
                "descriptionContainsMarkdown": false
              },
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:PaymentApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/resume",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "resumeToken": "string"
                  },
                  "responseStatusCode": 200,
                  "responseBody": {
                    "id": "string",
                    "date": "2023-01-01T00:00:00Z",
                    "status": "PENDING",
                    "orderId": "string",
                    "currencyCode": "string",
                    "amount": 0,
                    "order": {
                      "lineItems": [
                        {
                          "itemId": "string",
                          "description": "string",
                          "amount": 0,
                          "quantity": 0,
                          "discountAmount": 0,
                          "taxAmount": 0,
                          "taxCode": "string",
                          "productType": "PHYSICAL"
                        }
                      ],
                      "countryCode": "AW",
                      "fees": [
                        {
                          "amount": 0,
                          "type": "string",
                          "description": "string"
                        }
                      ],
                      "shipping": {
                        "amount": 0
                      }
                    },
                    "customerId": "string",
                    "customer": {
                      "emailAddress": "string",
                      "mobileNumber": "string",
                      "firstName": "string",
                      "lastName": "string",
                      "billingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "shippingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "taxId": "string",
                      "nationalDocumentId": "string"
                    },
                    "metadata": {
                      "string": {}
                    },
                    "paymentMethod": {
                      "descriptor": "string",
                      "paymentType": "FIRST_PAYMENT",
                      "paymentMethodToken": "string",
                      "isVaulted": true,
                      "analyticsId": "string",
                      "paymentMethodType": "PAYMENT_CARD",
                      "paymentMethodData": {
                        "first6Digits": "string",
                        "last4Digits": "string",
                        "expirationMonth": "string",
                        "expirationYear": "string",
                        "cardholderName": "string",
                        "network": "string",
                        "isNetworkTokenized": true,
                        "binData": {
                          "network": "AMEX",
                          "issuerCountryCode": "AW",
                          "issuerName": "string",
                          "issuerCurrencyCode": "AED",
                          "regionalRestriction": "DOMESTIC_USE_ONLY",
                          "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                          "accountFundingType": "CREDIT",
                          "prepaidReloadableIndicator": "RELOADABLE",
                          "productUsageType": "CONSUMER",
                          "productCode": "string",
                          "productName": "string"
                        }
                      },
                      "threeDSecureAuthentication": {
                        "responseCode": "NOT_PERFORMED",
                        "reasonCode": "GATEWAY_UNAVAILABLE",
                        "reasonText": "string",
                        "protocolVersion": "string",
                        "challengeIssued": true
                      }
                    },
                    "processor": {
                      "name": "string",
                      "processorMerchantId": "string",
                      "amountCaptured": 0,
                      "amountRefunded": 0
                    },
                    "requiredAction": {
                      "name": "3DS_AUTHENTICATION",
                      "description": "string",
                      "clientToken": "string"
                    },
                    "statusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR",
                      "message": "string"
                    },
                    "transactions": [
                      {
                        "date": "string",
                        "amount": 0,
                        "currencyCode": "string",
                        "transactionType": "SALE",
                        "processorTransactionId": "string",
                        "processorName": "string",
                        "processorMerchantId": "string",
                        "processorStatus": "PENDING",
                        "processorStatusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR",
                          "message": "string"
                        }
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/resume",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "resumeToken": "string"
                  },
                  "responseStatusCode": 400,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "diagnosticsId": "string",
                    "validationErrors": [
                      {
                        "string": {}
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "<p/>\n\nResume a payment's workflow execution from a paused state. This\nis usually required when a Workflow was paused in order to get further information\nfrom the customer, or when waiting for an asynchronous response from a third\nparty connection.\n",
              "htmlDescription": "<p/>\n\n<p>Resume a payment&#39;s workflow execution from a paused state. This\nis usually required when a Workflow was paused in order to get further information\nfrom the customer, or when waiting for an asynchronous response from a third\nparty connection.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            },
            {
              "environments": [],
              "availability": null,
              "defaultEnvironment": null,
              "urlSlug": "get-a-payment",
              "method": "GET",
              "id": "getPaymentById",
              "name": "Get a payment",
              "path": {
                "pathParameters": [
                  {
                    "key": "id",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "description": "ID of payment to retrieve."
                  }
                ],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payments/"
                  },
                  {
                    "type": "pathParameter",
                    "value": "id"
                  },
                  {
                    "type": "literal",
                    "value": ""
                  }
                ]
              },
              "queryParameters": [],
              "headers": [],
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:PaymentApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "responseStatusCode": 200,
                  "responseBody": {
                    "id": "string",
                    "date": "2023-01-01T00:00:00Z",
                    "status": "PENDING",
                    "orderId": "string",
                    "currencyCode": "string",
                    "amount": 0,
                    "order": {
                      "lineItems": [
                        {
                          "itemId": "string",
                          "description": "string",
                          "amount": 0,
                          "quantity": 0,
                          "discountAmount": 0,
                          "taxAmount": 0,
                          "taxCode": "string",
                          "productType": "PHYSICAL"
                        }
                      ],
                      "countryCode": "AW",
                      "fees": [
                        {
                          "amount": 0,
                          "type": "string",
                          "description": "string"
                        }
                      ],
                      "shipping": {
                        "amount": 0
                      }
                    },
                    "customerId": "string",
                    "customer": {
                      "emailAddress": "string",
                      "mobileNumber": "string",
                      "firstName": "string",
                      "lastName": "string",
                      "billingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "shippingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "taxId": "string",
                      "nationalDocumentId": "string"
                    },
                    "metadata": {
                      "string": {}
                    },
                    "paymentMethod": {
                      "descriptor": "string",
                      "paymentType": "FIRST_PAYMENT",
                      "paymentMethodToken": "string",
                      "isVaulted": true,
                      "analyticsId": "string",
                      "paymentMethodType": "PAYMENT_CARD",
                      "paymentMethodData": {
                        "first6Digits": "string",
                        "last4Digits": "string",
                        "expirationMonth": "string",
                        "expirationYear": "string",
                        "cardholderName": "string",
                        "network": "string",
                        "isNetworkTokenized": true,
                        "binData": {
                          "network": "AMEX",
                          "issuerCountryCode": "AW",
                          "issuerName": "string",
                          "issuerCurrencyCode": "AED",
                          "regionalRestriction": "DOMESTIC_USE_ONLY",
                          "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                          "accountFundingType": "CREDIT",
                          "prepaidReloadableIndicator": "RELOADABLE",
                          "productUsageType": "CONSUMER",
                          "productCode": "string",
                          "productName": "string"
                        }
                      },
                      "threeDSecureAuthentication": {
                        "responseCode": "NOT_PERFORMED",
                        "reasonCode": "GATEWAY_UNAVAILABLE",
                        "reasonText": "string",
                        "protocolVersion": "string",
                        "challengeIssued": true
                      }
                    },
                    "processor": {
                      "name": "string",
                      "processorMerchantId": "string",
                      "amountCaptured": 0,
                      "amountRefunded": 0
                    },
                    "requiredAction": {
                      "name": "3DS_AUTHENTICATION",
                      "description": "string",
                      "clientToken": "string"
                    },
                    "statusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR",
                      "message": "string"
                    },
                    "transactions": [
                      {
                        "date": "string",
                        "amount": 0,
                        "currencyCode": "string",
                        "transactionType": "SALE",
                        "processorTransactionId": "string",
                        "processorName": "string",
                        "processorMerchantId": "string",
                        "processorStatus": "PENDING",
                        "processorStatusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR",
                          "message": "string"
                        }
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "responseStatusCode": 400,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "diagnosticsId": "string",
                    "validationErrors": [
                      {
                        "string": {}
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "<p/>\n\nRetrieve a payment by its ID.\n",
              "htmlDescription": "<p/>\n\n<p>Retrieve a payment by its ID.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            }
          ],
          "types": [],
          "subpackages": [],
          "pointsTo": null,
          "urlSlug": "payments-api",
          "description": null,
          "webhooks": [],
          "descriptionContainsMarkdown": false
        },
        "subpackage_paymentMethodsApi": {
          "subpackageId": "subpackage_paymentMethodsApi",
          "name": "Payment Methods API",
          "endpoints": [
            {
              "environments": [],
              "availability": null,
              "defaultEnvironment": null,
              "urlSlug": "save-a-payment-method-token",
              "method": "POST",
              "id": "vault_payment_method_payment_methods__token__vault_post",
              "name": "Save a payment method token",
              "path": {
                "pathParameters": [
                  {
                    "key": "paymentMethodToken",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "description": "Payment method token to store."
                  }
                ],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payment-instruments/"
                  },
                  {
                    "type": "pathParameter",
                    "value": "paymentMethodToken"
                  },
                  {
                    "type": "literal",
                    "value": "/vault"
                  }
                ]
              },
              "queryParameters": [],
              "headers": [],
              "request": {
                "contentType": "application/json",
                "type": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "customerId",
                      "valueType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "description": "The ID representing the customer"
                    },
                    {
                      "key": "verify",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "boolean"
                          }
                        }
                      },
                      "description": "Whether the payment method should be verified before vaulting or not"
                    }
                  ]
                },
                "descriptionContainsMarkdown": false
              },
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:VerifiedMerchantPaymentMethodTokenApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:UnprocessableEntityErrorResponse"
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:UnprocessableEntityErrorResponse"
                    }
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payment-instruments/:paymentMethodToken/vault",
                  "pathParameters": {
                    "paymentMethodToken": ":paymentMethodToken"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "customerId": "string"
                  },
                  "responseStatusCode": 200,
                  "responseBody": {
                    "isVerified": true,
                    "createdAt": "2023-01-01T00:00:00Z",
                    "deletedAt": "2023-01-01T00:00:00Z",
                    "deleted": true,
                    "token": "string",
                    "tokenType": "string",
                    "analyticsId": "string",
                    "paymentMethodType": "PAYMENT_CARD",
                    "paymentMethodData": {
                      "last4Digits": "string",
                      "expirationMonth": "string",
                      "expirationYear": "string",
                      "cardholderName": "string",
                      "network": "string",
                      "networkTransactionId": "string",
                      "accountFundingType": "CREDIT"
                    },
                    "customerId": "string",
                    "description": "string",
                    "default": true
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payment-instruments/:paymentMethodToken/vault",
                  "pathParameters": {
                    "paymentMethodToken": ":paymentMethodToken"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "customerId": "string"
                  },
                  "responseStatusCode": 400,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "diagnosticsId": "string",
                    "validationErrors": [
                      {
                        "string": {}
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payment-instruments/:paymentMethodToken/vault",
                  "pathParameters": {
                    "paymentMethodToken": ":paymentMethodToken"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "customerId": "string"
                  },
                  "responseStatusCode": 422,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "diagnosticsId": "string",
                    "validationErrors": [
                      {
                        "string": {}
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "<p/>\n\nSave a `SINGLE_USE` payment method token so it can be used\nagain later. You can optionally choose to verify the payment method\nbefore vaulting. If verification fails, no payment method data will\nbe vaulted. Verification can minimise fraud and boost subscription\nrates for recurring payments.\n\nIf you try to vault an already vaulted token, you will get the existing vaulted token back.\n",
              "htmlDescription": "<p/>\n\n<p>Save a <code>SINGLE_USE</code> payment method token so it can be used\nagain later. You can optionally choose to verify the payment method\nbefore vaulting. If verification fails, no payment method data will\nbe vaulted. Verification can minimise fraud and boost subscription\nrates for recurring payments.</p>\n<p>If you try to vault an already vaulted token, you will get the existing vaulted token back.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            },
            {
              "environments": [],
              "availability": null,
              "defaultEnvironment": null,
              "urlSlug": "list-saved-payment-methods",
              "method": "GET",
              "id": "get_payment_methods_payment_methods_get",
              "name": "List saved payment methods",
              "path": {
                "pathParameters": [],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payment-instruments"
                  }
                ]
              },
              "queryParameters": [
                {
                  "key": "customer_id",
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  },
                  "description": "Return payment methods for this customer ID."
                }
              ],
              "headers": [],
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:VerifiedMerchantPaymentMethodTokenListApiResponse"
                  }
                }
              },
              "errors": [],
              "errorsV2": [],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payment-instruments",
                  "pathParameters": {},
                  "queryParameters": {
                    "customer_id": "string"
                  },
                  "headers": {},
                  "responseStatusCode": 200,
                  "responseBody": {
                    "data": [
                      {
                        "isVerified": true,
                        "createdAt": "2023-01-01T00:00:00Z",
                        "deletedAt": "2023-01-01T00:00:00Z",
                        "deleted": true,
                        "token": "string",
                        "tokenType": "string",
                        "analyticsId": "string",
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "last4Digits": "string",
                          "expirationMonth": "string",
                          "expirationYear": "string",
                          "cardholderName": "string",
                          "network": "string",
                          "networkTransactionId": "string",
                          "accountFundingType": "CREDIT"
                        },
                        "customerId": "string",
                        "description": "string",
                        "default": true
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "Retrieve a list of stored payment methods for a customer.",
              "htmlDescription": "<p>Retrieve a list of stored payment methods for a customer.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": false
            },
            {
              "environments": [],
              "availability": null,
              "defaultEnvironment": null,
              "urlSlug": "delete-a-saved-payment-method",
              "method": "DELETE",
              "id": "delete_payment_method_payment_methods__token__delete",
              "name": "Delete a saved payment method",
              "path": {
                "pathParameters": [
                  {
                    "key": "paymentMethodToken",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "description": "Saved payment method token to delete."
                  }
                ],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payment-instruments/"
                  },
                  {
                    "type": "pathParameter",
                    "value": "paymentMethodToken"
                  },
                  {
                    "type": "literal",
                    "value": ""
                  }
                ]
              },
              "queryParameters": [],
              "headers": [],
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:VerifiedMerchantPaymentMethodTokenApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payment-instruments/:paymentMethodToken",
                  "pathParameters": {
                    "paymentMethodToken": ":paymentMethodToken"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "responseStatusCode": 200,
                  "responseBody": {
                    "isVerified": true,
                    "createdAt": "2023-01-01T00:00:00Z",
                    "deletedAt": "2023-01-01T00:00:00Z",
                    "deleted": true,
                    "token": "string",
                    "tokenType": "string",
                    "analyticsId": "string",
                    "paymentMethodType": "PAYMENT_CARD",
                    "paymentMethodData": {
                      "last4Digits": "string",
                      "expirationMonth": "string",
                      "expirationYear": "string",
                      "cardholderName": "string",
                      "network": "string",
                      "networkTransactionId": "string",
                      "accountFundingType": "CREDIT"
                    },
                    "customerId": "string",
                    "description": "string",
                    "default": true
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payment-instruments/:paymentMethodToken",
                  "pathParameters": {
                    "paymentMethodToken": ":paymentMethodToken"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "responseStatusCode": 400,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "diagnosticsId": "string",
                    "validationErrors": [
                      {
                        "string": {}
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "Delete a saved payment method.",
              "htmlDescription": "<p>Delete a saved payment method.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": false
            },
            {
              "environments": [],
              "availability": null,
              "defaultEnvironment": null,
              "urlSlug": "update-the-default-saved-payment-method",
              "method": "POST",
              "id": "set_payment_method_default_payment_methods__token__default_post",
              "name": "Update the default saved payment method",
              "path": {
                "pathParameters": [
                  {
                    "key": "paymentMethodToken",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "description": "Saved payment method token to set to default."
                  }
                ],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payment-instruments/"
                  },
                  {
                    "type": "pathParameter",
                    "value": "paymentMethodToken"
                  },
                  {
                    "type": "literal",
                    "value": "/default"
                  }
                ]
              },
              "queryParameters": [],
              "headers": [],
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:MerchantPaymentMethodTokenApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payment-instruments/:paymentMethodToken/default",
                  "pathParameters": {
                    "paymentMethodToken": ":paymentMethodToken"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "responseStatusCode": 200,
                  "responseBody": {
                    "createdAt": "2023-01-01T00:00:00Z",
                    "deletedAt": "2023-01-01T00:00:00Z",
                    "deleted": true,
                    "token": "string",
                    "tokenType": "string",
                    "analyticsId": "string",
                    "paymentMethodType": "PAYMENT_CARD",
                    "paymentMethodData": {
                      "last4Digits": "string",
                      "expirationMonth": "string",
                      "expirationYear": "string",
                      "cardholderName": "string",
                      "network": "string",
                      "networkTransactionId": "string",
                      "accountFundingType": "CREDIT"
                    },
                    "customerId": "string",
                    "description": "string",
                    "default": true
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payment-instruments/:paymentMethodToken/default",
                  "pathParameters": {
                    "paymentMethodToken": ":paymentMethodToken"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "responseStatusCode": 400,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "diagnosticsId": "string",
                    "validationErrors": [
                      {
                        "string": {}
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "Update a saved payment method to be the default stored payment method for a customer.",
              "htmlDescription": "<p>Update a saved payment method to be the default stored payment method for a customer.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": false
            }
          ],
          "types": [],
          "subpackages": [],
          "pointsTo": null,
          "urlSlug": "payment-methods-api",
          "description": null,
          "webhooks": [],
          "descriptionContainsMarkdown": false
        }
      },
      "auth": {
        "type": "header",
        "headerWireValue": "X-API-KEY",
        "nameOverride": "apiKey"
      },
      "hasMultipleBaseUrls": false
    },
    "95ddda06-15e0-44ae-8e19-3131ee929616": {
      "id": "95ddda06-15e0-44ae-8e19-3131ee929616",
      "rootPackage": {
        "endpoints": [],
        "subpackages": ["subpackage_clientSessionApi", "subpackage_paymentsApi", "subpackage_paymentMethodsApi"],
        "types": [
          "type_:ClientSessionApiRequest",
          "type_:PaymentCaptureApiRequest",
          "type_:PaymentCancelApiRequest",
          "type_:PaymentRefundApiRequest",
          "type_:AccountFundingTypeEnum",
          "type_:ApayaCustomerTokenApiSchema",
          "type_:BinDataOptionalApiSchema",
          "type_:BinDataApiSchema",
          "type_:BlockingPaymentActionTypeEnum",
          "type_:CardAccountNumberTypeEnum",
          "type_:CardNetworkEnum",
          "type_:CardProductTypeEnum",
          "type_:CardRegionRestrictionEnum",
          "type_:ClientSessionUpdateApiRequest",
          "type_:OrderDetailsApiSchema",
          "type_:OrderFeesApiSchema",
          "type_:OrderLineItemsApiSchema",
          "type_:OrderShippingApiSchema",
          "type_:CheckoutPaymentMethodOptionsApiSchema",
          "type_:CheckoutPaymentMethodOptionsApiSchemaOptions",
          "type_:CheckoutPaymentMethodOptionApiSchema",
          "type_:CheckoutPaymentMethodCardOptionApiSchema",
          "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema",
          "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
          "type_:CheckoutPaymentMethodOptionSurchargeApiSchema",
          "type_:PaymentRequestPaymentMethodOptionsApiSchema",
          "type_:PaymentResponsePaymentMethodOptionsApiSchema",
          "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData",
          "type_:CheckoutCustomerDetailsApiSchema",
          "type_:CustomerDetailsApiSchema",
          "type_:ClientSessionApiResponse",
          "type_:ClientSessionWarningsApiResponse",
          "type_:CountryCodeEnum",
          "type_:Currency",
          "type_:PaymentResponseProcessorApiSchema",
          "type_:GoCardlessMandateApiSchema",
          "type_:IdealPayNlTokenApiSchema",
          "type_:KlarnaAddressApiSchema",
          "type_:KlarnaCustomerTokenApiSchema",
          "type_:KlarnaPaymentSessionApiSchema",
          "type_:KlarnaSessionDetailsApiSchema",
          "type_:KlarnaTokenDetails",
          "type_:PayPalBillingAgreementApiSchema",
          "type_:PayPalExternalPayerInfoApiSchema",
          "type_:PayPalOrderTokenApiSchema",
          "type_:PaymentApiResponse",
          "type_:PaymentCardTokenApiSchema",
          "type_:StatusReasonApiSchema",
          "type_:PaymentMethodTypeEnum",
          "type_:PaymentListApiResponse",
          "type_:PaymentRequiredActionApiSchema",
          "type_:PaymentSummaryApiSchema",
          "type_:PaymentSummaryProcessorApiSchema",
          "type_:PrepaidReloadableEnum",
          "type_:RecurringTransactionTypeEnum",
          "type_:ProductTypeEnum",
          "type_:ThreeDSecureAuthResponseCodeEnum",
          "type_:ThreeDSecureAuthenticationApiSchema",
          "type_:ThreeDSecureAuthenticationApiSchemaReasonCode",
          "type_:ThreeDSecureFailedReasonCodeEnum",
          "type_:ThreeDSecureSkippedReasonCodeEnum",
          "type_:TokenTypeEnum",
          "type_:DeclineTypeEnum",
          "type_:TransactionDeclineReasonV2Enum",
          "type_:TransactionOverviewApiSchema",
          "type_:PaymentStatus",
          "type_:PaymentStatusTypeEnum",
          "type_:TransactionTypeEnum",
          "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema",
          "type_:AddressApiSchema",
          "type_:MerchantPaymentMethodTokenApiResponse",
          "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData",
          "type_:MerchantPaymentMethodTokenListApiResponse",
          "type_:PaymentCardTokenApiSchemaPaymentMethodsApi",
          "type_:ErrorObject",
          "type_:BadRequestErrorResponse",
          "type_:UnprocessableEntityErrorResponse"
        ],
        "webhooks": []
      },
      "types": {
        "type_:ClientSessionApiRequest": {
          "description": null,
          "name": "ClientSessionApiRequest",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Your reference for the payment.",
                "htmlDescription": "<p>Your reference for the payment.</p>\n",
                "key": "orderId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The three-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes). e.g. use `USD` for US dollars.",
                "htmlDescription": "<p>The three-letter currency code in <a href=\"https://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 format</a>. e.g. use <code>USD</code> for US dollars.</p>\n",
                "key": "currencyCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts.",
                "htmlDescription": "<p>The amount you would like to charge the customer, in minor units. e.g. for $7, use <code>700</code>.</p>\n<p>Some currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use <code>100</code>.</p>\n<p>If the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "More information associated with the order.",
                "htmlDescription": "<p>More information associated with the order.</p>\n",
                "key": "order",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:OrderDetailsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "A unique identifier for your customer.\nCreate a client session token with a customer ID to enable the client-side SDK to retrieve and manage your customer's saved payment methods.",
                "htmlDescription": "<p>A unique identifier for your customer.\nCreate a client session token with a customer ID to enable the client-side SDK to retrieve and manage your customer&#39;s saved payment methods.</p>\n",
                "key": "customerId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "More information associated with the customer.",
                "htmlDescription": "<p>More information associated with the customer.</p>\n",
                "key": "customer",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutCustomerDetailsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`\n",
                "htmlDescription": "<p>Additional data to be used throughout the payment lifecycle.</p>\n<p>A dictionary of key-value pairs where the values can only be strings or\nintegers.</p>\n<p>e.g. <code>{&quot;productId&quot;: 1001, &quot;merchantId&quot;: &quot;a13bsd62s&quot;}</code></p>\n",
                "key": "metadata",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "unknown"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "Enable certain options associated with the payment method.",
                "htmlDescription": "<p>Enable certain options associated with the payment method.</p>\n",
                "key": "paymentMethod",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentCaptureApiRequest": {
          "description": null,
          "name": "PaymentCaptureApiRequest",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The amount you would like to capture, in minor units. The currency used on authorization is assumed.\n\nIf no amount is specified it defaults to the full amount.",
                "htmlDescription": "<p>The amount you would like to capture, in minor units. The currency used on authorization is assumed.</p>\n<p>If no amount is specified it defaults to the full amount.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Indicates whether the capture request is the final capture request.\n\nAfter a final capture, no subsequent captures are allowed.",
                "htmlDescription": "<p>Indicates whether the capture request is the final capture request.</p>\n<p>After a final capture, no subsequent captures are allowed.</p>\n",
                "key": "final",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentCancelApiRequest": {
          "description": null,
          "name": "PaymentCancelApiRequest",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "You can optionally specify a reason for the cancellation. This is for your own records.",
                "htmlDescription": "<p>You can optionally specify a reason for the cancellation. This is for your own records.</p>\n",
                "key": "reason",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentRefundApiRequest": {
          "description": null,
          "name": "PaymentRefundApiRequest",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The amount you would like to refund the customer, in minor units. e.g. for $7, use `700`.\n\nDefaults to remaining non-refunded amount.",
                "htmlDescription": "<p>The amount you would like to refund the customer, in minor units. e.g. for $7, use <code>700</code>.</p>\n<p>Defaults to remaining non-refunded amount.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "Optionally you can pass a specific order ID for the refund.\n\nBy default this will be set to the original `orderId` given on payment creation.",
                "htmlDescription": "<p>Optionally you can pass a specific order ID for the refund.</p>\n<p>By default this will be set to the original <code>orderId</code> given on payment creation.</p>\n",
                "key": "orderId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "You can optionally specify a reason for the refund. This is for your own records.",
                "htmlDescription": "<p>You can optionally specify a reason for the refund. This is for your own records.</p>\n",
                "key": "reason",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:AccountFundingTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "AccountFundingTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "CREDIT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DEBIT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PREPAID",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CHARGE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DEFERRED_DEBIT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNKNOWN",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ApayaCustomerTokenApiSchema": {
          "description": null,
          "name": "ApayaCustomerTokenApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "mx",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "mnc",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "mcc",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:BinDataOptionalApiSchema": {
          "description": null,
          "name": "BinDataOptionalApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "network",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CardNetworkEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:BinDataApiSchema": {
          "description": null,
          "name": "BinDataApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "network",
                "valueType": {
                  "type": "id",
                  "value": "type_:CardNetworkEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "issuerCountryCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CountryCodeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "issuerName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "issuerCurrencyCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:Currency"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "regionalRestriction",
                "valueType": {
                  "type": "id",
                  "value": "type_:CardRegionRestrictionEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "accountNumberType",
                "valueType": {
                  "type": "id",
                  "value": "type_:CardAccountNumberTypeEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "accountFundingType",
                "valueType": {
                  "type": "id",
                  "value": "type_:AccountFundingTypeEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "prepaidReloadableIndicator",
                "valueType": {
                  "type": "id",
                  "value": "type_:PrepaidReloadableEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "productUsageType",
                "valueType": {
                  "type": "id",
                  "value": "type_:CardProductTypeEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "productCode",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "productName",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:BlockingPaymentActionTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "BlockingPaymentActionTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "3DS_AUTHENTICATION",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "USE_PRIMER_SDK",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CardAccountNumberTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "CardAccountNumberTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "PRIMARY_ACCOUNT_NUMBER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NETWORK_TOKEN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNKNOWN",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CardNetworkEnum": {
          "description": "The list of available card networks.\n",
          "htmlDescription": "<p>The list of available card networks.</p>\n",
          "name": "CardNetworkEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "AMEX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DANKORT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DINERS_CLUB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DISCOVER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ENROUTE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ELO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HIPER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "INTERAC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JCB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MAESTRO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MASTERCARD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MIR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PRIVATE_LABEL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNIONPAY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VISA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "OTHER",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CardProductTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "CardProductTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "CONSUMER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BUSINESS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GOVERNMENT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNKNOWN",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CardRegionRestrictionEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "CardRegionRestrictionEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "DOMESTIC_USE_ONLY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NONE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNKNOWN",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ClientSessionUpdateApiRequest": {
          "description": null,
          "name": "ClientSessionUpdateApiRequest",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "A unique identifier for your customer.",
                "htmlDescription": "<p>A unique identifier for your customer.</p>\n",
                "key": "customerId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Your reference for the order.",
                "htmlDescription": "<p>Your reference for the order.</p>\n",
                "key": "orderId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The three-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes). e.g. use `USD` for US dollars.",
                "htmlDescription": "<p>The three-letter currency code in <a href=\"https://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 format</a>. e.g. use <code>USD</code> for US dollars.</p>\n",
                "key": "currencyCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.",
                "htmlDescription": "<p>The amount you would like to charge the customer, in minor units. e.g. for $7, use <code>700</code>.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "Additional data to be used throughout the payment lifecycle.\n\nProvide the entire object to update it. Anything provided previously will be overwritten.\n",
                "htmlDescription": "<p>Additional data to be used throughout the payment lifecycle.</p>\n<p>Provide the entire object to update it. Anything provided previously will be overwritten.</p>\n",
                "key": "metadata",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "unknown"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "More information associated with the customer.\n\nEach of the fields in this object must be updated in its entirety, i.e. provide the entire object to update it. Anything provided previously will be overwritten.\n",
                "htmlDescription": "<p>More information associated with the customer.</p>\n<p>Each of the fields in this object must be updated in its entirety, i.e. provide the entire object to update it. Anything provided previously will be overwritten.</p>\n",
                "key": "customer",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutCustomerDetailsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "More information associated with the order.\n\nEach of the fields in this object must be updated in its entirety, i.e. provide the entire object to update it. Anything provided previously will be overwritten.\n",
                "htmlDescription": "<p>More information associated with the order.</p>\n<p>Each of the fields in this object must be updated in its entirety, i.e. provide the entire object to update it. Anything provided previously will be overwritten.</p>\n",
                "key": "order",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:OrderDetailsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Enable certain options associated with the payment method. Provide the entire object to update it. Anything provided previously will be overwritten.",
                "htmlDescription": "<p>Enable certain options associated with the payment method. Provide the entire object to update it. Anything provided previously will be overwritten.</p>\n",
                "key": "paymentMethod",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:OrderDetailsApiSchema": {
          "description": null,
          "name": "OrderDetailsApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The country in which the order is created",
                "htmlDescription": "<p>The country in which the order is created</p>\n",
                "key": "countryCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CountryCodeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The details of fees charged.",
                "htmlDescription": "<p>The details of fees charged.</p>\n",
                "key": "fees",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OrderFeesApiSchema"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The details of the line items of the order.",
                "htmlDescription": "<p>The details of the line items of the order.</p>\n",
                "key": "lineItems",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OrderLineItemsApiSchema"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The details of shipping charged.",
                "htmlDescription": "<p>The details of shipping charged.</p>\n",
                "key": "shipping",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:OrderShippingApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:OrderFeesApiSchema": {
          "description": null,
          "name": "OrderFeesApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The fee amount charged to the customer, in minor  units. e.g. for $7, use `700`.",
                "htmlDescription": "<p>The fee amount charged to the customer, in minor  units. e.g. for $7, use <code>700</code>.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "The type of fee.",
                "htmlDescription": "<p>The type of fee.</p>\n",
                "key": "type",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "A description of the fee, e.g. \"Currency Conversion Fee\".",
                "htmlDescription": "<p>A description of the fee, e.g. &quot;Currency Conversion Fee&quot;.</p>\n",
                "key": "description",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:OrderLineItemsApiSchema": {
          "description": null,
          "name": "OrderLineItemsApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "A unique identifier for the line item.",
                "htmlDescription": "<p>A unique identifier for the line item.</p>\n",
                "key": "itemId",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "A description of the item.",
                "htmlDescription": "<p>A description of the item.</p>\n",
                "key": "description",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The amount charged to the customer, in minor units. The minimum amount is 0.",
                "htmlDescription": "<p>The amount charged to the customer, in minor units. The minimum amount is 0.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Any discount applicable to this item, in minor units.",
                "htmlDescription": "<p>Any discount applicable to this item, in minor units.</p>\n",
                "key": "discountAmount",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The number of the particular line item that is being ordered.",
                "htmlDescription": "<p>The number of the particular line item that is being ordered.</p>\n",
                "key": "quantity",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The tax charged on this item (if known), in minor units.",
                "htmlDescription": "<p>The tax charged on this item (if known), in minor units.</p>\n",
                "key": "taxAmount",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The tax code associated with this item, in minor units. This is required for Primer-initiated tax calculations.",
                "htmlDescription": "<p>The tax code associated with this item, in minor units. This is required for Primer-initiated tax calculations.</p>\n",
                "key": "taxCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "An identifier for the product type.",
                "htmlDescription": "<p>An identifier for the product type.</p>\n",
                "key": "productType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:ProductTypeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:OrderShippingApiSchema": {
          "description": null,
          "name": "OrderShippingApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The shipping amount charged to the customer, in minor  units. e.g. for $7, use `700`.",
                "htmlDescription": "<p>The shipping amount charged to the customer, in minor  units. e.g. for $7, use <code>700</code>.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CheckoutPaymentMethodOptionsApiSchema": {
          "description": null,
          "name": "CheckoutPaymentMethodOptionsApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Whether the payment method should be vaulted on a successful payment or not.",
                "htmlDescription": "<p>Whether the payment method should be vaulted on a successful payment or not.</p>\n",
                "key": "vaultOnSuccess",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Additional options for the payment methods represented as dictionary \nwith key of [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) and value of corresponding options.\n",
                "htmlDescription": "<p>Additional options for the payment methods represented as dictionary \nwith key of <a href=\"https://primer.io/docs/payment-methods/available-payment-methods\">available payment methods</a> and value of corresponding options.</p>\n",
                "key": "options",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionsApiSchemaOptions"
                  }
                },
                "descriptionContainsMarkdown": true
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CheckoutPaymentMethodOptionsApiSchemaOptions": {
          "description": "Additional options for the payment methods represented as dictionary \nwith key of [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) and value of corresponding options.\n",
          "htmlDescription": "<p>Additional options for the payment methods represented as dictionary \nwith key of <a href=\"https://primer.io/docs/payment-methods/available-payment-methods\">available payment methods</a> and value of corresponding options.</p>\n",
          "name": "CheckoutPaymentMethodOptionsApiSchemaOptions",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "<PAYMENT_METHOD_TYPE>",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "PAYMENT_CARD",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodCardOptionApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": true
        },
        "type_:CheckoutPaymentMethodOptionApiSchema": {
          "description": "Options for the payment method of type `PAYMENT_METHOD_TYPE`. \n",
          "htmlDescription": "<p>Options for the payment method of type <code>PAYMENT_METHOD_TYPE</code>. </p>\n",
          "name": "CheckoutPaymentMethodOptionApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Surcharge information",
                "htmlDescription": "<p>Surcharge information</p>\n",
                "key": "surcharge",
                "valueType": {
                  "type": "id",
                  "value": "type_:CheckoutPaymentMethodOptionSurchargeApiSchema"
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": true
        },
        "type_:CheckoutPaymentMethodCardOptionApiSchema": {
          "description": null,
          "name": "CheckoutPaymentMethodCardOptionApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Dictionary of available card networks as a key with value of Payment Method Card Network Option.",
                "htmlDescription": "<p>Dictionary of available card networks as a key with value of Payment Method Card Network Option.</p>\n",
                "key": "networks",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema": {
          "description": null,
          "name": "CheckoutPaymentMethodOptionCardNetworkApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "AMEX",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "DANKORT",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "DINERS_CLUB",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "DISCOVER",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "ENROUTE",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "ELO",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "HIPER",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "INTERAC",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "JCB",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "MAESTRO",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "MASTERCARD",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "MIR",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "PRIVATE_LABEL",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "UNIONPAY",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "VISA",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "OTHER",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema": {
          "description": null,
          "name": "CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Surcharge information",
                "htmlDescription": "<p>Surcharge information</p>\n",
                "key": "surcharge",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CheckoutPaymentMethodOptionSurchargeApiSchema": {
          "description": null,
          "name": "CheckoutPaymentMethodOptionSurchargeApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The surcharge amount, in minor units. Surcharge amount must be used in conjunction with line item amounts, if a top level amount is passed then surcharge will not be calculated.",
                "htmlDescription": "<p>The surcharge amount, in minor units. Surcharge amount must be used in conjunction with line item amounts, if a top level amount is passed then surcharge will not be calculated.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentRequestPaymentMethodOptionsApiSchema": {
          "description": null,
          "name": "PaymentRequestPaymentMethodOptionsApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Whether the payment method should be vaulted on a successful payment or not.",
                "htmlDescription": "<p>Whether the payment method should be vaulted on a successful payment or not.</p>\n",
                "key": "vaultOnSuccess",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "A description of the payment, as it would typically appear on a bank statement.",
                "htmlDescription": "<p>A description of the payment, as it would typically appear on a bank statement.</p>\n",
                "key": "descriptor",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Payment types, primarily to be used for recurring payments.\nNote: If you successfully vault a `SINGLE_USE` token on payment creation, then there's no need to set a value for this field and it will be flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all possible values.\n\n| paymentType | Use case |\n| --- | --- |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario.\n| `ECOMMERCE` | a customer-initiated payment using stored payment details where the cardholder is present.\n| `SUBSCRIPTION` | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.\n| `UNSCHEDULED` | a merchant-initiated payment using stored payment details with no fixed schedule or amount.",
                "htmlDescription": "<p>Payment types, primarily to be used for recurring payments.\nNote: If you successfully vault a <code>SINGLE_USE</code> token on payment creation, then there&#39;s no need to set a value for this field and it will be flagged as <code>FIRST_PAYMENT</code>. Otherwise, see the table below for all possible values.</p>\n<table>\n<thead>\n<tr>\n<th>paymentType</th>\n<th>Use case</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>FIRST_PAYMENT</code></td>\n<td>a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario.</td>\n</tr>\n<tr>\n<td><code>ECOMMERCE</code></td>\n<td>a customer-initiated payment using stored payment details where the cardholder is present.</td>\n</tr>\n<tr>\n<td><code>SUBSCRIPTION</code></td>\n<td>a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.</td>\n</tr>\n<tr>\n<td><code>UNSCHEDULED</code></td>\n<td>a merchant-initiated payment using stored payment details with no fixed schedule or amount.</td>\n</tr>\n</tbody></table>\n",
                "key": "paymentType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:RecurringTransactionTypeEnum"
                  }
                },
                "descriptionContainsMarkdown": true
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentResponsePaymentMethodOptionsApiSchema": {
          "description": null,
          "name": "PaymentResponsePaymentMethodOptionsApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The description of the payment, as it would typically appear on a bank statement.",
                "htmlDescription": "<p>The description of the payment, as it would typically appear on a bank statement.</p>\n",
                "key": "descriptor",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The payment method token used to authorize the transaction.",
                "htmlDescription": "<p>The payment method token used to authorize the transaction.</p>\n",
                "key": "paymentMethodToken",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "If the payment method token was vaulted, this is the new token. Use this token for recurring payments.",
                "htmlDescription": "<p>If the payment method token was vaulted, this is the new token. Use this token for recurring payments.</p>\n",
                "key": "vaultedPaymentMethodToken",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Unique analytics identifier corresponding to a payment method",
                "htmlDescription": "<p>Unique analytics identifier corresponding to a payment method</p>\n",
                "key": "analyticsId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Payment method type",
                "htmlDescription": "<p>Payment method type</p>\n",
                "key": "paymentMethodType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentMethodTypeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Payment method data",
                "htmlDescription": "<p>Payment method data</p>\n",
                "key": "paymentMethodData",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "threeDSecureAuthentication",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:ThreeDSecureAuthenticationApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData": {
          "description": "Payment method data",
          "htmlDescription": "<p>Payment method data</p>\n",
          "name": "PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData",
          "shape": {
            "type": "undiscriminatedUnion",
            "variants": [
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:PaymentCardTokenApiSchema"
                },
                "displayName": "Payment Card Token Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:PayPalOrderTokenApiSchema"
                },
                "displayName": "Pay Pal Order Token Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:PayPalBillingAgreementApiSchema"
                },
                "displayName": "Pay Pal Billing Agreement Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:GoCardlessMandateApiSchema"
                },
                "displayName": "Go Cardless Mandate Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:KlarnaPaymentSessionApiSchema"
                },
                "displayName": "Klarna Payment Session Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:KlarnaCustomerTokenApiSchema"
                },
                "displayName": "Klarna Customer Token Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:IdealPayNlTokenApiSchema"
                },
                "displayName": "Ideal Pay Nl Token Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:ApayaCustomerTokenApiSchema"
                },
                "displayName": "Apaya Customer Token Api Schema",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CheckoutCustomerDetailsApiSchema": {
          "description": null,
          "name": "CheckoutCustomerDetailsApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Customer email address.\n",
                "htmlDescription": "<p>Customer email address.</p>\n",
                "key": "emailAddress",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The customer's mobile number",
                "htmlDescription": "<p>The customer&#39;s mobile number</p>\n",
                "key": "mobileNumber",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The customer's first name",
                "htmlDescription": "<p>The customer&#39;s first name</p>\n",
                "key": "firstName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The customer's last name",
                "htmlDescription": "<p>The customer&#39;s last name</p>\n",
                "key": "lastName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Customer billing address.\n",
                "htmlDescription": "<p>Customer billing address.</p>\n",
                "key": "billingAddress",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Customer shipping address",
                "htmlDescription": "<p>Customer shipping address</p>\n",
                "key": "shippingAddress",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The customer's tax id number for tax exemptions",
                "htmlDescription": "<p>The customer&#39;s tax id number for tax exemptions</p>\n",
                "key": "taxId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The customer's national identification number",
                "htmlDescription": "<p>The customer&#39;s national identification number</p>\n",
                "key": "nationalDocumentId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CustomerDetailsApiSchema": {
          "description": null,
          "name": "CustomerDetailsApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Customer email address.\n\nNote: It is recommended to include this field if a 3DS check will be performed\n",
                "htmlDescription": "<p>Customer email address.</p>\n<p>Note: It is recommended to include this field if a 3DS check will be performed</p>\n",
                "key": "emailAddress",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The customer's mobile number",
                "htmlDescription": "<p>The customer&#39;s mobile number</p>\n",
                "key": "mobileNumber",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The customer's first name",
                "htmlDescription": "<p>The customer&#39;s first name</p>\n",
                "key": "firstName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The customer's last name",
                "htmlDescription": "<p>The customer&#39;s last name</p>\n",
                "key": "lastName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Customer billing address.\n\nNote: It is recommended to include this field if a 3DS check will be performed\n",
                "htmlDescription": "<p>Customer billing address.</p>\n<p>Note: It is recommended to include this field if a 3DS check will be performed</p>\n",
                "key": "billingAddress",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Customer shipping address",
                "htmlDescription": "<p>Customer shipping address</p>\n",
                "key": "shippingAddress",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The customer's tax id number for tax exemptions",
                "htmlDescription": "<p>The customer&#39;s tax id number for tax exemptions</p>\n",
                "key": "taxId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The customer's national identification number",
                "htmlDescription": "<p>The customer&#39;s national identification number</p>\n",
                "key": "nationalDocumentId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ClientSessionApiResponse": {
          "description": null,
          "name": "ClientSessionApiResponse",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Client token used to initialize the SDK on all platforms.",
                "htmlDescription": "<p>Client token used to initialize the SDK on all platforms.</p>\n",
                "key": "clientToken",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Expiration date & time of the client token (UTC with no timezoneinfo).",
                "htmlDescription": "<p>Expiration date &amp; time of the client token (UTC with no timezoneinfo).</p>\n",
                "key": "clientTokenExpirationDate",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Your reference for the payment.",
                "htmlDescription": "<p>Your reference for the payment.</p>\n",
                "key": "orderId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The three-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes). e.g. use `USD` for US dollars.",
                "htmlDescription": "<p>The three-letter currency code in <a href=\"https://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 format</a>. e.g. use <code>USD</code> for US dollars.</p>\n",
                "key": "currencyCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "The amount you are going to charge the customer, in minor units. This amount is calculated from the line items, shipping and other amounts provided in the `order`. \nIf a top-level amount is provided, it would override any calculated amount.",
                "htmlDescription": "<p>The amount you are going to charge the customer, in minor units. This amount is calculated from the line items, shipping and other amounts provided in the <code>order</code>. \nIf a top-level amount is provided, it would override any calculated amount.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "More information associated with the order.",
                "htmlDescription": "<p>More information associated with the order.</p>\n",
                "key": "order",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:OrderDetailsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "A unique identifier for your customer.",
                "htmlDescription": "<p>A unique identifier for your customer.</p>\n",
                "key": "customerId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "More information associated with the customer.",
                "htmlDescription": "<p>More information associated with the customer.</p>\n",
                "key": "customer",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CustomerDetailsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Additional data to be used throughout the payment lifecycle.\n",
                "htmlDescription": "<p>Additional data to be used throughout the payment lifecycle.</p>\n",
                "key": "metadata",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "unknown"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Enable certain options associated with the payment methods.",
                "htmlDescription": "<p>Enable certain options associated with the payment methods.</p>\n",
                "key": "paymentMethod",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Warning messages to indicate missing information that are required for payment methods, checkout modules and other features; or when third-party services are unavailable.",
                "htmlDescription": "<p>Warning messages to indicate missing information that are required for payment methods, checkout modules and other features; or when third-party services are unavailable.</p>\n",
                "key": "warnings",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:ClientSessionWarningsApiResponse"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ClientSessionWarningsApiResponse": {
          "description": null,
          "name": "ClientSessionWarningsApiResponse",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The type of the connection involved",
                "htmlDescription": "<p>The type of the connection involved</p>\n",
                "key": "type",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "A unique code describing the particular issue",
                "htmlDescription": "<p>A unique code describing the particular issue</p>\n",
                "key": "code",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "More information as to the reason for the warning",
                "htmlDescription": "<p>More information as to the reason for the warning</p>\n",
                "key": "message",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CountryCodeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "CountryCodeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "AW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BJ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DJ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ES",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ET",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FJ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ID",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ML",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ME",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "YT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "OM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "QA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SJ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ST",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TJ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "US",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "WF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "WS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "YE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZW",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:Currency": {
          "description": "Enumerates all supported currencies",
          "htmlDescription": "<p>Enumerates all supported currencies</p>\n",
          "name": "Currency",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "AED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AFN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ALL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AMD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ANG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AOA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ARS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AUD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AWG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AZN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BAM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BBD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BDT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BGN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BHD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BIF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BMD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BND",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BOB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BOV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BRL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BSD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BTN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BWP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BYR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BYN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BZD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CAD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CDF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CHE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CHF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CHW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CLF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CLP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CNY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "COP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "COU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CRC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CUC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CUP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CVE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CZK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DJF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DKK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DOP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DZD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EGP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ERN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ETB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EUR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FJD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FKP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GBP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GEL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GHS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GIP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GMD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GNF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GTQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GYD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HKD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HNL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HRK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HTG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HUF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IDR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ILS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "INR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IQD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IRR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ISK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JMD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JOD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JPY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KES",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KGS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KHR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KMF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KPW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KRW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KWD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KYD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KZT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LAK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LBP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LKR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LRD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LSL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LTL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LVL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LYD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MAD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MDL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MGA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MKD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MMK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MNT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MOP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MRO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MUR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MVR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MWK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MXN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MXV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MYR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MZN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NAD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NGN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NIO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NOK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NPR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NZD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "OMR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PAB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PEN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PGK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PHP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PKR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PLN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PYG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "QAR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RON",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RSD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RUB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RWF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SAR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SBD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SCR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SDG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SEK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SGD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SHP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SLL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SOS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SRD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SSP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "STD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SVC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SYP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SZL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "THB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TJS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TMT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TND",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TOP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TRY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TTD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TWD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TZS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UAH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UGX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "USD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "USN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "USS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UYI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UYU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UZS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VEF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VND",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VUV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "WST",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XAF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XAG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XAU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XBA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XBB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XBC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XBD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XCD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XDR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XFU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XOF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XPD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XPF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XPT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XSU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XTS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XUA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "YER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZAR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZMW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZWL",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentResponseProcessorApiSchema": {
          "description": null,
          "name": "PaymentResponseProcessorApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The payment processor used for this payment.",
                "htmlDescription": "<p>The payment processor used for this payment.</p>\n",
                "key": "name",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The merchant ID registered at the payment processor used for this payment.",
                "htmlDescription": "<p>The merchant ID registered at the payment processor used for this payment.</p>\n",
                "key": "processorMerchantId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "If no capture was performed, this value will be set to `0`.\n\nIf one or more partial captures were performed, this value will be a sum\nof all partial capture amounts.\n",
                "htmlDescription": "<p>If no capture was performed, this value will be set to <code>0</code>.</p>\n<p>If one or more partial captures were performed, this value will be a sum\nof all partial capture amounts.</p>\n",
                "key": "amountCaptured",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "If no refund was performed, this value will be set to `0`.\n\nIf one or more partial refunds were performed, this value will be a sum\nof all partial refund amounts.\n",
                "htmlDescription": "<p>If no refund was performed, this value will be set to <code>0</code>.</p>\n<p>If one or more partial refunds were performed, this value will be a sum\nof all partial refund amounts.</p>\n",
                "key": "amountRefunded",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:GoCardlessMandateApiSchema": {
          "description": null,
          "name": "GoCardlessMandateApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Unique identifier of a GoCardless mandate agreement",
                "htmlDescription": "<p>Unique identifier of a GoCardless mandate agreement</p>\n",
                "key": "gocardlessMandateId",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:IdealPayNlTokenApiSchema": {
          "description": null,
          "name": "IdealPayNlTokenApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "paymentMethodConfigId",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:KlarnaAddressApiSchema": {
          "description": null,
          "name": "KlarnaAddressApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "title",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "firstName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "lastName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "email",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "phoneNumber",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "addressLine1",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "addressLine2",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "addressLine3",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "city",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "state",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "countryCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CountryCodeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "postalCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:KlarnaCustomerTokenApiSchema": {
          "description": null,
          "name": "KlarnaCustomerTokenApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "klarnaCustomerToken",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "sessionData",
                "valueType": {
                  "type": "id",
                  "value": "type_:KlarnaSessionDetailsApiSchema"
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:KlarnaPaymentSessionApiSchema": {
          "description": null,
          "name": "KlarnaPaymentSessionApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "klarnaAuthorizationToken",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "sessionData",
                "valueType": {
                  "type": "id",
                  "value": "type_:KlarnaSessionDetailsApiSchema"
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:KlarnaSessionDetailsApiSchema": {
          "description": null,
          "name": "KlarnaSessionDetailsApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "recurringDescription",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "billingAddress",
                "valueType": {
                  "type": "id",
                  "value": "type_:KlarnaAddressApiSchema"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "shippingAddress",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:KlarnaAddressApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "purchaseCountry",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "purchaseCurrency",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "locale",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "orderLines",
                "valueType": {
                  "type": "list",
                  "itemType": {
                    "type": "unknown"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "tokenDetails",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:KlarnaTokenDetails"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:KlarnaTokenDetails": {
          "description": null,
          "name": "KlarnaTokenDetails",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "type",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "brand",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "masked_number",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "expiry_date",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PayPalBillingAgreementApiSchema": {
          "description": null,
          "name": "PayPalBillingAgreementApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "paypalBillingAgreementId",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Information about the PayPal customer",
                "htmlDescription": "<p>Information about the PayPal customer</p>\n",
                "key": "externalPayerInfo",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PayPalExternalPayerInfoApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The PayPal customer's shipping address",
                "htmlDescription": "<p>The PayPal customer&#39;s shipping address</p>\n",
                "key": "shippingAddress",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:AddressApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "paypalStatus",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PayPalExternalPayerInfoApiSchema": {
          "description": null,
          "name": "PayPalExternalPayerInfoApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "externalPayerId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "email",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "firstName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "lastName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PayPalOrderTokenApiSchema": {
          "description": null,
          "name": "PayPalOrderTokenApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "paypalOrderId",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Information about the PayPal customer",
                "htmlDescription": "<p>Information about the PayPal customer</p>\n",
                "key": "externalPayerInfo",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PayPalExternalPayerInfoApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "paypalStatus",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentApiResponse": {
          "description": null,
          "name": "PaymentApiResponse",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream\noperations.\n",
                "htmlDescription": "<p>The unique payment ID.</p>\n<p>You can use this ID to retrieve the payment details, or perform downstream\noperations.</p>\n",
                "key": "id",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The date and time at which the payment was created in UTC format.",
                "htmlDescription": "<p>The date and time at which the payment was created in UTC format.</p>\n",
                "key": "date",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "See the payment [status table](../docs#payment-status) for more information.",
                "htmlDescription": "<p>See the payment <a href=\"../docs#payment-status\">status table</a> for more information.</p>\n",
                "key": "status",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentStatus"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Your reference for the payment.",
                "htmlDescription": "<p>Your reference for the payment.</p>\n",
                "key": "orderId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The three-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes). e.g. use `USD` for US dollars.",
                "htmlDescription": "<p>The three-letter currency code in <a href=\"https://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 format</a>. e.g. use <code>USD</code> for US dollars.</p>\n",
                "key": "currencyCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "The amount you charged the customer, in minor units.",
                "htmlDescription": "<p>The amount you charged the customer, in minor units.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "More information associated with the order.",
                "htmlDescription": "<p>More information associated with the order.</p>\n",
                "key": "order",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:OrderDetailsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The unique identifier for your customer.",
                "htmlDescription": "<p>The unique identifier for your customer.</p>\n",
                "key": "customerId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "More information associated with the customer.",
                "htmlDescription": "<p>More information associated with the customer.</p>\n",
                "key": "customer",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CustomerDetailsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Additional data to be used throughout the payment lifecycle.\n",
                "htmlDescription": "<p>Additional data to be used throughout the payment lifecycle.</p>\n",
                "key": "metadata",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "unknown"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The payment method options provided in the request, as well as the token used to process the payment.",
                "htmlDescription": "<p>The payment method options provided in the request, as well as the token used to process the payment.</p>\n",
                "key": "paymentMethod",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentResponsePaymentMethodOptionsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "More information associated with the payment processor, including the processor name.",
                "htmlDescription": "<p>More information associated with the payment processor, including the processor name.</p>\n",
                "key": "processor",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentResponseProcessorApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Required action to perform in order to resume the payment workflow. This can be requiring a 3DS check from the customer for instance.",
                "htmlDescription": "<p>Required action to perform in order to resume the payment workflow. This can be requiring a 3DS check from the customer for instance.</p>\n",
                "key": "requiredAction",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentRequiredActionApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Check this field for more information regarding the payment's status. This is especially useful when the status is `DECLINED` or `FAILED`.\n",
                "htmlDescription": "<p>Check this field for more information regarding the payment&#39;s status. This is especially useful when the status is <code>DECLINED</code> or <code>FAILED</code>.</p>\n",
                "key": "statusReason",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:StatusReasonApiSchema"
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "A list summarizing the transactions that occurred while processing the payment.\n\nNote: a refund is a separate transaction and so will appear in this `transactions` list if a refund was performed.",
                "htmlDescription": "<p>A list summarizing the transactions that occurred while processing the payment.</p>\n<p>Note: a refund is a separate transaction and so will appear in this <code>transactions</code> list if a refund was performed.</p>\n",
                "key": "transactions",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_:TransactionOverviewApiSchema"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentCardTokenApiSchema": {
          "description": null,
          "name": "PaymentCardTokenApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "first6Digits",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "last4Digits",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "expirationMonth",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "expirationYear",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "cardholderName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "network",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "isNetworkTokenized",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "binData",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:BinDataApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:StatusReasonApiSchema": {
          "description": null,
          "name": "StatusReasonApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Type of the status.",
                "htmlDescription": "<p>Type of the status.</p>\n",
                "key": "type",
                "valueType": {
                  "type": "id",
                  "value": "type_:PaymentStatusTypeEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "If the error is of type `ISSUER_DECLINED` this will be returned.\n\nDeclines of type `SOFT_DECLINE` may be retried,\nwhereas declines of type `HARD_DECLINE` should not be retried.\n",
                "htmlDescription": "<p>If the error is of type <code>ISSUER_DECLINED</code> this will be returned.</p>\n<p>Declines of type <code>SOFT_DECLINE</code> may be retried,\nwhereas declines of type <code>HARD_DECLINE</code> should not be retried.</p>\n",
                "key": "declineType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:DeclineTypeEnum"
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "If the error is of type `ISSUER_DECLINED`, this will be returned.",
                "htmlDescription": "<p>If the error is of type <code>ISSUER_DECLINED</code>, this will be returned.</p>\n",
                "key": "code",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:TransactionDeclineReasonV2Enum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "In case of an error on the processor's part, we will return the message returned by the processor. This is usually a human readable error.",
                "htmlDescription": "<p>In case of an error on the processor&#39;s part, we will return the message returned by the processor. This is usually a human readable error.</p>\n",
                "key": "message",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentMethodTypeEnum": {
          "description": "Payment method type, where `OFF_SESSION_PAYMENT` is used for APM (Alternative Payment Method) payments and `PAYMENT_CARD` for traditional debit or credit cards. Please note that this list is different from one indicated on [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) page and values of this field will be changed in the future versions of the API.",
          "htmlDescription": "<p>Payment method type, where <code>OFF_SESSION_PAYMENT</code> is used for APM (Alternative Payment Method) payments and <code>PAYMENT_CARD</code> for traditional debit or credit cards. Please note that this list is different from one indicated on <a href=\"https://primer.io/docs/payment-methods/available-payment-methods\">available payment methods</a> page and values of this field will be changed in the future versions of the API.</p>\n",
          "name": "PaymentMethodTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "PAYMENT_CARD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PAYPAL_ORDER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PAYPAL_BILLING_AGREEMENT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GOCARDLESS_MANDATE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KLARNA_AUTHORIZATION_TOKEN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KLARNA_CUSTOMER_TOKEN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PAY_NL_IDEAL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "APAYA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "OFF_SESSION_PAYMENT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CARD_OFF_SESSION_PAYMENT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "APPLE_PAY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "APPLE_PAY_ENCRYPTED_TOKEN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GOOGLE_PAY",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": true
        },
        "type_:PaymentListApiResponse": {
          "description": null,
          "name": "PaymentListApiResponse",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "data",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentSummaryApiSchema"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "nextCursor",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "prevCursor",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentRequiredActionApiSchema": {
          "description": null,
          "name": "PaymentRequiredActionApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Action name",
                "htmlDescription": "<p>Action name</p>\n",
                "key": "name",
                "valueType": {
                  "type": "id",
                  "value": "type_:BlockingPaymentActionTypeEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Human description of the required action to perform.",
                "htmlDescription": "<p>Human description of the required action to perform.</p>\n",
                "key": "description",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The client token to be returned to the SDK if a required action is returned.",
                "htmlDescription": "<p>The client token to be returned to the SDK if a required action is returned.</p>\n",
                "key": "clientToken",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentSummaryApiSchema": {
          "description": null,
          "name": "PaymentSummaryApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream\noperations.\n",
                "htmlDescription": "<p>The unique payment ID.</p>\n<p>You can use this ID to retrieve the payment details, or perform downstream\noperations.</p>\n",
                "key": "id",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The date and time at which the payment was created in UTC format.",
                "htmlDescription": "<p>The date and time at which the payment was created in UTC format.</p>\n",
                "key": "date",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "See the payment [status table](../docs#payment-status) for more information.",
                "htmlDescription": "<p>See the payment <a href=\"../docs#payment-status\">status table</a> for more information.</p>\n",
                "key": "status",
                "valueType": {
                  "type": "id",
                  "value": "type_:PaymentStatus"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Your reference for the payment.",
                "htmlDescription": "<p>Your reference for the payment.</p>\n",
                "key": "orderId",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The payment processor used for this payment.",
                "htmlDescription": "<p>The payment processor used for this payment.</p>\n",
                "key": "processor",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The three-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes). e.g. use `USD` for US dollars.",
                "htmlDescription": "<p>The three-letter currency code in <a href=\"https://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 format</a>. e.g. use <code>USD</code> for US dollars.</p>\n",
                "key": "currencyCode",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "The payment amount, in minor units. e.g. $7 would show as `700`.",
                "htmlDescription": "<p>The payment amount, in minor units. e.g. $7 would show as <code>700</code>.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`\n",
                "htmlDescription": "<p>Additional data to be used throughout the payment lifecycle.</p>\n<p>A dictionary of key-value pairs where the values can only be strings or\nintegers.</p>\n<p>e.g. <code>{&quot;productId&quot;: 1001, &quot;merchantId&quot;: &quot;a13bsd62s&quot;}</code></p>\n",
                "key": "metadata",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "unknown"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentSummaryProcessorApiSchema": {
          "description": null,
          "name": "PaymentSummaryProcessorApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The payment processor used for this payment.",
                "htmlDescription": "<p>The payment processor used for this payment.</p>\n",
                "key": "name",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The merchant ID registered at the payment processor used for this payment.",
                "htmlDescription": "<p>The merchant ID registered at the payment processor used for this payment.</p>\n",
                "key": "processorMerchantId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PrepaidReloadableEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "PrepaidReloadableEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "RELOADABLE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NON_RELOADABLE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NOT_APPLICABLE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNKNOWN",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:RecurringTransactionTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "RecurringTransactionTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "FIRST_PAYMENT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ECOMMERCE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SUBSCRIPTION",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNSCHEDULED",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ProductTypeEnum": {
          "description": "An enumeration",
          "htmlDescription": "<p>An enumeration</p>\n",
          "name": "ProductTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "PHYSICAL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DIGITAL",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ThreeDSecureAuthResponseCodeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "ThreeDSecureAuthResponseCodeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "NOT_PERFORMED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SKIPPED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AUTH_SUCCESS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AUTH_FAILED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CHALLENGE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "METHOD",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ThreeDSecureAuthenticationApiSchema": {
          "description": null,
          "name": "ThreeDSecureAuthenticationApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "responseCode",
                "valueType": {
                  "type": "id",
                  "value": "type_:ThreeDSecureAuthResponseCodeEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "reasonCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:ThreeDSecureAuthenticationApiSchemaReasonCode"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "reasonText",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "protocolVersion",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "challengeIssued",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ThreeDSecureAuthenticationApiSchemaReasonCode": {
          "description": null,
          "name": "ThreeDSecureAuthenticationApiSchemaReasonCode",
          "shape": {
            "type": "undiscriminatedUnion",
            "variants": [
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:ThreeDSecureSkippedReasonCodeEnum"
                },
                "displayName": "Three D Secure Skipped Reason Code Enum",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:ThreeDSecureFailedReasonCodeEnum"
                },
                "displayName": "Three D Secure Failed Reason Code Enum",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ThreeDSecureFailedReasonCodeEnum": {
          "description": "This enum is derived from the `transStatusReason` on page 218 of the\n[EMV Co 3DS protocol specification](https://www.emvco.com/terms-of-use/?u=/wp-content/uploads/documents/EMVCo_3DS_Spec_v220_122018.pdf)\n\n| Code | Description                             |\n|------|-----------------------------------------|\n| 01   | Card authentication failed              |\n| 02   | Unknown Device                          |\n| 03   | Unsupported Device                      |\n| 04   | Exceeds authentication frequency limit  |\n| 05   | Expired card                            |\n| 06   | Invalid card number                     |\n| 07   | Invalid transaction                     |\n| 08   | No Card record                          |\n| 09   | Security failure                        |\n| 10   | Stolen card                             |\n| 11   | Suspected fraud                         |\n| 12   | Transaction not permitted to cardholder |\n| 13   | Cardholder not enrolled in service      |\n| 14   | Transaction timed out at the ACS        |\n| 15   | Low confidence                          |\n| 16   | Medium confidence                       |",
          "htmlDescription": "<p>This enum is derived from the <code>transStatusReason</code> on page 218 of the\n<a href=\"https://www.emvco.com/terms-of-use/?u=/wp-content/uploads/documents/EMVCo_3DS_Spec_v220_122018.pdf\">EMV Co 3DS protocol specification</a></p>\n<table>\n<thead>\n<tr>\n<th>Code</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>01</td>\n<td>Card authentication failed</td>\n</tr>\n<tr>\n<td>02</td>\n<td>Unknown Device</td>\n</tr>\n<tr>\n<td>03</td>\n<td>Unsupported Device</td>\n</tr>\n<tr>\n<td>04</td>\n<td>Exceeds authentication frequency limit</td>\n</tr>\n<tr>\n<td>05</td>\n<td>Expired card</td>\n</tr>\n<tr>\n<td>06</td>\n<td>Invalid card number</td>\n</tr>\n<tr>\n<td>07</td>\n<td>Invalid transaction</td>\n</tr>\n<tr>\n<td>08</td>\n<td>No Card record</td>\n</tr>\n<tr>\n<td>09</td>\n<td>Security failure</td>\n</tr>\n<tr>\n<td>10</td>\n<td>Stolen card</td>\n</tr>\n<tr>\n<td>11</td>\n<td>Suspected fraud</td>\n</tr>\n<tr>\n<td>12</td>\n<td>Transaction not permitted to cardholder</td>\n</tr>\n<tr>\n<td>13</td>\n<td>Cardholder not enrolled in service</td>\n</tr>\n<tr>\n<td>14</td>\n<td>Transaction timed out at the ACS</td>\n</tr>\n<tr>\n<td>15</td>\n<td>Low confidence</td>\n</tr>\n<tr>\n<td>16</td>\n<td>Medium confidence</td>\n</tr>\n</tbody></table>\n",
          "name": "ThreeDSecureFailedReasonCodeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "UNKNOWN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "REJECTED_BY_ISSUER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CARD_AUTHENTICATION_FAILED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNKNOWN_DEVICE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNSUPPORTED_DEVICE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EXCEEDS_AUTHENTICATION_FREQUENCY_LIMIT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EXPIRED_CARD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "INVALID_CARD_NUMBER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "INVALID_TRANSACTION",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NO_CARD_RECORD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SECURITY_FAILURE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "STOLEN_CARD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SUSPECTED_FRAUD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TRANSACTION_NOT_PERMITTED_TO_CARDHOLDER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CARDHOLDER_NOT_ENROLLED_IN_SERVICE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TRANSACTION_TIMED_OUT_AT_THE_ACS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LOW_CONFIDENCE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MEDIUM_CONFIDENCE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HIGH_CONFIDENCE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VERY_HIGH_CONFIDENCE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EXCEEDS_ACS_MAXIMUM_CHALLENGES",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NON_PAYMENT_NOT_SUPPORTED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "THREE_RI_NOT_SUPPORTED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ACS_TECHNICAL_ISSUE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DECOUPLED_REQUIRED_BY_ACS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DECOUPLED_MAX_EXPIRY_EXCEEDED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DECOUPLED_AUTHENTICATION_INSUFFICIENT_TIME",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AUTHENTICATION_ATTEMPTED_BUT_NOT_PERFORMED_BY_CARDHOLDER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ACS_TIMED_OUT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "INVALID_ACS_RESPONSE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ACS_SYSTEM_ERROR_RESPONSE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ERROR_GENERATING_CAVV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PROTOCOL_VERSION_NOT_SUPPORTED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TRANSACTION_EXCLUDED_FROM_ATTEMPTS_PROCESSING",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "REQUESTED_PROGRAM_NOT_SUPPORTED",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": true
        },
        "type_:ThreeDSecureSkippedReasonCodeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "ThreeDSecureSkippedReasonCodeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "GATEWAY_UNAVAILABLE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DISABLED_BY_MERCHANT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NOT_SUPPORTED_BY_ISSUER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FAILED_TO_NEGOTIATE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNKNOWN_ACS_RESPONSE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "3DS_SERVER_ERROR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ACQUIRER_NOT_CONFIGURED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ACQUIRER_NOT_PARTICIPATING",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:TokenTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "TokenTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "MULTI_USE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SINGLE_USE",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:DeclineTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "DeclineTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "SOFT_DECLINE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HARD_DECLINE",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:TransactionDeclineReasonV2Enum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "TransactionDeclineReasonV2Enum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "ERROR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "INVALID_CARD_NUMBER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EXPIRED_CARD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LOST_OR_STOLEN_CARD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SUSPECTED_FRAUD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNKNOWN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DECLINED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "REFER_TO_CARD_ISSUER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DO_NOT_HONOR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "INSUFFICIENT_FUNDS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "WITHDRAWAL_LIMIT_EXCEEDED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ISSUER_TEMPORARILY_UNAVAILABLE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AUTHENTICATION_REQUIRED",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:TransactionOverviewApiSchema": {
          "description": null,
          "name": "TransactionOverviewApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "transactionType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:TransactionTypeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Processor's unique identifier for the transaction",
                "htmlDescription": "<p>Processor&#39;s unique identifier for the transaction</p>\n",
                "key": "processorTransactionId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "An identifier of a processor.",
                "htmlDescription": "<p>An identifier of a processor.</p>\n",
                "key": "processorName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Processor's main account identifier.\n\n* Adyen: Account code\n* Braintree: Merchant ID\n* Stripe: Account ID\"\n",
                "htmlDescription": "<p>Processor&#39;s main account identifier.</p>\n<ul>\n<li>Adyen: Account code</li>\n<li>Braintree: Merchant ID</li>\n<li>Stripe: Account ID&quot;</li>\n</ul>\n",
                "key": "processorMerchantId",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "Transaction status, please refer to the [Transaction Status Codes](#section/API-Usage-Guide/Payment-Status) table for more information",
                "htmlDescription": "<p>Transaction status, please refer to the <a href=\"#section/API-Usage-Guide/Payment-Status\">Transaction Status Codes</a> table for more information</p>\n",
                "key": "processorStatus",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentStatus"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "If the transaction has a declined or failed status.\n\nOnly if the status is `DECLINED` or `FAILED`, otherwise `null`.\n",
                "htmlDescription": "<p>If the transaction has a declined or failed status.</p>\n<p>Only if the status is <code>DECLINED</code> or <code>FAILED</code>, otherwise <code>null</code>.</p>\n",
                "key": "processorStatusReason",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:StatusReasonApiSchema"
                  }
                },
                "descriptionContainsMarkdown": true
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentStatus": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "PaymentStatus",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "PENDING",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FAILED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AUTHORIZED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SETTLING",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PARTIALLY_SETTLED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SETTLED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DECLINED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CANCELLED",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentStatusTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "PaymentStatusTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "APPLICATION_ERROR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GATEWAY_REJECTED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ISSUER_DECLINED",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:TransactionTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "TransactionTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "SALE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "REFUND",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema": {
          "description": null,
          "name": "CoreApiApiCommonsSchemasAddessAddressApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "firstName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "lastName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "addressLine1",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "addressLine2",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "city",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "state",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "countryCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CountryCodeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "postalCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:AddressApiSchema": {
          "description": null,
          "name": "AddressApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "firstName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "lastName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Street name, Company name or PO Box",
                "htmlDescription": "<p>Street name, Company name or PO Box</p>\n",
                "key": "addressLine1",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Apartment, Unit or Building number",
                "htmlDescription": "<p>Apartment, Unit or Building number</p>\n",
                "key": "addressLine2",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Name of the city, district, town or village",
                "htmlDescription": "<p>Name of the city, district, town or village</p>\n",
                "key": "city",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "State, County or Province",
                "htmlDescription": "<p>State, County or Province</p>\n",
                "key": "state",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Two letter ISO country code",
                "htmlDescription": "<p>Two letter ISO country code</p>\n",
                "key": "countryCode",
                "valueType": {
                  "type": "id",
                  "value": "type_:CountryCodeEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Postal or ZIP code",
                "htmlDescription": "<p>Postal or ZIP code</p>\n",
                "key": "postalCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:MerchantPaymentMethodTokenApiResponse": {
          "description": null,
          "name": "MerchantPaymentMethodTokenApiResponse",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Creation date & time of the object (UTC)",
                "htmlDescription": "<p>Creation date &amp; time of the object (UTC)</p>\n",
                "key": "createdAt",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Date & time when this object was revoked. (UTC)",
                "htmlDescription": "<p>Date &amp; time when this object was revoked. (UTC)</p>\n",
                "key": "deletedAt",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Whether or not this object has been revoked.",
                "htmlDescription": "<p>Whether or not this object has been revoked.</p>\n",
                "key": "deleted",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The vaulted payment method token.",
                "htmlDescription": "<p>The vaulted payment method token.</p>\n",
                "key": "token",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "* `MULTI_USE` a vaulted token that can be re-used with subsequent payments",
                "htmlDescription": "<ul>\n<li><code>MULTI_USE</code> a vaulted token that can be re-used with subsequent payments</li>\n</ul>\n",
                "key": "tokenType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "Unique analytics identifier corresponding to a payment method",
                "htmlDescription": "<p>Unique analytics identifier corresponding to a payment method</p>\n",
                "key": "analyticsId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Payment method type associated with a token.",
                "htmlDescription": "<p>Payment method type associated with a token.</p>\n",
                "key": "paymentMethodType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentMethodTypeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Payment method data",
                "htmlDescription": "<p>Payment method data</p>\n",
                "key": "paymentMethodData",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The ID representing the customer",
                "htmlDescription": "<p>The ID representing the customer</p>\n",
                "key": "customerId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Whether or not this payment method is the default",
                "htmlDescription": "<p>Whether or not this payment method is the default</p>\n",
                "key": "default",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData": {
          "description": "Payment method data",
          "htmlDescription": "<p>Payment method data</p>\n",
          "name": "MerchantPaymentMethodTokenApiResponsePaymentMethodData",
          "shape": {
            "type": "undiscriminatedUnion",
            "variants": [
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:PaymentCardTokenApiSchemaPaymentMethodsApi"
                },
                "displayName": "Payment Card Token Api Schema Payment Methods Api",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:PayPalBillingAgreementApiSchema"
                },
                "displayName": "Pay Pal Billing Agreement Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:GoCardlessMandateApiSchema"
                },
                "displayName": "Go Cardless Mandate Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:KlarnaCustomerTokenApiSchema"
                },
                "displayName": "Klarna Customer Token Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:ApayaCustomerTokenApiSchema"
                },
                "displayName": "Apaya Customer Token Api Schema",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:MerchantPaymentMethodTokenListApiResponse": {
          "description": null,
          "name": "MerchantPaymentMethodTokenListApiResponse",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "data",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_:MerchantPaymentMethodTokenApiResponse"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentCardTokenApiSchemaPaymentMethodsApi": {
          "description": "Used exclusively by the Payment Methods API",
          "htmlDescription": "<p>Used exclusively by the Payment Methods API</p>\n",
          "name": "PaymentCardTokenApiSchemaPaymentMethodsApi",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "last4Digits",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "expirationMonth",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "expirationYear",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "cardholderName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "network",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "An ID for the transaction assigned by the card network. Used to correlate recurring payments.",
                "htmlDescription": "<p>An ID for the transaction assigned by the card network. Used to correlate recurring payments.</p>\n",
                "key": "networkTransactionId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The type of card, e.g. Debit, Credit",
                "htmlDescription": "<p>The type of card, e.g. Debit, Credit</p>\n",
                "key": "accountFundingType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:AccountFundingTypeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ErrorObject": {
          "description": null,
          "name": "ErrorObject",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "An error ID",
                "htmlDescription": "<p>An error ID</p>\n",
                "key": "errorId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "A human description of the error",
                "htmlDescription": "<p>A human description of the error</p>\n",
                "key": "description",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "A human readable recovery suggestion of the error",
                "htmlDescription": "<p>A human readable recovery suggestion of the error</p>\n",
                "key": "recoverySuggestion",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "An ID that you can quote when contacting the support team (support@primer.io).",
                "htmlDescription": "<p>An ID that you can quote when contacting the support team (<a href=\"mailto:support@primer.io\">support@primer.io</a>).</p>\n",
                "key": "diagnosticsId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:BadRequestErrorResponse": {
          "description": null,
          "name": "BadRequestErrorResponse",
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "value": "type_:ErrorObject"
            }
          },
          "descriptionContainsMarkdown": false
        },
        "type_:UnprocessableEntityErrorResponse": {
          "description": null,
          "name": "UnprocessableEntityErrorResponse",
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "value": "type_:ErrorObject"
            }
          },
          "descriptionContainsMarkdown": false
        }
      },
      "subpackages": {
        "subpackage_clientSessionApi": {
          "subpackageId": "subpackage_clientSessionApi",
          "name": "Client Session API",
          "endpoints": [
            {
              "environments": [],
              "availability": null,
              "defaultEnvironment": null,
              "urlSlug": "create-a-client-session",
              "method": "POST",
              "id": "createClientSideToken",
              "name": "Create a client session",
              "path": {
                "pathParameters": [],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/client-session"
                  }
                ]
              },
              "queryParameters": [],
              "headers": [],
              "request": {
                "contentType": "application/json",
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:ClientSessionApiRequest"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:ClientSessionApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:UnprocessableEntityErrorResponse"
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:UnprocessableEntityErrorResponse"
                    }
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/client-session",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {},
                  "responseStatusCode": 200,
                  "responseBody": {
                    "clientToken": "string",
                    "clientTokenExpirationDate": "2023-01-01T00:00:00Z",
                    "orderId": "string",
                    "currencyCode": "string",
                    "amount": 0,
                    "order": {
                      "countryCode": "AW",
                      "fees": [
                        {
                          "amount": 0,
                          "type": "string",
                          "description": "string"
                        }
                      ],
                      "lineItems": [
                        {
                          "itemId": "string",
                          "description": "string",
                          "amount": 0,
                          "discountAmount": 0,
                          "quantity": 0,
                          "taxAmount": 0,
                          "taxCode": "string",
                          "productType": "PHYSICAL"
                        }
                      ],
                      "shipping": {
                        "amount": 0
                      }
                    },
                    "customerId": "string",
                    "customer": {
                      "emailAddress": "string",
                      "mobileNumber": "string",
                      "firstName": "string",
                      "lastName": "string",
                      "billingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "shippingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "taxId": "string",
                      "nationalDocumentId": "string"
                    },
                    "metadata": {
                      "string": {}
                    },
                    "paymentMethod": {
                      "vaultOnSuccess": true,
                      "options": {
                        "<PAYMENT_METHOD_TYPE>": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "PAYMENT_CARD": {
                          "networks": {
                            "AMEX": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "DANKORT": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "DINERS_CLUB": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "DISCOVER": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "ENROUTE": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "ELO": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "HIPER": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "INTERAC": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "JCB": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "MAESTRO": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "MASTERCARD": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "MIR": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "PRIVATE_LABEL": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "UNIONPAY": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "VISA": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "OTHER": {
                              "surcharge": {
                                "amount": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    "warnings": {
                      "type": "string",
                      "code": "string",
                      "message": "string"
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/client-session",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {},
                  "responseStatusCode": 400,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "recoverySuggestion": "string",
                    "diagnosticsId": "string"
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/client-session",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {},
                  "responseStatusCode": 422,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "recoverySuggestion": "string",
                    "diagnosticsId": "string"
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "Creating a client session generates a client token: a temporary key used to initialize [Universal Checkout](https://primer.io/docs/accept-payments/setup-universal-checkout/installation/web) and authenticate it against your account.\n\nUniversal Checkout automatically retrieves all the settings from the client session and the Dashboard to configure the payment methods and the checkout experience.\n\n<b>Note:</b>\nWhen creating a Client Session, please make sure to provide `currencyCode`, `orderId`, and `amount`. \nIf any of these are not yet available, you can provide them when making the payment request.\n\nClient tokens expire after 24 hours.\n",
              "htmlDescription": "<p>Creating a client session generates a client token: a temporary key used to initialize <a href=\"https://primer.io/docs/accept-payments/setup-universal-checkout/installation/web\">Universal Checkout</a> and authenticate it against your account.</p>\n<p>Universal Checkout automatically retrieves all the settings from the client session and the Dashboard to configure the payment methods and the checkout experience.</p>\n<p><b>Note:</b>\nWhen creating a Client Session, please make sure to provide <code>currencyCode</code>, <code>orderId</code>, and <code>amount</code>. \nIf any of these are not yet available, you can provide them when making the payment request.</p>\n<p>Client tokens expire after 24 hours.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            }
          ],
          "types": [],
          "subpackages": [],
          "pointsTo": null,
          "urlSlug": "client-session-api",
          "description": null,
          "webhooks": [],
          "descriptionContainsMarkdown": false
        },
        "subpackage_paymentsApi": {
          "subpackageId": "subpackage_paymentsApi",
          "name": "Payments API",
          "endpoints": [
            {
              "environments": [],
              "availability": null,
              "defaultEnvironment": null,
              "urlSlug": "search-list-payments",
              "method": "GET",
              "id": "listPayments",
              "name": "Search & list payments",
              "path": {
                "pathParameters": [],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payments"
                  }
                ]
              },
              "queryParameters": [
                {
                  "key": "status",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentStatus"
                    }
                  },
                  "description": "Filter payments by their status."
                },
                {
                  "key": "payment_method_type",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentMethodTypeEnum"
                    }
                  },
                  "description": "Filter payments by their payment method type."
                },
                {
                  "key": "processor",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Filter payments by their payment processor."
                },
                {
                  "key": "currency_code",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Filter payments by their payment currency.\n\nUse the three-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n"
                },
                {
                  "key": "from_date",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  },
                  "description": "Return only payments from this date (inclusive)."
                },
                {
                  "key": "to_date",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  },
                  "description": "Return only payments up to this date (inclusive)."
                },
                {
                  "key": "order_id",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Return payments related to this order ID."
                },
                {
                  "key": "min_amount",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  },
                  "description": "Return payments of this amount minimum (inclusive)."
                },
                {
                  "key": "max_amount",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  },
                  "description": "Return payments of this amount max (inclusive)."
                },
                {
                  "key": "customer_id",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "ID of the customer that has made the payment."
                },
                {
                  "key": "merchant_id",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "ID of the merchant involved in the payment."
                },
                {
                  "key": "customer_email_address",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Email of the customer that has made the payment."
                },
                {
                  "key": "last_4_digits",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Last 4 digits of the card used for the payment."
                },
                {
                  "key": "paypal_email",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Paypal email address associated with the payment."
                },
                {
                  "key": "klarna_email",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Klarna email address associated with the payment."
                },
                {
                  "key": "limit",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  },
                  "description": "Maximum number of payments to return per page."
                },
                {
                  "key": "cursor",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "If results are paginated, pass the `nextCursor` to access next page."
                }
              ],
              "headers": [],
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:PaymentListApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:UnprocessableEntityErrorResponse"
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:UnprocessableEntityErrorResponse"
                    }
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments",
                  "pathParameters": {},
                  "queryParameters": {
                    "status": "PENDING",
                    "payment_method_type": "PAYMENT_CARD"
                  },
                  "headers": {},
                  "responseStatusCode": 200,
                  "responseBody": {
                    "data": [
                      {
                        "id": "string",
                        "date": "2023-01-01T00:00:00Z",
                        "status": "PENDING",
                        "orderId": "string",
                        "processor": "string",
                        "currencyCode": "string",
                        "amount": 0,
                        "metadata": {
                          "string": {}
                        }
                      }
                    ],
                    "nextCursor": "string",
                    "prevCursor": "string"
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments",
                  "pathParameters": {},
                  "queryParameters": {
                    "status": "PENDING",
                    "payment_method_type": "PAYMENT_CARD"
                  },
                  "headers": {},
                  "responseStatusCode": 422,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "recoverySuggestion": "string",
                    "diagnosticsId": "string"
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "<p/>\n\nRetrieve a list of your payments.\n\nResults are paginated, they will only return up to 100 payments maximum.\nTo access the next page of result, set the `cursor` query parameter to the value of `nextCursor` in your current result payload. Use `prevCursor` to go back to the previous page.\n\n**Note:** this endpoint returns a list of summarized payments. Not all payments attributes are present. You can use the query parameters to filter payments. \nYou can separate multiple query parameters with the `&` symbol.\nQuery parameters with types of the form \"Array of strings\" (such as the status parameter) can be specified as a comma-separated list.\n\n**Note:** payments will be available within a minute from being created.\n",
              "htmlDescription": "<p/>\n\n<p>Retrieve a list of your payments.</p>\n<p>Results are paginated, they will only return up to 100 payments maximum.\nTo access the next page of result, set the <code>cursor</code> query parameter to the value of <code>nextCursor</code> in your current result payload. Use <code>prevCursor</code> to go back to the previous page.</p>\n<p><strong>Note:</strong> this endpoint returns a list of summarized payments. Not all payments attributes are present. You can use the query parameters to filter payments. \nYou can separate multiple query parameters with the <code>&amp;</code> symbol.\nQuery parameters with types of the form &quot;Array of strings&quot; (such as the status parameter) can be specified as a comma-separated list.</p>\n<p><strong>Note:</strong> payments will be available within a minute from being created.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            },
            {
              "environments": [],
              "availability": null,
              "defaultEnvironment": null,
              "urlSlug": "create-a-payment",
              "method": "POST",
              "id": "createPayment",
              "name": "Create a payment",
              "path": {
                "pathParameters": [],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payments"
                  }
                ]
              },
              "queryParameters": [],
              "headers": [
                {
                  "key": "X-Idempotency-Key",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Optional key to make the request idempotent. Learn more in the [Idempotency Key guide](../docs#idempotency-key)."
                }
              ],
              "request": {
                "contentType": "application/json",
                "type": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "orderId",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "Your reference for the payment."
                    },
                    {
                      "key": "currencyCode",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "The three-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n"
                    },
                    {
                      "key": "amount",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "integer"
                          }
                        }
                      },
                      "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`. The minimum amount is 0."
                    },
                    {
                      "key": "order",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "id",
                          "value": "type_:OrderDetailsApiSchema"
                        }
                      },
                      "description": "More information associated with the order."
                    },
                    {
                      "key": "paymentMethodToken",
                      "valueType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "description": "The payment method token used to authorize the payment.\n"
                    },
                    {
                      "key": "customerId",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "A unique identifier for your customer.\nThis attribute is required if `paymentMethod.vaultOnSuccess` is set to `True`."
                    },
                    {
                      "key": "customer",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "id",
                          "value": "type_:CustomerDetailsApiSchema"
                        }
                      },
                      "description": "More information associated with the customer.\n"
                    },
                    {
                      "key": "metadata",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "map",
                          "keyType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          },
                          "valueType": {
                            "type": "unknown"
                          }
                        }
                      },
                      "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`\n"
                    },
                    {
                      "key": "paymentMethod",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "id",
                          "value": "type_:PaymentRequestPaymentMethodOptionsApiSchema"
                        }
                      },
                      "description": "Enable certain options associated with the payment method."
                    }
                  ]
                },
                "descriptionContainsMarkdown": false
              },
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:PaymentApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:UnprocessableEntityErrorResponse"
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:UnprocessableEntityErrorResponse"
                    }
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {
                    "paymentMethodToken": "string"
                  },
                  "responseStatusCode": 200,
                  "responseBody": {
                    "id": "string",
                    "date": "2023-01-01T00:00:00Z",
                    "status": "PENDING",
                    "orderId": "string",
                    "currencyCode": "string",
                    "amount": 0,
                    "order": {
                      "countryCode": "AW",
                      "fees": [
                        {
                          "amount": 0,
                          "type": "string",
                          "description": "string"
                        }
                      ],
                      "lineItems": [
                        {
                          "itemId": "string",
                          "description": "string",
                          "amount": 0,
                          "discountAmount": 0,
                          "quantity": 0,
                          "taxAmount": 0,
                          "taxCode": "string",
                          "productType": "PHYSICAL"
                        }
                      ],
                      "shipping": {
                        "amount": 0
                      }
                    },
                    "customerId": "string",
                    "customer": {
                      "emailAddress": "string",
                      "mobileNumber": "string",
                      "firstName": "string",
                      "lastName": "string",
                      "billingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "shippingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "taxId": "string",
                      "nationalDocumentId": "string"
                    },
                    "metadata": {
                      "string": {}
                    },
                    "paymentMethod": {
                      "descriptor": "string",
                      "paymentMethodToken": "string",
                      "vaultedPaymentMethodToken": "string",
                      "analyticsId": "string",
                      "paymentMethodType": "PAYMENT_CARD",
                      "paymentMethodData": {
                        "first6Digits": "string",
                        "last4Digits": "string",
                        "expirationMonth": "string",
                        "expirationYear": "string",
                        "cardholderName": "string",
                        "network": "string",
                        "isNetworkTokenized": true,
                        "binData": {
                          "network": "AMEX",
                          "issuerCountryCode": "AW",
                          "issuerName": "string",
                          "issuerCurrencyCode": "AED",
                          "regionalRestriction": "DOMESTIC_USE_ONLY",
                          "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                          "accountFundingType": "CREDIT",
                          "prepaidReloadableIndicator": "RELOADABLE",
                          "productUsageType": "CONSUMER",
                          "productCode": "string",
                          "productName": "string"
                        }
                      },
                      "threeDSecureAuthentication": {
                        "responseCode": "NOT_PERFORMED",
                        "reasonCode": "GATEWAY_UNAVAILABLE",
                        "reasonText": "string",
                        "protocolVersion": "string",
                        "challengeIssued": true
                      }
                    },
                    "processor": {
                      "name": "string",
                      "processorMerchantId": "string",
                      "amountCaptured": 0,
                      "amountRefunded": 0
                    },
                    "requiredAction": {
                      "name": "3DS_AUTHENTICATION",
                      "description": "string",
                      "clientToken": "string"
                    },
                    "statusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR",
                      "message": "string"
                    },
                    "transactions": [
                      {
                        "transactionType": "SALE",
                        "processorTransactionId": "string",
                        "processorName": "string",
                        "processorMerchantId": "string",
                        "processorStatus": "PENDING",
                        "processorStatusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR",
                          "message": "string"
                        }
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {
                    "paymentMethodToken": "string"
                  },
                  "responseStatusCode": 400,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "recoverySuggestion": "string",
                    "diagnosticsId": "string"
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {
                    "paymentMethodToken": "string"
                  },
                  "responseStatusCode": 422,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "recoverySuggestion": "string",
                    "diagnosticsId": "string"
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "<p/>\n\nCreate and authorize a payment for a given customer order. You should provide a payment method token here to avoid PCI implications.\n\nIf only a payment method token is passed, the values passed with the Client Session determine the amount, currency etc.\n\nNote: `amount`, `currencyCode` and `orderId` are required during payment creation. Make sure to pass these fields when creating a client session, or if not yet available, when creating a payment.\n\nAll fields provided on this request will take preference over any field on the `order` associated with the client session. E.g. if you pass `amount` on this request, it will override the `amount` on the `order` associated with the Client Session.\n",
              "htmlDescription": "<p/>\n\n<p>Create and authorize a payment for a given customer order. You should provide a payment method token here to avoid PCI implications.</p>\n<p>If only a payment method token is passed, the values passed with the Client Session determine the amount, currency etc.</p>\n<p>Note: <code>amount</code>, <code>currencyCode</code> and <code>orderId</code> are required during payment creation. Make sure to pass these fields when creating a client session, or if not yet available, when creating a payment.</p>\n<p>All fields provided on this request will take preference over any field on the <code>order</code> associated with the client session. E.g. if you pass <code>amount</code> on this request, it will override the <code>amount</code> on the <code>order</code> associated with the Client Session.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            },
            {
              "environments": [],
              "availability": null,
              "defaultEnvironment": null,
              "urlSlug": "capture-a-payment",
              "method": "POST",
              "id": "capturePayment",
              "name": "Capture a payment",
              "path": {
                "pathParameters": [
                  {
                    "key": "id",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "description": "ID of the payment to capture."
                  }
                ],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payments/"
                  },
                  {
                    "type": "pathParameter",
                    "value": "id"
                  },
                  {
                    "type": "literal",
                    "value": "/capture"
                  }
                ]
              },
              "queryParameters": [],
              "headers": [
                {
                  "key": "X-Idempotency-Key",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Optional key to make the request idempotent. Learn more in the [Idempotency Key guide](../docs#idempotency-key)."
                }
              ],
              "request": {
                "contentType": "application/json",
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:PaymentCaptureApiRequest"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:PaymentApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:UnprocessableEntityErrorResponse"
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:UnprocessableEntityErrorResponse"
                    }
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/capture",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {},
                  "responseStatusCode": 200,
                  "responseBody": {
                    "id": "string",
                    "date": "2023-01-01T00:00:00Z",
                    "status": "PENDING",
                    "orderId": "string",
                    "currencyCode": "string",
                    "amount": 0,
                    "order": {
                      "countryCode": "AW",
                      "fees": [
                        {
                          "amount": 0,
                          "type": "string",
                          "description": "string"
                        }
                      ],
                      "lineItems": [
                        {
                          "itemId": "string",
                          "description": "string",
                          "amount": 0,
                          "discountAmount": 0,
                          "quantity": 0,
                          "taxAmount": 0,
                          "taxCode": "string",
                          "productType": "PHYSICAL"
                        }
                      ],
                      "shipping": {
                        "amount": 0
                      }
                    },
                    "customerId": "string",
                    "customer": {
                      "emailAddress": "string",
                      "mobileNumber": "string",
                      "firstName": "string",
                      "lastName": "string",
                      "billingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "shippingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "taxId": "string",
                      "nationalDocumentId": "string"
                    },
                    "metadata": {
                      "string": {}
                    },
                    "paymentMethod": {
                      "descriptor": "string",
                      "paymentMethodToken": "string",
                      "vaultedPaymentMethodToken": "string",
                      "analyticsId": "string",
                      "paymentMethodType": "PAYMENT_CARD",
                      "paymentMethodData": {
                        "first6Digits": "string",
                        "last4Digits": "string",
                        "expirationMonth": "string",
                        "expirationYear": "string",
                        "cardholderName": "string",
                        "network": "string",
                        "isNetworkTokenized": true,
                        "binData": {
                          "network": "AMEX",
                          "issuerCountryCode": "AW",
                          "issuerName": "string",
                          "issuerCurrencyCode": "AED",
                          "regionalRestriction": "DOMESTIC_USE_ONLY",
                          "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                          "accountFundingType": "CREDIT",
                          "prepaidReloadableIndicator": "RELOADABLE",
                          "productUsageType": "CONSUMER",
                          "productCode": "string",
                          "productName": "string"
                        }
                      },
                      "threeDSecureAuthentication": {
                        "responseCode": "NOT_PERFORMED",
                        "reasonCode": "GATEWAY_UNAVAILABLE",
                        "reasonText": "string",
                        "protocolVersion": "string",
                        "challengeIssued": true
                      }
                    },
                    "processor": {
                      "name": "string",
                      "processorMerchantId": "string",
                      "amountCaptured": 0,
                      "amountRefunded": 0
                    },
                    "requiredAction": {
                      "name": "3DS_AUTHENTICATION",
                      "description": "string",
                      "clientToken": "string"
                    },
                    "statusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR",
                      "message": "string"
                    },
                    "transactions": [
                      {
                        "transactionType": "SALE",
                        "processorTransactionId": "string",
                        "processorName": "string",
                        "processorMerchantId": "string",
                        "processorStatus": "PENDING",
                        "processorStatusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR",
                          "message": "string"
                        }
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/capture",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {},
                  "responseStatusCode": 400,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "recoverySuggestion": "string",
                    "diagnosticsId": "string"
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/capture",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {},
                  "responseStatusCode": 422,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "recoverySuggestion": "string",
                    "diagnosticsId": "string"
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "<p/>\n\nIf you have successfully authorized a payment, you can now fully capture, or partially capture funds from the authorized payment, depending on whether your selected payment processor supports it. The payment will be updated to `SETTLED` or `SETTLING`, depending on the payment method type.\n\nThe payload sent in this capture request is completely optional. If you don't send a payload with the capture request, the full amount that was authorized will be sent for capture. \n\nBelow are the available payload attributes, which give you more granular control when capturing funds, if you require it.\n",
              "htmlDescription": "<p/>\n\n<p>If you have successfully authorized a payment, you can now fully capture, or partially capture funds from the authorized payment, depending on whether your selected payment processor supports it. The payment will be updated to <code>SETTLED</code> or <code>SETTLING</code>, depending on the payment method type.</p>\n<p>The payload sent in this capture request is completely optional. If you don&#39;t send a payload with the capture request, the full amount that was authorized will be sent for capture. </p>\n<p>Below are the available payload attributes, which give you more granular control when capturing funds, if you require it.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            },
            {
              "environments": [],
              "availability": null,
              "defaultEnvironment": null,
              "urlSlug": "cancel-a-payment",
              "method": "POST",
              "id": "cancelPayment",
              "name": "Cancel a payment",
              "path": {
                "pathParameters": [
                  {
                    "key": "id",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "description": "ID of payment to cancel."
                  }
                ],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payments/"
                  },
                  {
                    "type": "pathParameter",
                    "value": "id"
                  },
                  {
                    "type": "literal",
                    "value": "/cancel"
                  }
                ]
              },
              "queryParameters": [],
              "headers": [
                {
                  "key": "X-Idempotency-Key",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Optional key to make the request idempotent. Learn more in the [Idempotency Key guide](../docs#idempotency-key)."
                }
              ],
              "request": {
                "contentType": "application/json",
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:PaymentCancelApiRequest"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:PaymentApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/cancel",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {},
                  "responseStatusCode": 200,
                  "responseBody": {
                    "id": "string",
                    "date": "2023-01-01T00:00:00Z",
                    "status": "PENDING",
                    "orderId": "string",
                    "currencyCode": "string",
                    "amount": 0,
                    "order": {
                      "countryCode": "AW",
                      "fees": [
                        {
                          "amount": 0,
                          "type": "string",
                          "description": "string"
                        }
                      ],
                      "lineItems": [
                        {
                          "itemId": "string",
                          "description": "string",
                          "amount": 0,
                          "discountAmount": 0,
                          "quantity": 0,
                          "taxAmount": 0,
                          "taxCode": "string",
                          "productType": "PHYSICAL"
                        }
                      ],
                      "shipping": {
                        "amount": 0
                      }
                    },
                    "customerId": "string",
                    "customer": {
                      "emailAddress": "string",
                      "mobileNumber": "string",
                      "firstName": "string",
                      "lastName": "string",
                      "billingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "shippingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "taxId": "string",
                      "nationalDocumentId": "string"
                    },
                    "metadata": {
                      "string": {}
                    },
                    "paymentMethod": {
                      "descriptor": "string",
                      "paymentMethodToken": "string",
                      "vaultedPaymentMethodToken": "string",
                      "analyticsId": "string",
                      "paymentMethodType": "PAYMENT_CARD",
                      "paymentMethodData": {
                        "first6Digits": "string",
                        "last4Digits": "string",
                        "expirationMonth": "string",
                        "expirationYear": "string",
                        "cardholderName": "string",
                        "network": "string",
                        "isNetworkTokenized": true,
                        "binData": {
                          "network": "AMEX",
                          "issuerCountryCode": "AW",
                          "issuerName": "string",
                          "issuerCurrencyCode": "AED",
                          "regionalRestriction": "DOMESTIC_USE_ONLY",
                          "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                          "accountFundingType": "CREDIT",
                          "prepaidReloadableIndicator": "RELOADABLE",
                          "productUsageType": "CONSUMER",
                          "productCode": "string",
                          "productName": "string"
                        }
                      },
                      "threeDSecureAuthentication": {
                        "responseCode": "NOT_PERFORMED",
                        "reasonCode": "GATEWAY_UNAVAILABLE",
                        "reasonText": "string",
                        "protocolVersion": "string",
                        "challengeIssued": true
                      }
                    },
                    "processor": {
                      "name": "string",
                      "processorMerchantId": "string",
                      "amountCaptured": 0,
                      "amountRefunded": 0
                    },
                    "requiredAction": {
                      "name": "3DS_AUTHENTICATION",
                      "description": "string",
                      "clientToken": "string"
                    },
                    "statusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR",
                      "message": "string"
                    },
                    "transactions": [
                      {
                        "transactionType": "SALE",
                        "processorTransactionId": "string",
                        "processorName": "string",
                        "processorMerchantId": "string",
                        "processorStatus": "PENDING",
                        "processorStatusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR",
                          "message": "string"
                        }
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/cancel",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {},
                  "responseStatusCode": 400,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "recoverySuggestion": "string",
                    "diagnosticsId": "string"
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "<p/>\n\nProvided the payment has not reached `SETTLED` status, Primer will send a \"void\" request to the payment processor, thereby cancelling the payment and releasing the hold on customer funds. \n\nUpon success, the payment will transition to `CANCELLED`. \n\nThe payload is optional.\n",
              "htmlDescription": "<p/>\n\n<p>Provided the payment has not reached <code>SETTLED</code> status, Primer will send a &quot;void&quot; request to the payment processor, thereby cancelling the payment and releasing the hold on customer funds. </p>\n<p>Upon success, the payment will transition to <code>CANCELLED</code>. </p>\n<p>The payload is optional.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            },
            {
              "environments": [],
              "availability": null,
              "defaultEnvironment": null,
              "urlSlug": "refund-a-payment",
              "method": "POST",
              "id": "refundPayment",
              "name": "Refund a payment",
              "path": {
                "pathParameters": [
                  {
                    "key": "id",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "description": "ID of payment to refund."
                  }
                ],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payments/"
                  },
                  {
                    "type": "pathParameter",
                    "value": "id"
                  },
                  {
                    "type": "literal",
                    "value": "/refund"
                  }
                ]
              },
              "queryParameters": [],
              "headers": [
                {
                  "key": "X-Idempotency-Key",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Optional key to make the request idempotent. Learn more in the [Idempotency Key guide](../docs#idempotency-key)."
                }
              ],
              "request": {
                "contentType": "application/json",
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:PaymentRefundApiRequest"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:PaymentApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:UnprocessableEntityErrorResponse"
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:UnprocessableEntityErrorResponse"
                    }
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/refund",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {},
                  "responseStatusCode": 200,
                  "responseBody": {
                    "id": "string",
                    "date": "2023-01-01T00:00:00Z",
                    "status": "PENDING",
                    "orderId": "string",
                    "currencyCode": "string",
                    "amount": 0,
                    "order": {
                      "countryCode": "AW",
                      "fees": [
                        {
                          "amount": 0,
                          "type": "string",
                          "description": "string"
                        }
                      ],
                      "lineItems": [
                        {
                          "itemId": "string",
                          "description": "string",
                          "amount": 0,
                          "discountAmount": 0,
                          "quantity": 0,
                          "taxAmount": 0,
                          "taxCode": "string",
                          "productType": "PHYSICAL"
                        }
                      ],
                      "shipping": {
                        "amount": 0
                      }
                    },
                    "customerId": "string",
                    "customer": {
                      "emailAddress": "string",
                      "mobileNumber": "string",
                      "firstName": "string",
                      "lastName": "string",
                      "billingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "shippingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "taxId": "string",
                      "nationalDocumentId": "string"
                    },
                    "metadata": {
                      "string": {}
                    },
                    "paymentMethod": {
                      "descriptor": "string",
                      "paymentMethodToken": "string",
                      "vaultedPaymentMethodToken": "string",
                      "analyticsId": "string",
                      "paymentMethodType": "PAYMENT_CARD",
                      "paymentMethodData": {
                        "first6Digits": "string",
                        "last4Digits": "string",
                        "expirationMonth": "string",
                        "expirationYear": "string",
                        "cardholderName": "string",
                        "network": "string",
                        "isNetworkTokenized": true,
                        "binData": {
                          "network": "AMEX",
                          "issuerCountryCode": "AW",
                          "issuerName": "string",
                          "issuerCurrencyCode": "AED",
                          "regionalRestriction": "DOMESTIC_USE_ONLY",
                          "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                          "accountFundingType": "CREDIT",
                          "prepaidReloadableIndicator": "RELOADABLE",
                          "productUsageType": "CONSUMER",
                          "productCode": "string",
                          "productName": "string"
                        }
                      },
                      "threeDSecureAuthentication": {
                        "responseCode": "NOT_PERFORMED",
                        "reasonCode": "GATEWAY_UNAVAILABLE",
                        "reasonText": "string",
                        "protocolVersion": "string",
                        "challengeIssued": true
                      }
                    },
                    "processor": {
                      "name": "string",
                      "processorMerchantId": "string",
                      "amountCaptured": 0,
                      "amountRefunded": 0
                    },
                    "requiredAction": {
                      "name": "3DS_AUTHENTICATION",
                      "description": "string",
                      "clientToken": "string"
                    },
                    "statusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR",
                      "message": "string"
                    },
                    "transactions": [
                      {
                        "transactionType": "SALE",
                        "processorTransactionId": "string",
                        "processorName": "string",
                        "processorMerchantId": "string",
                        "processorStatus": "PENDING",
                        "processorStatusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR",
                          "message": "string"
                        }
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/refund",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {},
                  "responseStatusCode": 400,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "recoverySuggestion": "string",
                    "diagnosticsId": "string"
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/refund",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {},
                  "responseStatusCode": 422,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "recoverySuggestion": "string",
                    "diagnosticsId": "string"
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "<p/>\n\nBy default, this request will refund the full amount.\n\nOptionally, pass in a lesser amount for a partial refund.\n",
              "htmlDescription": "<p/>\n\n<p>By default, this request will refund the full amount.</p>\n<p>Optionally, pass in a lesser amount for a partial refund.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            },
            {
              "environments": [],
              "availability": null,
              "defaultEnvironment": null,
              "urlSlug": "resume-a-payment",
              "method": "POST",
              "id": "resumePayment",
              "name": "Resume a payment",
              "path": {
                "pathParameters": [
                  {
                    "key": "id",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "description": "ID of payment to resume."
                  }
                ],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payments/"
                  },
                  {
                    "type": "pathParameter",
                    "value": "id"
                  },
                  {
                    "type": "literal",
                    "value": "/resume"
                  }
                ]
              },
              "queryParameters": [],
              "headers": [],
              "request": {
                "contentType": "application/json",
                "type": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "resumeToken",
                      "valueType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "description": "A token containing any information that is sent back from the checkout to complete a blocked payment flow."
                    }
                  ]
                },
                "descriptionContainsMarkdown": false
              },
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:PaymentApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/resume",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "resumeToken": "string"
                  },
                  "responseStatusCode": 200,
                  "responseBody": {
                    "id": "string",
                    "date": "2023-01-01T00:00:00Z",
                    "status": "PENDING",
                    "orderId": "string",
                    "currencyCode": "string",
                    "amount": 0,
                    "order": {
                      "countryCode": "AW",
                      "fees": [
                        {
                          "amount": 0,
                          "type": "string",
                          "description": "string"
                        }
                      ],
                      "lineItems": [
                        {
                          "itemId": "string",
                          "description": "string",
                          "amount": 0,
                          "discountAmount": 0,
                          "quantity": 0,
                          "taxAmount": 0,
                          "taxCode": "string",
                          "productType": "PHYSICAL"
                        }
                      ],
                      "shipping": {
                        "amount": 0
                      }
                    },
                    "customerId": "string",
                    "customer": {
                      "emailAddress": "string",
                      "mobileNumber": "string",
                      "firstName": "string",
                      "lastName": "string",
                      "billingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "shippingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "taxId": "string",
                      "nationalDocumentId": "string"
                    },
                    "metadata": {
                      "string": {}
                    },
                    "paymentMethod": {
                      "descriptor": "string",
                      "paymentMethodToken": "string",
                      "vaultedPaymentMethodToken": "string",
                      "analyticsId": "string",
                      "paymentMethodType": "PAYMENT_CARD",
                      "paymentMethodData": {
                        "first6Digits": "string",
                        "last4Digits": "string",
                        "expirationMonth": "string",
                        "expirationYear": "string",
                        "cardholderName": "string",
                        "network": "string",
                        "isNetworkTokenized": true,
                        "binData": {
                          "network": "AMEX",
                          "issuerCountryCode": "AW",
                          "issuerName": "string",
                          "issuerCurrencyCode": "AED",
                          "regionalRestriction": "DOMESTIC_USE_ONLY",
                          "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                          "accountFundingType": "CREDIT",
                          "prepaidReloadableIndicator": "RELOADABLE",
                          "productUsageType": "CONSUMER",
                          "productCode": "string",
                          "productName": "string"
                        }
                      },
                      "threeDSecureAuthentication": {
                        "responseCode": "NOT_PERFORMED",
                        "reasonCode": "GATEWAY_UNAVAILABLE",
                        "reasonText": "string",
                        "protocolVersion": "string",
                        "challengeIssued": true
                      }
                    },
                    "processor": {
                      "name": "string",
                      "processorMerchantId": "string",
                      "amountCaptured": 0,
                      "amountRefunded": 0
                    },
                    "requiredAction": {
                      "name": "3DS_AUTHENTICATION",
                      "description": "string",
                      "clientToken": "string"
                    },
                    "statusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR",
                      "message": "string"
                    },
                    "transactions": [
                      {
                        "transactionType": "SALE",
                        "processorTransactionId": "string",
                        "processorName": "string",
                        "processorMerchantId": "string",
                        "processorStatus": "PENDING",
                        "processorStatusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR",
                          "message": "string"
                        }
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/resume",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "resumeToken": "string"
                  },
                  "responseStatusCode": 400,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "recoverySuggestion": "string",
                    "diagnosticsId": "string"
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "<p/>\n\nResume a payment's workflow execution from a paused state. This is usually required when a Workflow was paused in order to get further information from the customer, or when waiting for an asynchronous response from a third party connection.\n",
              "htmlDescription": "<p/>\n\n<p>Resume a payment&#39;s workflow execution from a paused state. This is usually required when a Workflow was paused in order to get further information from the customer, or when waiting for an asynchronous response from a third party connection.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            },
            {
              "environments": [],
              "availability": null,
              "defaultEnvironment": null,
              "urlSlug": "get-a-payment",
              "method": "GET",
              "id": "getPaymentById",
              "name": "Get a payment",
              "path": {
                "pathParameters": [
                  {
                    "key": "id",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "description": "ID of payment to retrieve."
                  }
                ],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payments/"
                  },
                  {
                    "type": "pathParameter",
                    "value": "id"
                  },
                  {
                    "type": "literal",
                    "value": ""
                  }
                ]
              },
              "queryParameters": [],
              "headers": [],
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:PaymentApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "responseStatusCode": 200,
                  "responseBody": {
                    "id": "string",
                    "date": "2023-01-01T00:00:00Z",
                    "status": "PENDING",
                    "orderId": "string",
                    "currencyCode": "string",
                    "amount": 0,
                    "order": {
                      "countryCode": "AW",
                      "fees": [
                        {
                          "amount": 0,
                          "type": "string",
                          "description": "string"
                        }
                      ],
                      "lineItems": [
                        {
                          "itemId": "string",
                          "description": "string",
                          "amount": 0,
                          "discountAmount": 0,
                          "quantity": 0,
                          "taxAmount": 0,
                          "taxCode": "string",
                          "productType": "PHYSICAL"
                        }
                      ],
                      "shipping": {
                        "amount": 0
                      }
                    },
                    "customerId": "string",
                    "customer": {
                      "emailAddress": "string",
                      "mobileNumber": "string",
                      "firstName": "string",
                      "lastName": "string",
                      "billingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "shippingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "taxId": "string",
                      "nationalDocumentId": "string"
                    },
                    "metadata": {
                      "string": {}
                    },
                    "paymentMethod": {
                      "descriptor": "string",
                      "paymentMethodToken": "string",
                      "vaultedPaymentMethodToken": "string",
                      "analyticsId": "string",
                      "paymentMethodType": "PAYMENT_CARD",
                      "paymentMethodData": {
                        "first6Digits": "string",
                        "last4Digits": "string",
                        "expirationMonth": "string",
                        "expirationYear": "string",
                        "cardholderName": "string",
                        "network": "string",
                        "isNetworkTokenized": true,
                        "binData": {
                          "network": "AMEX",
                          "issuerCountryCode": "AW",
                          "issuerName": "string",
                          "issuerCurrencyCode": "AED",
                          "regionalRestriction": "DOMESTIC_USE_ONLY",
                          "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                          "accountFundingType": "CREDIT",
                          "prepaidReloadableIndicator": "RELOADABLE",
                          "productUsageType": "CONSUMER",
                          "productCode": "string",
                          "productName": "string"
                        }
                      },
                      "threeDSecureAuthentication": {
                        "responseCode": "NOT_PERFORMED",
                        "reasonCode": "GATEWAY_UNAVAILABLE",
                        "reasonText": "string",
                        "protocolVersion": "string",
                        "challengeIssued": true
                      }
                    },
                    "processor": {
                      "name": "string",
                      "processorMerchantId": "string",
                      "amountCaptured": 0,
                      "amountRefunded": 0
                    },
                    "requiredAction": {
                      "name": "3DS_AUTHENTICATION",
                      "description": "string",
                      "clientToken": "string"
                    },
                    "statusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR",
                      "message": "string"
                    },
                    "transactions": [
                      {
                        "transactionType": "SALE",
                        "processorTransactionId": "string",
                        "processorName": "string",
                        "processorMerchantId": "string",
                        "processorStatus": "PENDING",
                        "processorStatusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR",
                          "message": "string"
                        }
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "responseStatusCode": 400,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "recoverySuggestion": "string",
                    "diagnosticsId": "string"
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "<p/>\n\nRetrieve a payment by its ID.\n",
              "htmlDescription": "<p/>\n\n<p>Retrieve a payment by its ID.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            }
          ],
          "types": [],
          "subpackages": [],
          "pointsTo": null,
          "urlSlug": "payments-api",
          "description": null,
          "webhooks": [],
          "descriptionContainsMarkdown": false
        },
        "subpackage_paymentMethodsApi": {
          "subpackageId": "subpackage_paymentMethodsApi",
          "name": "Payment Methods API",
          "endpoints": [
            {
              "environments": [],
              "availability": null,
              "defaultEnvironment": null,
              "urlSlug": "save-a-payment-method-token",
              "method": "POST",
              "id": "vault_payment_method_payment_methods__token__vault_post",
              "name": "Save a payment method token",
              "path": {
                "pathParameters": [
                  {
                    "key": "token",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "description": "Payment method token to store."
                  }
                ],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payment-instruments/"
                  },
                  {
                    "type": "pathParameter",
                    "value": "token"
                  },
                  {
                    "type": "literal",
                    "value": "/vault"
                  }
                ]
              },
              "queryParameters": [],
              "headers": [],
              "request": {
                "contentType": "application/json",
                "type": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "customerId",
                      "valueType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "description": "The ID representing the customer"
                    }
                  ]
                },
                "descriptionContainsMarkdown": false
              },
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:MerchantPaymentMethodTokenApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:UnprocessableEntityErrorResponse"
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:UnprocessableEntityErrorResponse"
                    }
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payment-instruments/:token/vault",
                  "pathParameters": {
                    "token": ":token"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "customerId": "string"
                  },
                  "responseStatusCode": 200,
                  "responseBody": {
                    "createdAt": "2023-01-01T00:00:00Z",
                    "deletedAt": "2023-01-01T00:00:00Z",
                    "deleted": true,
                    "token": "string",
                    "tokenType": "string",
                    "analyticsId": "string",
                    "paymentMethodType": "PAYMENT_CARD",
                    "paymentMethodData": {
                      "last4Digits": "string",
                      "expirationMonth": "string",
                      "expirationYear": "string",
                      "cardholderName": "string",
                      "network": "string",
                      "networkTransactionId": "string",
                      "accountFundingType": "CREDIT"
                    },
                    "customerId": "string",
                    "default": true
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payment-instruments/:token/vault",
                  "pathParameters": {
                    "token": ":token"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "customerId": "string"
                  },
                  "responseStatusCode": 422,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "recoverySuggestion": "string",
                    "diagnosticsId": "string"
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "<p/>\n\nSave a `SINGLE_USE` payment method token so it can be used again later.\n\nIf you try to vault an already vaulted token, you will get the existing vaulted token back.\n",
              "htmlDescription": "<p/>\n\n<p>Save a <code>SINGLE_USE</code> payment method token so it can be used again later.</p>\n<p>If you try to vault an already vaulted token, you will get the existing vaulted token back.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            },
            {
              "environments": [],
              "availability": null,
              "defaultEnvironment": null,
              "urlSlug": "list-saved-payment-methods",
              "method": "GET",
              "id": "get_payment_methods_payment_methods_get",
              "name": "List saved payment methods",
              "path": {
                "pathParameters": [],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payment-instruments"
                  }
                ]
              },
              "queryParameters": [
                {
                  "key": "customer_id",
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  },
                  "description": "Return payment methods for this customer ID."
                }
              ],
              "headers": [],
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:MerchantPaymentMethodTokenListApiResponse"
                  }
                }
              },
              "errors": [],
              "errorsV2": [],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payment-instruments",
                  "pathParameters": {},
                  "queryParameters": {
                    "customer_id": "string"
                  },
                  "headers": {},
                  "responseStatusCode": 200,
                  "responseBody": {
                    "data": [
                      {
                        "createdAt": "2023-01-01T00:00:00Z",
                        "deletedAt": "2023-01-01T00:00:00Z",
                        "deleted": true,
                        "token": "string",
                        "tokenType": "string",
                        "analyticsId": "string",
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "last4Digits": "string",
                          "expirationMonth": "string",
                          "expirationYear": "string",
                          "cardholderName": "string",
                          "network": "string",
                          "networkTransactionId": "string",
                          "accountFundingType": "CREDIT"
                        },
                        "customerId": "string",
                        "default": true
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "Retrieve a list of stored payment methods for a customer.",
              "htmlDescription": "<p>Retrieve a list of stored payment methods for a customer.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": false
            },
            {
              "environments": [],
              "availability": null,
              "defaultEnvironment": null,
              "urlSlug": "delete-a-saved-payment-method",
              "method": "DELETE",
              "id": "delete_payment_method_payment_methods__token__delete",
              "name": "Delete a saved payment method",
              "path": {
                "pathParameters": [
                  {
                    "key": "token",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "description": "Saved payment method token to delete."
                  }
                ],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payment-instruments/"
                  },
                  {
                    "type": "pathParameter",
                    "value": "token"
                  },
                  {
                    "type": "literal",
                    "value": ""
                  }
                ]
              },
              "queryParameters": [],
              "headers": [],
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:MerchantPaymentMethodTokenApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payment-instruments/:token",
                  "pathParameters": {
                    "token": ":token"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "responseStatusCode": 200,
                  "responseBody": {
                    "createdAt": "2023-01-01T00:00:00Z",
                    "deletedAt": "2023-01-01T00:00:00Z",
                    "deleted": true,
                    "token": "string",
                    "tokenType": "string",
                    "analyticsId": "string",
                    "paymentMethodType": "PAYMENT_CARD",
                    "paymentMethodData": {
                      "last4Digits": "string",
                      "expirationMonth": "string",
                      "expirationYear": "string",
                      "cardholderName": "string",
                      "network": "string",
                      "networkTransactionId": "string",
                      "accountFundingType": "CREDIT"
                    },
                    "customerId": "string",
                    "default": true
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payment-instruments/:token",
                  "pathParameters": {
                    "token": ":token"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "responseStatusCode": 400,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "recoverySuggestion": "string",
                    "diagnosticsId": "string"
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "Delete a saved payment method.",
              "htmlDescription": "<p>Delete a saved payment method.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": false
            },
            {
              "environments": [],
              "availability": null,
              "defaultEnvironment": null,
              "urlSlug": "update-the-default-saved-payment-method",
              "method": "POST",
              "id": "set_payment_method_default_payment_methods__token__default_post",
              "name": "Update the default saved payment method",
              "path": {
                "pathParameters": [
                  {
                    "key": "token",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "description": "Saved payment method token to set to default."
                  }
                ],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payment-instruments/"
                  },
                  {
                    "type": "pathParameter",
                    "value": "token"
                  },
                  {
                    "type": "literal",
                    "value": "/default"
                  }
                ]
              },
              "queryParameters": [],
              "headers": [],
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:MerchantPaymentMethodTokenApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payment-instruments/:token/default",
                  "pathParameters": {
                    "token": ":token"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "responseStatusCode": 200,
                  "responseBody": {
                    "createdAt": "2023-01-01T00:00:00Z",
                    "deletedAt": "2023-01-01T00:00:00Z",
                    "deleted": true,
                    "token": "string",
                    "tokenType": "string",
                    "analyticsId": "string",
                    "paymentMethodType": "PAYMENT_CARD",
                    "paymentMethodData": {
                      "last4Digits": "string",
                      "expirationMonth": "string",
                      "expirationYear": "string",
                      "cardholderName": "string",
                      "network": "string",
                      "networkTransactionId": "string",
                      "accountFundingType": "CREDIT"
                    },
                    "customerId": "string",
                    "default": true
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payment-instruments/:token/default",
                  "pathParameters": {
                    "token": ":token"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "responseStatusCode": 400,
                  "responseBody": {
                    "errorId": "string",
                    "description": "string",
                    "recoverySuggestion": "string",
                    "diagnosticsId": "string"
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "Update a saved payment method to be the default stored payment method for a customer.",
              "htmlDescription": "<p>Update a saved payment method to be the default stored payment method for a customer.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": false
            }
          ],
          "types": [],
          "subpackages": [],
          "pointsTo": null,
          "urlSlug": "payment-methods-api",
          "description": null,
          "webhooks": [],
          "descriptionContainsMarkdown": false
        }
      },
      "auth": {
        "type": "header",
        "headerWireValue": "X-API-KEY",
        "nameOverride": "apiKey"
      },
      "hasMultipleBaseUrls": false
    },
    "67c83aa4-e686-4f16-b02d-4c27a6e92f91": {
      "id": "67c83aa4-e686-4f16-b02d-4c27a6e92f91",
      "rootPackage": {
        "endpoints": [],
        "subpackages": ["subpackage_paymentWebhooks", "subpackage_disputeChargebacksWebhooks"],
        "types": [
          "type_:AccountFundingTypeEnum",
          "type_:ApayaCustomerTokenApiSchema",
          "type_:BinDataApiSchema",
          "type_:CardAccountNumberTypeEnum",
          "type_:CardNetworkEnum",
          "type_:CardProductTypeEnum",
          "type_:CardRegionRestrictionEnum",
          "type_:PaymentResponsePaymentMethodOptionsApiSchema",
          "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData",
          "type_:CountryCodeEnum",
          "type_:Currency",
          "type_:PaymentResponseProcessorApiSchema",
          "type_:GoCardlessMandateApiSchema",
          "type_:IdealPayNlTokenApiSchema",
          "type_:KlarnaAddressApiSchema",
          "type_:KlarnaCustomerTokenApiSchema",
          "type_:KlarnaPaymentSessionApiSchema",
          "type_:KlarnaSessionDetailsApiSchema",
          "type_:KlarnaTokenDetails",
          "type_:PayPalBillingAgreementApiSchema",
          "type_:PayPalExternalPayerInfoApiSchema",
          "type_:PayPalOrderTokenApiSchema",
          "type_:PaymentStatusWebhookPayload",
          "type_:PaymentStatusWebhookPayloadNotificationConfig",
          "type_:PaymentStatusWebhookPayloadPayment",
          "type_:PaymentRefundWebhookPayload",
          "type_:PaymentRefundWebhookPayloadNotificationConfig",
          "type_:PaymentRefundWebhookPayloadPayment",
          "type_:DisputeOpenWebhookPayload",
          "type_:DisputeStatusWebhookPayload",
          "type_:DisputeStatusWebhookPayloadType",
          "type_:DisputeStatusWebhookPayloadStatus",
          "type_:DisputeStatusWebhookPayloadPaymentMethod",
          "type_:DisputeStatusWebhookPayloadPaymentMethodPaymentMethodData",
          "type_:DisputeStatusWebhookPayloadProcessor",
          "type_:PaymentCardTokenApiSchema",
          "type_:StatusReasonApiSchema",
          "type_:RiskDataApiSchema",
          "type_:FraudCheckApiSchema",
          "type_:FraudDecisionTypeEnum",
          "type_:PaymentMethodTypeEnum",
          "type_:PrepaidReloadableEnum",
          "type_:ThreeDSecureAuthResponseCodeEnum",
          "type_:ThreeDSecureAuthenticationApiSchema",
          "type_:ThreeDSecureAuthenticationApiSchemaReasonCode",
          "type_:ThreeDSecureFailedReasonCodeEnum",
          "type_:ThreeDSecureSkippedReasonCodeEnum",
          "type_:DeclineTypeEnum",
          "type_:TransactionDeclineReasonV2Enum",
          "type_:TransactionOverviewApiSchema",
          "type_:PaymentStatus",
          "type_:PaymentStatusTypeEnum",
          "type_:TransactionTypeEnum",
          "type_:AddressApiSchema",
          "type_:RecurringTransactionTypeEnum",
          "type_:RecurringPaymentTypeSchema"
        ],
        "webhooks": []
      },
      "types": {
        "type_:AccountFundingTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "AccountFundingTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "CREDIT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DEBIT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PREPAID",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CHARGE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DEFERRED_DEBIT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNKNOWN",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ApayaCustomerTokenApiSchema": {
          "description": null,
          "name": "ApayaCustomerTokenApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "mx",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "mnc",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "mcc",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:BinDataApiSchema": {
          "description": null,
          "name": "BinDataApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "network",
                "valueType": {
                  "type": "id",
                  "value": "type_:CardNetworkEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "issuerCountryCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CountryCodeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "issuerName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "issuerCurrencyCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:Currency"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "regionalRestriction",
                "valueType": {
                  "type": "id",
                  "value": "type_:CardRegionRestrictionEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "accountNumberType",
                "valueType": {
                  "type": "id",
                  "value": "type_:CardAccountNumberTypeEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "accountFundingType",
                "valueType": {
                  "type": "id",
                  "value": "type_:AccountFundingTypeEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "prepaidReloadableIndicator",
                "valueType": {
                  "type": "id",
                  "value": "type_:PrepaidReloadableEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "productUsageType",
                "valueType": {
                  "type": "id",
                  "value": "type_:CardProductTypeEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "productCode",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "productName",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CardAccountNumberTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "CardAccountNumberTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "PRIMARY_ACCOUNT_NUMBER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NETWORK_TOKEN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNKNOWN",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CardNetworkEnum": {
          "description": "[The list of available card networks and their `CARD_NETWORK_TYPE` can be found here.](https://www.notion.so/primerio/Payment-Method-Types-2b971a8c54c3452cae0b2fffe9167d72)\n",
          "htmlDescription": "<p><a href=\"https://www.notion.so/primerio/Payment-Method-Types-2b971a8c54c3452cae0b2fffe9167d72\">The list of available card networks and their <code>CARD_NETWORK_TYPE</code> can be found here.</a></p>\n",
          "name": "CardNetworkEnum",
          "shape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "descriptionContainsMarkdown": true
        },
        "type_:CardProductTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "CardProductTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "CONSUMER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BUSINESS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GOVERNMENT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNKNOWN",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CardRegionRestrictionEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "CardRegionRestrictionEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "DOMESTIC_USE_ONLY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NONE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNKNOWN",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentResponsePaymentMethodOptionsApiSchema": {
          "description": null,
          "name": "PaymentResponsePaymentMethodOptionsApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The description of the payment, as it would typically appear on a bank statement.",
                "htmlDescription": "<p>The description of the payment, as it would typically appear on a bank statement.</p>\n",
                "key": "descriptor",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "paymentType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:RecurringPaymentTypeSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The payment method token used to authorize the transaction.",
                "htmlDescription": "<p>The payment method token used to authorize the transaction.</p>\n",
                "key": "paymentMethodToken",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "If the payment method token was vaulted, this is the new token. Use this token for recurring payments.",
                "htmlDescription": "<p>If the payment method token was vaulted, this is the new token. Use this token for recurring payments.</p>\n",
                "key": "vaultedPaymentMethodToken",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Unique analytics identifier corresponding to a payment method",
                "htmlDescription": "<p>Unique analytics identifier corresponding to a payment method</p>\n",
                "key": "analyticsId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Payment method type",
                "htmlDescription": "<p>Payment method type</p>\n",
                "key": "paymentMethodType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentMethodTypeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Payment method data",
                "htmlDescription": "<p>Payment method data</p>\n",
                "key": "paymentMethodData",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "threeDSecureAuthentication",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:ThreeDSecureAuthenticationApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData": {
          "description": "Payment method data",
          "htmlDescription": "<p>Payment method data</p>\n",
          "name": "PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData",
          "shape": {
            "type": "undiscriminatedUnion",
            "variants": [
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:PaymentCardTokenApiSchema"
                },
                "displayName": "Payment Card Token Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:PayPalOrderTokenApiSchema"
                },
                "displayName": "Pay Pal Order Token Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:PayPalBillingAgreementApiSchema"
                },
                "displayName": "Pay Pal Billing Agreement Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:GoCardlessMandateApiSchema"
                },
                "displayName": "Go Cardless Mandate Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:KlarnaPaymentSessionApiSchema"
                },
                "displayName": "Klarna Payment Session Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:KlarnaCustomerTokenApiSchema"
                },
                "displayName": "Klarna Customer Token Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:IdealPayNlTokenApiSchema"
                },
                "displayName": "Ideal Pay Nl Token Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:ApayaCustomerTokenApiSchema"
                },
                "displayName": "Apaya Customer Token Api Schema",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CountryCodeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "CountryCodeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "AW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BJ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DJ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ES",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ET",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FJ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ID",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ML",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ME",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "YT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "OM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "QA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SJ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ST",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TJ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "US",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "WF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "WS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "YE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZW",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:Currency": {
          "description": "Enumerates all supported currencies",
          "htmlDescription": "<p>Enumerates all supported currencies</p>\n",
          "name": "Currency",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "AED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AFN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ALL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AMD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ANG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AOA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ARS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AUD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AWG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AZN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BAM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BBD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BDT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BGN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BHD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BIF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BMD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BND",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BOB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BOV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BRL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BSD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BTN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BWP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BYR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BYN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BZD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CAD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CDF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CHE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CHF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CHW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CLF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CLP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CNY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "COP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "COU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CRC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CUC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CUP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CVE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CZK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DJF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DKK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DOP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DZD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EGP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ERN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ETB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EUR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FJD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FKP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GBP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GEL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GHS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GIP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GMD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GNF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GTQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GYD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HKD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HNL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HRK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HTG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HUF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IDR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ILS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "INR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IQD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IRR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ISK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JMD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JOD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JPY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KES",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KGS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KHR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KMF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KPW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KRW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KWD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KYD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KZT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LAK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LBP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LKR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LRD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LSL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LTL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LVL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LYD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MAD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MDL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MGA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MKD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MMK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MNT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MOP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MRO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MUR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MVR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MWK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MXN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MXV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MYR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MZN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NAD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NGN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NIO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NOK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NPR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NZD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "OMR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PAB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PEN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PGK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PHP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PKR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PLN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PYG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "QAR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RON",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RSD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RUB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RWF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SAR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SBD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SCR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SDG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SEK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SGD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SHP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SLL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SOS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SRD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SSP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "STD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SVC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SYP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SZL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "THB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TJS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TMT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TND",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TOP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TRY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TTD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TWD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TZS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UAH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UGX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "USD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "USN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "USS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UYI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UYU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UZS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VEF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VND",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VUV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "WST",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XAF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XAG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XAU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XBA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XBB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XBC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XBD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XCD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XDR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XFU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XOF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XPD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XPF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XPT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XSU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XTS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XUA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "YER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZAR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZMW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZWL",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentResponseProcessorApiSchema": {
          "description": null,
          "name": "PaymentResponseProcessorApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The payment processor used for this payment.",
                "htmlDescription": "<p>The payment processor used for this payment.</p>\n",
                "key": "name",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The merchant ID registered at the payment processor used for this payment.",
                "htmlDescription": "<p>The merchant ID registered at the payment processor used for this payment.</p>\n",
                "key": "processorMerchantId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "If no capture was performed, this value will be set to `0`.\n\nIf one or more partial captures were performed, this value will be a sum\nof all partial capture amounts.\n",
                "htmlDescription": "<p>If no capture was performed, this value will be set to <code>0</code>.</p>\n<p>If one or more partial captures were performed, this value will be a sum\nof all partial capture amounts.</p>\n",
                "key": "amountCaptured",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "If no refund was performed, this value will be set to `0`.\n\nIf one or more partial refunds were performed, this value will be a sum\nof all partial refund amounts.\n",
                "htmlDescription": "<p>If no refund was performed, this value will be set to <code>0</code>.</p>\n<p>If one or more partial refunds were performed, this value will be a sum\nof all partial refund amounts.</p>\n",
                "key": "amountRefunded",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:GoCardlessMandateApiSchema": {
          "description": null,
          "name": "GoCardlessMandateApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Unique identifier of a GoCardless mandate agreement",
                "htmlDescription": "<p>Unique identifier of a GoCardless mandate agreement</p>\n",
                "key": "gocardlessMandateId",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:IdealPayNlTokenApiSchema": {
          "description": null,
          "name": "IdealPayNlTokenApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "paymentMethodConfigId",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:KlarnaAddressApiSchema": {
          "description": null,
          "name": "KlarnaAddressApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "title",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "firstName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "lastName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "email",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "phoneNumber",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "addressLine1",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "addressLine2",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "addressLine3",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "city",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "state",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "countryCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CountryCodeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "postalCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:KlarnaCustomerTokenApiSchema": {
          "description": null,
          "name": "KlarnaCustomerTokenApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "klarnaCustomerToken",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "sessionData",
                "valueType": {
                  "type": "id",
                  "value": "type_:KlarnaSessionDetailsApiSchema"
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:KlarnaPaymentSessionApiSchema": {
          "description": null,
          "name": "KlarnaPaymentSessionApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "klarnaAuthorizationToken",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "sessionData",
                "valueType": {
                  "type": "id",
                  "value": "type_:KlarnaSessionDetailsApiSchema"
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:KlarnaSessionDetailsApiSchema": {
          "description": null,
          "name": "KlarnaSessionDetailsApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "recurringDescription",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "billingAddress",
                "valueType": {
                  "type": "id",
                  "value": "type_:KlarnaAddressApiSchema"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "shippingAddress",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:KlarnaAddressApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "purchaseCountry",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "purchaseCurrency",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "locale",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "orderLines",
                "valueType": {
                  "type": "list",
                  "itemType": {
                    "type": "unknown"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "tokenDetails",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:KlarnaTokenDetails"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:KlarnaTokenDetails": {
          "description": null,
          "name": "KlarnaTokenDetails",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "type",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "brand",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "masked_number",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "expiry_date",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PayPalBillingAgreementApiSchema": {
          "description": null,
          "name": "PayPalBillingAgreementApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "paypalBillingAgreementId",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Information about the PayPal customer",
                "htmlDescription": "<p>Information about the PayPal customer</p>\n",
                "key": "externalPayerInfo",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PayPalExternalPayerInfoApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The PayPal customer's shipping address",
                "htmlDescription": "<p>The PayPal customer&#39;s shipping address</p>\n",
                "key": "shippingAddress",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:AddressApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "paypalStatus",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PayPalExternalPayerInfoApiSchema": {
          "description": null,
          "name": "PayPalExternalPayerInfoApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "externalPayerId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "email",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "firstName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "lastName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PayPalOrderTokenApiSchema": {
          "description": null,
          "name": "PayPalOrderTokenApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "paypalOrderId",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Information about the PayPal customer",
                "htmlDescription": "<p>Information about the PayPal customer</p>\n",
                "key": "externalPayerInfo",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PayPalExternalPayerInfoApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "paypalStatus",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentStatusWebhookPayload": {
          "description": null,
          "name": "PaymentStatusWebhookPayload",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The type of the webhook raised. `PAYMENT.STATUS` in this case.",
                "htmlDescription": "<p>The type of the webhook raised. <code>PAYMENT.STATUS</code> in this case.</p>\n",
                "key": "eventType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "The date-time that the webhook was sent.",
                "htmlDescription": "<p>The date-time that the webhook was sent.</p>\n",
                "key": "date",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The notification configuration details.",
                "htmlDescription": "<p>The notification configuration details.</p>\n",
                "key": "notificationConfig",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentStatusWebhookPayloadNotificationConfig"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The payload version",
                "htmlDescription": "<p>The payload version</p>\n",
                "key": "version",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "payment",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentStatusWebhookPayloadPayment"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentStatusWebhookPayloadNotificationConfig": {
          "description": "The notification configuration details.",
          "htmlDescription": "<p>The notification configuration details.</p>\n",
          "name": "PaymentStatusWebhookPayloadNotificationConfig",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The notification configuration ID.",
                "htmlDescription": "<p>The notification configuration ID.</p>\n",
                "key": "id",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The notification configuration description.",
                "htmlDescription": "<p>The notification configuration description.</p>\n",
                "key": "description",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentStatusWebhookPayloadPayment": {
          "description": null,
          "name": "PaymentStatusWebhookPayloadPayment",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream operations.\n",
                "htmlDescription": "<p>The unique payment ID.</p>\n<p>You can use this ID to retrieve the payment details, or perform downstream operations.</p>\n",
                "key": "id",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The date and time at which the payment was created in UTC format.",
                "htmlDescription": "<p>The date and time at which the payment was created in UTC format.</p>\n",
                "key": "date",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "See the payment [status table](../docs#payment-status) for more information.",
                "htmlDescription": "<p>See the payment <a href=\"../docs#payment-status\">status table</a> for more information.</p>\n",
                "key": "status",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentStatus"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Your reference for the payment.",
                "htmlDescription": "<p>Your reference for the payment.</p>\n",
                "key": "orderId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
                "htmlDescription": "<p>The 3-letter currency code in <a href=\"https://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 format</a>.\ne.g. use <code>USD</code> for US dollars.</p>\n",
                "key": "currencyCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "The amount you charged the customer, in minor units.",
                "htmlDescription": "<p>The amount you charged the customer, in minor units.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The unique identifier for your customer.",
                "htmlDescription": "<p>The unique identifier for your customer.</p>\n",
                "key": "customerId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Additional data to be used throughout the payment lifecycle.\n",
                "htmlDescription": "<p>Additional data to be used throughout the payment lifecycle.</p>\n",
                "key": "metadata",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "unknown"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The payment method options provided in the request, as well as the token used to process the payment.",
                "htmlDescription": "<p>The payment method options provided in the request, as well as the token used to process the payment.</p>\n",
                "key": "paymentMethod",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentResponsePaymentMethodOptionsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "More information associated with the payment processor, including the processor name.",
                "htmlDescription": "<p>More information associated with the payment processor, including the processor name.</p>\n",
                "key": "processor",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentResponseProcessorApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Check this field for more information regarding the payment's status. This is especially useful when the status is `DECLINED` or `FAILED`.\n",
                "htmlDescription": "<p>Check this field for more information regarding the payment&#39;s status. This is especially useful when the status is <code>DECLINED</code> or <code>FAILED</code>.</p>\n",
                "key": "statusReason",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:StatusReasonApiSchema"
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "A list summarizing the transactions that occurred while processing the payment.\nNote: a refund is a separate transaction and so will appear in this `transactions` list if a refund was performed.",
                "htmlDescription": "<p>A list summarizing the transactions that occurred while processing the payment.\nNote: a refund is a separate transaction and so will appear in this <code>transactions</code> list if a refund was performed.</p>\n",
                "key": "transactions",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_:TransactionOverviewApiSchema"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": null,
                "key": "riskData",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:RiskDataApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentRefundWebhookPayload": {
          "description": null,
          "name": "PaymentRefundWebhookPayload",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The type of the webhook raised. `PAYMENT.REFUND` in this case.",
                "htmlDescription": "<p>The type of the webhook raised. <code>PAYMENT.REFUND</code> in this case.</p>\n",
                "key": "eventType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The date-time that the webhook was sent.",
                "htmlDescription": "<p>The date-time that the webhook was sent.</p>\n",
                "key": "date",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The notification configuration details.",
                "htmlDescription": "<p>The notification configuration details.</p>\n",
                "key": "notificationConfig",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentRefundWebhookPayloadNotificationConfig"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The payload version",
                "htmlDescription": "<p>The payload version</p>\n",
                "key": "version",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "payment",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentRefundWebhookPayloadPayment"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentRefundWebhookPayloadNotificationConfig": {
          "description": "The notification configuration details.",
          "htmlDescription": "<p>The notification configuration details.</p>\n",
          "name": "PaymentRefundWebhookPayloadNotificationConfig",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The notification configuration ID.",
                "htmlDescription": "<p>The notification configuration ID.</p>\n",
                "key": "id",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The notification configuration description.",
                "htmlDescription": "<p>The notification configuration description.</p>\n",
                "key": "description",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentRefundWebhookPayloadPayment": {
          "description": null,
          "name": "PaymentRefundWebhookPayloadPayment",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream operations.\n",
                "htmlDescription": "<p>The unique payment ID.</p>\n<p>You can use this ID to retrieve the payment details, or perform downstream operations.</p>\n",
                "key": "id",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The date and time at which the payment was created in UTC format.",
                "htmlDescription": "<p>The date and time at which the payment was created in UTC format.</p>\n",
                "key": "date",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "See the payment [status table](../docs#payment-status) for more information.",
                "htmlDescription": "<p>See the payment <a href=\"../docs#payment-status\">status table</a> for more information.</p>\n",
                "key": "status",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentStatus"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Your reference for the payment.",
                "htmlDescription": "<p>Your reference for the payment.</p>\n",
                "key": "orderId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
                "htmlDescription": "<p>The 3-letter currency code in <a href=\"https://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 format</a>.\ne.g. use <code>USD</code> for US dollars.</p>\n",
                "key": "currencyCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "The amount you charged the customer, in minor units.",
                "htmlDescription": "<p>The amount you charged the customer, in minor units.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The unique identifier for your customer.",
                "htmlDescription": "<p>The unique identifier for your customer.</p>\n",
                "key": "customerId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Additional data to be used throughout the payment lifecycle.\n",
                "htmlDescription": "<p>Additional data to be used throughout the payment lifecycle.</p>\n",
                "key": "metadata",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "unknown"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The payment method options provided in the request, as well as the token used to process the payment.",
                "htmlDescription": "<p>The payment method options provided in the request, as well as the token used to process the payment.</p>\n",
                "key": "paymentMethod",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentResponsePaymentMethodOptionsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "More information associated with the payment processor, including the processor name.",
                "htmlDescription": "<p>More information associated with the payment processor, including the processor name.</p>\n",
                "key": "processor",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentResponseProcessorApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Check this field for more information regarding the payment's status. This is especially useful when the status is `DECLINED` or `FAILED`.\n",
                "htmlDescription": "<p>Check this field for more information regarding the payment&#39;s status. This is especially useful when the status is <code>DECLINED</code> or <code>FAILED</code>.</p>\n",
                "key": "statusReason",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:StatusReasonApiSchema"
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "A list summarizing the transactions that occurred while processing the payment.\nNote: a refund is a separate transaction and so will appear in this `transactions` list if a refund was performed.",
                "htmlDescription": "<p>A list summarizing the transactions that occurred while processing the payment.\nNote: a refund is a separate transaction and so will appear in this <code>transactions</code> list if a refund was performed.</p>\n",
                "key": "transactions",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_:TransactionOverviewApiSchema"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": null,
                "key": "riskData",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:RiskDataApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:DisputeOpenWebhookPayload": {
          "description": null,
          "name": "DisputeOpenWebhookPayload",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The type of the webhook raised. `DISPUTE.OPEN` in this case.",
                "htmlDescription": "<p>The type of the webhook raised. <code>DISPUTE.OPEN</code> in this case.</p>\n",
                "key": "eventType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The name of the processor that generated the dispute.",
                "htmlDescription": "<p>The name of the processor that generated the dispute.</p>\n",
                "key": "processorId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "A unique identifier for the corresponding connection dispute.",
                "htmlDescription": "<p>A unique identifier for the corresponding connection dispute.</p>\n",
                "key": "processorDisputeId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "A unique identifier for the Primer payment corresponding to this dispute.",
                "htmlDescription": "<p>A unique identifier for the Primer payment corresponding to this dispute.</p>\n",
                "key": "paymentId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "A unique identifier for the Primer transaction corresponding to this dispute.",
                "htmlDescription": "<p>A unique identifier for the Primer transaction corresponding to this dispute.</p>\n",
                "key": "transactionId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Your reference for the sale transaction that the dispute relates to.",
                "htmlDescription": "<p>Your reference for the sale transaction that the dispute relates to.</p>\n",
                "key": "orderId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "A unique identifier for your Primer merchant account.",
                "htmlDescription": "<p>A unique identifier for your Primer merchant account.</p>\n",
                "key": "primerAccountId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:DisputeStatusWebhookPayload": {
          "description": null,
          "name": "DisputeStatusWebhookPayload",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The type of event that triggered the webhook. This will have the value `DISPUTE.STATUS`. This indicates that a dispute notification was issued through a configured connection.\n\nUse these notifications to proactively communicate with your customer, issue refunds, or submit evidence to challenge disputes.\n",
                "htmlDescription": "<p>The type of event that triggered the webhook. This will have the value <code>DISPUTE.STATUS</code>. This indicates that a dispute notification was issued through a configured connection.</p>\n<p>Use these notifications to proactively communicate with your customer, issue refunds, or submit evidence to challenge disputes.</p>\n",
                "key": "eventType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "The payload version",
                "htmlDescription": "<p>The payload version</p>\n",
                "key": "version",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The type of dispute event. More information on what the `type` field represents can be found in [Manage disputes](https://primer.io/docs/accept-payments/manage-disputes)\n",
                "htmlDescription": "<p>The type of dispute event. More information on what the <code>type</code> field represents can be found in <a href=\"https://primer.io/docs/accept-payments/manage-disputes\">Manage disputes</a></p>\n",
                "key": "type",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:DisputeStatusWebhookPayloadType"
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "To see which statuses are applicable for a dispute `type`, and how we map `status`, please see [Manage disputes](https://primer.io/docs/accept-payments/manage-disputes).\n",
                "htmlDescription": "<p>To see which statuses are applicable for a dispute <code>type</code>, and how we map <code>status</code>, please see <a href=\"https://primer.io/docs/accept-payments/manage-disputes\">Manage disputes</a>.</p>\n",
                "key": "status",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:DisputeStatusWebhookPayloadStatus"
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "A unique identifier for your Primer merchant account.",
                "htmlDescription": "<p>A unique identifier for your Primer merchant account.</p>\n",
                "key": "primerAccountId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "A unique identifier for the Primer transaction corresponding to this dispute.",
                "htmlDescription": "<p>A unique identifier for the Primer transaction corresponding to this dispute.</p>\n",
                "key": "transactionId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Your reference for the sale transaction that the dispute relates to.",
                "htmlDescription": "<p>Your reference for the sale transaction that the dispute relates to.</p>\n",
                "key": "orderId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "A unique identifier for the Primer payment corresponding to this dispute.",
                "htmlDescription": "<p>A unique identifier for the Primer payment corresponding to this dispute.</p>\n",
                "key": "paymentId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The payment method information for the payment that is now disputed.",
                "htmlDescription": "<p>The payment method information for the payment that is now disputed.</p>\n",
                "key": "paymentMethod",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:DisputeStatusWebhookPayloadPaymentMethod"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The payment processor that you submitted a payment to, and received a dispute notification from.",
                "htmlDescription": "<p>The payment processor that you submitted a payment to, and received a dispute notification from.</p>\n",
                "key": "processor",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:DisputeStatusWebhookPayloadProcessor"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "An identifier for this dispute provided by the processor. This is shared across multiple dispute `type` and `status` relating to the same payment.\n\ne.g. as an `open` dispute that is later challenged will share a `proccessorDisputeId`.\n",
                "htmlDescription": "<p>An identifier for this dispute provided by the processor. This is shared across multiple dispute <code>type</code> and <code>status</code> relating to the same payment.</p>\n<p>e.g. as an <code>open</code> dispute that is later challenged will share a <code>proccessorDisputeId</code>.</p>\n",
                "key": "processorDisputeId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "Date and time at which Primer received the processor's dispute event. Provided as an ISO timestamp in UTC.",
                "htmlDescription": "<p>Date and time at which Primer received the processor&#39;s dispute event. Provided as an ISO timestamp in UTC.</p>\n",
                "key": "receivedAt",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Time by which the merchant must challenge a dispute. This is provided by the processor, where available.",
                "htmlDescription": "<p>Time by which the merchant must challenge a dispute. This is provided by the processor, where available.</p>\n",
                "key": "challengeRequiredBy",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Primer’s unified reason that explains why the dispute was raised. This should not vary across processors for the same dispute `reasonCode`, unlike the `processorReason`.",
                "htmlDescription": "<p>Primer’s unified reason that explains why the dispute was raised. This should not vary across processors for the same dispute <code>reasonCode</code>, unlike the <code>processorReason</code>.</p>\n",
                "key": "reason",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "The dispute reason code for a dispute. This will be the same code provided by the card schemes.",
                "htmlDescription": "<p>The dispute reason code for a dispute. This will be the same code provided by the card schemes.</p>\n",
                "key": "reasonCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The dispute reason provided by the processor. This can vary across processors for the same dispute `reasonCode`, which is why we provide a unified field - `reason`.",
                "htmlDescription": "<p>The dispute reason provided by the processor. This can vary across processors for the same dispute <code>reasonCode</code>, which is why we provide a unified field - <code>reason</code>.</p>\n",
                "key": "processorReason",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "The disputed amount. Note: this is not always the same as the payment amount.\n\nThis will be displayed in minor units.\n\ne.g. for $7, use `700`. Some currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n",
                "htmlDescription": "<p>The disputed amount. Note: this is not always the same as the payment amount.</p>\n<p>This will be displayed in minor units.</p>\n<p>e.g. for $7, use <code>700</code>. Some currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use <code>100</code>.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
                "htmlDescription": "<p>The 3-letter currency code in <a href=\"https://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 format</a>.\ne.g. use <code>USD</code> for US dollars.</p>\n",
                "key": "currency",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "The merchant ID registered at the payment processor used for this dispute.",
                "htmlDescription": "<p>The merchant ID registered at the payment processor used for this dispute.</p>\n",
                "key": "merchantId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:DisputeStatusWebhookPayloadType": {
          "description": "The type of dispute event. More information on what the `type` field represents can be found in [Manage disputes](https://primer.io/docs/accept-payments/manage-disputes)\n",
          "htmlDescription": "<p>The type of dispute event. More information on what the <code>type</code> field represents can be found in <a href=\"https://primer.io/docs/accept-payments/manage-disputes\">Manage disputes</a></p>\n",
          "name": "DisputeStatusWebhookPayloadType",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "RETRIEVAL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DISPUTE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PREARBITRATION",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": true
        },
        "type_:DisputeStatusWebhookPayloadStatus": {
          "description": "To see which statuses are applicable for a dispute `type`, and how we map `status`, please see [Manage disputes](https://primer.io/docs/accept-payments/manage-disputes).\n",
          "htmlDescription": "<p>To see which statuses are applicable for a dispute <code>type</code>, and how we map <code>status</code>, please see <a href=\"https://primer.io/docs/accept-payments/manage-disputes\">Manage disputes</a>.</p>\n",
          "name": "DisputeStatusWebhookPayloadStatus",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "OPEN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ACCEPTED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CHALLENGED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EXPIRED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CANCELLED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "WON",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LOST",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": true
        },
        "type_:DisputeStatusWebhookPayloadPaymentMethod": {
          "description": "The payment method information for the payment that is now disputed.",
          "htmlDescription": "<p>The payment method information for the payment that is now disputed.</p>\n",
          "name": "DisputeStatusWebhookPayloadPaymentMethod",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "paymentMethodType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentMethodTypeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "paymentMethodData",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:DisputeStatusWebhookPayloadPaymentMethodPaymentMethodData"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:DisputeStatusWebhookPayloadPaymentMethodPaymentMethodData": {
          "description": null,
          "name": "DisputeStatusWebhookPayloadPaymentMethodPaymentMethodData",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "network",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CardNetworkEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:DisputeStatusWebhookPayloadProcessor": {
          "description": "The payment processor that you submitted a payment to, and received a dispute notification from.",
          "htmlDescription": "<p>The payment processor that you submitted a payment to, and received a dispute notification from.</p>\n",
          "name": "DisputeStatusWebhookPayloadProcessor",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "ADYEN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BRAINTREE",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentCardTokenApiSchema": {
          "description": null,
          "name": "PaymentCardTokenApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "first6Digits",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "last4Digits",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "expirationMonth",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "expirationYear",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "cardholderName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "network",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "isNetworkTokenized",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "binData",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:BinDataApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:StatusReasonApiSchema": {
          "description": null,
          "name": "StatusReasonApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Type of the status.",
                "htmlDescription": "<p>Type of the status.</p>\n",
                "key": "type",
                "valueType": {
                  "type": "id",
                  "value": "type_:PaymentStatusTypeEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "If the error is of type `ISSUER_DECLINED` this will be returned.\n\nDeclines of type `SOFT_DECLINE` may be retried,\nwhereas declines of type `HARD_DECLINE` should not be retried.\n",
                "htmlDescription": "<p>If the error is of type <code>ISSUER_DECLINED</code> this will be returned.</p>\n<p>Declines of type <code>SOFT_DECLINE</code> may be retried,\nwhereas declines of type <code>HARD_DECLINE</code> should not be retried.</p>\n",
                "key": "declineType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:DeclineTypeEnum"
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "If the error is of type `ISSUER_DECLINED`, this will be returned.",
                "htmlDescription": "<p>If the error is of type <code>ISSUER_DECLINED</code>, this will be returned.</p>\n",
                "key": "code",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:TransactionDeclineReasonV2Enum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "In case of an error on the processor's part, we will return the message returned by the processor. This is usually a human readable error.",
                "htmlDescription": "<p>In case of an error on the processor&#39;s part, we will return the message returned by the processor. This is usually a human readable error.</p>\n",
                "key": "message",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:RiskDataApiSchema": {
          "description": "Risk data associated with this payment.\n",
          "htmlDescription": "<p>Risk data associated with this payment.</p>\n",
          "name": "RiskDataApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "fraudCheck",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:FraudCheckApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:FraudCheckApiSchema": {
          "description": "Results of the pre-authorization and post-authorization fraud checks.\n",
          "htmlDescription": "<p>Results of the pre-authorization and post-authorization fraud checks.</p>\n",
          "name": "FraudCheckApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "source",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "preAuthorizationResult",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:FraudDecisionTypeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "postAuthorizationResult",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:FraudDecisionTypeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:FraudDecisionTypeEnum": {
          "description": "Possible fraud check outcomes.",
          "htmlDescription": "<p>Possible fraud check outcomes.</p>\n",
          "name": "FraudDecisionTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "ACCEPT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "REFUSE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FAILED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "THREE_DS",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentMethodTypeEnum": {
          "description": "[The list of available payment methods and their `PAYMENT_METHOD_TYPE` can be found here.](https://www.notion.so/primerio/Payment-Method-Types-2b971a8c54c3452cae0b2fffe9167d72)\n",
          "htmlDescription": "<p><a href=\"https://www.notion.so/primerio/Payment-Method-Types-2b971a8c54c3452cae0b2fffe9167d72\">The list of available payment methods and their <code>PAYMENT_METHOD_TYPE</code> can be found here.</a></p>\n",
          "name": "PaymentMethodTypeEnum",
          "shape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "descriptionContainsMarkdown": true
        },
        "type_:PrepaidReloadableEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "PrepaidReloadableEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "RELOADABLE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NON_RELOADABLE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NOT_APPLICABLE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNKNOWN",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ThreeDSecureAuthResponseCodeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "ThreeDSecureAuthResponseCodeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "NOT_PERFORMED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SKIPPED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AUTH_SUCCESS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AUTH_FAILED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CHALLENGE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "METHOD",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ThreeDSecureAuthenticationApiSchema": {
          "description": null,
          "name": "ThreeDSecureAuthenticationApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "responseCode",
                "valueType": {
                  "type": "id",
                  "value": "type_:ThreeDSecureAuthResponseCodeEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "reasonCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:ThreeDSecureAuthenticationApiSchemaReasonCode"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "reasonText",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "protocolVersion",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "challengeIssued",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ThreeDSecureAuthenticationApiSchemaReasonCode": {
          "description": null,
          "name": "ThreeDSecureAuthenticationApiSchemaReasonCode",
          "shape": {
            "type": "undiscriminatedUnion",
            "variants": [
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:ThreeDSecureSkippedReasonCodeEnum"
                },
                "displayName": "Three D Secure Skipped Reason Code Enum",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:ThreeDSecureFailedReasonCodeEnum"
                },
                "displayName": "Three D Secure Failed Reason Code Enum",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ThreeDSecureFailedReasonCodeEnum": {
          "description": "This enum is derived from the `transStatusReason` on page 218 of the\n[EMV Co 3DS protocol specification](https://www.emvco.com/terms-of-use/?u=/wp-content/uploads/documents/EMVCo_3DS_Spec_v220_122018.pdf)\n\n| Code | Description                             |\n|------|-----------------------------------------|\n| 01   | Card authentication failed              |\n| 02   | Unknown Device                          |\n| 03   | Unsupported Device                      |\n| 04   | Exceeds authentication frequency limit  |\n| 05   | Expired card                            |\n| 06   | Invalid card number                     |\n| 07   | Invalid transaction                     |\n| 08   | No Card record                          |\n| 09   | Security failure                        |\n| 10   | Stolen card                             |\n| 11   | Suspected fraud                         |\n| 12   | Transaction not permitted to cardholder |\n| 13   | Cardholder not enrolled in service      |\n| 14   | Transaction timed out at the ACS        |\n| 15   | Low confidence                          |\n| 16   | Medium confidence                       |",
          "htmlDescription": "<p>This enum is derived from the <code>transStatusReason</code> on page 218 of the\n<a href=\"https://www.emvco.com/terms-of-use/?u=/wp-content/uploads/documents/EMVCo_3DS_Spec_v220_122018.pdf\">EMV Co 3DS protocol specification</a></p>\n<table>\n<thead>\n<tr>\n<th>Code</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>01</td>\n<td>Card authentication failed</td>\n</tr>\n<tr>\n<td>02</td>\n<td>Unknown Device</td>\n</tr>\n<tr>\n<td>03</td>\n<td>Unsupported Device</td>\n</tr>\n<tr>\n<td>04</td>\n<td>Exceeds authentication frequency limit</td>\n</tr>\n<tr>\n<td>05</td>\n<td>Expired card</td>\n</tr>\n<tr>\n<td>06</td>\n<td>Invalid card number</td>\n</tr>\n<tr>\n<td>07</td>\n<td>Invalid transaction</td>\n</tr>\n<tr>\n<td>08</td>\n<td>No Card record</td>\n</tr>\n<tr>\n<td>09</td>\n<td>Security failure</td>\n</tr>\n<tr>\n<td>10</td>\n<td>Stolen card</td>\n</tr>\n<tr>\n<td>11</td>\n<td>Suspected fraud</td>\n</tr>\n<tr>\n<td>12</td>\n<td>Transaction not permitted to cardholder</td>\n</tr>\n<tr>\n<td>13</td>\n<td>Cardholder not enrolled in service</td>\n</tr>\n<tr>\n<td>14</td>\n<td>Transaction timed out at the ACS</td>\n</tr>\n<tr>\n<td>15</td>\n<td>Low confidence</td>\n</tr>\n<tr>\n<td>16</td>\n<td>Medium confidence</td>\n</tr>\n</tbody></table>\n",
          "name": "ThreeDSecureFailedReasonCodeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "UNKNOWN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "REJECTED_BY_ISSUER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CARD_AUTHENTICATION_FAILED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNKNOWN_DEVICE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNSUPPORTED_DEVICE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EXCEEDS_AUTHENTICATION_FREQUENCY_LIMIT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EXPIRED_CARD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "INVALID_CARD_NUMBER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "INVALID_TRANSACTION",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NO_CARD_RECORD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SECURITY_FAILURE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "STOLEN_CARD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SUSPECTED_FRAUD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TRANSACTION_NOT_PERMITTED_TO_CARDHOLDER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CARDHOLDER_NOT_ENROLLED_IN_SERVICE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TRANSACTION_TIMED_OUT_AT_THE_ACS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LOW_CONFIDENCE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MEDIUM_CONFIDENCE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HIGH_CONFIDENCE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VERY_HIGH_CONFIDENCE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EXCEEDS_ACS_MAXIMUM_CHALLENGES",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NON_PAYMENT_NOT_SUPPORTED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "THREE_RI_NOT_SUPPORTED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ACS_TECHNICAL_ISSUE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DECOUPLED_REQUIRED_BY_ACS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DECOUPLED_MAX_EXPIRY_EXCEEDED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DECOUPLED_AUTHENTICATION_INSUFFICIENT_TIME",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AUTHENTICATION_ATTEMPTED_BUT_NOT_PERFORMED_BY_CARDHOLDER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ACS_TIMED_OUT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "INVALID_ACS_RESPONSE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ACS_SYSTEM_ERROR_RESPONSE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ERROR_GENERATING_CAVV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PROTOCOL_VERSION_NOT_SUPPORTED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TRANSACTION_EXCLUDED_FROM_ATTEMPTS_PROCESSING",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "REQUESTED_PROGRAM_NOT_SUPPORTED",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": true
        },
        "type_:ThreeDSecureSkippedReasonCodeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "ThreeDSecureSkippedReasonCodeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "GATEWAY_UNAVAILABLE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DISABLED_BY_MERCHANT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NOT_SUPPORTED_BY_ISSUER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FAILED_TO_NEGOTIATE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNKNOWN_ACS_RESPONSE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "3DS_SERVER_ERROR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ACQUIRER_NOT_CONFIGURED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ACQUIRER_NOT_PARTICIPATING",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:DeclineTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "DeclineTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "SOFT_DECLINE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HARD_DECLINE",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:TransactionDeclineReasonV2Enum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "TransactionDeclineReasonV2Enum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "ERROR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "INVALID_CARD_NUMBER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EXPIRED_CARD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LOST_OR_STOLEN_CARD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SUSPECTED_FRAUD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNKNOWN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DECLINED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "REFER_TO_CARD_ISSUER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DO_NOT_HONOR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "INSUFFICIENT_FUNDS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "WITHDRAWAL_LIMIT_EXCEEDED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ISSUER_TEMPORARILY_UNAVAILABLE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AUTHENTICATION_REQUIRED",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:TransactionOverviewApiSchema": {
          "description": null,
          "name": "TransactionOverviewApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "transactionType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:TransactionTypeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Processor's unique identifier for the transaction",
                "htmlDescription": "<p>Processor&#39;s unique identifier for the transaction</p>\n",
                "key": "processorTransactionId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "An identifier of a processor.",
                "htmlDescription": "<p>An identifier of a processor.</p>\n",
                "key": "processorName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Processor's main account identifier.\n\n* Adyen: Account code\n* Braintree: Merchant ID\n* Stripe: Account ID\"\n",
                "htmlDescription": "<p>Processor&#39;s main account identifier.</p>\n<ul>\n<li>Adyen: Account code</li>\n<li>Braintree: Merchant ID</li>\n<li>Stripe: Account ID&quot;</li>\n</ul>\n",
                "key": "processorMerchantId",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "Transaction status, please refer to the [Transaction Status Codes](#section/API-Usage-Guide/Payment-Status) table for more information",
                "htmlDescription": "<p>Transaction status, please refer to the <a href=\"#section/API-Usage-Guide/Payment-Status\">Transaction Status Codes</a> table for more information</p>\n",
                "key": "processorStatus",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentStatus"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "If the transaction has a declined or failed status.\n\nOnly if the status is `DECLINED` or `FAILED`, otherwise `null`.\n",
                "htmlDescription": "<p>If the transaction has a declined or failed status.</p>\n<p>Only if the status is <code>DECLINED</code> or <code>FAILED</code>, otherwise <code>null</code>.</p>\n",
                "key": "processorStatusReason",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:StatusReasonApiSchema"
                  }
                },
                "descriptionContainsMarkdown": true
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentStatus": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "PaymentStatus",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "PENDING",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FAILED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AUTHORIZED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SETTLING",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PARTIALLY_SETTLED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SETTLED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DECLINED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CANCELLED",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentStatusTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "PaymentStatusTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "APPLICATION_ERROR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GATEWAY_REJECTED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ISSUER_DECLINED",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:TransactionTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "TransactionTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "SALE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "REFUND",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:AddressApiSchema": {
          "description": null,
          "name": "AddressApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "firstName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "lastName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Street name, Company name or PO Box",
                "htmlDescription": "<p>Street name, Company name or PO Box</p>\n",
                "key": "addressLine1",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Apartment, Unit or Building number",
                "htmlDescription": "<p>Apartment, Unit or Building number</p>\n",
                "key": "addressLine2",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Name of the city, district, town or village",
                "htmlDescription": "<p>Name of the city, district, town or village</p>\n",
                "key": "city",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "State, County or Province",
                "htmlDescription": "<p>State, County or Province</p>\n",
                "key": "state",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Two letter ISO country code",
                "htmlDescription": "<p>Two letter ISO country code</p>\n",
                "key": "countryCode",
                "valueType": {
                  "type": "id",
                  "value": "type_:CountryCodeEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Postal or ZIP code",
                "htmlDescription": "<p>Postal or ZIP code</p>\n",
                "key": "postalCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:RecurringTransactionTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "RecurringTransactionTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "FIRST_PAYMENT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ECOMMERCE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SUBSCRIPTION",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNSCHEDULED",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:RecurringPaymentTypeSchema": {
          "description": "Payment types, primarily to be used for recurring payments.\nNote: If you successfully vault a `SINGLE_USE` token on payment creation, then there's no need to set a value for this field and it will be flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all possible values.\n\n| paymentType | Use case |\n| --- | --- |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario.\n| `ECOMMERCE` | a customer-initiated payment using stored payment details where the cardholder is present.\n| `SUBSCRIPTION` | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.\n| `UNSCHEDULED` | a merchant-initiated payment using stored payment details with no fixed schedule or amount.",
          "htmlDescription": "<p>Payment types, primarily to be used for recurring payments.\nNote: If you successfully vault a <code>SINGLE_USE</code> token on payment creation, then there&#39;s no need to set a value for this field and it will be flagged as <code>FIRST_PAYMENT</code>. Otherwise, see the table below for all possible values.</p>\n<table>\n<thead>\n<tr>\n<th>paymentType</th>\n<th>Use case</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>FIRST_PAYMENT</code></td>\n<td>a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario.</td>\n</tr>\n<tr>\n<td><code>ECOMMERCE</code></td>\n<td>a customer-initiated payment using stored payment details where the cardholder is present.</td>\n</tr>\n<tr>\n<td><code>SUBSCRIPTION</code></td>\n<td>a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.</td>\n</tr>\n<tr>\n<td><code>UNSCHEDULED</code></td>\n<td>a merchant-initiated payment using stored payment details with no fixed schedule or amount.</td>\n</tr>\n</tbody></table>\n",
          "name": "RecurringPaymentTypeSchema",
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "value": "type_:RecurringTransactionTypeEnum"
            }
          },
          "descriptionContainsMarkdown": true
        }
      },
      "subpackages": {
        "subpackage_paymentWebhooks": {
          "subpackageId": "subpackage_paymentWebhooks",
          "name": "paymentWebhooks",
          "endpoints": [],
          "types": [],
          "subpackages": [],
          "pointsTo": null,
          "urlSlug": "payment-webhooks",
          "description": null,
          "webhooks": [
            {
              "urlSlug": "payment-status-update",
              "description": "Primer notifies you with a `PAYMENT.STATUS` webhook when a payment's status has been updated. This is especially useful for asyncronous processor Connections, which do not respond with an upfront authorization.\nThe webhook events will arrive in the order that the payment status changes, for example you should expect a status of `PENDING`, then `AUTHORIZED`, then `SETTLED` (depending on how your workflow is set up).\nThe webhook body contains the full payment object.\n\nLearn more about [how Primer handles webhooks](https://primer.io/docs/how-primer-works/webhooks).\n",
              "htmlDescription": "<p>Primer notifies you with a <code>PAYMENT.STATUS</code> webhook when a payment&#39;s status has been updated. This is especially useful for asyncronous processor Connections, which do not respond with an upfront authorization.\nThe webhook events will arrive in the order that the payment status changes, for example you should expect a status of <code>PENDING</code>, then <code>AUTHORIZED</code>, then <code>SETTLED</code> (depending on how your workflow is set up).\nThe webhook body contains the full payment object.</p>\n<p>Learn more about <a href=\"https://primer.io/docs/how-primer-works/webhooks\">how Primer handles webhooks</a>.</p>\n",
              "descriptionContainsMarkdown": true,
              "method": "POST",
              "id": "payment_status_webhook_event",
              "name": "Payment Status Update",
              "path": [],
              "headers": [
                {
                  "key": "X-Signature-Primary",
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  },
                  "description": "An [HMAC signature](https://en.wikipedia.org/wiki/HMAC) generated using the webhook payload and a shared signing secret. This is then converted to a base64 encoded string."
                },
                {
                  "key": "X-Signature-Secondary",
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  },
                  "description": "A secondary signature that is added when you have rotated your secret within the past 24 hours."
                }
              ],
              "payload": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:PaymentStatusWebhookPayload"
                  }
                }
              },
              "examples": [
                {
                  "payload": {
                    "eventType": "string",
                    "date": "2023-01-01T00:00:00Z",
                    "notificationConfig": {
                      "id": "string",
                      "description": "string"
                    },
                    "version": "string",
                    "payment": {
                      "id": "string",
                      "date": "2023-01-01T00:00:00Z",
                      "status": "PENDING",
                      "orderId": "string",
                      "currencyCode": "string",
                      "amount": 0,
                      "customerId": "string",
                      "metadata": {
                        "string": {}
                      },
                      "paymentMethod": {
                        "descriptor": "string",
                        "paymentType": "FIRST_PAYMENT",
                        "paymentMethodToken": "string",
                        "vaultedPaymentMethodToken": "string",
                        "analyticsId": "string",
                        "paymentMethodType": "string",
                        "paymentMethodData": {
                          "first6Digits": "string",
                          "last4Digits": "string",
                          "expirationMonth": "string",
                          "expirationYear": "string",
                          "cardholderName": "string",
                          "network": "string",
                          "isNetworkTokenized": true,
                          "binData": {
                            "network": "string",
                            "issuerCountryCode": "AW",
                            "issuerName": "string",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "DOMESTIC_USE_ONLY",
                            "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                            "accountFundingType": "CREDIT",
                            "prepaidReloadableIndicator": "RELOADABLE",
                            "productUsageType": "CONSUMER",
                            "productCode": "string",
                            "productName": "string"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED",
                          "reasonCode": "GATEWAY_UNAVAILABLE",
                          "reasonText": "string",
                          "protocolVersion": "string",
                          "challengeIssued": true
                        }
                      },
                      "processor": {
                        "name": "string",
                        "processorMerchantId": "string",
                        "amountCaptured": 0,
                        "amountRefunded": 0
                      },
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR",
                        "message": "string"
                      },
                      "transactions": [
                        {
                          "transactionType": "SALE",
                          "processorTransactionId": "string",
                          "processorName": "string",
                          "processorMerchantId": "string",
                          "processorStatus": "PENDING",
                          "processorStatusReason": {
                            "type": "APPLICATION_ERROR",
                            "declineType": "SOFT_DECLINE",
                            "code": "ERROR",
                            "message": "string"
                          }
                        }
                      ],
                      "riskData": {
                        "fraudCheck": {
                          "source": "string",
                          "preAuthorizationResult": "ACCEPT",
                          "postAuthorizationResult": "ACCEPT"
                        }
                      }
                    }
                  }
                }
              ]
            },
            {
              "urlSlug": "payment-refund",
              "description": "Primer notifies you with a `PAYMENT.REFUND` Webhook when a refund request has been fully processed by a payment processor and the refund has reached a final state.\n\nCheck the transaction with the most recent `transactionType: \"REFUND\"` in the `transactions` array:\n- if `processorStatus` is `SETTLED`, the refund was successful and the funds have been returned to the customer\n- if `processorStatus` is `FAILED`, the refund was unsuccessful\n\nLearn more about [how Primer handles webhooks](https://primer.io/docs/how-primer-works/webhooks).\n",
              "htmlDescription": "<p>Primer notifies you with a <code>PAYMENT.REFUND</code> Webhook when a refund request has been fully processed by a payment processor and the refund has reached a final state.</p>\n<p>Check the transaction with the most recent <code>transactionType: &quot;REFUND&quot;</code> in the <code>transactions</code> array:</p>\n<ul>\n<li>if <code>processorStatus</code> is <code>SETTLED</code>, the refund was successful and the funds have been returned to the customer</li>\n<li>if <code>processorStatus</code> is <code>FAILED</code>, the refund was unsuccessful</li>\n</ul>\n<p>Learn more about <a href=\"https://primer.io/docs/how-primer-works/webhooks\">how Primer handles webhooks</a>.</p>\n",
              "descriptionContainsMarkdown": true,
              "method": "POST",
              "id": "payment_refund_webhook_event",
              "name": "Payment Refund",
              "path": [],
              "headers": [
                {
                  "key": "X-Signature-Primary",
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  },
                  "description": "An [HMAC signature](https://en.wikipedia.org/wiki/HMAC) generated using the webhook payload and a shared signing secret. This is then converted to a base64 encoded string."
                },
                {
                  "key": "X-Signature-Secondary",
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  },
                  "description": "A secondary signature that is added when you have rotated your secret within the past 24 hours."
                }
              ],
              "payload": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:PaymentRefundWebhookPayload"
                  }
                }
              },
              "examples": [
                {
                  "payload": {
                    "eventType": "string",
                    "date": "2023-01-01T00:00:00Z",
                    "notificationConfig": {
                      "id": "string",
                      "description": "string"
                    },
                    "version": "string",
                    "payment": {
                      "id": "string",
                      "date": "2023-01-01T00:00:00Z",
                      "status": "PENDING",
                      "orderId": "string",
                      "currencyCode": "string",
                      "amount": 0,
                      "customerId": "string",
                      "metadata": {
                        "string": {}
                      },
                      "paymentMethod": {
                        "descriptor": "string",
                        "paymentType": "FIRST_PAYMENT",
                        "paymentMethodToken": "string",
                        "vaultedPaymentMethodToken": "string",
                        "analyticsId": "string",
                        "paymentMethodType": "string",
                        "paymentMethodData": {
                          "first6Digits": "string",
                          "last4Digits": "string",
                          "expirationMonth": "string",
                          "expirationYear": "string",
                          "cardholderName": "string",
                          "network": "string",
                          "isNetworkTokenized": true,
                          "binData": {
                            "network": "string",
                            "issuerCountryCode": "AW",
                            "issuerName": "string",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "DOMESTIC_USE_ONLY",
                            "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                            "accountFundingType": "CREDIT",
                            "prepaidReloadableIndicator": "RELOADABLE",
                            "productUsageType": "CONSUMER",
                            "productCode": "string",
                            "productName": "string"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED",
                          "reasonCode": "GATEWAY_UNAVAILABLE",
                          "reasonText": "string",
                          "protocolVersion": "string",
                          "challengeIssued": true
                        }
                      },
                      "processor": {
                        "name": "string",
                        "processorMerchantId": "string",
                        "amountCaptured": 0,
                        "amountRefunded": 0
                      },
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR",
                        "message": "string"
                      },
                      "transactions": [
                        {
                          "transactionType": "SALE",
                          "processorTransactionId": "string",
                          "processorName": "string",
                          "processorMerchantId": "string",
                          "processorStatus": "PENDING",
                          "processorStatusReason": {
                            "type": "APPLICATION_ERROR",
                            "declineType": "SOFT_DECLINE",
                            "code": "ERROR",
                            "message": "string"
                          }
                        }
                      ],
                      "riskData": {
                        "fraudCheck": {
                          "source": "string",
                          "preAuthorizationResult": "ACCEPT",
                          "postAuthorizationResult": "ACCEPT"
                        }
                      }
                    }
                  }
                }
              ]
            }
          ],
          "descriptionContainsMarkdown": false
        },
        "subpackage_disputeChargebacksWebhooks": {
          "subpackageId": "subpackage_disputeChargebacksWebhooks",
          "name": "disputeChargebacksWebhooks",
          "endpoints": [],
          "types": [],
          "subpackages": [],
          "pointsTo": null,
          "urlSlug": "dispute-chargebacks-webhooks",
          "description": null,
          "webhooks": [
            {
              "urlSlug": "dispute-open",
              "description": "Primer notifies you with a `DISPUTE.OPEN` webhook on newly opened disputes or chargebacks. This notification is unified across all processors.\n\nLearn more about [how Primer handles webhooks](https://primer.io/docs/how-primer-works/webhooks).\n",
              "htmlDescription": "<p>Primer notifies you with a <code>DISPUTE.OPEN</code> webhook on newly opened disputes or chargebacks. This notification is unified across all processors.</p>\n<p>Learn more about <a href=\"https://primer.io/docs/how-primer-works/webhooks\">how Primer handles webhooks</a>.</p>\n",
              "descriptionContainsMarkdown": true,
              "method": "POST",
              "id": "dispute_open_webhook_event",
              "name": "Dispute Open",
              "path": [],
              "headers": [
                {
                  "key": "X-Signature-Primary",
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  },
                  "description": "An [HMAC signature](https://en.wikipedia.org/wiki/HMAC) generated using the webhook payload and a shared signing secret. This is then converted to a base64 encoded string."
                },
                {
                  "key": "X-Signature-Secondary",
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  },
                  "description": "A secondary signature that is added when you have rotated your secret within the past 24 hours."
                }
              ],
              "payload": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:DisputeOpenWebhookPayload"
                  }
                }
              },
              "examples": [
                {
                  "payload": {
                    "eventType": "string",
                    "processorId": "string",
                    "processorDisputeId": "string",
                    "paymentId": "string",
                    "transactionId": "string",
                    "orderId": "string",
                    "primerAccountId": "string"
                  }
                }
              ]
            },
            {
              "urlSlug": "dispute-status",
              "description": "Primer notifies you with a `DISPUTE.STATUS` webhook that will provide information on retrievals, disputes (also known as chargebacks), and preabritration filings.\n\nThis notification is unified across all processors.\n\nThe `DISPUTE.STATUS` event can be used to proactively communicate with customers, issue refunds, send disputes to risk tools, or to proactively defend disputes.\n\nThe `DISPUTE.STATUS` event is currently in an open beta stage, as we continue to add more processors.\n\nLearn more about [managing disputes at Primer](https://primer.io/docs/accept-payments/manage-disputes).\n",
              "htmlDescription": "<p>Primer notifies you with a <code>DISPUTE.STATUS</code> webhook that will provide information on retrievals, disputes (also known as chargebacks), and preabritration filings.</p>\n<p>This notification is unified across all processors.</p>\n<p>The <code>DISPUTE.STATUS</code> event can be used to proactively communicate with customers, issue refunds, send disputes to risk tools, or to proactively defend disputes.</p>\n<p>The <code>DISPUTE.STATUS</code> event is currently in an open beta stage, as we continue to add more processors.</p>\n<p>Learn more about <a href=\"https://primer.io/docs/accept-payments/manage-disputes\">managing disputes at Primer</a>.</p>\n",
              "descriptionContainsMarkdown": true,
              "method": "POST",
              "id": "dispute_status_webhook_event",
              "name": "Dispute Status",
              "path": [],
              "headers": [
                {
                  "key": "X-Signature-Primary",
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  },
                  "description": "An [HMAC signature](https://en.wikipedia.org/wiki/HMAC) generated using the webhook payload and a shared signing secret. This is then converted to a base64 encoded string."
                },
                {
                  "key": "X-Signature-Secondary",
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  },
                  "description": "A secondary signature that is added when you have rotated your secret within the past 24 hours."
                }
              ],
              "payload": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:DisputeStatusWebhookPayload"
                  }
                }
              },
              "examples": [
                {
                  "payload": {
                    "eventType": "string",
                    "version": "string",
                    "type": "RETRIEVAL",
                    "status": "OPEN",
                    "primerAccountId": "string",
                    "transactionId": "string",
                    "orderId": "string",
                    "paymentId": "string",
                    "paymentMethod": {
                      "paymentMethodType": "string",
                      "paymentMethodData": {
                        "network": "string"
                      }
                    },
                    "processor": "ADYEN",
                    "processorDisputeId": "string",
                    "receivedAt": "2023-01-01T00:00:00Z",
                    "challengeRequiredBy": "2023-01-01T00:00:00Z",
                    "reason": "string",
                    "reasonCode": "string",
                    "processorReason": "string",
                    "amount": 0,
                    "currency": "string",
                    "merchantId": "string"
                  }
                }
              ]
            }
          ],
          "descriptionContainsMarkdown": false
        }
      },
      "auth": null,
      "hasMultipleBaseUrls": false
    },
    "d0eefb20-05d3-41e0-af7a-29afd2b1694e": {
      "id": "d0eefb20-05d3-41e0-af7a-29afd2b1694e",
      "rootPackage": {
        "endpoints": [],
        "subpackages": [
          "subpackage_clientSessionApi",
          "subpackage_paymentsApi",
          "subpackage_paymentMethodsApi",
          "subpackage_observabilityApi",
          "subpackage_loyaltyApi"
        ],
        "types": [
          "type_:PaymentCaptureApiRequestOrder",
          "type_:PaymentsInsightsPayment",
          "type_:PaymentsInsightsPaymentCurrencyCode",
          "type_:PaymentsInsightsPaymentStatus",
          "type_:PaymentsInsightsPaymentPaymentType",
          "type_:PaymentsInsightsPatchedPaymentCurrencyCode",
          "type_:PaymentsInsightsPatchedPaymentStatus",
          "type_:PaymentsInsightsPatchedPaymentPaymentType",
          "type_:AccountFundingTypeEnum",
          "type_:ApayaCustomerTokenApiSchema",
          "type_:BinDataApiSchema",
          "type_:BlockingPaymentActionTypeEnum",
          "type_:CardAccountNumberTypeEnum",
          "type_:CardNetworkEnum",
          "type_:CardProductTypeEnum",
          "type_:CardRegionRestrictionEnum",
          "type_:OrderDetailsApiSchema",
          "type_:OrderFeesApiSchema",
          "type_:OrderLineItemsApiSchema",
          "type_:OrderLineItemsProductDataApiSchema",
          "type_:OrderShippingApiSchema",
          "type_:CheckoutPaymentMethodOptionsApiSchema",
          "type_:CheckoutPaymentMethodOptionsApiSchemaOptions",
          "type_:CheckoutPaymentMethodOptionApiSchema",
          "type_:CheckoutPaymentMethodCardOptionApiSchema",
          "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema",
          "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
          "type_:CheckoutPaymentMethodOptionSurchargeApiSchema",
          "type_:PaymentRequestPaymentMethodOptionsApiSchema",
          "type_:PaymentResponsePaymentMethodOptionsApiSchema",
          "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData",
          "type_:CheckoutCustomerDetailsApiSchema",
          "type_:CustomerDetailsApiSchema",
          "type_:ClientSessionWithTokenApiResponse",
          "type_:ClientSessionApiResponse",
          "type_:ClientSessionWarningsApiResponse",
          "type_:CountryCodeEnum",
          "type_:Currency",
          "type_:PaymentResponseProcessorApiSchema",
          "type_:GoCardlessMandateApiSchema",
          "type_:IdealPayNlTokenApiSchema",
          "type_:KlarnaAddressApiSchema",
          "type_:KlarnaCustomerTokenApiSchema",
          "type_:KlarnaPaymentSessionApiSchema",
          "type_:KlarnaSessionDetailsApiSchema",
          "type_:KlarnaTokenDetails",
          "type_:PayPalBillingAgreementApiSchema",
          "type_:PayPalExternalPayerInfoApiSchema",
          "type_:PayPalOrderTokenApiSchema",
          "type_:PaymentApiResponse",
          "type_:PaymentCardTokenApiSchema",
          "type_:StatusReasonApiSchema",
          "type_:RiskDataApiSchema",
          "type_:FraudCheckApiSchema",
          "type_:FraudDecisionTypeEnum",
          "type_:PaymentMethodTypeEnum",
          "type_:PaymentListApiResponse",
          "type_:PaymentRequiredActionApiSchema",
          "type_:PaymentSummaryApiSchema",
          "type_:PaymentAuthorizationRequestProcessorApiSchema",
          "type_:PaymentSummaryProcessorApiSchema",
          "type_:PrepaidReloadableEnum",
          "type_:RecurringTransactionTypeEnum",
          "type_:RecurringPaymentTypeSchema",
          "type_:ProductTypeEnum",
          "type_:ThreeDSecureAuthResponseCodeEnum",
          "type_:ThreeDSecureAuthenticationApiSchema",
          "type_:ThreeDSecureAuthenticationApiSchemaReasonCode",
          "type_:ThreeDSecureFailedReasonCodeEnum",
          "type_:ThreeDSecureSkippedReasonCodeEnum",
          "type_:TokenTypeEnum",
          "type_:DeclineTypeEnum",
          "type_:TransactionDeclineReasonV2Enum",
          "type_:TransactionOverviewApiSchema",
          "type_:PaymentStatus",
          "type_:PaymentStatusTypeEnum",
          "type_:TransactionTypeEnum",
          "type_:OptionalAddressApiSchema",
          "type_:AddressApiSchema",
          "type_:MerchantPaymentMethodTokenApiResponse",
          "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData",
          "type_:VerifiedMerchantPaymentMethodTokenApiResponse",
          "type_:VerifiedMerchantPaymentMethodTokenListApiResponse",
          "type_:LoyaltyApiBalanceResponse",
          "type_:LoyaltyTransactionTypeEnum",
          "type_:LoyaltyApiTransactionResponse",
          "type_:LoyaltyApiTransactionsListResponse",
          "type_:PaymentsInsightsBinData",
          "type_:PaymentsInsightsBinDataIssuerCountryCode",
          "type_:PaymentsInsightsOrder",
          "type_:PaymentsInsightsOrderCountryCode",
          "type_:PaymentsInsightsPaymentMethod",
          "type_:PaymentsInsightsPaymentMethodData",
          "type_:PaymentsInsightsProcessor",
          "type_:PaymentsInsightsProcessorName",
          "type_:PaymentsInsightsStatusReason",
          "type_:PaymentsInsightsStatusReasonType",
          "type_:PaymentsInsightsStatusReasonDeclineType",
          "type_:PaymentsInsightsStatusReasonCode",
          "type_:PaymentsInsightsThreeDSecureAuthentication",
          "type_:PaymentsInsightsThreeDSecureAuthenticationResponseCode",
          "type_:ErrorObject",
          "type_:BadRequestErrorResponse",
          "type_:NotFoundErrorResponse",
          "type_:ConflictErrorResponse",
          "type_:UnprocessableEntityErrorResponse",
          "type_:AuthorizationTypeEnum"
        ],
        "webhooks": []
      },
      "types": {
        "type_:PaymentCaptureApiRequestOrder": {
          "description": "More information associated with the order.",
          "htmlDescription": "<p>More information associated with the order.</p>\n",
          "name": "PaymentCaptureApiRequestOrder",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The country code of the retailer.\nThis field is passed to the processor and overwrites the retailer country code set in order details.",
                "htmlDescription": "<p>The country code of the retailer.\nThis field is passed to the processor and overwrites the retailer country code set in order details.</p>\n",
                "key": "retailerCountryCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CountryCodeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentsInsightsPayment": {
          "description": null,
          "name": "PaymentsInsightsPayment",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The payment ID.\n\nThe payment ID must be unique. You can use this unique payment ID to update payment details.",
                "htmlDescription": "<p>The payment ID.</p>\n<p>The payment ID must be unique. You can use this unique payment ID to update payment details.</p>\n",
                "key": "paymentId",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The 3-letter currency code in\n[ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\n\ne.g. use `USD` for US dollars.",
                "htmlDescription": "<p>The 3-letter currency code in\n<a href=\"https://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 format</a>.</p>\n<p>e.g. use <code>USD</code> for US dollars.</p>\n",
                "key": "currencyCode",
                "valueType": {
                  "type": "id",
                  "value": "type_:PaymentsInsightsPaymentCurrencyCode"
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": null,
                "key": "processor",
                "valueType": {
                  "type": "id",
                  "value": "type_:PaymentsInsightsProcessor"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The amount you would like to charge the customer,\nin minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units.\nIn this case you should use the value as it is, without any formatting.\nFor example for ¥100, use `100`.\nThe minimum amount is 0.",
                "htmlDescription": "<p>The amount you would like to charge the customer,\nin minor units. e.g. for $7, use <code>700</code>.</p>\n<p>Some currencies, such as Japanese Yen, do not have minor units.\nIn this case you should use the value as it is, without any formatting.\nFor example for ¥100, use <code>100</code>.\nThe minimum amount is 0.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "The payment creation date and time (UTC) in [ISO 8601 format](\nhttps://en.wikipedia.org/wiki/ISO_8601).\n\nCannot be updated in partial updates PATCH.",
                "htmlDescription": "<p>The payment creation date and time (UTC) in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601 format</a>.</p>\n<p>Cannot be updated in partial updates PATCH.</p>\n",
                "key": "createdAt",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "order",
                "valueType": {
                  "type": "id",
                  "value": "type_:PaymentsInsightsOrder"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "See the payment [status table](\nhttps://apiref.primer.io/docs#payment-status) for more information.",
                "htmlDescription": "<p>See the payment <a href=\"https://apiref.primer.io/docs#payment-status\">status table</a> for more information.</p>\n",
                "key": "status",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentsInsightsPaymentStatus"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Pass more information regarding the payment's status in this field.\n\nThis is especially useful when the status is `DECLINED` or `FAILED`.",
                "htmlDescription": "<p>Pass more information regarding the payment&#39;s status in this field.</p>\n<p>This is especially useful when the status is <code>DECLINED</code> or <code>FAILED</code>.</p>\n",
                "key": "statusReason",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentsInsightsStatusReason"
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": null,
                "key": "paymentMethod",
                "valueType": {
                  "type": "id",
                  "value": "type_:PaymentsInsightsPaymentMethod"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Additional data to be used throughout the payment lifecycle.\n\nAd dictionary of key-value pairs where the values can only be strings or integers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"88278a\"}`",
                "htmlDescription": "<p>Additional data to be used throughout the payment lifecycle.</p>\n<p>Ad dictionary of key-value pairs where the values can only be strings or integers.</p>\n<p>e.g. <code>{&quot;productId&quot;: 1001, &quot;merchantId&quot;: &quot;88278a&quot;}</code></p>\n",
                "key": "metadata",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "unknown"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "Payment types, primarily to be used for recurring payments.\n\nNote: If you successfully vault a `SINGLE_USE` token on payment\ncreation, then there's no need to set a value for this field and it will\nbe flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all\npossible values.\n\n\n| paymentType | Use case |\n| --- | --- |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE` | a customer-initiated payment using stored payment details where the cardholder is present. |\n| `SUBSCRIPTION` | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount. |\n| `UNSCHEDULED` | a merchant-initiated payment using stored payment details with no fixed schedule or amount. |\n| `MOTO` | a merchant-initiated mail order or telephone order payment. |\n| `IN_STORE` | a customer-initiated payment where the customer is physically present in a shop. |",
                "htmlDescription": "<p>Payment types, primarily to be used for recurring payments.</p>\n<p>Note: If you successfully vault a <code>SINGLE_USE</code> token on payment\ncreation, then there&#39;s no need to set a value for this field and it will\nbe flagged as <code>FIRST_PAYMENT</code>. Otherwise, see the table below for all\npossible values.</p>\n<table>\n<thead>\n<tr>\n<th>paymentType</th>\n<th>Use case</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>FIRST_PAYMENT</code></td>\n<td>a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario.</td>\n</tr>\n<tr>\n<td><code>ECOMMERCE</code></td>\n<td>a customer-initiated payment using stored payment details where the cardholder is present.</td>\n</tr>\n<tr>\n<td><code>SUBSCRIPTION</code></td>\n<td>a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.</td>\n</tr>\n<tr>\n<td><code>UNSCHEDULED</code></td>\n<td>a merchant-initiated payment using stored payment details with no fixed schedule or amount.</td>\n</tr>\n<tr>\n<td><code>MOTO</code></td>\n<td>a merchant-initiated mail order or telephone order payment.</td>\n</tr>\n<tr>\n<td><code>IN_STORE</code></td>\n<td>a customer-initiated payment where the customer is physically present in a shop.</td>\n</tr>\n</tbody></table>\n",
                "key": "paymentType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentsInsightsPaymentPaymentType"
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "A description of the payment,\nas it would typically appear on a bank statement.",
                "htmlDescription": "<p>A description of the payment,\nas it would typically appear on a bank statement.</p>\n",
                "key": "descriptor",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentsInsightsPaymentCurrencyCode": {
          "description": "The 3-letter currency code in\n[ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\n\ne.g. use `USD` for US dollars.",
          "htmlDescription": "<p>The 3-letter currency code in\n<a href=\"https://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 format</a>.</p>\n<p>e.g. use <code>USD</code> for US dollars.</p>\n",
          "name": "PaymentsInsightsPaymentCurrencyCode",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "AED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AFN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ALL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AMD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ANG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AOA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ARS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AUD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AWG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AZN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BAM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BBD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BDT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BGN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BHD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BIF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BMD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BND",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BOB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BOV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BRL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BSD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BTN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BWP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BYR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BYN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BZD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CAD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CDF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CHE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CHF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CHW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CLF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CLP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CNY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "COP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "COU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CRC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CUC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CUP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CVE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CZK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DJF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DKK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DOP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DZD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EGP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ERN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ETB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EUR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FJD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FKP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GBP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GEL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GHS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GIP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GMD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GNF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GTQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GYD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HKD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HNL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HRK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HTG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HUF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IDR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ILS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "INR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IQD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IRR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ISK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JMD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JOD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JPY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KES",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KGS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KHR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KMF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KPW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KRW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KWD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KYD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KZT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LAK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LBP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LKR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LRD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LSL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LTL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LVL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LYD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MAD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MDL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MGA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MKD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MMK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MNT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MOP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MRO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MUR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MVR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MWK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MXN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MXV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MYR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MZN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NAD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NGN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NIO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NOK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NPR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NZD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "OMR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PAB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PEN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PGK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PHP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PKR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PLN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PYG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "QAR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RON",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RSD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RUB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RWF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SAR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SBD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SCR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SDG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SEK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SGD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SHP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SLL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SOS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SRD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SSP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "STD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SVC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SYP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SZL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "THB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TJS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TMT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TND",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TOP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TRY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TTD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TWD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TZS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UAH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UGX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "USD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "USN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "USS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UYI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UYU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UZS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VEF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VND",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VUV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "WST",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XAF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XAG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XAU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XBA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XBB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XBC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XBD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XCD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XDR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XFU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XOF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XPD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XPF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XPT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XSU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XTS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XUA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "YER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZAR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZMW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZWL",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": true
        },
        "type_:PaymentsInsightsPaymentStatus": {
          "description": "See the payment [status table](\nhttps://apiref.primer.io/docs#payment-status) for more information.",
          "htmlDescription": "<p>See the payment <a href=\"https://apiref.primer.io/docs#payment-status\">status table</a> for more information.</p>\n",
          "name": "PaymentsInsightsPaymentStatus",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "DECLINED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CANCELLED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FAILED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SETTLING",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PARTIALLY_SETTLED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AUTHORIZED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SETTLED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PENDING",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentsInsightsPaymentPaymentType": {
          "description": "Payment types, primarily to be used for recurring payments.\n\nNote: If you successfully vault a `SINGLE_USE` token on payment\ncreation, then there's no need to set a value for this field and it will\nbe flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all\npossible values.\n\n\n| paymentType | Use case |\n| --- | --- |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE` | a customer-initiated payment using stored payment details where the cardholder is present. |\n| `SUBSCRIPTION` | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount. |\n| `UNSCHEDULED` | a merchant-initiated payment using stored payment details with no fixed schedule or amount. |\n| `MOTO` | a merchant-initiated mail order or telephone order payment. |\n| `IN_STORE` | a customer-initiated payment where the customer is physically present in a shop. |",
          "htmlDescription": "<p>Payment types, primarily to be used for recurring payments.</p>\n<p>Note: If you successfully vault a <code>SINGLE_USE</code> token on payment\ncreation, then there&#39;s no need to set a value for this field and it will\nbe flagged as <code>FIRST_PAYMENT</code>. Otherwise, see the table below for all\npossible values.</p>\n<table>\n<thead>\n<tr>\n<th>paymentType</th>\n<th>Use case</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>FIRST_PAYMENT</code></td>\n<td>a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario.</td>\n</tr>\n<tr>\n<td><code>ECOMMERCE</code></td>\n<td>a customer-initiated payment using stored payment details where the cardholder is present.</td>\n</tr>\n<tr>\n<td><code>SUBSCRIPTION</code></td>\n<td>a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.</td>\n</tr>\n<tr>\n<td><code>UNSCHEDULED</code></td>\n<td>a merchant-initiated payment using stored payment details with no fixed schedule or amount.</td>\n</tr>\n<tr>\n<td><code>MOTO</code></td>\n<td>a merchant-initiated mail order or telephone order payment.</td>\n</tr>\n<tr>\n<td><code>IN_STORE</code></td>\n<td>a customer-initiated payment where the customer is physically present in a shop.</td>\n</tr>\n</tbody></table>\n",
          "name": "PaymentsInsightsPaymentPaymentType",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "FIRST_PAYMENT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ECOMMERCE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SUBSCRIPTION",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNSCHEDULED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MOTO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IN_STORE",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": true
        },
        "type_:PaymentsInsightsPatchedPaymentCurrencyCode": {
          "description": "The 3-letter currency code in\n[ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\n\ne.g. use `USD` for US dollars.",
          "htmlDescription": "<p>The 3-letter currency code in\n<a href=\"https://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 format</a>.</p>\n<p>e.g. use <code>USD</code> for US dollars.</p>\n",
          "name": "PaymentsInsightsPatchedPaymentCurrencyCode",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "AED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AFN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ALL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AMD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ANG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AOA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ARS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AUD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AWG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AZN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BAM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BBD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BDT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BGN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BHD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BIF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BMD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BND",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BOB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BOV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BRL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BSD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BTN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BWP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BYR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BYN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BZD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CAD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CDF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CHE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CHF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CHW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CLF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CLP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CNY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "COP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "COU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CRC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CUC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CUP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CVE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CZK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DJF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DKK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DOP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DZD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EGP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ERN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ETB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EUR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FJD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FKP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GBP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GEL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GHS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GIP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GMD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GNF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GTQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GYD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HKD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HNL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HRK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HTG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HUF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IDR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ILS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "INR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IQD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IRR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ISK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JMD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JOD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JPY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KES",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KGS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KHR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KMF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KPW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KRW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KWD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KYD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KZT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LAK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LBP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LKR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LRD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LSL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LTL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LVL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LYD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MAD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MDL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MGA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MKD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MMK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MNT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MOP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MRO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MUR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MVR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MWK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MXN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MXV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MYR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MZN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NAD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NGN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NIO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NOK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NPR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NZD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "OMR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PAB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PEN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PGK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PHP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PKR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PLN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PYG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "QAR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RON",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RSD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RUB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RWF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SAR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SBD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SCR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SDG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SEK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SGD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SHP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SLL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SOS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SRD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SSP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "STD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SVC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SYP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SZL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "THB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TJS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TMT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TND",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TOP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TRY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TTD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TWD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TZS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UAH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UGX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "USD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "USN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "USS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UYI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UYU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UZS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VEF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VND",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VUV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "WST",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XAF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XAG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XAU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XBA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XBB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XBC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XBD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XCD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XDR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XFU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XOF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XPD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XPF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XPT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XSU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XTS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XUA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "YER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZAR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZMW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZWL",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": true
        },
        "type_:PaymentsInsightsPatchedPaymentStatus": {
          "description": "See the payment [status table](\nhttps://apiref.primer.io/docs#payment-status) for more information.",
          "htmlDescription": "<p>See the payment <a href=\"https://apiref.primer.io/docs#payment-status\">status table</a> for more information.</p>\n",
          "name": "PaymentsInsightsPatchedPaymentStatus",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "DECLINED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CANCELLED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FAILED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SETTLING",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PARTIALLY_SETTLED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AUTHORIZED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SETTLED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PENDING",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentsInsightsPatchedPaymentPaymentType": {
          "description": "Payment types, primarily to be used for recurring payments.\n\nNote: If you successfully vault a `SINGLE_USE` token on payment\ncreation, then there's no need to set a value for this field and it will\nbe flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all\npossible values.\n\n\n| paymentType | Use case |\n| --- | --- |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE` | a customer-initiated payment using stored payment details where the cardholder is present. |\n| `SUBSCRIPTION` | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount. |\n| `UNSCHEDULED` | a merchant-initiated payment using stored payment details with no fixed schedule or amount. |\n| `MOTO` | a merchant-initiated mail order or telephone order payment. |\n| `IN_STORE` | a customer-initiated payment where the customer is physically present in a shop. |",
          "htmlDescription": "<p>Payment types, primarily to be used for recurring payments.</p>\n<p>Note: If you successfully vault a <code>SINGLE_USE</code> token on payment\ncreation, then there&#39;s no need to set a value for this field and it will\nbe flagged as <code>FIRST_PAYMENT</code>. Otherwise, see the table below for all\npossible values.</p>\n<table>\n<thead>\n<tr>\n<th>paymentType</th>\n<th>Use case</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>FIRST_PAYMENT</code></td>\n<td>a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario.</td>\n</tr>\n<tr>\n<td><code>ECOMMERCE</code></td>\n<td>a customer-initiated payment using stored payment details where the cardholder is present.</td>\n</tr>\n<tr>\n<td><code>SUBSCRIPTION</code></td>\n<td>a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.</td>\n</tr>\n<tr>\n<td><code>UNSCHEDULED</code></td>\n<td>a merchant-initiated payment using stored payment details with no fixed schedule or amount.</td>\n</tr>\n<tr>\n<td><code>MOTO</code></td>\n<td>a merchant-initiated mail order or telephone order payment.</td>\n</tr>\n<tr>\n<td><code>IN_STORE</code></td>\n<td>a customer-initiated payment where the customer is physically present in a shop.</td>\n</tr>\n</tbody></table>\n",
          "name": "PaymentsInsightsPatchedPaymentPaymentType",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "FIRST_PAYMENT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ECOMMERCE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SUBSCRIPTION",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNSCHEDULED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MOTO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IN_STORE",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": true
        },
        "type_:AccountFundingTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "AccountFundingTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "CREDIT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DEBIT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PREPAID",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CHARGE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DEFERRED_DEBIT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNKNOWN",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ApayaCustomerTokenApiSchema": {
          "description": null,
          "name": "ApayaCustomerTokenApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "mx",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "mnc",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "mcc",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:BinDataApiSchema": {
          "description": null,
          "name": "BinDataApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "network",
                "valueType": {
                  "type": "id",
                  "value": "type_:CardNetworkEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "issuerCountryCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CountryCodeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "issuerName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "issuerCurrencyCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:Currency"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "regionalRestriction",
                "valueType": {
                  "type": "id",
                  "value": "type_:CardRegionRestrictionEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "accountNumberType",
                "valueType": {
                  "type": "id",
                  "value": "type_:CardAccountNumberTypeEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "accountFundingType",
                "valueType": {
                  "type": "id",
                  "value": "type_:AccountFundingTypeEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "prepaidReloadableIndicator",
                "valueType": {
                  "type": "id",
                  "value": "type_:PrepaidReloadableEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "productUsageType",
                "valueType": {
                  "type": "id",
                  "value": "type_:CardProductTypeEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "productCode",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "productName",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:BlockingPaymentActionTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "BlockingPaymentActionTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "3DS_AUTHENTICATION",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "USE_PRIMER_SDK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PAYMENT_METHOD_VOUCHER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PROCESSOR_3DS",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CardAccountNumberTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "CardAccountNumberTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "PRIMARY_ACCOUNT_NUMBER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NETWORK_TOKEN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNKNOWN",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CardNetworkEnum": {
          "description": "The list of available card networks.\n",
          "htmlDescription": "<p>The list of available card networks.</p>\n",
          "name": "CardNetworkEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "AMEX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DANKORT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DINERS_CLUB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DISCOVER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ENROUTE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ELO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HIPER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "INTERAC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JCB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MAESTRO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MASTERCARD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MIR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PRIVATE_LABEL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNIONPAY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VISA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "OTHER",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CardProductTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "CardProductTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "CONSUMER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BUSINESS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GOVERNMENT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNKNOWN",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CardRegionRestrictionEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "CardRegionRestrictionEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "DOMESTIC_USE_ONLY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NONE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNKNOWN",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:OrderDetailsApiSchema": {
          "description": null,
          "name": "OrderDetailsApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The details of the line items of the order.",
                "htmlDescription": "<p>The details of the line items of the order.</p>\n",
                "key": "lineItems",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OrderLineItemsApiSchema"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The country in which the order is created",
                "htmlDescription": "<p>The country in which the order is created</p>\n",
                "key": "countryCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CountryCodeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The country code of the retailer",
                "htmlDescription": "<p>The country code of the retailer</p>\n",
                "key": "retailerCountryCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CountryCodeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The details of fees charged.",
                "htmlDescription": "<p>The details of fees charged.</p>\n",
                "key": "fees",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OrderFeesApiSchema"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The details of shipping charged.",
                "htmlDescription": "<p>The details of shipping charged.</p>\n",
                "key": "shipping",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:OrderShippingApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:OrderFeesApiSchema": {
          "description": null,
          "name": "OrderFeesApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The fee amount charged to the customer, in minor  units. e.g. for $7, use `700`.",
                "htmlDescription": "<p>The fee amount charged to the customer, in minor  units. e.g. for $7, use <code>700</code>.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "The type of fee.",
                "htmlDescription": "<p>The type of fee.</p>\n",
                "key": "type",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "A description of the fee, e.g. \"Currency Conversion Fee\".",
                "htmlDescription": "<p>A description of the fee, e.g. &quot;Currency Conversion Fee&quot;.</p>\n",
                "key": "description",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:OrderLineItemsApiSchema": {
          "description": "The details of the line items of the order.\n\nThe total amount of a line item is calculated like so: \n````\n  totalAmount = (amount * quantity) - discountAmount + taxAmount\n```\n",
          "htmlDescription": "<p>The details of the line items of the order.</p>\n<p>The total amount of a line item is calculated like so: </p>\n<pre><code>  totalAmount = (amount * quantity) - discountAmount + taxAmount\n```\n</code></pre>\n",
          "name": "OrderLineItemsApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "A unique identifier for the line item.",
                "htmlDescription": "<p>A unique identifier for the line item.</p>\n",
                "key": "itemId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "A name of the item.",
                "htmlDescription": "<p>A name of the item.</p>\n",
                "key": "name",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "A description of the item.",
                "htmlDescription": "<p>A description of the item.</p>\n",
                "key": "description",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The amount charged to the customer, in minor units. The minimum amount is 0.",
                "htmlDescription": "<p>The amount charged to the customer, in minor units. The minimum amount is 0.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The number of the particular line item that is being ordered.",
                "htmlDescription": "<p>The number of the particular line item that is being ordered.</p>\n",
                "key": "quantity",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Any discount applicable to this item, in minor units. This discount is applied for the entire line item, and not per `quantity`.",
                "htmlDescription": "<p>Any discount applicable to this item, in minor units. This discount is applied for the entire line item, and not per <code>quantity</code>.</p>\n",
                "key": "discountAmount",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "The tax charged on this item, in minor units. This tax amount is applied for the entire line item, and not per `quantity`.",
                "htmlDescription": "<p>The tax charged on this item, in minor units. This tax amount is applied for the entire line item, and not per <code>quantity</code>.</p>\n",
                "key": "taxAmount",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The tax code associated with this item, in minor units. This is required for Primer-initiated tax calculations.",
                "htmlDescription": "<p>The tax code associated with this item, in minor units. This is required for Primer-initiated tax calculations.</p>\n",
                "key": "taxCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "An identifier for the product type.",
                "htmlDescription": "<p>An identifier for the product type.</p>\n",
                "key": "productType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:ProductTypeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Details related to the product",
                "htmlDescription": "<p>Details related to the product</p>\n",
                "key": "productData",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:OrderLineItemsProductDataApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": true
        },
        "type_:OrderLineItemsProductDataApiSchema": {
          "description": "Details related to the product",
          "htmlDescription": "<p>Details related to the product</p>\n",
          "name": "OrderLineItemsProductDataApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The product SKU",
                "htmlDescription": "<p>The product SKU</p>\n",
                "key": "sku",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The product brand",
                "htmlDescription": "<p>The product brand</p>\n",
                "key": "brand",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The product color",
                "htmlDescription": "<p>The product color</p>\n",
                "key": "color",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The product Global Trade Item Number (e.g. ISBN)",
                "htmlDescription": "<p>The product Global Trade Item Number (e.g. ISBN)</p>\n",
                "key": "globalTradeItemNumber",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The product Manufacturer Part Number",
                "htmlDescription": "<p>The product Manufacturer Part Number</p>\n",
                "key": "manufacturerPartNumber",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The product weight",
                "htmlDescription": "<p>The product weight</p>\n",
                "key": "weight",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The product weight unit (e.g. kg, g)",
                "htmlDescription": "<p>The product weight unit (e.g. kg, g)</p>\n",
                "key": "weightUnit",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:OrderShippingApiSchema": {
          "description": null,
          "name": "OrderShippingApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The shipping amount charged to the customer, in minor units. e.g. for $7, use `700`.",
                "htmlDescription": "<p>The shipping amount charged to the customer, in minor units. e.g. for $7, use <code>700</code>.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CheckoutPaymentMethodOptionsApiSchema": {
          "description": null,
          "name": "CheckoutPaymentMethodOptionsApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Whether the payment method should be vaulted on a successful payment or not.",
                "htmlDescription": "<p>Whether the payment method should be vaulted on a successful payment or not.</p>\n",
                "key": "vaultOnSuccess",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Whether the payment method should be vaulted after a successful 3DS authentication or not.",
                "htmlDescription": "<p>Whether the payment method should be vaulted after a successful 3DS authentication or not.</p>\n",
                "key": "vaultOn3DS",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "A description of the payment, as it would typically appear on a bank statement.",
                "htmlDescription": "<p>A description of the payment, as it would typically appear on a bank statement.</p>\n",
                "key": "descriptor",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "paymentType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:RecurringPaymentTypeSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Additional options for the payment methods represented as dictionary \nwith key of [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) and value of corresponding options.\n",
                "htmlDescription": "<p>Additional options for the payment methods represented as dictionary \nwith key of <a href=\"https://primer.io/docs/payment-methods/available-payment-methods\">available payment methods</a> and value of corresponding options.</p>\n",
                "key": "options",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionsApiSchemaOptions"
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "Allows to adjust the authorized amount after the authorization, if supported by payment method.\n`FINAL` - the authorized amount is final and can not be adjusted. Adjusting the amount can be only done via canceling the payment and re-authorization with new amount.\n`ESTIMATED` - the amount can be adjusted after the authorization, if supported by payment method.\n",
                "htmlDescription": "<p>Allows to adjust the authorized amount after the authorization, if supported by payment method.\n<code>FINAL</code> - the authorized amount is final and can not be adjusted. Adjusting the amount can be only done via canceling the payment and re-authorization with new amount.\n<code>ESTIMATED</code> - the amount can be adjusted after the authorization, if supported by payment method.</p>\n",
                "key": "authorizationType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:AuthorizationTypeEnum"
                  }
                },
                "descriptionContainsMarkdown": true
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CheckoutPaymentMethodOptionsApiSchemaOptions": {
          "description": "Additional options for the payment methods represented as dictionary \nwith key of [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) and value of corresponding options.\n",
          "htmlDescription": "<p>Additional options for the payment methods represented as dictionary \nwith key of <a href=\"https://primer.io/docs/payment-methods/available-payment-methods\">available payment methods</a> and value of corresponding options.</p>\n",
          "name": "CheckoutPaymentMethodOptionsApiSchemaOptions",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "<PAYMENT_METHOD_TYPE>",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "PAYMENT_CARD",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodCardOptionApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": true
        },
        "type_:CheckoutPaymentMethodOptionApiSchema": {
          "description": "Options for the payment method of type `PAYMENT_METHOD_TYPE`.\n",
          "htmlDescription": "<p>Options for the payment method of type <code>PAYMENT_METHOD_TYPE</code>.</p>\n",
          "name": "CheckoutPaymentMethodOptionApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Surcharge information",
                "htmlDescription": "<p>Surcharge information</p>\n",
                "key": "surcharge",
                "valueType": {
                  "type": "id",
                  "value": "type_:CheckoutPaymentMethodOptionSurchargeApiSchema"
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": true
        },
        "type_:CheckoutPaymentMethodCardOptionApiSchema": {
          "description": null,
          "name": "CheckoutPaymentMethodCardOptionApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Dictionary of available card networks as a key with value of Payment Method Card Network Option.",
                "htmlDescription": "<p>Dictionary of available card networks as a key with value of Payment Method Card Network Option.</p>\n",
                "key": "networks",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema": {
          "description": null,
          "name": "CheckoutPaymentMethodOptionCardNetworkApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "AMEX",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "DANKORT",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "DINERS_CLUB",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "DISCOVER",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "ENROUTE",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "ELO",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "HIPER",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "INTERAC",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "JCB",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "MAESTRO",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "MASTERCARD",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "MIR",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "PRIVATE_LABEL",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "UNIONPAY",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "VISA",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "OTHER",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema": {
          "description": null,
          "name": "CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Surcharge information",
                "htmlDescription": "<p>Surcharge information</p>\n",
                "key": "surcharge",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionSurchargeApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CheckoutPaymentMethodOptionSurchargeApiSchema": {
          "description": null,
          "name": "CheckoutPaymentMethodOptionSurchargeApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The surcharge amount, in minor units. Surcharge amount must be used in conjunction with line item amounts, if a top level amount is passed then surcharge will not be calculated.",
                "htmlDescription": "<p>The surcharge amount, in minor units. Surcharge amount must be used in conjunction with line item amounts, if a top level amount is passed then surcharge will not be calculated.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentRequestPaymentMethodOptionsApiSchema": {
          "description": null,
          "name": "PaymentRequestPaymentMethodOptionsApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Whether the payment method should be vaulted on a successful payment or not.",
                "htmlDescription": "<p>Whether the payment method should be vaulted on a successful payment or not.</p>\n",
                "key": "vaultOnSuccess",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Whether the payment method should be vaulted after a successful 3DS authentication or not.",
                "htmlDescription": "<p>Whether the payment method should be vaulted after a successful 3DS authentication or not.</p>\n",
                "key": "vaultOn3DS",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "A description of the payment, as it would typically appear on a bank statement.",
                "htmlDescription": "<p>A description of the payment, as it would typically appear on a bank statement.</p>\n",
                "key": "descriptor",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "paymentType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:RecurringPaymentTypeSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Allows to adjust the authorized amount after the authorization, if supported by payment method.\n`FINAL` - the authorized amount is final and can not be adjusted. Adjusting the amount can be only done via canceling the payment and re-authorization with new amount.\n`ESTIMATED` - the amount can be adjusted after the authorization, if supported by payment method.\nDefaults to `FINAL`.\n",
                "htmlDescription": "<p>Allows to adjust the authorized amount after the authorization, if supported by payment method.\n<code>FINAL</code> - the authorized amount is final and can not be adjusted. Adjusting the amount can be only done via canceling the payment and re-authorization with new amount.\n<code>ESTIMATED</code> - the amount can be adjusted after the authorization, if supported by payment method.\nDefaults to <code>FINAL</code>.</p>\n",
                "key": "authorizationType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:AuthorizationTypeEnum"
                  }
                },
                "descriptionContainsMarkdown": true
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentResponsePaymentMethodOptionsApiSchema": {
          "description": null,
          "name": "PaymentResponsePaymentMethodOptionsApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The description of the payment, as it would typically appear\non a bank statement.\n",
                "htmlDescription": "<p>The description of the payment, as it would typically appear\non a bank statement.</p>\n",
                "key": "descriptor",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "paymentType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:RecurringPaymentTypeSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The payment method token used to authorize the transaction.",
                "htmlDescription": "<p>The payment method token used to authorize the transaction.</p>\n",
                "key": "paymentMethodToken",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Whether the payment method token represents a vaulted payment method and can be used for future payments.",
                "htmlDescription": "<p>Whether the payment method token represents a vaulted payment method and can be used for future payments.</p>\n",
                "key": "isVaulted",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Unique analytics identifier corresponding to a payment method",
                "htmlDescription": "<p>Unique analytics identifier corresponding to a payment method</p>\n",
                "key": "analyticsId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Payment method type used for payment authorization.",
                "htmlDescription": "<p>Payment method type used for payment authorization.</p>\n",
                "key": "paymentMethodType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentMethodTypeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Payment method data",
                "htmlDescription": "<p>Payment method data</p>\n",
                "key": "paymentMethodData",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "threeDSecureAuthentication",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:ThreeDSecureAuthenticationApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Allows to adjust the authorized amount after the authorization, if supported by payment method. `FINAL` - the authorized amount is final and can not be adjusted. Adjusting the amount can be only done via canceling the payment and re-authorization with new amount. `ESTIMATED` - the amount can be adjusted after the authorization, if supported by payment method.",
                "htmlDescription": "<p>Allows to adjust the authorized amount after the authorization, if supported by payment method. <code>FINAL</code> - the authorized amount is final and can not be adjusted. Adjusting the amount can be only done via canceling the payment and re-authorization with new amount. <code>ESTIMATED</code> - the amount can be adjusted after the authorization, if supported by payment method.</p>\n",
                "key": "authorizationType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:AuthorizationTypeEnum"
                  }
                },
                "descriptionContainsMarkdown": true
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData": {
          "description": "Payment method data",
          "htmlDescription": "<p>Payment method data</p>\n",
          "name": "PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData",
          "shape": {
            "type": "undiscriminatedUnion",
            "variants": [
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:PaymentCardTokenApiSchema"
                },
                "displayName": "Payment Card Token Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:PayPalOrderTokenApiSchema"
                },
                "displayName": "Pay Pal Order Token Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:PayPalBillingAgreementApiSchema"
                },
                "displayName": "Pay Pal Billing Agreement Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:GoCardlessMandateApiSchema"
                },
                "displayName": "Go Cardless Mandate Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:KlarnaPaymentSessionApiSchema"
                },
                "displayName": "Klarna Payment Session Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:KlarnaCustomerTokenApiSchema"
                },
                "displayName": "Klarna Customer Token Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:IdealPayNlTokenApiSchema"
                },
                "displayName": "Ideal Pay Nl Token Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:ApayaCustomerTokenApiSchema"
                },
                "displayName": "Apaya Customer Token Api Schema",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CheckoutCustomerDetailsApiSchema": {
          "description": null,
          "name": "CheckoutCustomerDetailsApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Customer email address. <br />Must be a valid email address. Supports internationalized email addresses.\n",
                "htmlDescription": "<p>Customer email address. <br />Must be a valid email address. Supports internationalized email addresses.</p>\n",
                "key": "emailAddress",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "The customer's mobile number",
                "htmlDescription": "<p>The customer&#39;s mobile number</p>\n",
                "key": "mobileNumber",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The customer's first name",
                "htmlDescription": "<p>The customer&#39;s first name</p>\n",
                "key": "firstName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The customer's last name",
                "htmlDescription": "<p>The customer&#39;s last name</p>\n",
                "key": "lastName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Customer billing address.\n",
                "htmlDescription": "<p>Customer billing address.</p>\n",
                "key": "billingAddress",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:OptionalAddressApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Customer shipping address",
                "htmlDescription": "<p>Customer shipping address</p>\n",
                "key": "shippingAddress",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:OptionalAddressApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The customer's tax id number for tax exemptions",
                "htmlDescription": "<p>The customer&#39;s tax id number for tax exemptions</p>\n",
                "key": "taxId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The customer's national identification number",
                "htmlDescription": "<p>The customer&#39;s national identification number</p>\n",
                "key": "nationalDocumentId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CustomerDetailsApiSchema": {
          "description": null,
          "name": "CustomerDetailsApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Customer email address.\n\nNote: It is recommended to include this field if a 3DS check will be performed\n",
                "htmlDescription": "<p>Customer email address.</p>\n<p>Note: It is recommended to include this field if a 3DS check will be performed</p>\n",
                "key": "emailAddress",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The customer's mobile number",
                "htmlDescription": "<p>The customer&#39;s mobile number</p>\n",
                "key": "mobileNumber",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The customer's first name",
                "htmlDescription": "<p>The customer&#39;s first name</p>\n",
                "key": "firstName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The customer's last name",
                "htmlDescription": "<p>The customer&#39;s last name</p>\n",
                "key": "lastName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Customer billing address.\n\nNote: It is recommended to include this field if a 3DS check will be performed\n",
                "htmlDescription": "<p>Customer billing address.</p>\n<p>Note: It is recommended to include this field if a 3DS check will be performed</p>\n",
                "key": "billingAddress",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:OptionalAddressApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Customer shipping address",
                "htmlDescription": "<p>Customer shipping address</p>\n",
                "key": "shippingAddress",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:OptionalAddressApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The customer's tax id number for tax exemptions",
                "htmlDescription": "<p>The customer&#39;s tax id number for tax exemptions</p>\n",
                "key": "taxId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The customer's national identification number",
                "htmlDescription": "<p>The customer&#39;s national identification number</p>\n",
                "key": "nationalDocumentId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ClientSessionWithTokenApiResponse": {
          "description": null,
          "name": "ClientSessionWithTokenApiResponse",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Client token used to initialize the SDK on all platforms.",
                "htmlDescription": "<p>Client token used to initialize the SDK on all platforms.</p>\n",
                "key": "clientToken",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Expiration date & time of the client token (UTC with no timezoneinfo).",
                "htmlDescription": "<p>Expiration date &amp; time of the client token (UTC with no timezoneinfo).</p>\n",
                "key": "clientTokenExpirationDate",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Your reference for the payment.",
                "htmlDescription": "<p>Your reference for the payment.</p>\n",
                "key": "orderId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
                "htmlDescription": "<p>The 3-letter currency code in <a href=\"https://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 format</a>.\ne.g. use <code>USD</code> for US dollars.</p>\n",
                "key": "currencyCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts.",
                "htmlDescription": "<p>The amount you would like to charge the customer, in minor units. e.g. for $7, use <code>700</code>.</p>\n<p>Some currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use <code>100</code>.</p>\n<p>If the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "More information associated with the order.",
                "htmlDescription": "<p>More information associated with the order.</p>\n",
                "key": "order",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:OrderDetailsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "A unique identifier for your customer.",
                "htmlDescription": "<p>A unique identifier for your customer.</p>\n",
                "key": "customerId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "More information associated with the customer.",
                "htmlDescription": "<p>More information associated with the customer.</p>\n",
                "key": "customer",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CustomerDetailsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Additional data to be used throughout the payment lifecycle.\n",
                "htmlDescription": "<p>Additional data to be used throughout the payment lifecycle.</p>\n",
                "key": "metadata",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "unknown"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Enable certain options associated with the payment methods.",
                "htmlDescription": "<p>Enable certain options associated with the payment methods.</p>\n",
                "key": "paymentMethod",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Warning messages to indicate missing information that are required for payment methods, checkout modules and other features; or when third-party services are unavailable.",
                "htmlDescription": "<p>Warning messages to indicate missing information that are required for payment methods, checkout modules and other features; or when third-party services are unavailable.</p>\n",
                "key": "warnings",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:ClientSessionWarningsApiResponse"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ClientSessionApiResponse": {
          "description": null,
          "name": "ClientSessionApiResponse",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "A unique identifier for your customer.",
                "htmlDescription": "<p>A unique identifier for your customer.</p>\n",
                "key": "customerId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Your reference for the payment.",
                "htmlDescription": "<p>Your reference for the payment.</p>\n",
                "key": "orderId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
                "htmlDescription": "<p>The 3-letter currency code in <a href=\"https://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 format</a>.\ne.g. use <code>USD</code> for US dollars.</p>\n",
                "key": "currencyCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:Currency"
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "The amount you are going to charge the customer, in minor units. This amount is calculated from the line items, shipping and other amounts provided in the `order`. \nIf a top-level amount is provided, it would override any calculated amount.",
                "htmlDescription": "<p>The amount you are going to charge the customer, in minor units. This amount is calculated from the line items, shipping and other amounts provided in the <code>order</code>. \nIf a top-level amount is provided, it would override any calculated amount.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "Additional data to be used throughout the payment lifecycle.\n",
                "htmlDescription": "<p>Additional data to be used throughout the payment lifecycle.</p>\n",
                "key": "metadata",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "unknown"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "More information associated with the customer.",
                "htmlDescription": "<p>More information associated with the customer.</p>\n",
                "key": "customer",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CustomerDetailsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "More information associated with the order.",
                "htmlDescription": "<p>More information associated with the order.</p>\n",
                "key": "order",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:OrderDetailsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Enable certain options associated with the payment methods.",
                "htmlDescription": "<p>Enable certain options associated with the payment methods.</p>\n",
                "key": "paymentMethod",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ClientSessionWarningsApiResponse": {
          "description": null,
          "name": "ClientSessionWarningsApiResponse",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The type of the connection involved",
                "htmlDescription": "<p>The type of the connection involved</p>\n",
                "key": "type",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "A unique code describing the particular issue",
                "htmlDescription": "<p>A unique code describing the particular issue</p>\n",
                "key": "code",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "More information as to the reason for the warning",
                "htmlDescription": "<p>More information as to the reason for the warning</p>\n",
                "key": "message",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:CountryCodeEnum": {
          "description": "2-letter country code in <a href='https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements'>ISO 3166-1 alpha</a> format, \ne.g. <code>FR</code> for France and <code>GB</code> for the United Kingdom.\n",
          "htmlDescription": "<p>2-letter country code in <a href='https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements'>ISO 3166-1 alpha</a> format, \ne.g. <code>FR</code> for France and <code>GB</code> for the United Kingdom.</p>\n",
          "name": "CountryCodeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "AW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BJ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DJ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ES",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ET",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FJ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ID",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ML",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ME",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "YT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "OM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "QA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SJ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ST",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TJ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "US",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "WF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "WS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "YE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZW",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": true
        },
        "type_:Currency": {
          "description": "3-letter currency code in <a href='https://en.wikipedia.org/wiki/ISO_4217#Active_codes'>ISO 4217</a> format, \ne.g. <code>USD</code> for US dollars.\n",
          "htmlDescription": "<p>3-letter currency code in <a href='https://en.wikipedia.org/wiki/ISO_4217#Active_codes'>ISO 4217</a> format, \ne.g. <code>USD</code> for US dollars.</p>\n",
          "name": "Currency",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "AED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AFN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ALL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AMD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ANG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AOA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ARS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AUD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AWG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AZN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BAM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BBD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BDT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BGN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BHD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BIF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BMD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BND",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BOB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BOV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BRL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BSD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BTN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BWP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BYR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BYN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BZD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CAD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CDF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CHE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CHF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CHW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CLF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CLP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CNY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "COP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "COU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CRC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CUC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CUP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CVE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CZK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DJF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DKK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DOP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DZD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EGP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ERN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ETB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EUR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FJD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FKP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GBP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GEL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GHS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GIP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GMD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GNF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GTQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GYD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HKD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HNL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HRK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HTG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HUF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IDR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ILS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "INR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IQD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IRR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ISK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JMD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JOD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JPY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KES",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KGS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KHR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KMF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KPW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KRW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KWD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KYD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KZT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LAK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LBP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LKR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LRD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LSL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LTL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LVL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LYD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MAD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MDL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MGA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MKD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MMK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MNT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MOP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MRO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MUR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MVR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MWK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MXN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MXV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MYR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MZN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NAD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NGN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NIO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NOK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NPR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NZD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "OMR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PAB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PEN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PGK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PHP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PKR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PLN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PYG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "QAR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RON",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RSD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RUB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RWF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SAR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SBD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SCR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SDG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SEK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SGD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SHP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SLL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SOS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SRD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SSP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "STD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SVC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SYP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SZL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "THB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TJS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TMT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TND",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TOP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TRY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TTD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TWD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TZS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UAH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UGX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "USD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "USN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "USS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UYI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UYU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UZS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VEF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VND",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VUV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "WST",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XAF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XAG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XAU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XBA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XBB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XBC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XBD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XCD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XDR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XFU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XOF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XPD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XPF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XPT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XSU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XTS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XUA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "YER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZAR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZMW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZWL",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": true
        },
        "type_:PaymentResponseProcessorApiSchema": {
          "description": null,
          "name": "PaymentResponseProcessorApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The payment processor used for this payment.",
                "htmlDescription": "<p>The payment processor used for this payment.</p>\n",
                "key": "name",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The merchant ID registered at the payment processor used for this payment.",
                "htmlDescription": "<p>The merchant ID registered at the payment processor used for this payment.</p>\n",
                "key": "processorMerchantId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "If no capture was performed, this value will be set to `0`.\n\nIf one or more partial captures were performed, this value will be a sum\nof all partial capture amounts.\n",
                "htmlDescription": "<p>If no capture was performed, this value will be set to <code>0</code>.</p>\n<p>If one or more partial captures were performed, this value will be a sum\nof all partial capture amounts.</p>\n",
                "key": "amountCaptured",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "If no refund was performed, this value will be set to `0`.\n\nIf one or more partial refunds were performed, this value will be a sum\nof all partial refund amounts.\n",
                "htmlDescription": "<p>If no refund was performed, this value will be set to <code>0</code>.</p>\n<p>If one or more partial refunds were performed, this value will be a sum\nof all partial refund amounts.</p>\n",
                "key": "amountRefunded",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:GoCardlessMandateApiSchema": {
          "description": null,
          "name": "GoCardlessMandateApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Unique identifier of a GoCardless mandate agreement",
                "htmlDescription": "<p>Unique identifier of a GoCardless mandate agreement</p>\n",
                "key": "gocardlessMandateId",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:IdealPayNlTokenApiSchema": {
          "description": null,
          "name": "IdealPayNlTokenApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "paymentMethodConfigId",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:KlarnaAddressApiSchema": {
          "description": null,
          "name": "KlarnaAddressApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "title",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "firstName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "lastName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "email",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "phoneNumber",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "addressLine1",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "addressLine2",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "addressLine3",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "city",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "state",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "countryCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CountryCodeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "postalCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:KlarnaCustomerTokenApiSchema": {
          "description": null,
          "name": "KlarnaCustomerTokenApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "klarnaCustomerToken",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "sessionData",
                "valueType": {
                  "type": "id",
                  "value": "type_:KlarnaSessionDetailsApiSchema"
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:KlarnaPaymentSessionApiSchema": {
          "description": null,
          "name": "KlarnaPaymentSessionApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "klarnaAuthorizationToken",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "sessionData",
                "valueType": {
                  "type": "id",
                  "value": "type_:KlarnaSessionDetailsApiSchema"
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:KlarnaSessionDetailsApiSchema": {
          "description": null,
          "name": "KlarnaSessionDetailsApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "recurringDescription",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "billingAddress",
                "valueType": {
                  "type": "id",
                  "value": "type_:KlarnaAddressApiSchema"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "shippingAddress",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:KlarnaAddressApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "purchaseCountry",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "purchaseCurrency",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "locale",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "orderLines",
                "valueType": {
                  "type": "list",
                  "itemType": {
                    "type": "unknown"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "tokenDetails",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:KlarnaTokenDetails"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:KlarnaTokenDetails": {
          "description": null,
          "name": "KlarnaTokenDetails",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "type",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "brand",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "masked_number",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "expiry_date",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PayPalBillingAgreementApiSchema": {
          "description": null,
          "name": "PayPalBillingAgreementApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "paypalBillingAgreementId",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Information about the PayPal customer",
                "htmlDescription": "<p>Information about the PayPal customer</p>\n",
                "key": "externalPayerInfo",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PayPalExternalPayerInfoApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The PayPal customer's shipping address",
                "htmlDescription": "<p>The PayPal customer&#39;s shipping address</p>\n",
                "key": "shippingAddress",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:AddressApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "paypalStatus",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PayPalExternalPayerInfoApiSchema": {
          "description": null,
          "name": "PayPalExternalPayerInfoApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "externalPayerId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "email",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "firstName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "lastName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PayPalOrderTokenApiSchema": {
          "description": null,
          "name": "PayPalOrderTokenApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "paypalOrderId",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Information about the PayPal customer",
                "htmlDescription": "<p>Information about the PayPal customer</p>\n",
                "key": "externalPayerInfo",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PayPalExternalPayerInfoApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "paypalStatus",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentApiResponse": {
          "description": null,
          "name": "PaymentApiResponse",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream\noperations.\n",
                "htmlDescription": "<p>The unique payment ID.</p>\n<p>You can use this ID to retrieve the payment details, or perform downstream\noperations.</p>\n",
                "key": "id",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The date and time at which the payment was created in UTC format.",
                "htmlDescription": "<p>The date and time at which the payment was created in UTC format.</p>\n",
                "key": "date",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "See the payment [status table](../docs#payment-status) for more information.",
                "htmlDescription": "<p>See the payment <a href=\"../docs#payment-status\">status table</a> for more information.</p>\n",
                "key": "status",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentStatus"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Your reference for the payment.",
                "htmlDescription": "<p>Your reference for the payment.</p>\n",
                "key": "orderId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
                "htmlDescription": "<p>The 3-letter currency code in <a href=\"https://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 format</a>.\ne.g. use <code>USD</code> for US dollars.</p>\n",
                "key": "currencyCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:Currency"
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "The amount you charged the customer, in minor units.",
                "htmlDescription": "<p>The amount you charged the customer, in minor units.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "More information associated with the order.",
                "htmlDescription": "<p>More information associated with the order.</p>\n",
                "key": "order",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:OrderDetailsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The unique identifier for your customer.",
                "htmlDescription": "<p>The unique identifier for your customer.</p>\n",
                "key": "customerId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "More information associated with the customer.",
                "htmlDescription": "<p>More information associated with the customer.</p>\n",
                "key": "customer",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CustomerDetailsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Additional data to be used throughout the payment lifecycle.\n",
                "htmlDescription": "<p>Additional data to be used throughout the payment lifecycle.</p>\n",
                "key": "metadata",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "unknown"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The payment method options provided in the request, as well as the token used to process the payment.",
                "htmlDescription": "<p>The payment method options provided in the request, as well as the token used to process the payment.</p>\n",
                "key": "paymentMethod",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentResponsePaymentMethodOptionsApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "More information associated with the payment processor, including the processor name.",
                "htmlDescription": "<p>More information associated with the payment processor, including the processor name.</p>\n",
                "key": "processor",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentResponseProcessorApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Required action to perform in order to resume the payment workflow. This can be requiring a 3DS check from the customer for instance.",
                "htmlDescription": "<p>Required action to perform in order to resume the payment workflow. This can be requiring a 3DS check from the customer for instance.</p>\n",
                "key": "requiredAction",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentRequiredActionApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Check this field for more information regarding the payment's status. This is especially useful when the status is `DECLINED` or `FAILED`.\n",
                "htmlDescription": "<p>Check this field for more information regarding the payment&#39;s status. This is especially useful when the status is <code>DECLINED</code> or <code>FAILED</code>.</p>\n",
                "key": "statusReason",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:StatusReasonApiSchema"
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "A list summarizing the transactions that occurred while processing the payment.\n\nNote: a refund is a separate transaction and so will appear in this `transactions` list if a refund was performed.",
                "htmlDescription": "<p>A list summarizing the transactions that occurred while processing the payment.</p>\n<p>Note: a refund is a separate transaction and so will appear in this <code>transactions</code> list if a refund was performed.</p>\n",
                "key": "transactions",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_:TransactionOverviewApiSchema"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": null,
                "key": "riskData",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:RiskDataApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentCardTokenApiSchema": {
          "description": null,
          "name": "PaymentCardTokenApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "first6Digits",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "last4Digits",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "expirationMonth",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "expirationYear",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "cardholderName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "network",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "isNetworkTokenized",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "binData",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:BinDataApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:StatusReasonApiSchema": {
          "description": null,
          "name": "StatusReasonApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Type of the status.",
                "htmlDescription": "<p>Type of the status.</p>\n",
                "key": "type",
                "valueType": {
                  "type": "id",
                  "value": "type_:PaymentStatusTypeEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "If the error is of type `ISSUER_DECLINED` this will be returned.\n\nDeclines of type `SOFT_DECLINE` may be retried,\nwhereas declines of type `HARD_DECLINE` should not be retried.\n",
                "htmlDescription": "<p>If the error is of type <code>ISSUER_DECLINED</code> this will be returned.</p>\n<p>Declines of type <code>SOFT_DECLINE</code> may be retried,\nwhereas declines of type <code>HARD_DECLINE</code> should not be retried.</p>\n",
                "key": "declineType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:DeclineTypeEnum"
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "If the error is of type `ISSUER_DECLINED`, this will be returned.",
                "htmlDescription": "<p>If the error is of type <code>ISSUER_DECLINED</code>, this will be returned.</p>\n",
                "key": "code",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:TransactionDeclineReasonV2Enum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "In case of an error on the processor's part, we will return the message returned by the processor. This is usually a human readable error.",
                "htmlDescription": "<p>In case of an error on the processor&#39;s part, we will return the message returned by the processor. This is usually a human readable error.</p>\n",
                "key": "message",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:RiskDataApiSchema": {
          "description": "Risk data associated with this payment.\n",
          "htmlDescription": "<p>Risk data associated with this payment.</p>\n",
          "name": "RiskDataApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "fraudCheck",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:FraudCheckApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:FraudCheckApiSchema": {
          "description": "Results of the pre-authorization and post-authorization fraud checks.\n",
          "htmlDescription": "<p>Results of the pre-authorization and post-authorization fraud checks.</p>\n",
          "name": "FraudCheckApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "source",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "preAuthorizationResult",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:FraudDecisionTypeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "postAuthorizationResult",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:FraudDecisionTypeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:FraudDecisionTypeEnum": {
          "description": "Possible fraud check outcomes.",
          "htmlDescription": "<p>Possible fraud check outcomes.</p>\n",
          "name": "FraudDecisionTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "ACCEPT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "REFUSE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FAILED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "THREE_DS",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentMethodTypeEnum": {
          "description": "Payment method type, where `OFF_SESSION_PAYMENT` is used for APM (Alternative Payment Method) payments and `PAYMENT_CARD` for traditional debit or credit cards. Please note that this list is different from one indicated on [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) page and values of this field will be changed in the future versions of the API.",
          "htmlDescription": "<p>Payment method type, where <code>OFF_SESSION_PAYMENT</code> is used for APM (Alternative Payment Method) payments and <code>PAYMENT_CARD</code> for traditional debit or credit cards. Please note that this list is different from one indicated on <a href=\"https://primer.io/docs/payment-methods/available-payment-methods\">available payment methods</a> page and values of this field will be changed in the future versions of the API.</p>\n",
          "name": "PaymentMethodTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "PAYMENT_CARD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PAYPAL_ORDER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PAYPAL_BILLING_AGREEMENT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GOCARDLESS_MANDATE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KLARNA_AUTHORIZATION_TOKEN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KLARNA_CUSTOMER_TOKEN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PAY_NL_IDEAL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "APAYA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "OFF_SESSION_PAYMENT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CARD_OFF_SESSION_PAYMENT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "APPLE_PAY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "APPLE_PAY_ENCRYPTED_TOKEN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GOOGLE_PAY",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": true
        },
        "type_:PaymentListApiResponse": {
          "description": null,
          "name": "PaymentListApiResponse",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "data",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentSummaryApiSchema"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "nextCursor",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "prevCursor",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentRequiredActionApiSchema": {
          "description": null,
          "name": "PaymentRequiredActionApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Action name",
                "htmlDescription": "<p>Action name</p>\n",
                "key": "name",
                "valueType": {
                  "type": "id",
                  "value": "type_:BlockingPaymentActionTypeEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Human description of the required action to perform.",
                "htmlDescription": "<p>Human description of the required action to perform.</p>\n",
                "key": "description",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The client token to be returned to the SDK if a required action is returned.",
                "htmlDescription": "<p>The client token to be returned to the SDK if a required action is returned.</p>\n",
                "key": "clientToken",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentSummaryApiSchema": {
          "description": null,
          "name": "PaymentSummaryApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream\noperations.\n",
                "htmlDescription": "<p>The unique payment ID.</p>\n<p>You can use this ID to retrieve the payment details, or perform downstream\noperations.</p>\n",
                "key": "id",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The date and time at which the payment was created in UTC format.",
                "htmlDescription": "<p>The date and time at which the payment was created in UTC format.</p>\n",
                "key": "date",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "See the payment [status table](../docs#payment-status) for more information.",
                "htmlDescription": "<p>See the payment <a href=\"../docs#payment-status\">status table</a> for more information.</p>\n",
                "key": "status",
                "valueType": {
                  "type": "id",
                  "value": "type_:PaymentStatus"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Your reference for the payment.",
                "htmlDescription": "<p>Your reference for the payment.</p>\n",
                "key": "orderId",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The payment processor used for this payment.",
                "htmlDescription": "<p>The payment processor used for this payment.</p>\n",
                "key": "processor",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentSummaryProcessorApiSchema"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
                "htmlDescription": "<p>The 3-letter currency code in <a href=\"https://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 format</a>.\ne.g. use <code>USD</code> for US dollars.</p>\n",
                "key": "currencyCode",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "The payment amount, in minor units. e.g. $7 would show as `700`.",
                "htmlDescription": "<p>The payment amount, in minor units. e.g. $7 would show as <code>700</code>.</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`\n",
                "htmlDescription": "<p>Additional data to be used throughout the payment lifecycle.</p>\n<p>A dictionary of key-value pairs where the values can only be strings or\nintegers.</p>\n<p>e.g. <code>{&quot;productId&quot;: 1001, &quot;merchantId&quot;: &quot;a13bsd62s&quot;}</code></p>\n",
                "key": "metadata",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "unknown"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentAuthorizationRequestProcessorApiSchema": {
          "description": null,
          "name": "PaymentAuthorizationRequestProcessorApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The processor's merchant ID used to authorize the payment.",
                "htmlDescription": "<p>The processor&#39;s merchant ID used to authorize the payment.</p>\n",
                "key": "processorMerchantId",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The processor name should be provided if the processorMerchantId is not unique across all of your integrations.",
                "htmlDescription": "<p>The processor name should be provided if the processorMerchantId is not unique across all of your integrations.</p>\n",
                "key": "name",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentSummaryProcessorApiSchema": {
          "description": null,
          "name": "PaymentSummaryProcessorApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The payment processor used for this payment.",
                "htmlDescription": "<p>The payment processor used for this payment.</p>\n",
                "key": "name",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The merchant ID registered at the payment processor used for this payment.",
                "htmlDescription": "<p>The merchant ID registered at the payment processor used for this payment.</p>\n",
                "key": "processorMerchantId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PrepaidReloadableEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "PrepaidReloadableEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "RELOADABLE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NON_RELOADABLE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NOT_APPLICABLE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNKNOWN",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:RecurringTransactionTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "RecurringTransactionTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "FIRST_PAYMENT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ECOMMERCE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SUBSCRIPTION",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNSCHEDULED",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:RecurringPaymentTypeSchema": {
          "description": "Payment types, primarily to be used for recurring payments.\nNote: If you successfully vault a `SINGLE_USE` token on payment creation, then there's no need to set a value for this field and it will be flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all possible values.\n\n| paymentType | Use case |\n| --- | --- |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario.\n| `ECOMMERCE` | a customer-initiated payment using stored payment details where the cardholder is present.\n| `SUBSCRIPTION` | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.\n| `UNSCHEDULED` | a merchant-initiated payment using stored payment details with no fixed schedule or amount.",
          "htmlDescription": "<p>Payment types, primarily to be used for recurring payments.\nNote: If you successfully vault a <code>SINGLE_USE</code> token on payment creation, then there&#39;s no need to set a value for this field and it will be flagged as <code>FIRST_PAYMENT</code>. Otherwise, see the table below for all possible values.</p>\n<table>\n<thead>\n<tr>\n<th>paymentType</th>\n<th>Use case</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>FIRST_PAYMENT</code></td>\n<td>a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario.</td>\n</tr>\n<tr>\n<td><code>ECOMMERCE</code></td>\n<td>a customer-initiated payment using stored payment details where the cardholder is present.</td>\n</tr>\n<tr>\n<td><code>SUBSCRIPTION</code></td>\n<td>a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.</td>\n</tr>\n<tr>\n<td><code>UNSCHEDULED</code></td>\n<td>a merchant-initiated payment using stored payment details with no fixed schedule or amount.</td>\n</tr>\n</tbody></table>\n",
          "name": "RecurringPaymentTypeSchema",
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "value": "type_:RecurringTransactionTypeEnum"
            }
          },
          "descriptionContainsMarkdown": true
        },
        "type_:ProductTypeEnum": {
          "description": "An enumeration",
          "htmlDescription": "<p>An enumeration</p>\n",
          "name": "ProductTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "PHYSICAL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DIGITAL",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ThreeDSecureAuthResponseCodeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "ThreeDSecureAuthResponseCodeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "NOT_PERFORMED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SKIPPED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AUTH_SUCCESS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AUTH_FAILED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CHALLENGE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "METHOD",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ThreeDSecureAuthenticationApiSchema": {
          "description": null,
          "name": "ThreeDSecureAuthenticationApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "responseCode",
                "valueType": {
                  "type": "id",
                  "value": "type_:ThreeDSecureAuthResponseCodeEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "reasonCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:ThreeDSecureAuthenticationApiSchemaReasonCode"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "reasonText",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "protocolVersion",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "challengeIssued",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ThreeDSecureAuthenticationApiSchemaReasonCode": {
          "description": null,
          "name": "ThreeDSecureAuthenticationApiSchemaReasonCode",
          "shape": {
            "type": "undiscriminatedUnion",
            "variants": [
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:ThreeDSecureSkippedReasonCodeEnum"
                },
                "displayName": "Three D Secure Skipped Reason Code Enum",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:ThreeDSecureFailedReasonCodeEnum"
                },
                "displayName": "Three D Secure Failed Reason Code Enum",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ThreeDSecureFailedReasonCodeEnum": {
          "description": "This enum is derived from the `transStatusReason` on page 218 of the\n[EMV Co 3DS protocol specification](https://www.emvco.com/terms-of-use/?u=/wp-content/uploads/documents/EMVCo_3DS_Spec_v220_122018.pdf)\n\n| Code | Description                             |\n|------|-----------------------------------------|\n| 01   | Card authentication failed              |\n| 02   | Unknown Device                          |\n| 03   | Unsupported Device                      |\n| 04   | Exceeds authentication frequency limit  |\n| 05   | Expired card                            |\n| 06   | Invalid card number                     |\n| 07   | Invalid transaction                     |\n| 08   | No Card record                          |\n| 09   | Security failure                        |\n| 10   | Stolen card                             |\n| 11   | Suspected fraud                         |\n| 12   | Transaction not permitted to cardholder |\n| 13   | Cardholder not enrolled in service      |\n| 14   | Transaction timed out at the ACS        |\n| 15   | Low confidence                          |\n| 16   | Medium confidence                       |",
          "htmlDescription": "<p>This enum is derived from the <code>transStatusReason</code> on page 218 of the\n<a href=\"https://www.emvco.com/terms-of-use/?u=/wp-content/uploads/documents/EMVCo_3DS_Spec_v220_122018.pdf\">EMV Co 3DS protocol specification</a></p>\n<table>\n<thead>\n<tr>\n<th>Code</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>01</td>\n<td>Card authentication failed</td>\n</tr>\n<tr>\n<td>02</td>\n<td>Unknown Device</td>\n</tr>\n<tr>\n<td>03</td>\n<td>Unsupported Device</td>\n</tr>\n<tr>\n<td>04</td>\n<td>Exceeds authentication frequency limit</td>\n</tr>\n<tr>\n<td>05</td>\n<td>Expired card</td>\n</tr>\n<tr>\n<td>06</td>\n<td>Invalid card number</td>\n</tr>\n<tr>\n<td>07</td>\n<td>Invalid transaction</td>\n</tr>\n<tr>\n<td>08</td>\n<td>No Card record</td>\n</tr>\n<tr>\n<td>09</td>\n<td>Security failure</td>\n</tr>\n<tr>\n<td>10</td>\n<td>Stolen card</td>\n</tr>\n<tr>\n<td>11</td>\n<td>Suspected fraud</td>\n</tr>\n<tr>\n<td>12</td>\n<td>Transaction not permitted to cardholder</td>\n</tr>\n<tr>\n<td>13</td>\n<td>Cardholder not enrolled in service</td>\n</tr>\n<tr>\n<td>14</td>\n<td>Transaction timed out at the ACS</td>\n</tr>\n<tr>\n<td>15</td>\n<td>Low confidence</td>\n</tr>\n<tr>\n<td>16</td>\n<td>Medium confidence</td>\n</tr>\n</tbody></table>\n",
          "name": "ThreeDSecureFailedReasonCodeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "UNKNOWN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "REJECTED_BY_ISSUER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CARD_AUTHENTICATION_FAILED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNKNOWN_DEVICE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNSUPPORTED_DEVICE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EXCEEDS_AUTHENTICATION_FREQUENCY_LIMIT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EXPIRED_CARD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "INVALID_CARD_NUMBER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "INVALID_TRANSACTION",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NO_CARD_RECORD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SECURITY_FAILURE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "STOLEN_CARD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SUSPECTED_FRAUD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TRANSACTION_NOT_PERMITTED_TO_CARDHOLDER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CARDHOLDER_NOT_ENROLLED_IN_SERVICE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TRANSACTION_TIMED_OUT_AT_THE_ACS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LOW_CONFIDENCE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MEDIUM_CONFIDENCE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HIGH_CONFIDENCE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VERY_HIGH_CONFIDENCE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EXCEEDS_ACS_MAXIMUM_CHALLENGES",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NON_PAYMENT_NOT_SUPPORTED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "THREE_RI_NOT_SUPPORTED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ACS_TECHNICAL_ISSUE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DECOUPLED_REQUIRED_BY_ACS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DECOUPLED_MAX_EXPIRY_EXCEEDED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DECOUPLED_AUTHENTICATION_INSUFFICIENT_TIME",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AUTHENTICATION_ATTEMPTED_BUT_NOT_PERFORMED_BY_CARDHOLDER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ACS_TIMED_OUT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "INVALID_ACS_RESPONSE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ACS_SYSTEM_ERROR_RESPONSE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ERROR_GENERATING_CAVV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PROTOCOL_VERSION_NOT_SUPPORTED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TRANSACTION_EXCLUDED_FROM_ATTEMPTS_PROCESSING",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "REQUESTED_PROGRAM_NOT_SUPPORTED",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": true
        },
        "type_:ThreeDSecureSkippedReasonCodeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "ThreeDSecureSkippedReasonCodeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "GATEWAY_UNAVAILABLE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DISABLED_BY_MERCHANT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NOT_SUPPORTED_BY_ISSUER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FAILED_TO_NEGOTIATE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNKNOWN_ACS_RESPONSE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "3DS_SERVER_ERROR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ACQUIRER_NOT_CONFIGURED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ACQUIRER_NOT_PARTICIPATING",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:TokenTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "TokenTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "MULTI_USE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SINGLE_USE",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:DeclineTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "DeclineTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "SOFT_DECLINE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HARD_DECLINE",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:TransactionDeclineReasonV2Enum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "TransactionDeclineReasonV2Enum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "ERROR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "INVALID_CARD_NUMBER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EXPIRED_CARD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LOST_OR_STOLEN_CARD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SUSPECTED_FRAUD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNKNOWN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DECLINED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "REFER_TO_CARD_ISSUER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DO_NOT_HONOR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "INSUFFICIENT_FUNDS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "WITHDRAWAL_LIMIT_EXCEEDED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ISSUER_TEMPORARILY_UNAVAILABLE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AUTHENTICATION_REQUIRED",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:TransactionOverviewApiSchema": {
          "description": null,
          "name": "TransactionOverviewApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Date & time of the transaction (UTC)",
                "htmlDescription": "<p>Date &amp; time of the transaction (UTC)</p>\n",
                "key": "date",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Transaction amount in minor units",
                "htmlDescription": "<p>Transaction amount in minor units</p>\n",
                "key": "amount",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "\nThe 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
                "htmlDescription": "<p>The 3-letter currency code in <a href=\"https://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 format</a>.\ne.g. use <code>USD</code> for US dollars.</p>\n",
                "key": "currencyCode",
                "valueType": {
                  "type": "id",
                  "value": "type_:Currency"
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": null,
                "key": "transactionType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:TransactionTypeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Processor's unique identifier for the transaction",
                "htmlDescription": "<p>Processor&#39;s unique identifier for the transaction</p>\n",
                "key": "processorTransactionId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "An identifier of a processor.",
                "htmlDescription": "<p>An identifier of a processor.</p>\n",
                "key": "processorName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Processor's main account identifier.\n\n* Adyen: Account code\n* Braintree: Merchant ID\n* Stripe: Account ID\"\n",
                "htmlDescription": "<p>Processor&#39;s main account identifier.</p>\n<ul>\n<li>Adyen: Account code</li>\n<li>Braintree: Merchant ID</li>\n<li>Stripe: Account ID&quot;</li>\n</ul>\n",
                "key": "processorMerchantId",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "Transaction status, please refer to the [Transaction Status Codes](#section/API-Usage-Guide/Payment-Status) table for more information",
                "htmlDescription": "<p>Transaction status, please refer to the <a href=\"#section/API-Usage-Guide/Payment-Status\">Transaction Status Codes</a> table for more information</p>\n",
                "key": "processorStatus",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentStatus"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "If the transaction has a declined or failed status.\n\nOnly if the status is `DECLINED` or `FAILED`, otherwise `null`.\n",
                "htmlDescription": "<p>If the transaction has a declined or failed status.</p>\n<p>Only if the status is <code>DECLINED</code> or <code>FAILED</code>, otherwise <code>null</code>.</p>\n",
                "key": "processorStatusReason",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:StatusReasonApiSchema"
                  }
                },
                "descriptionContainsMarkdown": true
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentStatus": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "PaymentStatus",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "PENDING",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FAILED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AUTHORIZED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SETTLING",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PARTIALLY_SETTLED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SETTLED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DECLINED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CANCELLED",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentStatusTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "PaymentStatusTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "APPLICATION_ERROR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GATEWAY_REJECTED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ISSUER_DECLINED",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:TransactionTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "TransactionTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "SALE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "REFUND",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:OptionalAddressApiSchema": {
          "description": null,
          "name": "OptionalAddressApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "firstName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "lastName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Street name, Company name or PO Box",
                "htmlDescription": "<p>Street name, Company name or PO Box</p>\n",
                "key": "addressLine1",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Apartment, Unit or Building number",
                "htmlDescription": "<p>Apartment, Unit or Building number</p>\n",
                "key": "addressLine2",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Name of the city, district, town or village",
                "htmlDescription": "<p>Name of the city, district, town or village</p>\n",
                "key": "city",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "State, County or Province",
                "htmlDescription": "<p>State, County or Province</p>\n",
                "key": "state",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Two letter ISO country code",
                "htmlDescription": "<p>Two letter ISO country code</p>\n",
                "key": "countryCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CountryCodeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Postal or ZIP code",
                "htmlDescription": "<p>Postal or ZIP code</p>\n",
                "key": "postalCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:AddressApiSchema": {
          "description": null,
          "name": "AddressApiSchema",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "firstName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "lastName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Street name, Company name or PO Box",
                "htmlDescription": "<p>Street name, Company name or PO Box</p>\n",
                "key": "addressLine1",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Apartment, Unit or Building number",
                "htmlDescription": "<p>Apartment, Unit or Building number</p>\n",
                "key": "addressLine2",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Name of the city, district, town or village",
                "htmlDescription": "<p>Name of the city, district, town or village</p>\n",
                "key": "city",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "State, County or Province",
                "htmlDescription": "<p>State, County or Province</p>\n",
                "key": "state",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Two letter ISO country code",
                "htmlDescription": "<p>Two letter ISO country code</p>\n",
                "key": "countryCode",
                "valueType": {
                  "type": "id",
                  "value": "type_:CountryCodeEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Postal or ZIP code",
                "htmlDescription": "<p>Postal or ZIP code</p>\n",
                "key": "postalCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:MerchantPaymentMethodTokenApiResponse": {
          "description": null,
          "name": "MerchantPaymentMethodTokenApiResponse",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Creation date & time of the object (UTC)",
                "htmlDescription": "<p>Creation date &amp; time of the object (UTC)</p>\n",
                "key": "createdAt",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Date & time when this object was revoked. (UTC)",
                "htmlDescription": "<p>Date &amp; time when this object was revoked. (UTC)</p>\n",
                "key": "deletedAt",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Whether or not this object has been revoked.",
                "htmlDescription": "<p>Whether or not this object has been revoked.</p>\n",
                "key": "deleted",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The vaulted payment method token.",
                "htmlDescription": "<p>The vaulted payment method token.</p>\n",
                "key": "token",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "* `MULTI_USE` a vaulted token that can be re-used with subsequent payments",
                "htmlDescription": "<ul>\n<li><code>MULTI_USE</code> a vaulted token that can be re-used with subsequent payments</li>\n</ul>\n",
                "key": "tokenType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "Unique analytics identifier corresponding to a payment method",
                "htmlDescription": "<p>Unique analytics identifier corresponding to a payment method</p>\n",
                "key": "analyticsId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Payment method type associated with a token.",
                "htmlDescription": "<p>Payment method type associated with a token.</p>\n",
                "key": "paymentMethodType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentMethodTypeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Payment method data",
                "htmlDescription": "<p>Payment method data</p>\n",
                "key": "paymentMethodData",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The ID representing the customer",
                "htmlDescription": "<p>The ID representing the customer</p>\n",
                "key": "customerId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "A friendly description given by the user",
                "htmlDescription": "<p>A friendly description given by the user</p>\n",
                "key": "description",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Whether or not this payment method is the default",
                "htmlDescription": "<p>Whether or not this payment method is the default</p>\n",
                "key": "default",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData": {
          "description": "Payment method data",
          "htmlDescription": "<p>Payment method data</p>\n",
          "name": "MerchantPaymentMethodTokenApiResponsePaymentMethodData",
          "shape": {
            "type": "undiscriminatedUnion",
            "variants": [
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:PaymentCardTokenApiSchema"
                },
                "displayName": "Payment Card Token Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:PayPalBillingAgreementApiSchema"
                },
                "displayName": "Pay Pal Billing Agreement Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:GoCardlessMandateApiSchema"
                },
                "displayName": "Go Cardless Mandate Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:KlarnaCustomerTokenApiSchema"
                },
                "displayName": "Klarna Customer Token Api Schema",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "type": {
                  "type": "id",
                  "value": "type_:ApayaCustomerTokenApiSchema"
                },
                "displayName": "Apaya Customer Token Api Schema",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:VerifiedMerchantPaymentMethodTokenApiResponse": {
          "description": null,
          "name": "VerifiedMerchantPaymentMethodTokenApiResponse",
          "shape": {
            "type": "object",
            "extends": ["type_:MerchantPaymentMethodTokenApiResponse"],
            "properties": [
              {
                "description": "Whether or not this payment method was verified",
                "htmlDescription": "<p>Whether or not this payment method was verified</p>\n",
                "key": "isVerified",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:VerifiedMerchantPaymentMethodTokenListApiResponse": {
          "description": null,
          "name": "VerifiedMerchantPaymentMethodTokenListApiResponse",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "data",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_:VerifiedMerchantPaymentMethodTokenApiResponse"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:LoyaltyApiBalanceResponse": {
          "description": null,
          "name": "LoyaltyApiBalanceResponse",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The unique identifier for the customer on the loyalty provider.",
                "htmlDescription": "<p>The unique identifier for the customer on the loyalty provider.</p>\n",
                "key": "id",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "ID of the Primer connection configuration.",
                "htmlDescription": "<p>ID of the Primer connection configuration.</p>\n",
                "key": "connectionId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Name of the loyalty provider.",
                "htmlDescription": "<p>Name of the loyalty provider.</p>\n",
                "key": "connectionName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The loyalty customer's points balance.",
                "htmlDescription": "<p>The loyalty customer&#39;s points balance.</p>\n",
                "key": "balance",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:LoyaltyTransactionTypeEnum": {
          "description": "An enumeration.",
          "htmlDescription": "<p>An enumeration.</p>\n",
          "name": "LoyaltyTransactionTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "REDEMPTION",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "REFUND",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:LoyaltyApiTransactionResponse": {
          "description": null,
          "name": "LoyaltyApiTransactionResponse",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Creation date & time of the transaction (UTC)",
                "htmlDescription": "<p>Creation date &amp; time of the transaction (UTC)</p>\n",
                "key": "date",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Unique Primer identifier for the loyalty transaction.",
                "htmlDescription": "<p>Unique Primer identifier for the loyalty transaction.</p>\n",
                "key": "id",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "ID of the Primer connection configuration.",
                "htmlDescription": "<p>ID of the Primer connection configuration.</p>\n",
                "key": "connectionId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The unique identifier for the customer on the loyalty provider.",
                "htmlDescription": "<p>The unique identifier for the customer on the loyalty provider.</p>\n",
                "key": "customerId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Unique identifier for the order.",
                "htmlDescription": "<p>Unique identifier for the order.</p>\n",
                "key": "orderId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "ID of the transaction on the loyalty provider's side.",
                "htmlDescription": "<p>ID of the transaction on the loyalty provider&#39;s side.</p>\n",
                "key": "connectionTransactionId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Name of the loyalty provider.",
                "htmlDescription": "<p>Name of the loyalty provider.</p>\n",
                "key": "connectionName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The type of the transaction.",
                "htmlDescription": "<p>The type of the transaction.</p>\n",
                "key": "type",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:LoyaltyTransactionTypeEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The value of the transaction.",
                "htmlDescription": "<p>The value of the transaction.</p>\n",
                "key": "value",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:LoyaltyApiTransactionsListResponse": {
          "description": null,
          "name": "LoyaltyApiTransactionsListResponse",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The list of loyalty transactions",
                "htmlDescription": "<p>The list of loyalty transactions</p>\n",
                "key": "items",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_:LoyaltyApiTransactionResponse"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The total number of available results",
                "htmlDescription": "<p>The total number of available results</p>\n",
                "key": "total",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The limit of the paged result",
                "htmlDescription": "<p>The limit of the paged result</p>\n",
                "key": "limit",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The offset of the paged result",
                "htmlDescription": "<p>The offset of the paged result</p>\n",
                "key": "offset",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentsInsightsBinData": {
          "description": null,
          "name": "PaymentsInsightsBinData",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "network",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:CardNetworkEnum"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "2-letter country code in [ISO 3166-1](\nhttps://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) alpha format,\ne.g. FR for France and GB for the United Kingdom.\n    ",
                "htmlDescription": "<p>2-letter country code in <a href=\"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements\">ISO 3166-1</a> alpha format,\ne.g. FR for France and GB for the United Kingdom.\n    </p>\n",
                "key": "issuerCountryCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentsInsightsBinDataIssuerCountryCode"
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "The name of the issuing bank.",
                "htmlDescription": "<p>The name of the issuing bank.</p>\n",
                "key": "issuerName",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The usage type of the payment card e.g. commercial, consumer.",
                "htmlDescription": "<p>The usage type of the payment card e.g. commercial, consumer.</p>\n",
                "key": "productUsageType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The funding type of the payment card e.g. credit, debit, prepaid.",
                "htmlDescription": "<p>The funding type of the payment card e.g. credit, debit, prepaid.</p>\n",
                "key": "accountFundingType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentsInsightsBinDataIssuerCountryCode": {
          "description": "2-letter country code in [ISO 3166-1](\nhttps://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) alpha format,\ne.g. FR for France and GB for the United Kingdom.\n    ",
          "htmlDescription": "<p>2-letter country code in <a href=\"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements\">ISO 3166-1</a> alpha format,\ne.g. FR for France and GB for the United Kingdom.\n    </p>\n",
          "name": "PaymentsInsightsBinDataIssuerCountryCode",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "AW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BJ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DJ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ES",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ET",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FJ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ID",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ML",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ME",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "YT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "OM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "QA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SJ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ST",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TJ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "US",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "WF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "WS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "YE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZW",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": true
        },
        "type_:PaymentsInsightsOrder": {
          "description": null,
          "name": "PaymentsInsightsOrder",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The order reference for the payment.",
                "htmlDescription": "<p>The order reference for the payment.</p>\n",
                "key": "id",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "2-letter country code in [ISO 3166-1](\nhttps://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) alpha format,\ne.g. FR for France and GB for the United Kingdom.",
                "htmlDescription": "<p>2-letter country code in <a href=\"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements\">ISO 3166-1</a> alpha format,\ne.g. FR for France and GB for the United Kingdom.</p>\n",
                "key": "countryCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentsInsightsOrderCountryCode"
                  }
                },
                "descriptionContainsMarkdown": true
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentsInsightsOrderCountryCode": {
          "description": "2-letter country code in [ISO 3166-1](\nhttps://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) alpha format,\ne.g. FR for France and GB for the United Kingdom.",
          "htmlDescription": "<p>2-letter country code in <a href=\"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements\">ISO 3166-1</a> alpha format,\ne.g. FR for France and GB for the United Kingdom.</p>\n",
          "name": "PaymentsInsightsOrderCountryCode",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "AW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BJ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DJ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ES",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ET",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FJ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ID",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "JP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ML",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ME",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MQ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "YT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "OM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KP",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "QA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SJ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SB",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ST",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TJ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TK",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TW",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "US",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UZ",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VC",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VG",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "WF",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "WS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "YE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZM",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ZW",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": true
        },
        "type_:PaymentsInsightsPaymentMethod": {
          "description": null,
          "name": "PaymentsInsightsPaymentMethod",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "Payment method type used for payment authorization.",
                "htmlDescription": "<p>Payment method type used for payment authorization.</p>\n",
                "key": "paymentMethodType",
                "valueType": {
                  "type": "id",
                  "value": "type_:PaymentMethodTypeEnum"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "data",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentsInsightsPaymentMethodData"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "threeDSecureAuthentication",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentsInsightsThreeDSecureAuthentication"
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentsInsightsPaymentMethodData": {
          "description": null,
          "name": "PaymentsInsightsPaymentMethodData",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "binData",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentsInsightsBinData"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The first six digits of the card used for payment,\nalso known as the Bank Identification Number (BIN).",
                "htmlDescription": "<p>The first six digits of the card used for payment,\nalso known as the Bank Identification Number (BIN).</p>\n",
                "key": "first6Digits",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentsInsightsProcessor": {
          "description": null,
          "name": "PaymentsInsightsProcessor",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "The payment processor used for this payment.\nPrimer supports the above processors through the Payments API,\nhowever any value can be passed here.",
                "htmlDescription": "<p>The payment processor used for this payment.\nPrimer supports the above processors through the Payments API,\nhowever any value can be passed here.</p>\n",
                "key": "name",
                "valueType": {
                  "type": "id",
                  "value": "type_:PaymentsInsightsProcessorName"
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The merchant ID registered at the payment processor used for this payment.",
                "htmlDescription": "<p>The merchant ID registered at the payment processor used for this payment.</p>\n",
                "key": "merchantId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentsInsightsProcessorName": {
          "description": "The payment processor used for this payment.\nPrimer supports the above processors through the Payments API,\nhowever any value can be passed here.",
          "htmlDescription": "<p>The payment processor used for this payment.\nPrimer supports the above processors through the Payments API,\nhowever any value can be passed here.</p>\n",
          "name": "PaymentsInsightsProcessorName",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "APAYA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ADYEN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AFTERPAY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AIRWALLEX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ALIANT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ALIPAY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ATOME",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BANKED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BARCLAYCARD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BRAINTREE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BUCKAROO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "BRIDGE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CHAI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CHECKOUT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CLEARPAY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "COINBASE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CYBERSOURCE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DLOCAL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EBANX",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ECOSPEND",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FINTECTURE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GLOBAL_PAYMENTS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HOOLAH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "INGENICO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "INGENICO-CONNECT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "KLARNA",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LAYBUY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MPGS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MOLLIE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NEONOMICS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NEXI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NUVEI",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "OMISE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "OPENNODE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PAY_NL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PAY-NL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PAYGENT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PAYPAL",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PRIMER_TEST",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "STRIPE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TRILO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TRUELAYER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VOLT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "VYNE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "WORLDPAY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EMERCHANTPAY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XFERS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RAPYD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AUTHNET",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NETS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "NETAXEPT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PRIMER_PROCESSOR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "REACH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TRUST_PAYMENTS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TWOC2P",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "MERCADO_PAGO",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PAYU",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "XENDIT",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FISERV",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "PACYPAY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SHOPEEPAY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TRIPLE_A",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "IPAY88",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "APPLE_PAY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GOOGLE_PAY",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "RISKIFIED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "TAXJAR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "STITCH",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SIGNIFYD",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentsInsightsStatusReason": {
          "description": null,
          "name": "PaymentsInsightsStatusReason",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "type",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentsInsightsStatusReasonType"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Declines of type `SOFT_DECLINE` may have been retried.\nWhereas declines of type `HARD_DECLINE` should have not been retried.\n",
                "htmlDescription": "<p>Declines of type <code>SOFT_DECLINE</code> may have been retried.\nWhereas declines of type <code>HARD_DECLINE</code> should have not been retried.</p>\n",
                "key": "declineType",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentsInsightsStatusReasonDeclineType"
                  }
                },
                "descriptionContainsMarkdown": true
              },
              {
                "description": "Payment status code with the error code when\nthe issuer declined the payment.",
                "htmlDescription": "<p>Payment status code with the error code when\nthe issuer declined the payment.</p>\n",
                "key": "code",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentsInsightsStatusReasonCode"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Message detail returned by the processor when\nthe error on appeared on their part.",
                "htmlDescription": "<p>Message detail returned by the processor when\nthe error on appeared on their part.</p>\n",
                "key": "message",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentsInsightsStatusReasonType": {
          "description": null,
          "name": "PaymentsInsightsStatusReasonType",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "APPLICATION_ERROR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "GATEWAY_REJECTED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ISSUER_DECLINED",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentsInsightsStatusReasonDeclineType": {
          "description": "Declines of type `SOFT_DECLINE` may have been retried.\nWhereas declines of type `HARD_DECLINE` should have not been retried.\n",
          "htmlDescription": "<p>Declines of type <code>SOFT_DECLINE</code> may have been retried.\nWhereas declines of type <code>HARD_DECLINE</code> should have not been retried.</p>\n",
          "name": "PaymentsInsightsStatusReasonDeclineType",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "SOFT_DECLINE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "HARD_DECLINE",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": true
        },
        "type_:PaymentsInsightsStatusReasonCode": {
          "description": "Payment status code with the error code when\nthe issuer declined the payment.",
          "htmlDescription": "<p>Payment status code with the error code when\nthe issuer declined the payment.</p>\n",
          "name": "PaymentsInsightsStatusReasonCode",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "ERROR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "INVALID_CARD_NUMBER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "EXPIRED_CARD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "LOST_OR_STOLEN_CARD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SUSPECTED_FRAUD",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "UNKNOWN",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DECLINED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "REFER_TO_CARD_ISSUER",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "DO_NOT_HONOR",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "INSUFFICIENT_FUNDS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "WITHDRAWAL_LIMIT_EXCEEDED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "ISSUER_TEMPORARILY_UNAVAILABLE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AUTHENTICATION_REQUIRED",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentsInsightsThreeDSecureAuthentication": {
          "description": null,
          "name": "PaymentsInsightsThreeDSecureAuthentication",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "transStatus",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "key": "transStatusReason",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The response returned during the 3D Secure authentication call.",
                "htmlDescription": "<p>The response returned during the 3D Secure authentication call.</p>\n",
                "key": "responseCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_:PaymentsInsightsThreeDSecureAuthenticationResponseCode"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The challenge status of the 3D Secure authentication.\nSet to false for frictionless 3D Secure authentication.",
                "htmlDescription": "<p>The challenge status of the 3D Secure authentication.\nSet to false for frictionless 3D Secure authentication.</p>\n",
                "key": "challengeIssued",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The protocol version used during 3D Secure authentication.",
                "htmlDescription": "<p>The protocol version used during 3D Secure authentication.</p>\n",
                "key": "protocolVersion",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The reason code for unsuccessful 3D Secure authentication attempts.",
                "htmlDescription": "<p>The reason code for unsuccessful 3D Secure authentication attempts.</p>\n",
                "key": "reasonCode",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "The human readable reason text for unsuccessful\n3D Secure authentication attempts.",
                "htmlDescription": "<p>The human readable reason text for unsuccessful\n3D Secure authentication attempts.</p>\n",
                "key": "reasonText",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "E-commerce Indicator (ECI)",
                "htmlDescription": "<p>E-commerce Indicator (ECI)</p>\n",
                "key": "eci",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:PaymentsInsightsThreeDSecureAuthenticationResponseCode": {
          "description": "The response returned during the 3D Secure authentication call.",
          "htmlDescription": "<p>The response returned during the 3D Secure authentication call.</p>\n",
          "name": "PaymentsInsightsThreeDSecureAuthenticationResponseCode",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "NOT_PERFORMED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "SKIPPED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AUTH_SUCCESS",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "AUTH_FAILED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "CHALLENGE",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "METHOD",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ErrorObject": {
          "description": "An object containing information about the error that occurred.",
          "htmlDescription": "<p>An object containing information about the error that occurred.</p>\n",
          "name": "ErrorObject",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": "An error ID",
                "htmlDescription": "<p>An error ID</p>\n",
                "key": "errorId",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "A human readable description of the error",
                "htmlDescription": "<p>A human readable description of the error</p>\n",
                "key": "description",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "An ID that you can quote when contacting the support team (support@primer.io).",
                "htmlDescription": "<p>An ID that you can quote when contacting the support team (<a href=\"mailto:support@primer.io\">support@primer.io</a>).</p>\n",
                "key": "diagnosticsId",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              },
              {
                "description": "Returned in case of a badly formed request",
                "htmlDescription": "<p>Returned in case of a badly formed request</p>\n",
                "key": "validationErrors",
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "list",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:BadRequestErrorResponse": {
          "description": null,
          "name": "BadRequestErrorResponse",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "error",
                "valueType": {
                  "type": "id",
                  "value": "type_:ErrorObject"
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:NotFoundErrorResponse": {
          "description": null,
          "name": "NotFoundErrorResponse",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "error",
                "valueType": {
                  "type": "id",
                  "value": "type_:ErrorObject"
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:ConflictErrorResponse": {
          "description": null,
          "name": "ConflictErrorResponse",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "error",
                "valueType": {
                  "type": "id",
                  "value": "type_:ErrorObject"
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:UnprocessableEntityErrorResponse": {
          "description": null,
          "name": "UnprocessableEntityErrorResponse",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "description": null,
                "key": "error",
                "valueType": {
                  "type": "id",
                  "value": "type_:ErrorObject"
                },
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        },
        "type_:AuthorizationTypeEnum": {
          "description": "Type of authorization for the payment.",
          "htmlDescription": "<p>Type of authorization for the payment.</p>\n",
          "name": "AuthorizationTypeEnum",
          "shape": {
            "type": "enum",
            "values": [
              {
                "description": null,
                "value": "ESTIMATED",
                "descriptionContainsMarkdown": false
              },
              {
                "description": null,
                "value": "FINAL",
                "descriptionContainsMarkdown": false
              }
            ]
          },
          "descriptionContainsMarkdown": false
        }
      },
      "subpackages": {
        "subpackage_clientSessionApi": {
          "subpackageId": "subpackage_clientSessionApi",
          "name": "Client Session API",
          "endpoints": [
            {
              "environments": [
                {
                  "id": "Production",
                  "baseUrl": "https://api.sandbox.primer.io"
                },
                {
                  "id": "Sandbox",
                  "baseUrl": "https://api.primer.io"
                }
              ],
              "availability": null,
              "defaultEnvironment": "Production",
              "urlSlug": "retrieve-a-client-session",
              "method": "GET",
              "id": "retrieveClientSideToken",
              "name": "Retrieve a client session",
              "path": {
                "pathParameters": [],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/client-session"
                  }
                ]
              },
              "queryParameters": [
                {
                  "key": "clientToken",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Client token corresponding to the client session to retrieve"
                }
              ],
              "headers": [],
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:ClientSessionApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:UnprocessableEntityErrorResponse"
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:UnprocessableEntityErrorResponse"
                    }
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/client-session",
                  "pathParameters": {},
                  "queryParameters": {
                    "clientToken": "string"
                  },
                  "headers": {},
                  "responseStatusCode": 200,
                  "responseBody": {
                    "customerId": "string",
                    "orderId": "string",
                    "currencyCode": "AED",
                    "amount": 0,
                    "metadata": {
                      "string": {}
                    },
                    "customer": {
                      "emailAddress": "string",
                      "mobileNumber": "string",
                      "firstName": "string",
                      "lastName": "string",
                      "billingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "shippingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "taxId": "string",
                      "nationalDocumentId": "string"
                    },
                    "order": {
                      "lineItems": [
                        {
                          "itemId": "string",
                          "name": "string",
                          "description": "string",
                          "amount": 0,
                          "quantity": 0,
                          "discountAmount": 0,
                          "taxAmount": 0,
                          "taxCode": "string",
                          "productType": "PHYSICAL",
                          "productData": {
                            "sku": "string",
                            "brand": "string",
                            "color": "string",
                            "globalTradeItemNumber": "string",
                            "manufacturerPartNumber": "string",
                            "weight": 1,
                            "weightUnit": "string"
                          }
                        }
                      ],
                      "countryCode": "AW",
                      "retailerCountryCode": "AW",
                      "fees": [
                        {
                          "amount": 0,
                          "type": "string",
                          "description": "string"
                        }
                      ],
                      "shipping": {
                        "amount": 0
                      }
                    },
                    "paymentMethod": {
                      "vaultOnSuccess": true,
                      "vaultOn3DS": true,
                      "descriptor": "string",
                      "paymentType": "FIRST_PAYMENT",
                      "options": {
                        "<PAYMENT_METHOD_TYPE>": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "PAYMENT_CARD": {
                          "networks": {
                            "AMEX": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "DANKORT": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "DINERS_CLUB": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "DISCOVER": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "ENROUTE": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "ELO": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "HIPER": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "INTERAC": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "JCB": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "MAESTRO": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "MASTERCARD": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "MIR": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "PRIVATE_LABEL": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "UNIONPAY": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "VISA": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "OTHER": {
                              "surcharge": {
                                "amount": 0
                              }
                            }
                          }
                        }
                      },
                      "authorizationType": "ESTIMATED"
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/client-session",
                  "pathParameters": {},
                  "queryParameters": {
                    "clientToken": "string"
                  },
                  "headers": {},
                  "responseStatusCode": 400,
                  "responseBody": {
                    "error": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/client-session",
                  "pathParameters": {},
                  "queryParameters": {
                    "clientToken": "string"
                  },
                  "headers": {},
                  "responseStatusCode": 422,
                  "responseBody": {
                    "error": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "This API call retrieves all the details associated with the client session corresponding to the client token that is provided in the request. The fields with empty values are excluded from the response.\n",
              "htmlDescription": "<p>This API call retrieves all the details associated with the client session corresponding to the client token that is provided in the request. The fields with empty values are excluded from the response.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": false
            },
            {
              "environments": [
                {
                  "id": "Production",
                  "baseUrl": "https://api.sandbox.primer.io"
                },
                {
                  "id": "Sandbox",
                  "baseUrl": "https://api.primer.io"
                }
              ],
              "availability": null,
              "defaultEnvironment": "Production",
              "urlSlug": "create-a-client-session",
              "method": "POST",
              "id": "createClientSideToken",
              "name": "Create a client session",
              "path": {
                "pathParameters": [],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/client-session"
                  }
                ]
              },
              "queryParameters": [],
              "headers": [],
              "request": {
                "contentType": "application/json",
                "type": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "orderId",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "Your reference for the payment."
                    },
                    {
                      "key": "currencyCode",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "id",
                          "value": "type_:Currency"
                        }
                      },
                      "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n"
                    },
                    {
                      "key": "amount",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "integer"
                          }
                        }
                      },
                      "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts."
                    },
                    {
                      "key": "order",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "id",
                          "value": "type_:OrderDetailsApiSchema"
                        }
                      },
                      "description": "More information associated with the order."
                    },
                    {
                      "key": "customerId",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "A unique identifier for your customer.\nCreate a client session token with a `customerId` to enable the client-side SDK to retrieve and manage your customer's saved payment methods. A client session token also enables saving payment methods against this customer id."
                    },
                    {
                      "key": "customer",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "id",
                          "value": "type_:CheckoutCustomerDetailsApiSchema"
                        }
                      },
                      "description": "More information associated with the customer."
                    },
                    {
                      "key": "metadata",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "map",
                          "keyType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          },
                          "valueType": {
                            "type": "unknown"
                          }
                        }
                      },
                      "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`\n"
                    },
                    {
                      "key": "paymentMethod",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "id",
                          "value": "type_:CheckoutPaymentMethodOptionsApiSchema"
                        }
                      },
                      "description": "Enable certain options associated with the payment method."
                    }
                  ]
                },
                "descriptionContainsMarkdown": false
              },
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:ClientSessionWithTokenApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:UnprocessableEntityErrorResponse"
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:UnprocessableEntityErrorResponse"
                    }
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/client-session",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {},
                  "responseStatusCode": 200,
                  "responseBody": {
                    "clientToken": "string",
                    "clientTokenExpirationDate": "2023-01-01T00:00:00Z",
                    "orderId": "string",
                    "currencyCode": "string",
                    "amount": 0,
                    "order": {
                      "lineItems": [
                        {
                          "itemId": "string",
                          "name": "string",
                          "description": "string",
                          "amount": 0,
                          "quantity": 0,
                          "discountAmount": 0,
                          "taxAmount": 0,
                          "taxCode": "string",
                          "productType": "PHYSICAL",
                          "productData": {
                            "sku": "string",
                            "brand": "string",
                            "color": "string",
                            "globalTradeItemNumber": "string",
                            "manufacturerPartNumber": "string",
                            "weight": 1,
                            "weightUnit": "string"
                          }
                        }
                      ],
                      "countryCode": "AW",
                      "retailerCountryCode": "AW",
                      "fees": [
                        {
                          "amount": 0,
                          "type": "string",
                          "description": "string"
                        }
                      ],
                      "shipping": {
                        "amount": 0
                      }
                    },
                    "customerId": "string",
                    "customer": {
                      "emailAddress": "string",
                      "mobileNumber": "string",
                      "firstName": "string",
                      "lastName": "string",
                      "billingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "shippingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "taxId": "string",
                      "nationalDocumentId": "string"
                    },
                    "metadata": {
                      "string": {}
                    },
                    "paymentMethod": {
                      "vaultOnSuccess": true,
                      "vaultOn3DS": true,
                      "descriptor": "string",
                      "paymentType": "FIRST_PAYMENT",
                      "options": {
                        "<PAYMENT_METHOD_TYPE>": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "PAYMENT_CARD": {
                          "networks": {
                            "AMEX": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "DANKORT": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "DINERS_CLUB": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "DISCOVER": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "ENROUTE": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "ELO": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "HIPER": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "INTERAC": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "JCB": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "MAESTRO": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "MASTERCARD": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "MIR": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "PRIVATE_LABEL": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "UNIONPAY": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "VISA": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "OTHER": {
                              "surcharge": {
                                "amount": 0
                              }
                            }
                          }
                        }
                      },
                      "authorizationType": "ESTIMATED"
                    },
                    "warnings": {
                      "type": "string",
                      "code": "string",
                      "message": "string"
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/client-session",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {},
                  "responseStatusCode": 400,
                  "responseBody": {
                    "error": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/client-session",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {},
                  "responseStatusCode": 422,
                  "responseBody": {
                    "error": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "Creating a client session generates a client token: a temporary key used to initialize [Universal Checkout](https://primer.io/docs/accept-payments/setup-universal-checkout/installation/web) and authenticate it against your account.\n\nUniversal Checkout automatically retrieves all the settings from the client session and the Dashboard to configure the payment methods and the checkout experience.\n\n<b>Note:</b>\nWhen creating a Client Session, please make sure to provide `currencyCode`, `orderId`, and at least one of `amount` or `lineItems`. \nIf any of these are not yet available, you can provide them w\nhen making the payment request.\n\n<code>POST /client-session</code> does not have required fields as all fields are not always known when a client session is created. \nUse <code>PATCH /client-session</code> to update the parameters throughout the checkout session.\n\nClient tokens expire after 24 hours.\n",
              "htmlDescription": "<p>Creating a client session generates a client token: a temporary key used to initialize <a href=\"https://primer.io/docs/accept-payments/setup-universal-checkout/installation/web\">Universal Checkout</a> and authenticate it against your account.</p>\n<p>Universal Checkout automatically retrieves all the settings from the client session and the Dashboard to configure the payment methods and the checkout experience.</p>\n<p><b>Note:</b>\nWhen creating a Client Session, please make sure to provide <code>currencyCode</code>, <code>orderId</code>, and at least one of <code>amount</code> or <code>lineItems</code>. \nIf any of these are not yet available, you can provide them w\nhen making the payment request.</p>\n<p><code>POST /client-session</code> does not have required fields as all fields are not always known when a client session is created. \nUse <code>PATCH /client-session</code> to update the parameters throughout the checkout session.</p>\n<p>Client tokens expire after 24 hours.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            },
            {
              "environments": [
                {
                  "id": "Production",
                  "baseUrl": "https://api.sandbox.primer.io"
                },
                {
                  "id": "Sandbox",
                  "baseUrl": "https://api.primer.io"
                }
              ],
              "availability": null,
              "defaultEnvironment": "Production",
              "urlSlug": "update-client-session",
              "method": "PATCH",
              "id": "updateClientSideToken",
              "name": "Update client session",
              "path": {
                "pathParameters": [],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/client-session"
                  }
                ]
              },
              "queryParameters": [],
              "headers": [],
              "request": {
                "contentType": "application/json",
                "type": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "clientToken",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "Client token for use in the Primer-JS SDK obtained via `POST` /client-session API call."
                    },
                    {
                      "key": "customerId",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "A unique identifier for your customer."
                    },
                    {
                      "key": "orderId",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "Your reference for the order."
                    },
                    {
                      "key": "currencyCode",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "\nThe 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n"
                    },
                    {
                      "key": "amount",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "integer"
                          }
                        }
                      },
                      "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts."
                    },
                    {
                      "key": "metadata",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "map",
                          "keyType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          },
                          "valueType": {
                            "type": "unknown"
                          }
                        }
                      },
                      "description": "Additional data to be used throughout the payment lifecycle.\n\nProvide the entire object to update it. Anything provided previously will be overwritten.\n"
                    },
                    {
                      "key": "customer",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "id",
                          "value": "type_:CheckoutCustomerDetailsApiSchema"
                        }
                      },
                      "description": "More information associated with the customer.\n\nEach of the fields in this object must be updated in its entirety, i.e. provide the entire object to update it. Anything provided previously will be overwritten.\n"
                    },
                    {
                      "key": "order",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "id",
                          "value": "type_:OrderDetailsApiSchema"
                        }
                      },
                      "description": "More information associated with the order.\n\nEach of the fields in this object must be updated in its entirety, i.e. provide the entire object to update it. Anything provided previously will be overwritten.\n"
                    },
                    {
                      "key": "paymentMethod",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "id",
                          "value": "type_:CheckoutPaymentMethodOptionsApiSchema"
                        }
                      },
                      "description": "Enable certain options associated with the payment method. Provide the entire object to update it. Anything provided previously will be overwritten."
                    }
                  ]
                },
                "descriptionContainsMarkdown": false
              },
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:ClientSessionApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:UnprocessableEntityErrorResponse"
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:UnprocessableEntityErrorResponse"
                    }
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/client-session",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {},
                  "responseStatusCode": 200,
                  "responseBody": {
                    "customerId": "string",
                    "orderId": "string",
                    "currencyCode": "AED",
                    "amount": 0,
                    "metadata": {
                      "string": {}
                    },
                    "customer": {
                      "emailAddress": "string",
                      "mobileNumber": "string",
                      "firstName": "string",
                      "lastName": "string",
                      "billingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "shippingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "taxId": "string",
                      "nationalDocumentId": "string"
                    },
                    "order": {
                      "lineItems": [
                        {
                          "itemId": "string",
                          "name": "string",
                          "description": "string",
                          "amount": 0,
                          "quantity": 0,
                          "discountAmount": 0,
                          "taxAmount": 0,
                          "taxCode": "string",
                          "productType": "PHYSICAL",
                          "productData": {
                            "sku": "string",
                            "brand": "string",
                            "color": "string",
                            "globalTradeItemNumber": "string",
                            "manufacturerPartNumber": "string",
                            "weight": 1,
                            "weightUnit": "string"
                          }
                        }
                      ],
                      "countryCode": "AW",
                      "retailerCountryCode": "AW",
                      "fees": [
                        {
                          "amount": 0,
                          "type": "string",
                          "description": "string"
                        }
                      ],
                      "shipping": {
                        "amount": 0
                      }
                    },
                    "paymentMethod": {
                      "vaultOnSuccess": true,
                      "vaultOn3DS": true,
                      "descriptor": "string",
                      "paymentType": "FIRST_PAYMENT",
                      "options": {
                        "<PAYMENT_METHOD_TYPE>": {
                          "surcharge": {
                            "amount": 0
                          }
                        },
                        "PAYMENT_CARD": {
                          "networks": {
                            "AMEX": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "DANKORT": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "DINERS_CLUB": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "DISCOVER": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "ENROUTE": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "ELO": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "HIPER": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "INTERAC": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "JCB": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "MAESTRO": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "MASTERCARD": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "MIR": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "PRIVATE_LABEL": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "UNIONPAY": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "VISA": {
                              "surcharge": {
                                "amount": 0
                              }
                            },
                            "OTHER": {
                              "surcharge": {
                                "amount": 0
                              }
                            }
                          }
                        }
                      },
                      "authorizationType": "ESTIMATED"
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/client-session",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {},
                  "responseStatusCode": 400,
                  "responseBody": {
                    "error": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/client-session",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {},
                  "responseStatusCode": 422,
                  "responseBody": {
                    "error": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "You can update a clients session created earlier with the `PATCH /client-session` [API call](#operation/create_client_side_token_client_session_post).\n\nThe only required field for the request is `clientToken`. Other supported request fields are same as for the `POST /client-session` [API call](#operation/create_client_side_token_client_session_post).\n\nYou need to specify only the fields you wish to update. However, if the items that are to be updated are of type `array`, then you need to provide the complete array along with modified items.\n\nIf you wish to update nested fields on the client session, such as the customer `emailAddress` field, you can pass the `customer` object with only one field, `emailAddress`, to update.\n\nIf you simply wish to clear the value of the field, pass `null` as your input.\n\nYou can update `paymentMethod.vaultOnSuccess` field but updating of the `paymentMethod.options` field through `PATCH /client-session` is not supported.\n\nThe response will contain all the fields of the client session including the ones that were changed.\n",
              "htmlDescription": "<p>You can update a clients session created earlier with the <code>PATCH /client-session</code> <a href=\"#operation/create_client_side_token_client_session_post\">API call</a>.</p>\n<p>The only required field for the request is <code>clientToken</code>. Other supported request fields are same as for the <code>POST /client-session</code> <a href=\"#operation/create_client_side_token_client_session_post\">API call</a>.</p>\n<p>You need to specify only the fields you wish to update. However, if the items that are to be updated are of type <code>array</code>, then you need to provide the complete array along with modified items.</p>\n<p>If you wish to update nested fields on the client session, such as the customer <code>emailAddress</code> field, you can pass the <code>customer</code> object with only one field, <code>emailAddress</code>, to update.</p>\n<p>If you simply wish to clear the value of the field, pass <code>null</code> as your input.</p>\n<p>You can update <code>paymentMethod.vaultOnSuccess</code> field but updating of the <code>paymentMethod.options</code> field through <code>PATCH /client-session</code> is not supported.</p>\n<p>The response will contain all the fields of the client session including the ones that were changed.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            }
          ],
          "types": [],
          "subpackages": [],
          "pointsTo": null,
          "urlSlug": "client-session-api",
          "description": null,
          "webhooks": [],
          "descriptionContainsMarkdown": false
        },
        "subpackage_paymentsApi": {
          "subpackageId": "subpackage_paymentsApi",
          "name": "Payments API",
          "endpoints": [
            {
              "environments": [
                {
                  "id": "Production",
                  "baseUrl": "https://api.sandbox.primer.io"
                },
                {
                  "id": "Sandbox",
                  "baseUrl": "https://api.primer.io"
                }
              ],
              "availability": null,
              "defaultEnvironment": "Production",
              "urlSlug": "search-list-payments",
              "method": "GET",
              "id": "listPayments",
              "name": "Search & list payments",
              "path": {
                "pathParameters": [],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payments"
                  }
                ]
              },
              "queryParameters": [
                {
                  "key": "status",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentStatus"
                    }
                  },
                  "description": "Filter payments by their status."
                },
                {
                  "key": "payment_method_type",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentMethodTypeEnum"
                    }
                  },
                  "description": "Filter payments by their payment method type."
                },
                {
                  "key": "processor",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Filter payments by their payment processor."
                },
                {
                  "key": "currency_code",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Filter payments by their payment currency.\ne.g. use `USD` for US dollars.\n"
                },
                {
                  "key": "from_date",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  },
                  "description": "Return only payments from this date (inclusive)."
                },
                {
                  "key": "to_date",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  },
                  "description": "Return only payments up to this date (inclusive)."
                },
                {
                  "key": "order_id",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Return payments related to this order ID."
                },
                {
                  "key": "min_amount",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  },
                  "description": "Return payments of this amount minimum (inclusive)."
                },
                {
                  "key": "max_amount",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  },
                  "description": "Return payments of this amount max (inclusive)."
                },
                {
                  "key": "customer_id",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "ID of the customer that has made the payment."
                },
                {
                  "key": "merchant_id",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "ID of the merchant involved in the payment."
                },
                {
                  "key": "customer_email_address",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Email of the customer that has made the payment."
                },
                {
                  "key": "last_4_digits",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Last 4 digits of the card used for the payment."
                },
                {
                  "key": "paypal_email",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Paypal email address associated with the payment."
                },
                {
                  "key": "klarna_email",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Klarna email address associated with the payment."
                },
                {
                  "key": "limit",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  },
                  "description": "Maximum number of payments to return per page."
                },
                {
                  "key": "cursor",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "If results are paginated, pass the `nextCursor` to access next page."
                }
              ],
              "headers": [],
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:PaymentListApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:UnprocessableEntityErrorResponse"
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:UnprocessableEntityErrorResponse"
                    }
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments",
                  "pathParameters": {},
                  "queryParameters": {
                    "status": "PENDING",
                    "payment_method_type": "PAYMENT_CARD"
                  },
                  "headers": {},
                  "responseStatusCode": 200,
                  "responseBody": {
                    "data": [
                      {
                        "id": "string",
                        "date": "2023-01-01T00:00:00Z",
                        "status": "PENDING",
                        "orderId": "string",
                        "processor": {
                          "name": "string",
                          "processorMerchantId": "string"
                        },
                        "currencyCode": "string",
                        "amount": 0,
                        "metadata": {
                          "string": {}
                        }
                      }
                    ],
                    "nextCursor": "string",
                    "prevCursor": "string"
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments",
                  "pathParameters": {},
                  "queryParameters": {
                    "status": "PENDING",
                    "payment_method_type": "PAYMENT_CARD"
                  },
                  "headers": {},
                  "responseStatusCode": 422,
                  "responseBody": {
                    "error": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "<p/>\n\nRetrieve a list of your payments.\n\nResults are paginated, they will only return up to 100 payments maximum.\nTo access the next page of result, set the `cursor` query parameter to the value of `nextCursor` in\nyour current result payload. Use `prevCursor` to go back to the previous page.\n\n**Note:** this endpoint returns a list of\nsummarized payments. Not all payments attributes are present. You can use\nthe query parameters to filter payments. You can separate multiple query parameters with the `&` symbol.\nQuery parameters with types of the form \"Array of strings\" (such as the status parameter) can be specified as a comma-separated list.\n\n**Note:** payments will be available within a minute from being created.\n",
              "htmlDescription": "<p/>\n\n<p>Retrieve a list of your payments.</p>\n<p>Results are paginated, they will only return up to 100 payments maximum.\nTo access the next page of result, set the <code>cursor</code> query parameter to the value of <code>nextCursor</code> in\nyour current result payload. Use <code>prevCursor</code> to go back to the previous page.</p>\n<p><strong>Note:</strong> this endpoint returns a list of\nsummarized payments. Not all payments attributes are present. You can use\nthe query parameters to filter payments. You can separate multiple query parameters with the <code>&amp;</code> symbol.\nQuery parameters with types of the form &quot;Array of strings&quot; (such as the status parameter) can be specified as a comma-separated list.</p>\n<p><strong>Note:</strong> payments will be available within a minute from being created.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            },
            {
              "environments": [
                {
                  "id": "Production",
                  "baseUrl": "https://api.sandbox.primer.io"
                },
                {
                  "id": "Sandbox",
                  "baseUrl": "https://api.primer.io"
                }
              ],
              "availability": null,
              "defaultEnvironment": "Production",
              "urlSlug": "create-a-payment",
              "method": "POST",
              "id": "createPayment",
              "name": "Create a payment",
              "path": {
                "pathParameters": [],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payments"
                  }
                ]
              },
              "queryParameters": [],
              "headers": [
                {
                  "key": "X-Idempotency-Key",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Optional key to make the request idempotent. Learn more in the [Idempotency Key guide](../docs#idempotency-key)."
                }
              ],
              "request": {
                "contentType": "application/json",
                "type": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "orderId",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "Your reference for the payment."
                    },
                    {
                      "key": "currencyCode",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "id",
                          "value": "type_:Currency"
                        }
                      },
                      "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n"
                    },
                    {
                      "key": "amount",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "integer"
                          }
                        }
                      },
                      "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`. The minimum amount is 0."
                    },
                    {
                      "key": "order",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "id",
                          "value": "type_:OrderDetailsApiSchema"
                        }
                      },
                      "description": "More information associated with the order."
                    },
                    {
                      "key": "paymentMethodToken",
                      "valueType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "description": "The payment method token used to authorize the payment.\n"
                    },
                    {
                      "key": "customerId",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "A unique identifier for your customer.\nThis attribute is required if `paymentMethod.vaultOnSuccess` is set to `True`."
                    },
                    {
                      "key": "customer",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "id",
                          "value": "type_:CustomerDetailsApiSchema"
                        }
                      },
                      "description": "More information associated with the customer.\n"
                    },
                    {
                      "key": "metadata",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "map",
                          "keyType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          },
                          "valueType": {
                            "type": "unknown"
                          }
                        }
                      },
                      "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`\n"
                    },
                    {
                      "key": "paymentMethod",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "id",
                          "value": "type_:PaymentRequestPaymentMethodOptionsApiSchema"
                        }
                      },
                      "description": "Enable certain options associated with the payment method."
                    }
                  ]
                },
                "descriptionContainsMarkdown": false
              },
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:PaymentApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:UnprocessableEntityErrorResponse"
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:UnprocessableEntityErrorResponse"
                    }
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {
                    "paymentMethodToken": "string"
                  },
                  "responseStatusCode": 200,
                  "responseBody": {
                    "id": "string",
                    "date": "2023-01-01T00:00:00Z",
                    "status": "PENDING",
                    "orderId": "string",
                    "currencyCode": "AED",
                    "amount": 0,
                    "order": {
                      "lineItems": [
                        {
                          "itemId": "string",
                          "name": "string",
                          "description": "string",
                          "amount": 0,
                          "quantity": 0,
                          "discountAmount": 0,
                          "taxAmount": 0,
                          "taxCode": "string",
                          "productType": "PHYSICAL",
                          "productData": {
                            "sku": "string",
                            "brand": "string",
                            "color": "string",
                            "globalTradeItemNumber": "string",
                            "manufacturerPartNumber": "string",
                            "weight": 1,
                            "weightUnit": "string"
                          }
                        }
                      ],
                      "countryCode": "AW",
                      "retailerCountryCode": "AW",
                      "fees": [
                        {
                          "amount": 0,
                          "type": "string",
                          "description": "string"
                        }
                      ],
                      "shipping": {
                        "amount": 0
                      }
                    },
                    "customerId": "string",
                    "customer": {
                      "emailAddress": "string",
                      "mobileNumber": "string",
                      "firstName": "string",
                      "lastName": "string",
                      "billingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "shippingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "taxId": "string",
                      "nationalDocumentId": "string"
                    },
                    "metadata": {
                      "string": {}
                    },
                    "paymentMethod": {
                      "descriptor": "string",
                      "paymentType": "FIRST_PAYMENT",
                      "paymentMethodToken": "string",
                      "isVaulted": true,
                      "analyticsId": "string",
                      "paymentMethodType": "PAYMENT_CARD",
                      "paymentMethodData": {
                        "first6Digits": "string",
                        "last4Digits": "string",
                        "expirationMonth": "string",
                        "expirationYear": "string",
                        "cardholderName": "string",
                        "network": "string",
                        "isNetworkTokenized": true,
                        "binData": {
                          "network": "AMEX",
                          "issuerCountryCode": "AW",
                          "issuerName": "string",
                          "issuerCurrencyCode": "AED",
                          "regionalRestriction": "DOMESTIC_USE_ONLY",
                          "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                          "accountFundingType": "CREDIT",
                          "prepaidReloadableIndicator": "RELOADABLE",
                          "productUsageType": "CONSUMER",
                          "productCode": "string",
                          "productName": "string"
                        }
                      },
                      "threeDSecureAuthentication": {
                        "responseCode": "NOT_PERFORMED",
                        "reasonCode": "GATEWAY_UNAVAILABLE",
                        "reasonText": "string",
                        "protocolVersion": "string",
                        "challengeIssued": true
                      },
                      "authorizationType": "ESTIMATED"
                    },
                    "processor": {
                      "name": "string",
                      "processorMerchantId": "string",
                      "amountCaptured": 0,
                      "amountRefunded": 0
                    },
                    "requiredAction": {
                      "name": "3DS_AUTHENTICATION",
                      "description": "string",
                      "clientToken": "string"
                    },
                    "statusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR",
                      "message": "string"
                    },
                    "transactions": [
                      {
                        "date": "string",
                        "amount": 0,
                        "currencyCode": "AED",
                        "transactionType": "SALE",
                        "processorTransactionId": "string",
                        "processorName": "string",
                        "processorMerchantId": "string",
                        "processorStatus": "PENDING",
                        "processorStatusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR",
                          "message": "string"
                        }
                      }
                    ],
                    "riskData": {
                      "fraudCheck": {
                        "source": "string",
                        "preAuthorizationResult": "ACCEPT",
                        "postAuthorizationResult": "ACCEPT"
                      }
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {
                    "paymentMethodToken": "string"
                  },
                  "responseStatusCode": 400,
                  "responseBody": {
                    "error": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {
                    "paymentMethodToken": "string"
                  },
                  "responseStatusCode": 422,
                  "responseBody": {
                    "error": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "<p/>\n\nCreate and authorize a payment for a given customer order. You\nshould provide a payment method token here to avoid PCI implications.\n\nIf only a payment method token is passed, the values passed with the Client Session is used to determine the amount, currency etc.\nNote: `amount`, `currencyCode` and `orderId` are required during payment creation. Make sure to pass these fields when creating a client session, or if not yet available, when creating a payment.\n\nAll fields provided on this request will take preference over any field on the `order` associated with the client session. E.g. if you pass `amount` on this request, it will override the `amount` on the `order` associated with the Client Session.\nParameters that are not on this request will be fetched from previously created Client Session and merged. E.g. if you specify `customer.billingAddress` in Client Session and then pass `customer.emailAddress` data with this request, it will automatically merge the `customer` fields and use both `billingAddress` and `emailAddress` for later calculations.\n",
              "htmlDescription": "<p/>\n\n<p>Create and authorize a payment for a given customer order. You\nshould provide a payment method token here to avoid PCI implications.</p>\n<p>If only a payment method token is passed, the values passed with the Client Session is used to determine the amount, currency etc.\nNote: <code>amount</code>, <code>currencyCode</code> and <code>orderId</code> are required during payment creation. Make sure to pass these fields when creating a client session, or if not yet available, when creating a payment.</p>\n<p>All fields provided on this request will take preference over any field on the <code>order</code> associated with the client session. E.g. if you pass <code>amount</code> on this request, it will override the <code>amount</code> on the <code>order</code> associated with the Client Session.\nParameters that are not on this request will be fetched from previously created Client Session and merged. E.g. if you specify <code>customer.billingAddress</code> in Client Session and then pass <code>customer.emailAddress</code> data with this request, it will automatically merge the <code>customer</code> fields and use both <code>billingAddress</code> and <code>emailAddress</code> for later calculations.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            },
            {
              "environments": [
                {
                  "id": "Production",
                  "baseUrl": "https://api.sandbox.primer.io"
                },
                {
                  "id": "Sandbox",
                  "baseUrl": "https://api.primer.io"
                }
              ],
              "availability": null,
              "defaultEnvironment": "Production",
              "urlSlug": "authorize-a-payment",
              "method": "POST",
              "id": "authorizePayment",
              "name": "Authorize a payment",
              "path": {
                "pathParameters": [
                  {
                    "key": "id",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "description": "ID of the payment to authorize."
                  }
                ],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payments/"
                  },
                  {
                    "type": "pathParameter",
                    "value": "id"
                  },
                  {
                    "type": "literal",
                    "value": "/authorize"
                  }
                ]
              },
              "queryParameters": [],
              "headers": [
                {
                  "key": "X-Idempotency-Key",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Optional key to make the request idempotent. Learn more in the [Idempotency Key guide](../docs#idempotency-key)."
                }
              ],
              "request": {
                "contentType": "application/json",
                "type": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "processor",
                      "valueType": {
                        "type": "id",
                        "value": "type_:PaymentAuthorizationRequestProcessorApiSchema"
                      },
                      "description": "The payment processor to use for this payment."
                    }
                  ]
                },
                "descriptionContainsMarkdown": false
              },
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:PaymentApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:NotFoundErrorResponse"
                  },
                  "statusCode": 404,
                  "description": null
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:ConflictErrorResponse"
                  },
                  "statusCode": 409,
                  "description": null
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:UnprocessableEntityErrorResponse"
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:NotFoundErrorResponse"
                    }
                  },
                  "statusCode": 404,
                  "description": null
                },
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:ConflictErrorResponse"
                    }
                  },
                  "statusCode": 409,
                  "description": null
                },
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:UnprocessableEntityErrorResponse"
                    }
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/authorize",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {
                    "processor": {
                      "processorMerchantId": "string"
                    }
                  },
                  "responseStatusCode": 200,
                  "responseBody": {
                    "id": "string",
                    "date": "2023-01-01T00:00:00Z",
                    "status": "PENDING",
                    "orderId": "string",
                    "currencyCode": "AED",
                    "amount": 0,
                    "order": {
                      "lineItems": [
                        {
                          "itemId": "string",
                          "name": "string",
                          "description": "string",
                          "amount": 0,
                          "quantity": 0,
                          "discountAmount": 0,
                          "taxAmount": 0,
                          "taxCode": "string",
                          "productType": "PHYSICAL",
                          "productData": {
                            "sku": "string",
                            "brand": "string",
                            "color": "string",
                            "globalTradeItemNumber": "string",
                            "manufacturerPartNumber": "string",
                            "weight": 1,
                            "weightUnit": "string"
                          }
                        }
                      ],
                      "countryCode": "AW",
                      "retailerCountryCode": "AW",
                      "fees": [
                        {
                          "amount": 0,
                          "type": "string",
                          "description": "string"
                        }
                      ],
                      "shipping": {
                        "amount": 0
                      }
                    },
                    "customerId": "string",
                    "customer": {
                      "emailAddress": "string",
                      "mobileNumber": "string",
                      "firstName": "string",
                      "lastName": "string",
                      "billingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "shippingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "taxId": "string",
                      "nationalDocumentId": "string"
                    },
                    "metadata": {
                      "string": {}
                    },
                    "paymentMethod": {
                      "descriptor": "string",
                      "paymentType": "FIRST_PAYMENT",
                      "paymentMethodToken": "string",
                      "isVaulted": true,
                      "analyticsId": "string",
                      "paymentMethodType": "PAYMENT_CARD",
                      "paymentMethodData": {
                        "first6Digits": "string",
                        "last4Digits": "string",
                        "expirationMonth": "string",
                        "expirationYear": "string",
                        "cardholderName": "string",
                        "network": "string",
                        "isNetworkTokenized": true,
                        "binData": {
                          "network": "AMEX",
                          "issuerCountryCode": "AW",
                          "issuerName": "string",
                          "issuerCurrencyCode": "AED",
                          "regionalRestriction": "DOMESTIC_USE_ONLY",
                          "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                          "accountFundingType": "CREDIT",
                          "prepaidReloadableIndicator": "RELOADABLE",
                          "productUsageType": "CONSUMER",
                          "productCode": "string",
                          "productName": "string"
                        }
                      },
                      "threeDSecureAuthentication": {
                        "responseCode": "NOT_PERFORMED",
                        "reasonCode": "GATEWAY_UNAVAILABLE",
                        "reasonText": "string",
                        "protocolVersion": "string",
                        "challengeIssued": true
                      },
                      "authorizationType": "ESTIMATED"
                    },
                    "processor": {
                      "name": "string",
                      "processorMerchantId": "string",
                      "amountCaptured": 0,
                      "amountRefunded": 0
                    },
                    "requiredAction": {
                      "name": "3DS_AUTHENTICATION",
                      "description": "string",
                      "clientToken": "string"
                    },
                    "statusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR",
                      "message": "string"
                    },
                    "transactions": [
                      {
                        "date": "string",
                        "amount": 0,
                        "currencyCode": "AED",
                        "transactionType": "SALE",
                        "processorTransactionId": "string",
                        "processorName": "string",
                        "processorMerchantId": "string",
                        "processorStatus": "PENDING",
                        "processorStatusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR",
                          "message": "string"
                        }
                      }
                    ],
                    "riskData": {
                      "fraudCheck": {
                        "source": "string",
                        "preAuthorizationResult": "ACCEPT",
                        "postAuthorizationResult": "ACCEPT"
                      }
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/authorize",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {
                    "processor": {
                      "processorMerchantId": "string"
                    }
                  },
                  "responseStatusCode": 400,
                  "responseBody": {
                    "error": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/authorize",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {
                    "processor": {
                      "processorMerchantId": "string"
                    }
                  },
                  "responseStatusCode": 404,
                  "responseBody": {
                    "error": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/authorize",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {
                    "processor": {
                      "processorMerchantId": "string"
                    }
                  },
                  "responseStatusCode": 409,
                  "responseBody": {
                    "error": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/authorize",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {
                    "processor": {
                      "processorMerchantId": "string"
                    }
                  },
                  "responseStatusCode": 422,
                  "responseBody": {
                    "error": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "<p/>\n\nManually authorize a payment using a provided processor. This is useful if you want to authorize a payment without a workflow action.\nThe processor merchant ID must be provided which can be found on the [Integrations page](https://dashboard.primer.io/integrations).\nThe processor name is optional but it must be provided if your account has multiple processors configured which share the same merchant IDs.\n",
              "htmlDescription": "<p/>\n\n<p>Manually authorize a payment using a provided processor. This is useful if you want to authorize a payment without a workflow action.\nThe processor merchant ID must be provided which can be found on the <a href=\"https://dashboard.primer.io/integrations\">Integrations page</a>.\nThe processor name is optional but it must be provided if your account has multiple processors configured which share the same merchant IDs.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            },
            {
              "environments": [
                {
                  "id": "Production",
                  "baseUrl": "https://api.sandbox.primer.io"
                },
                {
                  "id": "Sandbox",
                  "baseUrl": "https://api.primer.io"
                }
              ],
              "availability": null,
              "defaultEnvironment": "Production",
              "urlSlug": "capture-a-payment",
              "method": "POST",
              "id": "capturePayment",
              "name": "Capture a payment",
              "path": {
                "pathParameters": [
                  {
                    "key": "id",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "description": "ID of the payment to capture."
                  }
                ],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payments/"
                  },
                  {
                    "type": "pathParameter",
                    "value": "id"
                  },
                  {
                    "type": "literal",
                    "value": "/capture"
                  }
                ]
              },
              "queryParameters": [],
              "headers": [
                {
                  "key": "X-Idempotency-Key",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Optional key to make the request idempotent. Learn more in the [Idempotency Key guide](../docs#idempotency-key)."
                }
              ],
              "request": {
                "contentType": "application/json",
                "type": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "amount",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "integer"
                          }
                        }
                      },
                      "description": "The amount you would like to capture, in minor units. The currency used on authorization is assumed.\n\nIf no amount is specified it defaults to the full amount."
                    },
                    {
                      "key": "final",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "boolean"
                          }
                        }
                      },
                      "description": "Indicates whether the capture request is the final capture request.\n\nAfter a final capture, no subsequent captures are allowed."
                    },
                    {
                      "key": "order",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "id",
                          "value": "type_:PaymentCaptureApiRequestOrder"
                        }
                      },
                      "description": "More information associated with the order."
                    }
                  ]
                },
                "descriptionContainsMarkdown": false
              },
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:PaymentApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:UnprocessableEntityErrorResponse"
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:UnprocessableEntityErrorResponse"
                    }
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/capture",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {},
                  "responseStatusCode": 200,
                  "responseBody": {
                    "id": "string",
                    "date": "2023-01-01T00:00:00Z",
                    "status": "PENDING",
                    "orderId": "string",
                    "currencyCode": "AED",
                    "amount": 0,
                    "order": {
                      "lineItems": [
                        {
                          "itemId": "string",
                          "name": "string",
                          "description": "string",
                          "amount": 0,
                          "quantity": 0,
                          "discountAmount": 0,
                          "taxAmount": 0,
                          "taxCode": "string",
                          "productType": "PHYSICAL",
                          "productData": {
                            "sku": "string",
                            "brand": "string",
                            "color": "string",
                            "globalTradeItemNumber": "string",
                            "manufacturerPartNumber": "string",
                            "weight": 1,
                            "weightUnit": "string"
                          }
                        }
                      ],
                      "countryCode": "AW",
                      "retailerCountryCode": "AW",
                      "fees": [
                        {
                          "amount": 0,
                          "type": "string",
                          "description": "string"
                        }
                      ],
                      "shipping": {
                        "amount": 0
                      }
                    },
                    "customerId": "string",
                    "customer": {
                      "emailAddress": "string",
                      "mobileNumber": "string",
                      "firstName": "string",
                      "lastName": "string",
                      "billingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "shippingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "taxId": "string",
                      "nationalDocumentId": "string"
                    },
                    "metadata": {
                      "string": {}
                    },
                    "paymentMethod": {
                      "descriptor": "string",
                      "paymentType": "FIRST_PAYMENT",
                      "paymentMethodToken": "string",
                      "isVaulted": true,
                      "analyticsId": "string",
                      "paymentMethodType": "PAYMENT_CARD",
                      "paymentMethodData": {
                        "first6Digits": "string",
                        "last4Digits": "string",
                        "expirationMonth": "string",
                        "expirationYear": "string",
                        "cardholderName": "string",
                        "network": "string",
                        "isNetworkTokenized": true,
                        "binData": {
                          "network": "AMEX",
                          "issuerCountryCode": "AW",
                          "issuerName": "string",
                          "issuerCurrencyCode": "AED",
                          "regionalRestriction": "DOMESTIC_USE_ONLY",
                          "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                          "accountFundingType": "CREDIT",
                          "prepaidReloadableIndicator": "RELOADABLE",
                          "productUsageType": "CONSUMER",
                          "productCode": "string",
                          "productName": "string"
                        }
                      },
                      "threeDSecureAuthentication": {
                        "responseCode": "NOT_PERFORMED",
                        "reasonCode": "GATEWAY_UNAVAILABLE",
                        "reasonText": "string",
                        "protocolVersion": "string",
                        "challengeIssued": true
                      },
                      "authorizationType": "ESTIMATED"
                    },
                    "processor": {
                      "name": "string",
                      "processorMerchantId": "string",
                      "amountCaptured": 0,
                      "amountRefunded": 0
                    },
                    "requiredAction": {
                      "name": "3DS_AUTHENTICATION",
                      "description": "string",
                      "clientToken": "string"
                    },
                    "statusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR",
                      "message": "string"
                    },
                    "transactions": [
                      {
                        "date": "string",
                        "amount": 0,
                        "currencyCode": "AED",
                        "transactionType": "SALE",
                        "processorTransactionId": "string",
                        "processorName": "string",
                        "processorMerchantId": "string",
                        "processorStatus": "PENDING",
                        "processorStatusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR",
                          "message": "string"
                        }
                      }
                    ],
                    "riskData": {
                      "fraudCheck": {
                        "source": "string",
                        "preAuthorizationResult": "ACCEPT",
                        "postAuthorizationResult": "ACCEPT"
                      }
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/capture",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {},
                  "responseStatusCode": 400,
                  "responseBody": {
                    "error": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/capture",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {},
                  "responseStatusCode": 422,
                  "responseBody": {
                    "error": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "<p/>\n\nIf you have successfully authorized a payment, you can now\nfully capture, or partially capture funds from the authorized payment, depending\non whether your selected payment processor supports it. The payment will\nbe updated to `SETTLED` or `SETTLING`, depending on the payment method type.\n\nThe payload sent in this capture request is completely optional. If you don't\nsend a payload with the capture request, the full amount that was authorized\nwill be sent for capture. Below are the available payload attributes, which\ngive you more granular control when capturing funds, if you require it.\n",
              "htmlDescription": "<p/>\n\n<p>If you have successfully authorized a payment, you can now\nfully capture, or partially capture funds from the authorized payment, depending\non whether your selected payment processor supports it. The payment will\nbe updated to <code>SETTLED</code> or <code>SETTLING</code>, depending on the payment method type.</p>\n<p>The payload sent in this capture request is completely optional. If you don&#39;t\nsend a payload with the capture request, the full amount that was authorized\nwill be sent for capture. Below are the available payload attributes, which\ngive you more granular control when capturing funds, if you require it.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            },
            {
              "environments": [
                {
                  "id": "Production",
                  "baseUrl": "https://api.sandbox.primer.io"
                },
                {
                  "id": "Sandbox",
                  "baseUrl": "https://api.primer.io"
                }
              ],
              "availability": null,
              "defaultEnvironment": "Production",
              "urlSlug": "cancel-a-payment",
              "method": "POST",
              "id": "cancelPayment",
              "name": "Cancel a payment",
              "path": {
                "pathParameters": [
                  {
                    "key": "id",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "description": "ID of payment to cancel."
                  }
                ],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payments/"
                  },
                  {
                    "type": "pathParameter",
                    "value": "id"
                  },
                  {
                    "type": "literal",
                    "value": "/cancel"
                  }
                ]
              },
              "queryParameters": [],
              "headers": [
                {
                  "key": "X-Idempotency-Key",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Optional key to make the request idempotent. Learn more in the [Idempotency Key guide](../docs#idempotency-key)."
                }
              ],
              "request": {
                "contentType": "application/json",
                "type": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "reason",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "You can optionally specify a reason for the cancellation. This is for your own records."
                    }
                  ]
                },
                "descriptionContainsMarkdown": false
              },
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:PaymentApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/cancel",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {},
                  "responseStatusCode": 200,
                  "responseBody": {
                    "id": "string",
                    "date": "2023-01-01T00:00:00Z",
                    "status": "PENDING",
                    "orderId": "string",
                    "currencyCode": "AED",
                    "amount": 0,
                    "order": {
                      "lineItems": [
                        {
                          "itemId": "string",
                          "name": "string",
                          "description": "string",
                          "amount": 0,
                          "quantity": 0,
                          "discountAmount": 0,
                          "taxAmount": 0,
                          "taxCode": "string",
                          "productType": "PHYSICAL",
                          "productData": {
                            "sku": "string",
                            "brand": "string",
                            "color": "string",
                            "globalTradeItemNumber": "string",
                            "manufacturerPartNumber": "string",
                            "weight": 1,
                            "weightUnit": "string"
                          }
                        }
                      ],
                      "countryCode": "AW",
                      "retailerCountryCode": "AW",
                      "fees": [
                        {
                          "amount": 0,
                          "type": "string",
                          "description": "string"
                        }
                      ],
                      "shipping": {
                        "amount": 0
                      }
                    },
                    "customerId": "string",
                    "customer": {
                      "emailAddress": "string",
                      "mobileNumber": "string",
                      "firstName": "string",
                      "lastName": "string",
                      "billingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "shippingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "taxId": "string",
                      "nationalDocumentId": "string"
                    },
                    "metadata": {
                      "string": {}
                    },
                    "paymentMethod": {
                      "descriptor": "string",
                      "paymentType": "FIRST_PAYMENT",
                      "paymentMethodToken": "string",
                      "isVaulted": true,
                      "analyticsId": "string",
                      "paymentMethodType": "PAYMENT_CARD",
                      "paymentMethodData": {
                        "first6Digits": "string",
                        "last4Digits": "string",
                        "expirationMonth": "string",
                        "expirationYear": "string",
                        "cardholderName": "string",
                        "network": "string",
                        "isNetworkTokenized": true,
                        "binData": {
                          "network": "AMEX",
                          "issuerCountryCode": "AW",
                          "issuerName": "string",
                          "issuerCurrencyCode": "AED",
                          "regionalRestriction": "DOMESTIC_USE_ONLY",
                          "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                          "accountFundingType": "CREDIT",
                          "prepaidReloadableIndicator": "RELOADABLE",
                          "productUsageType": "CONSUMER",
                          "productCode": "string",
                          "productName": "string"
                        }
                      },
                      "threeDSecureAuthentication": {
                        "responseCode": "NOT_PERFORMED",
                        "reasonCode": "GATEWAY_UNAVAILABLE",
                        "reasonText": "string",
                        "protocolVersion": "string",
                        "challengeIssued": true
                      },
                      "authorizationType": "ESTIMATED"
                    },
                    "processor": {
                      "name": "string",
                      "processorMerchantId": "string",
                      "amountCaptured": 0,
                      "amountRefunded": 0
                    },
                    "requiredAction": {
                      "name": "3DS_AUTHENTICATION",
                      "description": "string",
                      "clientToken": "string"
                    },
                    "statusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR",
                      "message": "string"
                    },
                    "transactions": [
                      {
                        "date": "string",
                        "amount": 0,
                        "currencyCode": "AED",
                        "transactionType": "SALE",
                        "processorTransactionId": "string",
                        "processorName": "string",
                        "processorMerchantId": "string",
                        "processorStatus": "PENDING",
                        "processorStatusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR",
                          "message": "string"
                        }
                      }
                    ],
                    "riskData": {
                      "fraudCheck": {
                        "source": "string",
                        "preAuthorizationResult": "ACCEPT",
                        "postAuthorizationResult": "ACCEPT"
                      }
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/cancel",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {},
                  "responseStatusCode": 400,
                  "responseBody": {
                    "error": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "<p/>\n\nProvided the payment has not reached `SETTLED` status, Primer will\nsend a \"void\" request to the payment processor, thereby cancelling the payment\nand releasing the hold on customer funds. Upon success, the payment will transition\nto `CANCELLED`. The payload is optional.\n",
              "htmlDescription": "<p/>\n\n<p>Provided the payment has not reached <code>SETTLED</code> status, Primer will\nsend a &quot;void&quot; request to the payment processor, thereby cancelling the payment\nand releasing the hold on customer funds. Upon success, the payment will transition\nto <code>CANCELLED</code>. The payload is optional.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            },
            {
              "environments": [
                {
                  "id": "Production",
                  "baseUrl": "https://api.sandbox.primer.io"
                },
                {
                  "id": "Sandbox",
                  "baseUrl": "https://api.primer.io"
                }
              ],
              "availability": null,
              "defaultEnvironment": "Production",
              "urlSlug": "refund-a-payment",
              "method": "POST",
              "id": "refundPayment",
              "name": "Refund a payment",
              "path": {
                "pathParameters": [
                  {
                    "key": "id",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "description": "ID of payment to refund."
                  }
                ],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payments/"
                  },
                  {
                    "type": "pathParameter",
                    "value": "id"
                  },
                  {
                    "type": "literal",
                    "value": "/refund"
                  }
                ]
              },
              "queryParameters": [],
              "headers": [
                {
                  "key": "X-Idempotency-Key",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Optional key to make the request idempotent. Learn more in the [Idempotency Key guide](../docs#idempotency-key)."
                }
              ],
              "request": {
                "contentType": "application/json",
                "type": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "amount",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "integer"
                          }
                        }
                      },
                      "description": "The amount you would like to refund the customer, in minor units. e.g. for $7, use `700`.\n\nDefaults to remaining non-refunded amount."
                    },
                    {
                      "key": "orderId",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "Optionally you can pass a specific order ID for the refund.\n\nBy default this will be set to the original `orderId` given on payment creation."
                    },
                    {
                      "key": "reason",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "You can optionally specify a reason for the refund. This is for your own records."
                    }
                  ]
                },
                "descriptionContainsMarkdown": false
              },
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:PaymentApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:UnprocessableEntityErrorResponse"
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:UnprocessableEntityErrorResponse"
                    }
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/refund",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {},
                  "responseStatusCode": 200,
                  "responseBody": {
                    "id": "string",
                    "date": "2023-01-01T00:00:00Z",
                    "status": "PENDING",
                    "orderId": "string",
                    "currencyCode": "AED",
                    "amount": 0,
                    "order": {
                      "lineItems": [
                        {
                          "itemId": "string",
                          "name": "string",
                          "description": "string",
                          "amount": 0,
                          "quantity": 0,
                          "discountAmount": 0,
                          "taxAmount": 0,
                          "taxCode": "string",
                          "productType": "PHYSICAL",
                          "productData": {
                            "sku": "string",
                            "brand": "string",
                            "color": "string",
                            "globalTradeItemNumber": "string",
                            "manufacturerPartNumber": "string",
                            "weight": 1,
                            "weightUnit": "string"
                          }
                        }
                      ],
                      "countryCode": "AW",
                      "retailerCountryCode": "AW",
                      "fees": [
                        {
                          "amount": 0,
                          "type": "string",
                          "description": "string"
                        }
                      ],
                      "shipping": {
                        "amount": 0
                      }
                    },
                    "customerId": "string",
                    "customer": {
                      "emailAddress": "string",
                      "mobileNumber": "string",
                      "firstName": "string",
                      "lastName": "string",
                      "billingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "shippingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "taxId": "string",
                      "nationalDocumentId": "string"
                    },
                    "metadata": {
                      "string": {}
                    },
                    "paymentMethod": {
                      "descriptor": "string",
                      "paymentType": "FIRST_PAYMENT",
                      "paymentMethodToken": "string",
                      "isVaulted": true,
                      "analyticsId": "string",
                      "paymentMethodType": "PAYMENT_CARD",
                      "paymentMethodData": {
                        "first6Digits": "string",
                        "last4Digits": "string",
                        "expirationMonth": "string",
                        "expirationYear": "string",
                        "cardholderName": "string",
                        "network": "string",
                        "isNetworkTokenized": true,
                        "binData": {
                          "network": "AMEX",
                          "issuerCountryCode": "AW",
                          "issuerName": "string",
                          "issuerCurrencyCode": "AED",
                          "regionalRestriction": "DOMESTIC_USE_ONLY",
                          "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                          "accountFundingType": "CREDIT",
                          "prepaidReloadableIndicator": "RELOADABLE",
                          "productUsageType": "CONSUMER",
                          "productCode": "string",
                          "productName": "string"
                        }
                      },
                      "threeDSecureAuthentication": {
                        "responseCode": "NOT_PERFORMED",
                        "reasonCode": "GATEWAY_UNAVAILABLE",
                        "reasonText": "string",
                        "protocolVersion": "string",
                        "challengeIssued": true
                      },
                      "authorizationType": "ESTIMATED"
                    },
                    "processor": {
                      "name": "string",
                      "processorMerchantId": "string",
                      "amountCaptured": 0,
                      "amountRefunded": 0
                    },
                    "requiredAction": {
                      "name": "3DS_AUTHENTICATION",
                      "description": "string",
                      "clientToken": "string"
                    },
                    "statusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR",
                      "message": "string"
                    },
                    "transactions": [
                      {
                        "date": "string",
                        "amount": 0,
                        "currencyCode": "AED",
                        "transactionType": "SALE",
                        "processorTransactionId": "string",
                        "processorName": "string",
                        "processorMerchantId": "string",
                        "processorStatus": "PENDING",
                        "processorStatusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR",
                          "message": "string"
                        }
                      }
                    ],
                    "riskData": {
                      "fraudCheck": {
                        "source": "string",
                        "preAuthorizationResult": "ACCEPT",
                        "postAuthorizationResult": "ACCEPT"
                      }
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/refund",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {},
                  "responseStatusCode": 400,
                  "responseBody": {
                    "error": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/refund",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {
                    "X-Idempotency-Key": "string"
                  },
                  "requestBody": {},
                  "responseStatusCode": 422,
                  "responseBody": {
                    "error": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "<p/>\n\nBy default, this request will refund the full amount.\n\nOptionally, pass in a lesser amount for a partial refund.\n",
              "htmlDescription": "<p/>\n\n<p>By default, this request will refund the full amount.</p>\n<p>Optionally, pass in a lesser amount for a partial refund.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            },
            {
              "environments": [
                {
                  "id": "Production",
                  "baseUrl": "https://api.sandbox.primer.io"
                },
                {
                  "id": "Sandbox",
                  "baseUrl": "https://api.primer.io"
                }
              ],
              "availability": null,
              "defaultEnvironment": "Production",
              "urlSlug": "resume-a-payment",
              "method": "POST",
              "id": "resumePayment",
              "name": "Resume a payment",
              "path": {
                "pathParameters": [
                  {
                    "key": "id",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "description": "ID of payment to resume."
                  }
                ],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payments/"
                  },
                  {
                    "type": "pathParameter",
                    "value": "id"
                  },
                  {
                    "type": "literal",
                    "value": "/resume"
                  }
                ]
              },
              "queryParameters": [],
              "headers": [],
              "request": {
                "contentType": "application/json",
                "type": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "resumeToken",
                      "valueType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "description": "A token containing any information that is sent back from the checkout to complete a blocked payment flow."
                    }
                  ]
                },
                "descriptionContainsMarkdown": false
              },
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:PaymentApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/resume",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "resumeToken": "string"
                  },
                  "responseStatusCode": 200,
                  "responseBody": {
                    "id": "string",
                    "date": "2023-01-01T00:00:00Z",
                    "status": "PENDING",
                    "orderId": "string",
                    "currencyCode": "AED",
                    "amount": 0,
                    "order": {
                      "lineItems": [
                        {
                          "itemId": "string",
                          "name": "string",
                          "description": "string",
                          "amount": 0,
                          "quantity": 0,
                          "discountAmount": 0,
                          "taxAmount": 0,
                          "taxCode": "string",
                          "productType": "PHYSICAL",
                          "productData": {
                            "sku": "string",
                            "brand": "string",
                            "color": "string",
                            "globalTradeItemNumber": "string",
                            "manufacturerPartNumber": "string",
                            "weight": 1,
                            "weightUnit": "string"
                          }
                        }
                      ],
                      "countryCode": "AW",
                      "retailerCountryCode": "AW",
                      "fees": [
                        {
                          "amount": 0,
                          "type": "string",
                          "description": "string"
                        }
                      ],
                      "shipping": {
                        "amount": 0
                      }
                    },
                    "customerId": "string",
                    "customer": {
                      "emailAddress": "string",
                      "mobileNumber": "string",
                      "firstName": "string",
                      "lastName": "string",
                      "billingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "shippingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "taxId": "string",
                      "nationalDocumentId": "string"
                    },
                    "metadata": {
                      "string": {}
                    },
                    "paymentMethod": {
                      "descriptor": "string",
                      "paymentType": "FIRST_PAYMENT",
                      "paymentMethodToken": "string",
                      "isVaulted": true,
                      "analyticsId": "string",
                      "paymentMethodType": "PAYMENT_CARD",
                      "paymentMethodData": {
                        "first6Digits": "string",
                        "last4Digits": "string",
                        "expirationMonth": "string",
                        "expirationYear": "string",
                        "cardholderName": "string",
                        "network": "string",
                        "isNetworkTokenized": true,
                        "binData": {
                          "network": "AMEX",
                          "issuerCountryCode": "AW",
                          "issuerName": "string",
                          "issuerCurrencyCode": "AED",
                          "regionalRestriction": "DOMESTIC_USE_ONLY",
                          "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                          "accountFundingType": "CREDIT",
                          "prepaidReloadableIndicator": "RELOADABLE",
                          "productUsageType": "CONSUMER",
                          "productCode": "string",
                          "productName": "string"
                        }
                      },
                      "threeDSecureAuthentication": {
                        "responseCode": "NOT_PERFORMED",
                        "reasonCode": "GATEWAY_UNAVAILABLE",
                        "reasonText": "string",
                        "protocolVersion": "string",
                        "challengeIssued": true
                      },
                      "authorizationType": "ESTIMATED"
                    },
                    "processor": {
                      "name": "string",
                      "processorMerchantId": "string",
                      "amountCaptured": 0,
                      "amountRefunded": 0
                    },
                    "requiredAction": {
                      "name": "3DS_AUTHENTICATION",
                      "description": "string",
                      "clientToken": "string"
                    },
                    "statusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR",
                      "message": "string"
                    },
                    "transactions": [
                      {
                        "date": "string",
                        "amount": 0,
                        "currencyCode": "AED",
                        "transactionType": "SALE",
                        "processorTransactionId": "string",
                        "processorName": "string",
                        "processorMerchantId": "string",
                        "processorStatus": "PENDING",
                        "processorStatusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR",
                          "message": "string"
                        }
                      }
                    ],
                    "riskData": {
                      "fraudCheck": {
                        "source": "string",
                        "preAuthorizationResult": "ACCEPT",
                        "postAuthorizationResult": "ACCEPT"
                      }
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/resume",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "resumeToken": "string"
                  },
                  "responseStatusCode": 400,
                  "responseBody": {
                    "error": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "<p/>\n\nResume a payment's workflow execution from a paused state. This\nis usually required when a Workflow was paused in order to get further information\nfrom the customer, or when waiting for an asynchronous response from a third\nparty connection.\n",
              "htmlDescription": "<p/>\n\n<p>Resume a payment&#39;s workflow execution from a paused state. This\nis usually required when a Workflow was paused in order to get further information\nfrom the customer, or when waiting for an asynchronous response from a third\nparty connection.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            },
            {
              "environments": [
                {
                  "id": "Production",
                  "baseUrl": "https://api.sandbox.primer.io"
                },
                {
                  "id": "Sandbox",
                  "baseUrl": "https://api.primer.io"
                }
              ],
              "availability": null,
              "defaultEnvironment": "Production",
              "urlSlug": "adjust-authorized-amount",
              "method": "POST",
              "id": "adjustAuthorization",
              "name": "Adjust authorized amount",
              "path": {
                "pathParameters": [
                  {
                    "key": "id",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "description": "ID of payment for adjusting authorization."
                  }
                ],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payments/"
                  },
                  {
                    "type": "pathParameter",
                    "value": "id"
                  },
                  {
                    "type": "literal",
                    "value": "/adjust-authorization"
                  }
                ]
              },
              "queryParameters": [],
              "headers": [],
              "request": {
                "contentType": "application/json",
                "type": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "amount",
                      "valueType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      },
                      "description": "The **final** amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts."
                    }
                  ]
                },
                "descriptionContainsMarkdown": false
              },
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:PaymentApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:NotFoundErrorResponse"
                  },
                  "statusCode": 404,
                  "description": null
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:UnprocessableEntityErrorResponse"
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:NotFoundErrorResponse"
                    }
                  },
                  "statusCode": 404,
                  "description": null
                },
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:UnprocessableEntityErrorResponse"
                    }
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/adjust-authorization",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "amount": 0
                  },
                  "responseStatusCode": 200,
                  "responseBody": {
                    "id": "string",
                    "date": "2023-01-01T00:00:00Z",
                    "status": "PENDING",
                    "orderId": "string",
                    "currencyCode": "AED",
                    "amount": 0,
                    "order": {
                      "lineItems": [
                        {
                          "itemId": "string",
                          "name": "string",
                          "description": "string",
                          "amount": 0,
                          "quantity": 0,
                          "discountAmount": 0,
                          "taxAmount": 0,
                          "taxCode": "string",
                          "productType": "PHYSICAL",
                          "productData": {
                            "sku": "string",
                            "brand": "string",
                            "color": "string",
                            "globalTradeItemNumber": "string",
                            "manufacturerPartNumber": "string",
                            "weight": 1,
                            "weightUnit": "string"
                          }
                        }
                      ],
                      "countryCode": "AW",
                      "retailerCountryCode": "AW",
                      "fees": [
                        {
                          "amount": 0,
                          "type": "string",
                          "description": "string"
                        }
                      ],
                      "shipping": {
                        "amount": 0
                      }
                    },
                    "customerId": "string",
                    "customer": {
                      "emailAddress": "string",
                      "mobileNumber": "string",
                      "firstName": "string",
                      "lastName": "string",
                      "billingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "shippingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "taxId": "string",
                      "nationalDocumentId": "string"
                    },
                    "metadata": {
                      "string": {}
                    },
                    "paymentMethod": {
                      "descriptor": "string",
                      "paymentType": "FIRST_PAYMENT",
                      "paymentMethodToken": "string",
                      "isVaulted": true,
                      "analyticsId": "string",
                      "paymentMethodType": "PAYMENT_CARD",
                      "paymentMethodData": {
                        "first6Digits": "string",
                        "last4Digits": "string",
                        "expirationMonth": "string",
                        "expirationYear": "string",
                        "cardholderName": "string",
                        "network": "string",
                        "isNetworkTokenized": true,
                        "binData": {
                          "network": "AMEX",
                          "issuerCountryCode": "AW",
                          "issuerName": "string",
                          "issuerCurrencyCode": "AED",
                          "regionalRestriction": "DOMESTIC_USE_ONLY",
                          "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                          "accountFundingType": "CREDIT",
                          "prepaidReloadableIndicator": "RELOADABLE",
                          "productUsageType": "CONSUMER",
                          "productCode": "string",
                          "productName": "string"
                        }
                      },
                      "threeDSecureAuthentication": {
                        "responseCode": "NOT_PERFORMED",
                        "reasonCode": "GATEWAY_UNAVAILABLE",
                        "reasonText": "string",
                        "protocolVersion": "string",
                        "challengeIssued": true
                      },
                      "authorizationType": "ESTIMATED"
                    },
                    "processor": {
                      "name": "string",
                      "processorMerchantId": "string",
                      "amountCaptured": 0,
                      "amountRefunded": 0
                    },
                    "requiredAction": {
                      "name": "3DS_AUTHENTICATION",
                      "description": "string",
                      "clientToken": "string"
                    },
                    "statusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR",
                      "message": "string"
                    },
                    "transactions": [
                      {
                        "date": "string",
                        "amount": 0,
                        "currencyCode": "AED",
                        "transactionType": "SALE",
                        "processorTransactionId": "string",
                        "processorName": "string",
                        "processorMerchantId": "string",
                        "processorStatus": "PENDING",
                        "processorStatusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR",
                          "message": "string"
                        }
                      }
                    ],
                    "riskData": {
                      "fraudCheck": {
                        "source": "string",
                        "preAuthorizationResult": "ACCEPT",
                        "postAuthorizationResult": "ACCEPT"
                      }
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/adjust-authorization",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "amount": 0
                  },
                  "responseStatusCode": 400,
                  "responseBody": {
                    "error": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/adjust-authorization",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "amount": 0
                  },
                  "responseStatusCode": 404,
                  "responseBody": {
                    "error": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id/adjust-authorization",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "amount": 0
                  },
                  "responseStatusCode": 422,
                  "responseBody": {
                    "error": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "<p/>\n\nAdjust authorized amount. This is only possible if `authorizationType` was set to \n`ESTIMATED` when the payment was created, and the mechanism is supported by the payment method.\n",
              "htmlDescription": "<p/>\n\n<p>Adjust authorized amount. This is only possible if <code>authorizationType</code> was set to \n<code>ESTIMATED</code> when the payment was created, and the mechanism is supported by the payment method.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            },
            {
              "environments": [
                {
                  "id": "Production",
                  "baseUrl": "https://api.sandbox.primer.io"
                },
                {
                  "id": "Sandbox",
                  "baseUrl": "https://api.primer.io"
                }
              ],
              "availability": null,
              "defaultEnvironment": "Production",
              "urlSlug": "get-a-payment",
              "method": "GET",
              "id": "getPaymentById",
              "name": "Get a payment",
              "path": {
                "pathParameters": [
                  {
                    "key": "id",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "description": "ID of payment to retrieve."
                  }
                ],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payments/"
                  },
                  {
                    "type": "pathParameter",
                    "value": "id"
                  },
                  {
                    "type": "literal",
                    "value": ""
                  }
                ]
              },
              "queryParameters": [],
              "headers": [],
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:PaymentApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "responseStatusCode": 200,
                  "responseBody": {
                    "id": "string",
                    "date": "2023-01-01T00:00:00Z",
                    "status": "PENDING",
                    "orderId": "string",
                    "currencyCode": "AED",
                    "amount": 0,
                    "order": {
                      "lineItems": [
                        {
                          "itemId": "string",
                          "name": "string",
                          "description": "string",
                          "amount": 0,
                          "quantity": 0,
                          "discountAmount": 0,
                          "taxAmount": 0,
                          "taxCode": "string",
                          "productType": "PHYSICAL",
                          "productData": {
                            "sku": "string",
                            "brand": "string",
                            "color": "string",
                            "globalTradeItemNumber": "string",
                            "manufacturerPartNumber": "string",
                            "weight": 1,
                            "weightUnit": "string"
                          }
                        }
                      ],
                      "countryCode": "AW",
                      "retailerCountryCode": "AW",
                      "fees": [
                        {
                          "amount": 0,
                          "type": "string",
                          "description": "string"
                        }
                      ],
                      "shipping": {
                        "amount": 0
                      }
                    },
                    "customerId": "string",
                    "customer": {
                      "emailAddress": "string",
                      "mobileNumber": "string",
                      "firstName": "string",
                      "lastName": "string",
                      "billingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "shippingAddress": {
                        "firstName": "string",
                        "lastName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "state": "string",
                        "countryCode": "AW",
                        "postalCode": "string"
                      },
                      "taxId": "string",
                      "nationalDocumentId": "string"
                    },
                    "metadata": {
                      "string": {}
                    },
                    "paymentMethod": {
                      "descriptor": "string",
                      "paymentType": "FIRST_PAYMENT",
                      "paymentMethodToken": "string",
                      "isVaulted": true,
                      "analyticsId": "string",
                      "paymentMethodType": "PAYMENT_CARD",
                      "paymentMethodData": {
                        "first6Digits": "string",
                        "last4Digits": "string",
                        "expirationMonth": "string",
                        "expirationYear": "string",
                        "cardholderName": "string",
                        "network": "string",
                        "isNetworkTokenized": true,
                        "binData": {
                          "network": "AMEX",
                          "issuerCountryCode": "AW",
                          "issuerName": "string",
                          "issuerCurrencyCode": "AED",
                          "regionalRestriction": "DOMESTIC_USE_ONLY",
                          "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                          "accountFundingType": "CREDIT",
                          "prepaidReloadableIndicator": "RELOADABLE",
                          "productUsageType": "CONSUMER",
                          "productCode": "string",
                          "productName": "string"
                        }
                      },
                      "threeDSecureAuthentication": {
                        "responseCode": "NOT_PERFORMED",
                        "reasonCode": "GATEWAY_UNAVAILABLE",
                        "reasonText": "string",
                        "protocolVersion": "string",
                        "challengeIssued": true
                      },
                      "authorizationType": "ESTIMATED"
                    },
                    "processor": {
                      "name": "string",
                      "processorMerchantId": "string",
                      "amountCaptured": 0,
                      "amountRefunded": 0
                    },
                    "requiredAction": {
                      "name": "3DS_AUTHENTICATION",
                      "description": "string",
                      "clientToken": "string"
                    },
                    "statusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR",
                      "message": "string"
                    },
                    "transactions": [
                      {
                        "date": "string",
                        "amount": 0,
                        "currencyCode": "AED",
                        "transactionType": "SALE",
                        "processorTransactionId": "string",
                        "processorName": "string",
                        "processorMerchantId": "string",
                        "processorStatus": "PENDING",
                        "processorStatusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR",
                          "message": "string"
                        }
                      }
                    ],
                    "riskData": {
                      "fraudCheck": {
                        "source": "string",
                        "preAuthorizationResult": "ACCEPT",
                        "postAuthorizationResult": "ACCEPT"
                      }
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payments/:id",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "responseStatusCode": 400,
                  "responseBody": {
                    "error": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "<p/>\n\nRetrieve a payment by its ID.\n",
              "htmlDescription": "<p/>\n\n<p>Retrieve a payment by its ID.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            }
          ],
          "types": [],
          "subpackages": [],
          "pointsTo": null,
          "urlSlug": "payments-api",
          "description": null,
          "webhooks": [],
          "descriptionContainsMarkdown": false
        },
        "subpackage_paymentMethodsApi": {
          "subpackageId": "subpackage_paymentMethodsApi",
          "name": "Payment Methods API",
          "endpoints": [
            {
              "environments": [
                {
                  "id": "Production",
                  "baseUrl": "https://api.sandbox.primer.io"
                },
                {
                  "id": "Sandbox",
                  "baseUrl": "https://api.primer.io"
                }
              ],
              "availability": null,
              "defaultEnvironment": "Production",
              "urlSlug": "save-a-payment-method-token",
              "method": "POST",
              "id": "vault_payment_method_payment_methods__token__vault_post",
              "name": "Save a payment method token",
              "path": {
                "pathParameters": [
                  {
                    "key": "paymentMethodToken",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "description": "Payment method token to store."
                  }
                ],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payment-instruments/"
                  },
                  {
                    "type": "pathParameter",
                    "value": "paymentMethodToken"
                  },
                  {
                    "type": "literal",
                    "value": "/vault"
                  }
                ]
              },
              "queryParameters": [],
              "headers": [],
              "request": {
                "contentType": "application/json",
                "type": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "customerId",
                      "valueType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "description": "The ID representing the customer"
                    },
                    {
                      "key": "verify",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "boolean"
                          }
                        }
                      },
                      "description": "Whether the payment method should be verified before vaulting or not"
                    }
                  ]
                },
                "descriptionContainsMarkdown": false
              },
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:VerifiedMerchantPaymentMethodTokenApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:UnprocessableEntityErrorResponse"
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:UnprocessableEntityErrorResponse"
                    }
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payment-instruments/:paymentMethodToken/vault",
                  "pathParameters": {
                    "paymentMethodToken": ":paymentMethodToken"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "customerId": "string"
                  },
                  "responseStatusCode": 200,
                  "responseBody": {
                    "isVerified": true,
                    "createdAt": "2023-01-01T00:00:00Z",
                    "deletedAt": "2023-01-01T00:00:00Z",
                    "deleted": true,
                    "token": "string",
                    "tokenType": "string",
                    "analyticsId": "string",
                    "paymentMethodType": "PAYMENT_CARD",
                    "paymentMethodData": {
                      "first6Digits": "string",
                      "last4Digits": "string",
                      "expirationMonth": "string",
                      "expirationYear": "string",
                      "cardholderName": "string",
                      "network": "string",
                      "isNetworkTokenized": true,
                      "binData": {
                        "network": "AMEX",
                        "issuerCountryCode": "AW",
                        "issuerName": "string",
                        "issuerCurrencyCode": "AED",
                        "regionalRestriction": "DOMESTIC_USE_ONLY",
                        "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                        "accountFundingType": "CREDIT",
                        "prepaidReloadableIndicator": "RELOADABLE",
                        "productUsageType": "CONSUMER",
                        "productCode": "string",
                        "productName": "string"
                      }
                    },
                    "customerId": "string",
                    "description": "string",
                    "default": true
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payment-instruments/:paymentMethodToken/vault",
                  "pathParameters": {
                    "paymentMethodToken": ":paymentMethodToken"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "customerId": "string"
                  },
                  "responseStatusCode": 400,
                  "responseBody": {
                    "error": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payment-instruments/:paymentMethodToken/vault",
                  "pathParameters": {
                    "paymentMethodToken": ":paymentMethodToken"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "customerId": "string"
                  },
                  "responseStatusCode": 422,
                  "responseBody": {
                    "error": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "<p/>\n\nSave a `SINGLE_USE` payment method token so it can be used\nagain later. You can optionally choose to verify the payment method\nbefore vaulting. If verification fails, no payment method data will\nbe vaulted. Verification can minimise fraud and boost subscription\nrates for recurring payments.\n\nIf you try to vault an already vaulted token, you will get the existing vaulted token back.\n",
              "htmlDescription": "<p/>\n\n<p>Save a <code>SINGLE_USE</code> payment method token so it can be used\nagain later. You can optionally choose to verify the payment method\nbefore vaulting. If verification fails, no payment method data will\nbe vaulted. Verification can minimise fraud and boost subscription\nrates for recurring payments.</p>\n<p>If you try to vault an already vaulted token, you will get the existing vaulted token back.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            },
            {
              "environments": [
                {
                  "id": "Production",
                  "baseUrl": "https://api.sandbox.primer.io"
                },
                {
                  "id": "Sandbox",
                  "baseUrl": "https://api.primer.io"
                }
              ],
              "availability": null,
              "defaultEnvironment": "Production",
              "urlSlug": "list-saved-payment-methods",
              "method": "GET",
              "id": "get_payment_methods_payment_methods_get",
              "name": "List saved payment methods",
              "path": {
                "pathParameters": [],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payment-instruments"
                  }
                ]
              },
              "queryParameters": [
                {
                  "key": "customer_id",
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  },
                  "description": "Return payment methods for this customer ID."
                }
              ],
              "headers": [],
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:VerifiedMerchantPaymentMethodTokenListApiResponse"
                  }
                }
              },
              "errors": [],
              "errorsV2": [],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payment-instruments",
                  "pathParameters": {},
                  "queryParameters": {
                    "customer_id": "string"
                  },
                  "headers": {},
                  "responseStatusCode": 200,
                  "responseBody": {
                    "data": [
                      {
                        "isVerified": true,
                        "createdAt": "2023-01-01T00:00:00Z",
                        "deletedAt": "2023-01-01T00:00:00Z",
                        "deleted": true,
                        "token": "string",
                        "tokenType": "string",
                        "analyticsId": "string",
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "first6Digits": "string",
                          "last4Digits": "string",
                          "expirationMonth": "string",
                          "expirationYear": "string",
                          "cardholderName": "string",
                          "network": "string",
                          "isNetworkTokenized": true,
                          "binData": {
                            "network": "AMEX",
                            "issuerCountryCode": "AW",
                            "issuerName": "string",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "DOMESTIC_USE_ONLY",
                            "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                            "accountFundingType": "CREDIT",
                            "prepaidReloadableIndicator": "RELOADABLE",
                            "productUsageType": "CONSUMER",
                            "productCode": "string",
                            "productName": "string"
                          }
                        },
                        "customerId": "string",
                        "description": "string",
                        "default": true
                      }
                    ]
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "Retrieve a list of stored payment methods for a customer.",
              "htmlDescription": "<p>Retrieve a list of stored payment methods for a customer.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": false
            },
            {
              "environments": [
                {
                  "id": "Production",
                  "baseUrl": "https://api.sandbox.primer.io"
                },
                {
                  "id": "Sandbox",
                  "baseUrl": "https://api.primer.io"
                }
              ],
              "availability": null,
              "defaultEnvironment": "Production",
              "urlSlug": "delete-a-saved-payment-method",
              "method": "DELETE",
              "id": "delete_payment_method_payment_methods__token__delete",
              "name": "Delete a saved payment method",
              "path": {
                "pathParameters": [
                  {
                    "key": "paymentMethodToken",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "description": "Saved payment method token to delete."
                  }
                ],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payment-instruments/"
                  },
                  {
                    "type": "pathParameter",
                    "value": "paymentMethodToken"
                  },
                  {
                    "type": "literal",
                    "value": ""
                  }
                ]
              },
              "queryParameters": [],
              "headers": [],
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:VerifiedMerchantPaymentMethodTokenApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payment-instruments/:paymentMethodToken",
                  "pathParameters": {
                    "paymentMethodToken": ":paymentMethodToken"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "responseStatusCode": 200,
                  "responseBody": {
                    "isVerified": true,
                    "createdAt": "2023-01-01T00:00:00Z",
                    "deletedAt": "2023-01-01T00:00:00Z",
                    "deleted": true,
                    "token": "string",
                    "tokenType": "string",
                    "analyticsId": "string",
                    "paymentMethodType": "PAYMENT_CARD",
                    "paymentMethodData": {
                      "first6Digits": "string",
                      "last4Digits": "string",
                      "expirationMonth": "string",
                      "expirationYear": "string",
                      "cardholderName": "string",
                      "network": "string",
                      "isNetworkTokenized": true,
                      "binData": {
                        "network": "AMEX",
                        "issuerCountryCode": "AW",
                        "issuerName": "string",
                        "issuerCurrencyCode": "AED",
                        "regionalRestriction": "DOMESTIC_USE_ONLY",
                        "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                        "accountFundingType": "CREDIT",
                        "prepaidReloadableIndicator": "RELOADABLE",
                        "productUsageType": "CONSUMER",
                        "productCode": "string",
                        "productName": "string"
                      }
                    },
                    "customerId": "string",
                    "description": "string",
                    "default": true
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payment-instruments/:paymentMethodToken",
                  "pathParameters": {
                    "paymentMethodToken": ":paymentMethodToken"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "responseStatusCode": 400,
                  "responseBody": {
                    "error": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "Delete a saved payment method.",
              "htmlDescription": "<p>Delete a saved payment method.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": false
            },
            {
              "environments": [
                {
                  "id": "Production",
                  "baseUrl": "https://api.sandbox.primer.io"
                },
                {
                  "id": "Sandbox",
                  "baseUrl": "https://api.primer.io"
                }
              ],
              "availability": null,
              "defaultEnvironment": "Production",
              "urlSlug": "update-the-default-saved-payment-method",
              "method": "POST",
              "id": "set_payment_method_default_payment_methods__token__default_post",
              "name": "Update the default saved payment method",
              "path": {
                "pathParameters": [
                  {
                    "key": "paymentMethodToken",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "description": "Saved payment method token to set to default."
                  }
                ],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/payment-instruments/"
                  },
                  {
                    "type": "pathParameter",
                    "value": "paymentMethodToken"
                  },
                  {
                    "type": "literal",
                    "value": "/default"
                  }
                ]
              },
              "queryParameters": [],
              "headers": [],
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:MerchantPaymentMethodTokenApiResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payment-instruments/:paymentMethodToken/default",
                  "pathParameters": {
                    "paymentMethodToken": ":paymentMethodToken"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "responseStatusCode": 200,
                  "responseBody": {
                    "createdAt": "2023-01-01T00:00:00Z",
                    "deletedAt": "2023-01-01T00:00:00Z",
                    "deleted": true,
                    "token": "string",
                    "tokenType": "string",
                    "analyticsId": "string",
                    "paymentMethodType": "PAYMENT_CARD",
                    "paymentMethodData": {
                      "first6Digits": "string",
                      "last4Digits": "string",
                      "expirationMonth": "string",
                      "expirationYear": "string",
                      "cardholderName": "string",
                      "network": "string",
                      "isNetworkTokenized": true,
                      "binData": {
                        "network": "AMEX",
                        "issuerCountryCode": "AW",
                        "issuerName": "string",
                        "issuerCurrencyCode": "AED",
                        "regionalRestriction": "DOMESTIC_USE_ONLY",
                        "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                        "accountFundingType": "CREDIT",
                        "prepaidReloadableIndicator": "RELOADABLE",
                        "productUsageType": "CONSUMER",
                        "productCode": "string",
                        "productName": "string"
                      }
                    },
                    "customerId": "string",
                    "description": "string",
                    "default": true
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/payment-instruments/:paymentMethodToken/default",
                  "pathParameters": {
                    "paymentMethodToken": ":paymentMethodToken"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "responseStatusCode": 400,
                  "responseBody": {
                    "error": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "Update a saved payment method to be the default stored payment method for a customer.",
              "htmlDescription": "<p>Update a saved payment method to be the default stored payment method for a customer.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": false
            }
          ],
          "types": [],
          "subpackages": [],
          "pointsTo": null,
          "urlSlug": "payment-methods-api",
          "description": null,
          "webhooks": [],
          "descriptionContainsMarkdown": false
        },
        "subpackage_observabilityApi": {
          "subpackageId": "subpackage_observabilityApi",
          "name": "Observability API",
          "endpoints": [
            {
              "environments": [
                {
                  "id": "Production",
                  "baseUrl": "https://api.sandbox.primer.io"
                },
                {
                  "id": "Sandbox",
                  "baseUrl": "https://api.primer.io"
                }
              ],
              "availability": null,
              "defaultEnvironment": "Production",
              "urlSlug": "create-an-external-payment",
              "method": "POST",
              "id": "external_payment",
              "name": "Create an external payment",
              "path": {
                "pathParameters": [],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/observability/payments"
                  }
                ]
              },
              "queryParameters": [],
              "headers": [],
              "request": {
                "contentType": "application/json",
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:PaymentsInsightsPayment"
                  }
                },
                "descriptionContainsMarkdown": false
              },
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:PaymentsInsightsPayment"
                  }
                }
              },
              "errors": [],
              "errorsV2": [],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/observability/payments",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "paymentId": "string",
                    "currencyCode": "AED",
                    "processor": {
                      "name": "APAYA"
                    },
                    "amount": 0,
                    "createdAt": "2023-01-01T00:00:00Z",
                    "order": {
                      "id": "string"
                    },
                    "paymentMethod": {
                      "paymentMethodType": "PAYMENT_CARD"
                    }
                  },
                  "responseStatusCode": 200,
                  "responseBody": {
                    "paymentId": "string",
                    "currencyCode": "AED",
                    "processor": {
                      "name": "APAYA",
                      "merchantId": "string"
                    },
                    "amount": 0,
                    "createdAt": "2023-01-01T00:00:00Z",
                    "order": {
                      "id": "string",
                      "countryCode": "AW"
                    },
                    "status": "DECLINED",
                    "statusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR",
                      "message": "string"
                    },
                    "paymentMethod": {
                      "paymentMethodType": "PAYMENT_CARD",
                      "data": {
                        "binData": {
                          "network": "AMEX",
                          "issuerCountryCode": "AW",
                          "issuerName": "string",
                          "productUsageType": "string",
                          "accountFundingType": "string"
                        },
                        "first6Digits": "string"
                      },
                      "threeDSecureAuthentication": {
                        "transStatus": "string",
                        "transStatusReason": "string",
                        "responseCode": "NOT_PERFORMED",
                        "challengeIssued": true,
                        "protocolVersion": "string",
                        "reasonCode": "string",
                        "reasonText": "string",
                        "eci": "string"
                      }
                    },
                    "metadata": {
                      "string": {}
                    },
                    "paymentType": "FIRST_PAYMENT",
                    "descriptor": "string"
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "The Observability API is currently in beta. Please contact [support@primer.io](mailto:support@primer.io) for access.\n\nCreating a payment with the Observability API sends external payments data to Primer to populate [Observability Payment Insights dashboards](https://primer.io/observability). Payments created through the [Payments API](/reference/create_payment_payments_post) will be automatically populated and do not need to be sent in the Observability API.\n\nCreate an API key with the `observability-payments:write` scope.\n\nEach record must be created with a unique `paymentId`. To update a payment record with new data use the `PATCH` endpoint.\n",
              "htmlDescription": "<p>The Observability API is currently in beta. Please contact <a href=\"mailto:support@primer.io\">support@primer.io</a> for access.</p>\n<p>Creating a payment with the Observability API sends external payments data to Primer to populate <a href=\"https://primer.io/observability\">Observability Payment Insights dashboards</a>. Payments created through the <a href=\"/reference/create_payment_payments_post\">Payments API</a> will be automatically populated and do not need to be sent in the Observability API.</p>\n<p>Create an API key with the <code>observability-payments:write</code> scope.</p>\n<p>Each record must be created with a unique <code>paymentId</code>. To update a payment record with new data use the <code>PATCH</code> endpoint.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            },
            {
              "environments": [
                {
                  "id": "Production",
                  "baseUrl": "https://api.sandbox.primer.io"
                },
                {
                  "id": "Sandbox",
                  "baseUrl": "https://api.primer.io"
                }
              ],
              "availability": null,
              "defaultEnvironment": "Production",
              "urlSlug": "update-an-external-payment",
              "method": "PATCH",
              "id": "external_payment_update",
              "name": "Update an external payment",
              "path": {
                "pathParameters": [
                  {
                    "key": "paymentId",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "description": null
                  }
                ],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/observability/payments/"
                  },
                  {
                    "type": "pathParameter",
                    "value": "paymentId"
                  },
                  {
                    "type": "literal",
                    "value": ""
                  }
                ]
              },
              "queryParameters": [],
              "headers": [],
              "request": {
                "contentType": "application/json",
                "type": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "paymentId",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "The payment ID.\n\nThe payment ID must be unique. You can use this unique payment ID to update payment details."
                    },
                    {
                      "key": "currencyCode",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "id",
                          "value": "type_:PaymentsInsightsPatchedPaymentCurrencyCode"
                        }
                      },
                      "description": "The 3-letter currency code in\n[ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\n\ne.g. use `USD` for US dollars."
                    },
                    {
                      "key": "processor",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "id",
                          "value": "type_:PaymentsInsightsProcessor"
                        }
                      },
                      "description": null
                    },
                    {
                      "key": "amount",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "integer"
                          }
                        }
                      },
                      "description": "The amount you would like to charge the customer,\nin minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units.\nIn this case you should use the value as it is, without any formatting.\nFor example for ¥100, use `100`.\nThe minimum amount is 0."
                    },
                    {
                      "key": "createdAt",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "datetime"
                          }
                        }
                      },
                      "description": "The payment creation date and time (UTC) in [ISO 8601 format](\nhttps://en.wikipedia.org/wiki/ISO_8601).\n\nCannot be updated in partial updates PATCH."
                    },
                    {
                      "key": "order",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "id",
                          "value": "type_:PaymentsInsightsOrder"
                        }
                      },
                      "description": null
                    },
                    {
                      "key": "status",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "id",
                          "value": "type_:PaymentsInsightsPatchedPaymentStatus"
                        }
                      },
                      "description": "See the payment [status table](\nhttps://apiref.primer.io/docs#payment-status) for more information."
                    },
                    {
                      "key": "statusReason",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "id",
                          "value": "type_:PaymentsInsightsStatusReason"
                        }
                      },
                      "description": "Pass more information regarding the payment's status in this field.\n\nThis is especially useful when the status is `DECLINED` or `FAILED`."
                    },
                    {
                      "key": "paymentMethod",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "id",
                          "value": "type_:PaymentsInsightsPaymentMethod"
                        }
                      },
                      "description": null
                    },
                    {
                      "key": "metadata",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "map",
                          "keyType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          },
                          "valueType": {
                            "type": "unknown"
                          }
                        }
                      },
                      "description": "Additional data to be used throughout the payment lifecycle.\n\nAd dictionary of key-value pairs where the values can only be strings or integers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"88278a\"}`"
                    },
                    {
                      "key": "paymentType",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "id",
                          "value": "type_:PaymentsInsightsPatchedPaymentPaymentType"
                        }
                      },
                      "description": "Payment types, primarily to be used for recurring payments.\n\nNote: If you successfully vault a `SINGLE_USE` token on payment\ncreation, then there's no need to set a value for this field and it will\nbe flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all\npossible values.\n\n\n| paymentType | Use case |\n| --- | --- |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE` | a customer-initiated payment using stored payment details where the cardholder is present. |\n| `SUBSCRIPTION` | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount. |\n| `UNSCHEDULED` | a merchant-initiated payment using stored payment details with no fixed schedule or amount. |\n| `MOTO` | a merchant-initiated mail order or telephone order payment. |\n| `IN_STORE` | a customer-initiated payment where the customer is physically present in a shop. |"
                    },
                    {
                      "key": "descriptor",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "A description of the payment,\nas it would typically appear on a bank statement."
                    }
                  ]
                },
                "descriptionContainsMarkdown": false
              },
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:PaymentsInsightsPayment"
                  }
                }
              },
              "errors": [],
              "errorsV2": [],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/observability/payments/:paymentId",
                  "pathParameters": {
                    "paymentId": ":paymentId"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {},
                  "responseStatusCode": 200,
                  "responseBody": {
                    "paymentId": "string",
                    "currencyCode": "AED",
                    "processor": {
                      "name": "APAYA",
                      "merchantId": "string"
                    },
                    "amount": 0,
                    "createdAt": "2023-01-01T00:00:00Z",
                    "order": {
                      "id": "string",
                      "countryCode": "AW"
                    },
                    "status": "DECLINED",
                    "statusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR",
                      "message": "string"
                    },
                    "paymentMethod": {
                      "paymentMethodType": "PAYMENT_CARD",
                      "data": {
                        "binData": {
                          "network": "AMEX",
                          "issuerCountryCode": "AW",
                          "issuerName": "string",
                          "productUsageType": "string",
                          "accountFundingType": "string"
                        },
                        "first6Digits": "string"
                      },
                      "threeDSecureAuthentication": {
                        "transStatus": "string",
                        "transStatusReason": "string",
                        "responseCode": "NOT_PERFORMED",
                        "challengeIssued": true,
                        "protocolVersion": "string",
                        "reasonCode": "string",
                        "reasonText": "string",
                        "eci": "string"
                      }
                    },
                    "metadata": {
                      "string": {}
                    },
                    "paymentType": "FIRST_PAYMENT",
                    "descriptor": "string"
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "The Observability API is currently in beta. Please contact [support@primer.io](mailto:support@primer.io) for access.\n\nYou can update payments created earlier through the Observability API with this endpoint. The only required field for the request is `paymentId`. Other supported request fields are the same as for the [create an external payment](/reference/external_payment) API call.\n\nIf you wish to update nested fields on the payment, you only need to pass the fields that you wish to update. For example to update the processor name, you would pass in `processor.name` only.\n\nThe response will contain all the fields of the payment including the ones that were changed.\n",
              "htmlDescription": "<p>The Observability API is currently in beta. Please contact <a href=\"mailto:support@primer.io\">support@primer.io</a> for access.</p>\n<p>You can update payments created earlier through the Observability API with this endpoint. The only required field for the request is <code>paymentId</code>. Other supported request fields are the same as for the <a href=\"/reference/external_payment\">create an external payment</a> API call.</p>\n<p>If you wish to update nested fields on the payment, you only need to pass the fields that you wish to update. For example to update the processor name, you would pass in <code>processor.name</code> only.</p>\n<p>The response will contain all the fields of the payment including the ones that were changed.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            }
          ],
          "types": [],
          "subpackages": [],
          "pointsTo": null,
          "urlSlug": "observability-api",
          "description": null,
          "webhooks": [],
          "descriptionContainsMarkdown": false
        },
        "subpackage_loyaltyApi": {
          "subpackageId": "subpackage_loyaltyApi",
          "name": "Loyalty API",
          "endpoints": [
            {
              "environments": [
                {
                  "id": "Production",
                  "baseUrl": "https://api.sandbox.primer.io"
                },
                {
                  "id": "Sandbox",
                  "baseUrl": "https://api.primer.io"
                }
              ],
              "availability": null,
              "defaultEnvironment": "Production",
              "urlSlug": "get-a-loyalty-customers-points-balance",
              "method": "GET",
              "id": "get_loyalty_customer",
              "name": "Get a loyalty customer's points balance",
              "path": {
                "pathParameters": [
                  {
                    "key": "id",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "description": "The unique identifier for the customer on the loyalty provider."
                  }
                ],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/loyalty-customers/"
                  },
                  {
                    "type": "pathParameter",
                    "value": "id"
                  },
                  {
                    "type": "literal",
                    "value": ""
                  }
                ]
              },
              "queryParameters": [
                {
                  "key": "connectionId",
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  },
                  "description": "ID of the Primer connection configuration."
                }
              ],
              "headers": [],
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:LoyaltyApiBalanceResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/loyalty-customers/:id",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {
                    "connectionId": "string"
                  },
                  "headers": {},
                  "responseStatusCode": 200,
                  "responseBody": {
                    "id": "string",
                    "connectionId": "string",
                    "connectionName": "string",
                    "balance": 0
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/loyalty-customers/:id",
                  "pathParameters": {
                    "id": ":id"
                  },
                  "queryParameters": {
                    "connectionId": "string"
                  },
                  "headers": {},
                  "responseStatusCode": 400,
                  "responseBody": {
                    "error": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "The Loyalty API is currently in beta.\nPlease contact [support@primer.io](mailto:support@primer.io) for access.\n\nCreate an API key with the `loyalty-transactions:read` scopes.\n\nGet a loyalty customer by ID and connection ID. This includes the customer's points balance.\n\nThe `connectionId` is the unique Primer identifier for your loyalty provider connection. Primer will provide this once the loyalty provider connection is created.\n\nThe `customerId` refers to the customer identifier on the loyalty provider's side.\n",
              "htmlDescription": "<p>The Loyalty API is currently in beta.\nPlease contact <a href=\"mailto:support@primer.io\">support@primer.io</a> for access.</p>\n<p>Create an API key with the <code>loyalty-transactions:read</code> scopes.</p>\n<p>Get a loyalty customer by ID and connection ID. This includes the customer&#39;s points balance.</p>\n<p>The <code>connectionId</code> is the unique Primer identifier for your loyalty provider connection. Primer will provide this once the loyalty provider connection is created.</p>\n<p>The <code>customerId</code> refers to the customer identifier on the loyalty provider&#39;s side.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            },
            {
              "environments": [
                {
                  "id": "Production",
                  "baseUrl": "https://api.sandbox.primer.io"
                },
                {
                  "id": "Sandbox",
                  "baseUrl": "https://api.primer.io"
                }
              ],
              "availability": null,
              "defaultEnvironment": "Production",
              "urlSlug": "list-the-transactions-for-a-customer",
              "method": "GET",
              "id": "get_loyalty_customer_transactions",
              "name": "List the transactions for a customer",
              "path": {
                "pathParameters": [],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/loyalty-transactions"
                  }
                ]
              },
              "queryParameters": [
                {
                  "key": "connectionId",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Filter transactions by customer Id."
                },
                {
                  "key": "customerId",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Filter transactions by customer Id."
                },
                {
                  "key": "orderId",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Filter transactions by orderId."
                },
                {
                  "key": "limit",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  },
                  "description": "Limit the number of returned results"
                },
                {
                  "key": "offset",
                  "type": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  },
                  "description": "The number of items to skip before returning results"
                }
              ],
              "headers": [],
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:LoyaltyApiTransactionsListResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:UnprocessableEntityErrorResponse"
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:UnprocessableEntityErrorResponse"
                    }
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/loyalty-transactions",
                  "pathParameters": {},
                  "queryParameters": {
                    "connectionId": "string",
                    "customerId": "string"
                  },
                  "headers": {},
                  "responseStatusCode": 200,
                  "responseBody": {
                    "items": [
                      {
                        "date": "2023-01-01T00:00:00Z",
                        "id": "string",
                        "connectionId": "string",
                        "customerId": "string",
                        "orderId": "string",
                        "connectionTransactionId": "string",
                        "connectionName": "string",
                        "type": "REDEMPTION",
                        "value": 0
                      }
                    ],
                    "total": 0,
                    "limit": 0,
                    "offset": 0
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/loyalty-transactions",
                  "pathParameters": {},
                  "queryParameters": {
                    "connectionId": "string",
                    "customerId": "string"
                  },
                  "headers": {},
                  "responseStatusCode": 400,
                  "responseBody": {
                    "error": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/loyalty-transactions",
                  "pathParameters": {},
                  "queryParameters": {
                    "connectionId": "string",
                    "customerId": "string"
                  },
                  "headers": {},
                  "responseStatusCode": 422,
                  "responseBody": {
                    "error": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "The Loyalty API is currently in beta.\nPlease contact [support@primer.io](mailto:support@primer.io) for access.\n\nCreate an API key with the `loyalty-transactions:read` scopes.\n\nGet all your loyalty transactions. You can filter by `connectionId` (recommended) and by `customerId` and `orderId`.\n\nAdditionally provide a `limit` to restrict the number of transactions in the response, and an `offset` to determine where to start.\n",
              "htmlDescription": "<p>The Loyalty API is currently in beta.\nPlease contact <a href=\"mailto:support@primer.io\">support@primer.io</a> for access.</p>\n<p>Create an API key with the <code>loyalty-transactions:read</code> scopes.</p>\n<p>Get all your loyalty transactions. You can filter by <code>connectionId</code> (recommended) and by <code>customerId</code> and <code>orderId</code>.</p>\n<p>Additionally provide a <code>limit</code> to restrict the number of transactions in the response, and an <code>offset</code> to determine where to start.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": true
            },
            {
              "environments": [
                {
                  "id": "Production",
                  "baseUrl": "https://api.sandbox.primer.io"
                },
                {
                  "id": "Sandbox",
                  "baseUrl": "https://api.primer.io"
                }
              ],
              "availability": null,
              "defaultEnvironment": "Production",
              "urlSlug": "create-a-loyalty-transaction",
              "method": "POST",
              "id": "post_loyalty_transaction",
              "name": "Create a loyalty transaction",
              "path": {
                "pathParameters": [],
                "parts": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "/loyalty-transactions"
                  }
                ]
              },
              "queryParameters": [],
              "headers": [],
              "request": {
                "contentType": "application/json",
                "type": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "connectionId",
                      "valueType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "description": "ID of the Primer connection configuration."
                    },
                    {
                      "key": "customerId",
                      "valueType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "description": "The unique identifier for the customer on the loyalty provider."
                    },
                    {
                      "key": "orderId",
                      "valueType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "description": "Unique identifier for the order."
                    },
                    {
                      "key": "type",
                      "valueType": {
                        "type": "optional",
                        "itemType": {
                          "type": "id",
                          "value": "type_:LoyaltyTransactionTypeEnum"
                        }
                      },
                      "description": "The type of the transaction."
                    },
                    {
                      "key": "value",
                      "valueType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      },
                      "description": "The value of points to redeem."
                    }
                  ]
                },
                "descriptionContainsMarkdown": false
              },
              "response": {
                "type": {
                  "type": "reference",
                  "value": {
                    "type": "id",
                    "value": "type_:LoyaltyApiTransactionResponse"
                  }
                }
              },
              "errors": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:BadRequestErrorResponse"
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:UnprocessableEntityErrorResponse"
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "errorsV2": [
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:BadRequestErrorResponse"
                    }
                  },
                  "statusCode": 400,
                  "description": null
                },
                {
                  "type": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "value": "type_:UnprocessableEntityErrorResponse"
                    }
                  },
                  "statusCode": 422,
                  "description": null
                }
              ],
              "examples": [
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/loyalty-transactions",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "connectionId": "string",
                    "customerId": "string",
                    "orderId": "string",
                    "value": 0
                  },
                  "responseStatusCode": 200,
                  "responseBody": {
                    "date": "2023-01-01T00:00:00Z",
                    "id": "string",
                    "connectionId": "string",
                    "customerId": "string",
                    "orderId": "string",
                    "connectionTransactionId": "string",
                    "connectionName": "string",
                    "type": "REDEMPTION",
                    "value": 0
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/loyalty-transactions",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "connectionId": "string",
                    "customerId": "string",
                    "orderId": "string",
                    "value": 0
                  },
                  "responseStatusCode": 400,
                  "responseBody": {
                    "error": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                },
                {
                  "descriptionContainsMarkdown": false,
                  "path": "/loyalty-transactions",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "connectionId": "string",
                    "customerId": "string",
                    "orderId": "string",
                    "value": 0
                  },
                  "responseStatusCode": 422,
                  "responseBody": {
                    "error": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    }
                  },
                  "codeExamples": {
                    "nodeAxios": ""
                  }
                }
              ],
              "description": "The Loyalty API is currently in beta.\nPlease contact [support@primer.io](mailto:support@primer.io) for access.\n\nCreate an API key with the `loyalty-transactions:write` scopes.\n\nCreate a loyalty transaction. This is either a points redemption or a points refund.\n",
              "htmlDescription": "<p>The Loyalty API is currently in beta.\nPlease contact <a href=\"mailto:support@primer.io\">support@primer.io</a> for access.</p>\n<p>Create an API key with the <code>loyalty-transactions:write</code> scopes.</p>\n<p>Create a loyalty transaction. This is either a points redemption or a points refund.</p>\n",
              "authed": true,
              "descriptionContainsMarkdown": false
            }
          ],
          "types": [],
          "subpackages": [],
          "pointsTo": null,
          "urlSlug": "loyalty-api",
          "description": null,
          "webhooks": [],
          "descriptionContainsMarkdown": false
        }
      },
      "auth": {
        "type": "header",
        "headerWireValue": "X-API-KEY",
        "nameOverride": "apiKey"
      },
      "hasMultipleBaseUrls": false
    }
  },
  "files": {
    "22cb155c-f785-4cc0-9bf8-4189100247aa": "https://fdr-prod-docs-files.s3.us-east-1.amazonaws.com/primer.docs.buildwithfern.com/2023-10-03T17%3A08%3A32.378Z/assets/logo-light.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIA6KXJSKKNE6LAYO7B%2F20231003%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20231003T215453Z&X-Amz-Expires=604800&X-Amz-Signature=55b8c819757380d50c572a98036b5ac4336ddd95784aeb54bfae3128c15defc7&X-Amz-SignedHeaders=host&x-id=GetObject",
    "1cab403a-f25b-4425-a4e8-1e3617c94eab": "https://fdr-prod-docs-files.s3.us-east-1.amazonaws.com/primer.docs.buildwithfern.com/2023-10-03T17%3A08%3A32.378Z/assets/favicon.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIA6KXJSKKNE6LAYO7B%2F20231003%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20231003T215453Z&X-Amz-Expires=604800&X-Amz-Signature=370c1e990d30c0b1be5400ebbf4fb96d191cc8233a150ffac2b43f6b90a55bff&X-Amz-SignedHeaders=host&x-id=GetObject",
    "219d4fa0-5c92-45c8-8914-6a28af639477": "https://fdr-prod-docs-files.s3.us-east-1.amazonaws.com/primer.docs.buildwithfern.com/2023-10-03T17%3A08%3A32.378Z/fonts/Inter-Bold.woff2?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIA6KXJSKKNE6LAYO7B%2F20231003%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20231003T215453Z&X-Amz-Expires=604800&X-Amz-Signature=4e020901f87adf80f9108467a10f63dacc86be1b8fe27b87e1c8d9f2d803a7fd&X-Amz-SignedHeaders=host&x-id=GetObject",
    "af4ad780-06f3-4e34-8405-115bd0e16445": "https://fdr-prod-docs-files.s3.us-east-1.amazonaws.com/primer.docs.buildwithfern.com/2023-10-03T17%3A08%3A32.378Z/fonts/Inter-Regular.woff2?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIA6KXJSKKNE6LAYO7B%2F20231003%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20231003T215453Z&X-Amz-Expires=604800&X-Amz-Signature=ecd94b4809161a48c9dd9938fb3f4d8235a7a62246ce2f138eccd30038a648d0&X-Amz-SignedHeaders=host&x-id=GetObject",
    "872ac0af-ac51-4894-a284-6d9337583e46": "https://fdr-prod-docs-files.s3.us-east-1.amazonaws.com/primer.docs.buildwithfern.com/2023-10-03T17%3A08%3A32.378Z/fonts/Roboto-Mono-regular.woff2?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIA6KXJSKKNE6LAYO7B%2F20231003%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20231003T215453Z&X-Amz-Expires=604800&X-Amz-Signature=d3cf1a5cc9ab52bbe176c15284608b59ab9acab6165170324f589d5937dd7b4f&X-Amz-SignedHeaders=host&x-id=GetObject"
  },
  "pages": {
    "introduction/getting-started.md": {
      "markdown": "The Primer API is used to manage Client Sessions, Payments and saved payment methods.\nAll other actions are either managed in the Universal Checkout implementation or in the Dashboard.\n\nCheck out:\n\n- [Client Sessions](https://primer.io/docs/payments/universal-checkout/manage-client-sessions)\n- [Universal Checkout](https://primer.io/docs/accept-payments/setup-universal-checkout/installation/web)\n- [Managing Payments](https://primer.io/docs/accept-payments/manage-payments)\n\nTest the APIs yourself in our API Reference. Don't hesitate to reach out with any questions or feedback. You can email Primer directly at [support@primer.io](support@primer.io), or contact your Primer account manager.\n\n## API Endpoint Deployments\n\n- Sandbox: [https://api.sandbox.primer.io](https://api.sandbox.primer.io)\n- Production: [https://api.primer.io](https://api.primer.io)\n\n## API Versions\n\nPrimer makes updates to the APIs on a regular basis, as we release new features. To allow you to update your integration as you are ready, we allow for a `X-Api-Version` header to be passed on all API requests.\n\nIf you omit the version header, your request will default to the earliest supported version of the API.\n\n```bash\ncurl -X POST 'https://api.primer.io/<ENDPOINT>' \\\n  --header 'X-Api-Version: 2.2'\n```\n\n### Available Versions\n\nRead about the available versions of the APIs below on our [Changelog](https://apiref.primer.io/changelog).\n"
    },
    "introduction/authentication.md": {
      "markdown": "Primer uses API keys to authenticate requests. You can manage API keys in the [Developers](https://sandbox-dashboard.primer.io/developers) area of the dashboard.\n\nAs API keys carry many privileges such as _authorizing_ payments, it is important to keep them **private** and **secure**. Do not hardcode or share API keys (particularly in your source version control system), and they should only be used in your backend.\n\nAuthentication is handled via HTTP headers, specifically the `X-Api-Key` header.\n\n```bash\ncurl -X POST 'https://api.primer.io/<ENDPOINT>' \\\n  --header 'X-Api-Key: <YOUR_API_KEY>'\n```\n\n## Managing API Keys\n\nHead up to the [Developers area](https://sandbox-dashboard.primer.io/developers) on the dashboard to manage your API keys.\n\nYou will be able to generate or revoke API keys and edit their respective scopes. Be aware that any changes to existing API keys will be reflected immediately and could cause unwanted side effects.\n\n## Available scopes\n\n| Scope                         | Description                                                                                                                                                                           |\n| ----------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `client_tokens:write`         | Create client tokens for use with the client SDK.                                                                                                                                     |\n| `third_party:webhook_trigger` | Allows you to post to our webhooks endpoint. API keys with this scope can be used to enable communication between your processor and Primer about important payment lifecycle events. |\n| `transactions:authorize`      | Authorize a payment                                                                                                                                                                   |\n| `transactions:cancel`         | Cancel a payment.                                                                                                                                                                     |\n| `transactions:capture`        | Submit a payment for settlement.                                                                                                                                                      |\n| `transactions:retrieve`       | Retrieve one or more payments.                                                                                                                                                        |\n| `transactions:refund`         | Refund a payment.                                                                                                                                                                     |\n| `payment_instrument:read`     | Read stored payment methods.                                                                                                                                                          |\n| `payment_instrument:write`    | Write stored payment methods.                                                                                                                                                         |\n"
    },
    "introduction/responses.md": {
      "markdown": "## Status Codes\n\nThe following table summarizes the HTTP response codes you may receive from\nthe Primer REST API.\n\n| Status Code | Description             |\n| ----------- | ----------------------- |\n| `200`       | Success                 |\n| `400`       | Bad Request             |\n| `401`       | Unauthorized            |\n| `403`       | Forbidden               |\n| `404`       | Entity Not Found        |\n| `409`       | Entity Already Exists   |\n| `422`       | Input Validation Failed |\n\n## Error Responses\n\nPrimer uses conventional HTTP response codes to indicate the success or failure of an API request. HTTP codes in the `2XX` range indicate a successful request, whereas codes in the `4XX` range indicate a failed request usually due to invalid inputs or operations.\n\nThe format of the payload for all errors is common. When an unsuccessful request occurs, you will receive a payload in the following format:\n\n```json\n{\n  \"error\": {\n    \"errorId\": \"AnErrorId\",\n    \"description\": \"A human description of the error.\",\n    \"diagnosticsId\": \"1234567890\",\n    \"validationErrors\": []\n  }\n}\n```\n\nAll error payloads will be comprised of a unique `errorId` which you can use to identify the error, a human description `description`, and a `diagnosticsId` that you can quote when contacting the support team ([support@primer.io](mailto:support@primer.io)). In case of a badly formed request, Primer will also return additional `validationErrors`.\n\n## Payment Status\n\nAs the payments are created, processed, and finalised, they go through a number of states that you will get as an API response, through webhook notifications, and in the Dashboard. These states are used across all processors, as processor specific states are mapped to these. An additional message, in the field `processorMessage`, from the processor may also be included that details the reason for the state, primarily on failure states.\n\n| Status              | Description                                                                                                                                         |\n| ------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `PENDING`           | The payment has been created by Primer but not yet authorized.                                                                                      |\n| `FAILED`            | The processor failed to process this payment.                                                                                                       |\n| `AUTHORIZED`        | The payment is authorized and awaiting capture.                                                                                                     |\n| `SETTLING`          | The payment has been submitted for settlement and funds will be settled later.                                                                      |\n| `PARTIALLY_SETTLED` | The payment has been partially settled.                                                                                                             |\n| `SETTLED`           | Funds have been settled into your account.                                                                                                          |\n| `DECLINED`          | This payment was declined by the processor, either at a gateway or acquirer level. See the reason object in your response payload for more details. |\n| `CANCELLED`         | The payment was cancelled prior to it being settled.                                                                                                |\n\nDon't hesitate to reach out with any questions or feedback. You can email Primer directly at [support@primer.io](mailto:support@primer.io), or contact your Primer account manager.\n"
    },
    "introduction/idempotency-key.md": {
      "markdown": "Primer supports a request idempotency mechanism for our Payments API. This optional feature enables you to safely retry a request without risking the user being charged or refunded multiple times.\n\nThis is particularly useful when an API call fails due to the request being invalid, due to a network issue, or if Primer is momentarily unavailable.\n\nIf this is the case, make another request with the same idempotency key:\n\n- If a request with the same idempotency key has already been successfully processed by Primer, the new request will be ignored. A `400` error will be returned with an `errorId` set to `TransactionRequestIdempotencyKeyAlreadyExists`.\n- Otherwise, Primer will attempt to process the new request.\n\nTo make an idempotent request, generate an idempotency key and pass it to the header `X-Idempotency-Key`.\n\n```bash\ncurl -X POST 'https://api.primer.io/<ENDPOINT>' \\\n  --header 'X-Idempotency-Key: <idempotency-key>'\n```\n\nThe way you generate the key is totally up to you, as long as it is unique per request attempt.\n\nKeep in mind that a payment request resulting in a declined or failed payment is still considered _Successfully processed_ for the API. Therefore, if you want to allow the user to retry an unsuccessful payment, make sure to not use the same idempotency key.\n\nAs a such, don't use anything too restrictive like an `orderId` for the idempotency key as multiple payment attempts and refunds can be made for a single order.\n"
    },
    "introduction/loyalty-transactions.md": {
      "markdown": "Primer's Loyalty API provides an interface to interact with 3rd party loyalty point and service providers.\n\nAll of the endpoints below reference a `connectionId`. This is the unique Primer identifier for your loyalty provider connection. Primer will provide this once the loyalty provider connection is created.\n\nTo identify the customer in the context of the loyalty provider, a `customerId` is also necessary.\n\n## Get the customer balance\n\nCall the [Loyalty Customers](https://apiref.primer.io/reference/get_loyalty_customer) endpoint, which includes the customer's balance. In future this object could contain further details.\n\n## Redeem points\n\nCall the [Loyalty Transactions](https://apiref.primer.io/reference/post_loyalty_transaction) endpoint to create a `REDEMPTION` transaction.\n\nProvide an `orderId` to link multiple transactions together.\n\n## Refund points\n\nCall the [Loyalty Transactions](https://apiref.primer.io/reference/post_loyalty_transaction) endpoint to create a `REFUND` transaction. This transaction is completely independent from a redeem transaction.\n\nProvide an `orderId` to link multiple transactions together.\n\n## Get a list of transactions\n\nCall the [Loyalty Transactions](https://apiref.primer.io/reference/get_loyalty_transaction) endpoint to retrieve a list of all your transactions. In most cases it makes sense to filter by `connectionId`. You can also filter by `customerId` or `orderId`."
    },
    "changelog/migration-guide.md": {
      "markdown": "We are continually introducing new functionality to the Primer Ecosystem, some of which requires additional inputs on our APIs. To make sure these changes don’t break any existing integrations, we roll them out safely using API Versions.\n\n## Migrating to v2.1\n\nThe latest version of our APIs focus on capturing more details to enable a richer checkout experience. Some of these details are required to allow configuration of the checkout via the Primer Dashboard. Also some of these details are needed to work with advanced Payment Processors or Payment Methods.\n\nThe examples below only illustrate how to transition between the two versions of the endpoints, however you should read the latest API Reference linked above for details on the usage of the endpoints. Also read how to introduce API Versioning into your requests in the latest API Reference linked above.\n\n## Client Session\n\nThis is an example of a request in v1: `POST /auth/client-token`.\n\n```json\n{\n  \"customerCountryCode\": \"GB\",\n  \"customerId\": \"customer-123\",\n  \"checkout\": {\n    \"paymentFlow\": \"DEFAULT\"\n  }\n}\n```\n\nThis is an example of a equivalent request in v2: `POST /client-session` with `X-Api-Version=\"2021-09-27\"`.\n\n```json\n{\n  \"customerId\": \"customer-123\",\n  \"customer\": {\n    \"emailAddress\": \"customer@primer.io\",\n    \"mobileNumber\": \"+44841234567\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"billingAddress\": {\n      \"addressLine1\": \"42A\",\n      \"postalCode\": \"abcde\",\n      \"city\": \"Cambridge\",\n      \"state\": \"Cambridgeshire\",\n      \"countryCode\": \"GB\"\n    },\n    \"shippingAddress\": {\n      \"addressLine1\": \"42A\",\n      \"postalCode\": \"abcde\",\n      \"city\": \"Cambridge\",\n      \"state\": \"Cambridgeshire\",\n      \"countryCode\": \"GB\"\n    }\n  },\n  \"order\": {\n    \"lineItems\": [\n      {\n        \"itemId\": \"item-1\",\n        \"description\": \"My item\",\n        \"amount\": 1337,\n        \"quantity\": 1\n      }\n    ],\n    \"countryCode\": \"GB\"\n  },\n  \"currencyCode\": \"GBP\",\n  \"orderId\": \"order-123\",\n  \"metadata\": {\n    \"productType\": \"Merchandise\"\n  },\n  \"paymentMethod\": {\n    \"vaultOnSuccess\": true\n  }\n}\n```\n\n### v2.1\n\nThis is an example of a equivalent request in v2.1: `POST /client-session` with `X-Api-Version=\"2.1\"`.\n\n```json\n{\n  \"customerId\": \"customer-123\",\n  \"customer\": {\n    \"emailAddress\": \"customer@primer.io\",\n    \"mobileNumber\": \"+44841234567\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"billingAddress\": {\n      \"addressLine1\": \"42A\",\n      \"postalCode\": \"abcde\",\n      \"city\": \"Cambridge\",\n      \"state\": \"Cambridgeshire\",\n      \"countryCode\": \"GB\"\n    },\n    \"shippingAddress\": {\n      \"addressLine1\": \"42A\",\n      \"postalCode\": \"abcde\",\n      \"city\": \"Cambridge\",\n      \"state\": \"Cambridgeshire\",\n      \"countryCode\": \"GB\"\n    }\n  },\n  \"lineItems\": [\n    {\n      \"itemId\": \"item-1\",\n      \"description\": \"My item\",\n      \"amount\": 1337,\n      \"quantity\": 1\n    }\n  ],\n  \"orderDetails\": {\n    \"countryCode\": \"GB\"\n  },\n  \"currencyCode\": \"GBP\",\n  \"orderId\": \"order-123\",\n  \"metadata\": {\n    \"productType\": \"Merchandise\"\n  },\n  \"paymentMethod\": {\n    \"vaultOnSuccess\": true\n  }\n}\n```\n\n## Summary of the v2.1 changes\n\n- `order` is now called `orderDetails`\n- `lineItems` is now a top-level element\n- `amount` has been removed. You should always specify `lineItems` and we would dynamically calculate the amount. See our [API Reference](https://apiref.primer.io/reference) for how we calculate the amount.\n\n## Create a Payment\n\nThis is an example of an equivalent request: `POST /payments` with `X-Api-Version=\"2021-09-27\"`.\n\n`POST /payments`\n\n```json\n{\n  \"orderId\": \"order-123\",\n  \"currencyCode\": \"GBP\",\n  \"amount\": 1337,\n  \"paymentInstrument\": {\n    \"token\": \"{{payment_method_token}}\" // As received from the SDK\n  },\n  \"statementDescriptor\": \"Test payment\",\n  \"customer\": {\n    \"email\": \"customer@primer.io\",\n    \"billingAddress\": {\n      \"addressLine1\": \"42A\",\n      \"postalCode\": \"abcde\",\n      \"city\": \"Cambridge\",\n      \"state\": \"Cambridgeshire\",\n      \"countryCode\": \"GB\"\n    }\n  }\n}\n```\n\nThis is an example of an equivalent request in v2: `POST /payments` with `X-Api-Version=\"2021-09-27\"`.\n\n```json\n{\n  \"orderId\": \"order-123\",\n  \"amount\": 1000,\n  \"currencyCode\": \"GBP\",\n  \"customer\": {\n    \"email\": \"customer@primer.io\",\n    \"billingAddress\": {\n      \"addressLine1\": \"42A\",\n      \"postalCode\": \"abcde\",\n      \"city\": \"Cambridge\",\n      \"state\": \"Cambridgeshire\",\n      \"countryCode\": \"GB\"\n    }\n  },\n  \"metadata\": {\n    \"productType\": \"Merchandise\"\n  },\n  \"paymentMethodToken\": \"{{payment_method_token}}\", // As received from the SDK\n  \"paymentMethod\": {\n    \"descriptor\": \"Test payment\",\n    \"paymentType\": \"FIRST_PAYMENT\"\n  }\n}\n```\n\nThis is an example of an equivalent request in v2.1: `POST /payments` with `X-Api-Version=\"2.1\"`\n\n```json\n{\n  \"paymentMethodToken\": \"{{payment_method_token}}\" // As received from the SDK\n}\n```\n\nOR\n\n```json\n{\n  \"orderId\": \"order-123\",\n  \"amount\": 1337,\n  \"currencyCode\": \"GBP\",\n  \"customer\": {\n    \"email\": \"customer@primer.io\",\n    \"billingAddress\": {\n      \"addressLine1\": \"42A\",\n      \"postalCode\": \"abcde\",\n      \"city\": \"Cambridge\",\n      \"state\": \"Cambridgeshire\",\n      \"countryCode\": \"GB\"\n    }\n  },\n  \"lineItems\": [\n    {\n      \"itemId\": \"item-1\",\n      \"description\": \"My item\",\n      \"amount\": 1337,\n      \"quantity\": 1\n    }\n  ],\n  \"orderDetails\": {\n    \"countryCode\": \"GB\"\n  },\n  \"metadata\": {\n    \"productType\": \"Merchandise\"\n  },\n  \"paymentMethodToken\": \"{{payment_method_token}}\", // As received from the SDK\n  \"paymentMethod\": {\n    \"descriptor\": \"Test payment\",\n    \"paymentType\": \"FIRST_PAYMENT\"\n  }\n}\n```\n\n## Summary of the v2.1 changes\n\n- `order` is now called `orderDetails`\n- `lineItems` is now a top-level element\n"
    },
    "changelog/api-v22.md": {
      "markdown": "This version includes improvements to the Client Session API, Payments API and the Payment Methods API.\nYou must set the `X-Api-Version` header to `2.2` to use v2.2 of the API.\n\n## Client Session API\n\n- Added `order.lineItems.productData` on the request and response\n\n## Payments API\n\n- Added `order.lineItems.productData` on the request and response\n"
    },
    "changelog/api-v21.md": {
      "markdown": "Version 2.1 includes improvements to the Client Session API, Payments API and the Payment Methods API.\n\nStarting API v2.1, the API Version X-Api-Version is a semantic version without a patch (e.g. 2.1) rather than a date 🎉\nSet the `X-Api-Version` header to `2.1` to use v2.1 of the API.\n\n## Client Session API\n\n- Added `paymentMethod.paymentType` and `paymentMethod.descriptor` on the request and response of the client session\n- Added `order.lineItems[].productType` on the request and response of the client session\n- Added `GET /client-session` to get the content of a client session\n- Added `PATCH /client-session` to update the content of a client session\n- Additional validation has been put in place to ensure that a `currencyCode` is always passed if any `amount` value is passed\n\n## Payments API\n\n- Added `paymentMethod.isVaulted` boolean field to indicate whether the `paymentMethod.paymentMethodToken` in the response is a vaulted token (and can therefore be used for future payments) or not. This replaces `vaultedPaymentMethodToken`.\n- Added `order.lineItems[].productType` on the request and response\n- `amount`, `currencyCode`, `customerId` and `orderId` are now required fields when making a payment with a vaulted token (i.e. a recurring payment).\n- When paying with a vaulted token, additional validation has been put in place to ensure the `customerId` matches the `customerId` associated with the vaulted token.\n\n## Payment Methods API\n\n- Added verify in `POST /payment-instruments/{paymentMethodToken}/vault` to set whether or not the payment method token should be verified before vaulting\n- Added `isVerified` to the payment method response\n"
    },
    "changelog/api-v2.md": {
      "markdown": "Version 2 includes improvements to the Client Session API and the Payments API.\n\n## Client Session API\n\n- `X-API-Version` -> `2021-09-27`\n- Creating a payment using *only* a payment method token is now possible. The `order`, `customer` and `metadata` passed on the Client Session request is then used for the payment.\n- The create Client Session endpoint request was extended to include `order`, `customer`, etc.\n- All references to `paymentInstrument` from the previous Payments API version have been refactored to `paymentMethod` to be more consistent throughout\n- The customer `billingAddress` and `shippingAddress` fields are now all optional\n\n## Payments API\n\n- `X-API-Version` -> `2021-09-27`\n- Creating a payment using *only* a payment method token is now possible. The `order`, `customer` and `metadata` passed on the Client Session request is then used for the payment.\n- The create payment endpoint request was extended to include `order`, `customer`, etc. It now more closely resembles the `/client-session` endpoint\n- The response of all the Payments API endpoints was refactored to match the create payment request structure\n- All references to `paymentInstrument` from the previous Payments API version have been refactored to `paymentMethod` to be more consistent throughout\n- All the payments API endpoints (create, capture, cancel, refund, etc.) are now versioned\n- `paymentMethodData` in `PaymentMethod` responses (for card payment method types) all now contain a `first6digits` field in addition to the `last4digits` returned. This is an opt-in field, so it is `null` by default.\n- The customer `billingAddress` and `shippingAddress` fields are now all optional\n"
    }
  },
  "search": {
    "type": "singleAlgoliaIndex",
    "value": {
      "type": "versioned",
      "indexSegmentsByVersionId": {
        "v2.2": {
          "id": "seg_primer.docs.buildwithfern.com_v2.2_6352fc3b-d218-4313-a74d-3ace9c3a2465",
          "searchApiKey": "OTZlYmQ3ZjVlOGYxNDQ5NTQzNjEzMzIxYWI5ZTA2NWY1Mjk0MjIxOTNhZmI3YzRiNzAxOTlmOGUzMWEyYjlmZGZpbHRlcnM9aW5kZXhTZWdtZW50SWQlM0FzZWdfcHJpbWVyLmRvY3MuYnVpbGR3aXRoZmVybi5jb21fdjIuMl82MzUyZmMzYi1kMjE4LTQzMTMtYTc0ZC0zYWNlOWMzYTI0NjUmdmFsaWRVbnRpbD0xNjk2NDAwNjkz"
        },
        "v2.1": {
          "id": "seg_primer.docs.buildwithfern.com_v2.1_14c11ba3-ac2f-4656-a12b-2f4167de59c6",
          "searchApiKey": "YTdiNTYzYjYwOTA1NTY4M2ViMzY1NWU0YzE4YTZkN2Q0ZTY5MzFkODA1MmY3ZDAyZTAxOGVkNTRmZTdlZDRmYWZpbHRlcnM9aW5kZXhTZWdtZW50SWQlM0FzZWdfcHJpbWVyLmRvY3MuYnVpbGR3aXRoZmVybi5jb21fdjIuMV8xNGMxMWJhMy1hYzJmLTQ2NTYtYTEyYi0yZjQxNjdkZTU5YzYmdmFsaWRVbnRpbD0xNjk2NDAwNjkz"
        },
        "v2": {
          "id": "seg_primer.docs.buildwithfern.com_v2_f2acacdd-ce87-4d16-81a9-6d99aca067db",
          "searchApiKey": "ZDkyN2FhODNhNTE1YmYxOWZhYjExMjc1NmYwZmY0ZTc3ZTRiMWUzMzhhMTJiMTBjZjBkYWY3ZDE5NzFjZTBkZWZpbHRlcnM9aW5kZXhTZWdtZW50SWQlM0FzZWdfcHJpbWVyLmRvY3MuYnVpbGR3aXRoZmVybi5jb21fdjJfZjJhY2FjZGQtY2U4Ny00ZDE2LTgxYTktNmQ5OWFjYTA2N2RiJnZhbGlkVW50aWw9MTY5NjQwMDY5Mw=="
        }
      }
    }
  },
  "id": "docs_definition_6f868c6b-53c6-4774-a296-689b6b3ab38a"
}
