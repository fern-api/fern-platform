/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const SdkSdkIdLazyImport = createFileRoute('/sdk/$sdkId')()
const ApiApiNameLazyImport = createFileRoute('/api/$apiName')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const SdkSdkIdLazyRoute = SdkSdkIdLazyImport.update({
  path: '/sdk/$sdkId',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/sdk.$sdkId.lazy').then((d) => d.Route))

const ApiApiNameLazyRoute = ApiApiNameLazyImport.update({
  path: '/api/$apiName',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/api.$apiName.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/api/$apiName': {
      id: '/api/$apiName'
      path: '/api/$apiName'
      fullPath: '/api/$apiName'
      preLoaderRoute: typeof ApiApiNameLazyImport
      parentRoute: typeof rootRoute
    }
    '/sdk/$sdkId': {
      id: '/sdk/$sdkId'
      path: '/sdk/$sdkId'
      fullPath: '/sdk/$sdkId'
      preLoaderRoute: typeof SdkSdkIdLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  ApiApiNameLazyRoute,
  SdkSdkIdLazyRoute,
})

/* prettier-ignore-end */
