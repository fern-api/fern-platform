---
type Props = {
    label: string;
    id: string;
};

const { label, id } = Astro.props;
---

<fern-tooltip>
    <slot />
    <div popover id={id} role="tooltip" class="m-0 w-max left-0 top-0 border">{label}</div>
</fern-tooltip>

<script>
    import { computePosition } from "@floating-ui/dom";

    class Tooltip extends HTMLElement {
        constructor() {
            super();

            const popover = this.querySelector<HTMLElement>("[popover]");

            if (popover) {
                let timeout: NodeJS.Timeout | undefined;
                const initialText = popover.innerText;

                this.addEventListener("mouseenter", () => {
                    timeout = setTimeout(async () => {
                        popover.showPopover();

                        const { x, y } = await computePosition(this, popover);

                        Object.assign(popover.style, {
                            top: `${y}px`,
                            left: `${x}px`,
                        });
                    }, 250);
                });

                this.addEventListener("mouseleave", () => {
                    clearTimeout(timeout);
                    popover.hidePopover();
                    popover.innerText = initialText;
                    popover.removeAttribute("style");
                });
            }
        }
    }

    customElements.define("fern-tooltip", Tooltip);
</script>
