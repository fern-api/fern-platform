[
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/getting-started",
    "content": "The Primer API is used to manage Client Sessions, Payments and saved payment methods.
All other actions are either managed in the Universal Checkout implementation or in the Dashboard.
Check out:
Client Sessions

Universal Checkout

Managing Payments


Test the APIs yourself in our API Reference. Don't hesitate to reach out with any questions or feedback. You can email Primer directly at support@primer.io, or contact your Primer account manager.",
    "domain": "test.com",
    "objectID": "test:test.com:root..v2.3.uv.introduction.getting-started-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/introduction/getting-started",
    "title": "Getting Started",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/getting-started",
    "content": "Sandbox: https://api.sandbox.primer.io

Production: https://api.primer.io",
    "domain": "test.com",
    "hash": "#api-endpoint-deployments",
    "hierarchy": {
      "h0": {
        "title": "Getting Started",
      },
      "h2": {
        "id": "api-endpoint-deployments",
        "title": "API Endpoint Deployments",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.3.uv.introduction.getting-started-api-endpoint-deployments-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/introduction/getting-started",
    "title": "API Endpoint Deployments",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/getting-started",
    "code_snippets": [
      {
        "code": "curl -X POST 'https://api.primer.io/<ENDPOINT>' \
  --header 'X-Api-Version: 2.2'",
        "lang": "bash",
      },
    ],
    "content": "Primer makes updates to the APIs on a regular basis, as we release new features. To allow you to update your integration as you are ready, we allow for a X-Api-Version header to be passed on all API requests.
If you omit the version header, your request will default to the earliest supported version of the API.",
    "domain": "test.com",
    "hash": "#api-versions",
    "hierarchy": {
      "h0": {
        "title": "Getting Started",
      },
      "h2": {
        "id": "api-versions",
        "title": "API Versions",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.3.uv.introduction.getting-started-api-versions-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/introduction/getting-started",
    "title": "API Versions",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/getting-started",
    "content": "Read about the available versions of the APIs below on our Changelog.",
    "domain": "test.com",
    "hash": "#available-versions",
    "hierarchy": {
      "h0": {
        "title": "Getting Started",
      },
      "h2": {
        "id": "api-versions",
        "title": "API Versions",
      },
      "h3": {
        "id": "available-versions",
        "title": "Available Versions",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.3.uv.introduction.getting-started-available-versions-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/introduction/getting-started",
    "title": "Available Versions",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/authentication",
    "code_snippets": [
      {
        "code": "curl -X POST 'https://api.primer.io/<ENDPOINT>' \
  --header 'X-Api-Key: <YOUR_API_KEY>'",
        "lang": "bash",
      },
    ],
    "content": "Primer uses API keys to authenticate requests. You can manage API keys in the Developers area of the dashboard.
As API keys carry many privileges such as authorizing payments, it is important to keep them private and secure. Do not hardcode or share API keys (particularly in your source version control system), and they should only be used in your backend.
Authentication is handled via HTTP headers, specifically the X-Api-Key header.",
    "domain": "test.com",
    "objectID": "test:test.com:root..v2.3.uv.introduction.authentication-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/introduction/authentication",
    "title": "Authentication",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/authentication",
    "content": "Head up to the Developers area on the dashboard to manage your API keys.
You will be able to generate or revoke API keys and edit their respective scopes. Be aware that any changes to existing API keys will be reflected immediately and could cause unwanted side effects.",
    "domain": "test.com",
    "hash": "#managing-api-keys",
    "hierarchy": {
      "h0": {
        "title": "Authentication",
      },
      "h2": {
        "id": "managing-api-keys",
        "title": "Managing API Keys",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.3.uv.introduction.authentication-managing-api-keys-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/introduction/authentication",
    "title": "Managing API Keys",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/authentication",
    "content": "Scope Description 
client_tokens:write Create client tokens for use with the client SDK. 
third_party:webhook_trigger Allows you to post to our webhooks endpoint. API keys with this scope can be used to enable communication between your processor and Primer about important payment lifecycle events. 
transactions:authorize Authorize a payment 
transactions:cancel Cancel a payment. 
transactions:capture Submit a payment for settlement. 
transactions:retrieve Retrieve one or more payments. 
transactions:refund Refund a payment. 
payment_instrument:read Read stored payment methods. 
payment_instrument:write Write stored payment methods.",
    "domain": "test.com",
    "hash": "#available-scopes",
    "hierarchy": {
      "h0": {
        "title": "Authentication",
      },
      "h2": {
        "id": "available-scopes",
        "title": "Available scopes",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.3.uv.introduction.authentication-available-scopes-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/introduction/authentication",
    "title": "Available scopes",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/api-responses",
    "domain": "test.com",
    "objectID": "test:test.com:root..v2.3.uv.introduction.api-responses",
    "org_id": "test",
    "pathname": "/docs/api/introduction/api-responses",
    "title": "API Responses",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/api-responses",
    "content": "The following table summarizes the HTTP response codes you may receive from
the Primer REST API.
Status Code Description 
200 Success 
400 Bad Request 
401 Unauthorized 
403 Forbidden 
404 Entity Not Found 
409 Entity Already Exists 
422 Input Validation Failed",
    "domain": "test.com",
    "hash": "#status-codes",
    "hierarchy": {
      "h0": {
        "title": "API Responses",
      },
      "h2": {
        "id": "status-codes",
        "title": "Status Codes",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.3.uv.introduction.api-responses-status-codes-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/introduction/api-responses",
    "title": "Status Codes",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/api-responses",
    "code_snippets": [
      {
        "code": "{
  "error": {
    "errorId": "AnErrorId",
    "description": "A human description of the error.",
    "diagnosticsId": "1234567890",
    "validationErrors": []
  }
}",
        "lang": "json",
      },
    ],
    "content": "Primer uses conventional HTTP response codes to indicate the success or failure of an API request. HTTP codes in the 2XX range indicate a successful request, whereas codes in the 4XX range indicate a failed request usually due to invalid inputs or operations.
The format of the payload for all errors is common. When an unsuccessful request occurs, you will receive a payload in the following format:
All error payloads will be comprised of a unique errorId which you can use to identify the error, a human description description, and a diagnosticsId that you can quote when contacting the support team (support@primer.io). In case of a badly formed request, Primer will also return additional validationErrors.",
    "domain": "test.com",
    "hash": "#error-responses",
    "hierarchy": {
      "h0": {
        "title": "API Responses",
      },
      "h2": {
        "id": "error-responses",
        "title": "Error Responses",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.3.uv.introduction.api-responses-error-responses-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/introduction/api-responses",
    "title": "Error Responses",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/api-responses",
    "content": "As the payments are created, processed, and finalised, they go through a number of states that you will get as an API response, through webhook notifications, and in the Dashboard. These states are used across all processors, as processor specific states are mapped to these. An additional message, in the field processorMessage, from the processor may also be included that details the reason for the state, primarily on failure states.
Status Description 
PENDING The payment has been created by Primer but not yet authorized. 
FAILED The processor failed to process this payment. 
AUTHORIZED The payment is authorized and awaiting capture. 
SETTLING The payment has been submitted for settlement and funds will be settled later. 
PARTIALLY_SETTLED The payment has been partially settled. 
SETTLED Funds have been settled into your account. 
DECLINED This payment was declined by the processor, either at a gateway or acquirer level. See the reason object in your response payload for more details. 
CANCELLED The payment was cancelled prior to it being settled. 

Don't hesitate to reach out with any questions or feedback. You can email Primer directly at support@primer.io, or contact your Primer account manager.",
    "domain": "test.com",
    "hash": "#payment-status",
    "hierarchy": {
      "h0": {
        "title": "API Responses",
      },
      "h2": {
        "id": "payment-status",
        "title": "Payment Status",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.3.uv.introduction.api-responses-payment-status-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/introduction/api-responses",
    "title": "Payment Status",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/idempotency-key",
    "code_snippets": [
      {
        "code": "curl -X POST 'https://api.primer.io/<ENDPOINT>' \
  --header 'X-Idempotency-Key: <idempotency-key>'",
        "lang": "bash",
      },
    ],
    "content": "Primer supports a request idempotency mechanism for our Payments API. This optional feature enables you to safely retry a request without risking the user being charged or refunded multiple times.
This is particularly useful when an API call fails due to the request being invalid, due to a network issue, or if Primer is momentarily unavailable.
If this is the case, make another request with the same idempotency key:
If a request with the same idempotency key has already been successfully processed by Primer, the new request will be ignored. A 409 error will be returned with an errorId set to IdempotencyKeyAlreadyExists.

Otherwise, Primer will attempt to process the new request.


To make an idempotent request, generate an idempotency key and pass it to the header X-Idempotency-Key.
The way you generate the key is totally up to you, as long as it is unique per request attempt.
Keep in mind that a payment request resulting in a declined or failed payment is still considered Successfully processed for the API. Therefore, if you want to allow the user to retry an unsuccessful payment, make sure to not use the same idempotency key.
As a such, don't use anything too restrictive like an orderId for the idempotency key as multiple payment attempts and refunds can be made for a single order.",
    "domain": "test.com",
    "objectID": "test:test.com:root..v2.3.uv.introduction.idempotency-key-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/introduction/idempotency-key",
    "title": "Idempotency Key",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/loyalty-transactions",
    "content": "Primer's Loyalty API provides an interface to interact with 3rd party loyalty point and service providers.
All of the endpoints below reference a connectionId. This is the unique Primer identifier for your loyalty provider connection. Primer will provide this once the loyalty provider connection is created.
To identify the customer in the context of the loyalty provider, a customerId is also necessary.",
    "domain": "test.com",
    "objectID": "test:test.com:root..v2.3.uv.introduction.loyalty-transactions-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/introduction/loyalty-transactions",
    "title": "Loyalty Transactions",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/loyalty-transactions",
    "content": "Call the Loyalty Customers endpoint, which includes the customer's balance. In future this object could contain further details.",
    "domain": "test.com",
    "hash": "#get-the-customer-balance",
    "hierarchy": {
      "h0": {
        "title": "Loyalty Transactions",
      },
      "h2": {
        "id": "get-the-customer-balance",
        "title": "Get the customer balance",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.3.uv.introduction.loyalty-transactions-get-the-customer-balance-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/introduction/loyalty-transactions",
    "title": "Get the customer balance",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/loyalty-transactions",
    "content": "Call the Loyalty Transactions endpoint to create a REDEMPTION transaction.
Provide an orderId to link multiple transactions together.",
    "domain": "test.com",
    "hash": "#redeem-points",
    "hierarchy": {
      "h0": {
        "title": "Loyalty Transactions",
      },
      "h2": {
        "id": "redeem-points",
        "title": "Redeem points",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.3.uv.introduction.loyalty-transactions-redeem-points-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/introduction/loyalty-transactions",
    "title": "Redeem points",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/loyalty-transactions",
    "content": "Call the Loyalty Transactions endpoint to create a REFUND transaction. This transaction is completely independent from a redeem transaction.
Provide an orderId to link multiple transactions together.",
    "domain": "test.com",
    "hash": "#refund-points",
    "hierarchy": {
      "h0": {
        "title": "Loyalty Transactions",
      },
      "h2": {
        "id": "refund-points",
        "title": "Refund points",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.3.uv.introduction.loyalty-transactions-refund-points-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/introduction/loyalty-transactions",
    "title": "Refund points",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/loyalty-transactions",
    "content": "Call the Loyalty Transactions endpoint to retrieve a list of all your transactions. In most cases it makes sense to filter by connectionId. You can also filter by customerId or orderId.",
    "domain": "test.com",
    "hash": "#get-a-list-of-transactions",
    "hierarchy": {
      "h0": {
        "title": "Loyalty Transactions",
      },
      "h2": {
        "id": "get-a-list-of-transactions",
        "title": "Get a list of transactions",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.3.uv.introduction.loyalty-transactions-get-a-list-of-transactions-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/introduction/loyalty-transactions",
    "title": "Get a list of transactions",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "domain": "test.com",
    "objectID": "test:test.com:root..v2.3.uv.introduction.changelogs",
    "org_id": "test",
    "pathname": "/docs/api/introduction/changelogs",
    "title": "Changelogs",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "This version includes improvements to the Payments API.
Set X-Api-Version header to 2.3 to use v2.3 of the API.",
    "domain": "test.com",
    "hash": "#api-v23",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v23",
        "title": "API v2.3",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.3.uv.introduction.changelogs-api-v23-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/introduction/changelogs",
    "title": "API v2.3",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Improvements
The Payments API endpoints were modified to return error code IdempotencyKeyAlreadyExists  with status 409 when a payment request is submitted with an X-Idempotency-Keythat was already sent in a previous request.

The payment creation endpoint was improved to return the correct paymentMethodType

The payment status webhook was improved to return the correct paymentMethodType",
    "domain": "test.com",
    "hash": "#payments-api",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v23",
        "title": "API v2.3",
      },
      "h3": {
        "id": "payments-api",
        "title": "Payments API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.3.uv.introduction.changelogs-payments-api-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/introduction/changelogs",
    "title": "Payments API",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "This version includes improvements to the Client Session API, Payments API and the Payment Methods API.
You must set the X-Api-Version header to 2.2 to use v2.2 of the API.",
    "domain": "test.com",
    "hash": "#api-v22",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v22",
        "title": "API v2.2",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.3.uv.introduction.changelogs-api-v22-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/introduction/changelogs",
    "title": "API v2.2",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Added order.lineItems.productData on the request and response",
    "domain": "test.com",
    "hash": "#client-session-api",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v22",
        "title": "API v2.2",
      },
      "h3": {
        "id": "client-session-api",
        "title": "Client Session API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.3.uv.introduction.changelogs-client-session-api-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/introduction/changelogs",
    "title": "Client Session API",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Added order.lineItems.productData on the request and response",
    "domain": "test.com",
    "hash": "#payments-api-1",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v22",
        "title": "API v2.2",
      },
      "h3": {
        "id": "payments-api-1",
        "title": "Payments API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.3.uv.introduction.changelogs-payments-api-1-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/introduction/changelogs",
    "title": "Payments API",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Version 2.1 includes improvements to the Client Session API, Payments API and the Payment Methods API.
Starting API v2.1, the API Version X-Api-Version is a semantic version without a patch (e.g. 2.1) rather than a date 🎉
Set the X-Api-Version header to 2.1 to use v2.1 of the API.",
    "domain": "test.com",
    "hash": "#api-v21",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v21",
        "title": "API v2.1",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.3.uv.introduction.changelogs-api-v21-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/introduction/changelogs",
    "title": "API v2.1",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Added paymentMethod.paymentType and paymentMethod.descriptor on the request and response of the client session

Added order.lineItems[].productType on the request and response of the client session

Added GET /client-session to get the content of a client session

Added PATCH /client-session to update the content of a client session

Additional validation has been put in place to ensure that a currencyCode is always passed if any amount value is passed",
    "domain": "test.com",
    "hash": "#client-session-api-1",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v21",
        "title": "API v2.1",
      },
      "h3": {
        "id": "client-session-api-1",
        "title": "Client Session API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.3.uv.introduction.changelogs-client-session-api-1-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/introduction/changelogs",
    "title": "Client Session API",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Added paymentMethod.isVaulted boolean field to indicate whether the paymentMethod.paymentMethodToken in the response is a vaulted token (and can therefore be used for future payments) or not. This replaces vaultedPaymentMethodToken.

Added order.lineItems[].productType on the request and response

amount, currencyCode, customerId and orderId are now required fields when making a payment with a vaulted token (i.e. a recurring payment).

When paying with a vaulted token, additional validation has been put in place to ensure the customerId matches the customerId associated with the vaulted token.",
    "domain": "test.com",
    "hash": "#payments-api-2",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v21",
        "title": "API v2.1",
      },
      "h3": {
        "id": "payments-api-2",
        "title": "Payments API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.3.uv.introduction.changelogs-payments-api-2-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/introduction/changelogs",
    "title": "Payments API",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Added verify in POST /payment-instruments/{paymentMethodToken}/vault to set whether or not the payment method token should be verified before vaulting

Added isVerified to the payment method response",
    "domain": "test.com",
    "hash": "#payment-methods-api",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v21",
        "title": "API v2.1",
      },
      "h3": {
        "id": "payment-methods-api",
        "title": "Payment Methods API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.3.uv.introduction.changelogs-payment-methods-api-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/introduction/changelogs",
    "title": "Payment Methods API",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Version 2 includes improvements to the Client Session API and the Payments API.",
    "domain": "test.com",
    "hash": "#api-v2",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v2",
        "title": "API v2",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.3.uv.introduction.changelogs-api-v2-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/introduction/changelogs",
    "title": "API v2",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "X-API-Version -> 2021-09-27

Creating a payment using only a payment method token is now possible. The order, customer and metadata passed on the Client Session request is then used for the payment.

The create Client Session endpoint request was extended to include order, customer, etc.

All references to paymentInstrument from the previous Payments API version have been refactored to paymentMethod to be more consistent throughout

The customer billingAddress and shippingAddress fields are now all optional",
    "domain": "test.com",
    "hash": "#client-session-api-2",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v2",
        "title": "API v2",
      },
      "h3": {
        "id": "client-session-api-2",
        "title": "Client Session API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.3.uv.introduction.changelogs-client-session-api-2-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/introduction/changelogs",
    "title": "Client Session API",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "X-API-Version -> 2021-09-27

Creating a payment using only a payment method token is now possible. The order, customer and metadata passed on the Client Session request is then used for the payment.

The create payment endpoint request was extended to include order, customer, etc. It now more closely resembles the /client-session endpoint

The response of all the Payments API endpoints was refactored to match the create payment request structure

All references to paymentInstrument from the previous Payments API version have been refactored to paymentMethod to be more consistent throughout

All the payments API endpoints (create, capture, cancel, refund, etc.) are now versioned

paymentMethodData in PaymentMethod responses (for card payment method types) all now contain a first6digits field in addition to the last4digits returned. This is an opt-in field, so it is null by default.

The customer billingAddress and shippingAddress fields are now all optional",
    "domain": "test.com",
    "hash": "#payments-api-3",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v2",
        "title": "API v2",
      },
      "h3": {
        "id": "payments-api-3",
        "title": "Payments API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.3.uv.introduction.changelogs-payments-api-3-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/introduction/changelogs",
    "title": "Payments API",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/getting-started",
    "content": "The Primer API is used to manage Client Sessions, Payments and saved payment methods.
All other actions are either managed in the Universal Checkout implementation or in the Dashboard.
Check out:
Client Sessions

Universal Checkout

Managing Payments


Test the APIs yourself in our API Reference. Don't hesitate to reach out with any questions or feedback. You can email Primer directly at support@primer.io, or contact your Primer account manager.",
    "domain": "test.com",
    "objectID": "test:test.com:root..v2.3.uv.introduction.getting-started-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/introduction/getting-started",
    "title": "Getting Started",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/getting-started",
    "content": "Sandbox: https://api.sandbox.primer.io

Production: https://api.primer.io",
    "domain": "test.com",
    "hash": "#api-endpoint-deployments",
    "hierarchy": {
      "h0": {
        "title": "Getting Started",
      },
      "h2": {
        "id": "api-endpoint-deployments",
        "title": "API Endpoint Deployments",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.3.uv.introduction.getting-started-api-endpoint-deployments-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/introduction/getting-started",
    "title": "API Endpoint Deployments",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/getting-started",
    "code_snippets": [
      {
        "code": "curl -X POST 'https://api.primer.io/<ENDPOINT>' \
  --header 'X-Api-Version: 2.2'",
        "lang": "bash",
      },
    ],
    "content": "Primer makes updates to the APIs on a regular basis, as we release new features. To allow you to update your integration as you are ready, we allow for a X-Api-Version header to be passed on all API requests.
If you omit the version header, your request will default to the earliest supported version of the API.",
    "domain": "test.com",
    "hash": "#api-versions",
    "hierarchy": {
      "h0": {
        "title": "Getting Started",
      },
      "h2": {
        "id": "api-versions",
        "title": "API Versions",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.3.uv.introduction.getting-started-api-versions-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/introduction/getting-started",
    "title": "API Versions",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/getting-started",
    "content": "Read about the available versions of the APIs below on our Changelog.",
    "domain": "test.com",
    "hash": "#available-versions",
    "hierarchy": {
      "h0": {
        "title": "Getting Started",
      },
      "h2": {
        "id": "api-versions",
        "title": "API Versions",
      },
      "h3": {
        "id": "available-versions",
        "title": "Available Versions",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.3.uv.introduction.getting-started-available-versions-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/introduction/getting-started",
    "title": "Available Versions",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/authentication",
    "code_snippets": [
      {
        "code": "curl -X POST 'https://api.primer.io/<ENDPOINT>' \
  --header 'X-Api-Key: <YOUR_API_KEY>'",
        "lang": "bash",
      },
    ],
    "content": "Primer uses API keys to authenticate requests. You can manage API keys in the Developers area of the dashboard.
As API keys carry many privileges such as authorizing payments, it is important to keep them private and secure. Do not hardcode or share API keys (particularly in your source version control system), and they should only be used in your backend.
Authentication is handled via HTTP headers, specifically the X-Api-Key header.",
    "domain": "test.com",
    "objectID": "test:test.com:root..v2.3.uv.introduction.authentication-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/introduction/authentication",
    "title": "Authentication",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/authentication",
    "content": "Head up to the Developers area on the dashboard to manage your API keys.
You will be able to generate or revoke API keys and edit their respective scopes. Be aware that any changes to existing API keys will be reflected immediately and could cause unwanted side effects.",
    "domain": "test.com",
    "hash": "#managing-api-keys",
    "hierarchy": {
      "h0": {
        "title": "Authentication",
      },
      "h2": {
        "id": "managing-api-keys",
        "title": "Managing API Keys",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.3.uv.introduction.authentication-managing-api-keys-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/introduction/authentication",
    "title": "Managing API Keys",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/authentication",
    "content": "Scope Description 
client_tokens:write Create client tokens for use with the client SDK. 
third_party:webhook_trigger Allows you to post to our webhooks endpoint. API keys with this scope can be used to enable communication between your processor and Primer about important payment lifecycle events. 
transactions:authorize Authorize a payment 
transactions:cancel Cancel a payment. 
transactions:capture Submit a payment for settlement. 
transactions:retrieve Retrieve one or more payments. 
transactions:refund Refund a payment. 
payment_instrument:read Read stored payment methods. 
payment_instrument:write Write stored payment methods.",
    "domain": "test.com",
    "hash": "#available-scopes",
    "hierarchy": {
      "h0": {
        "title": "Authentication",
      },
      "h2": {
        "id": "available-scopes",
        "title": "Available scopes",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.3.uv.introduction.authentication-available-scopes-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/introduction/authentication",
    "title": "Available scopes",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/api-responses",
    "domain": "test.com",
    "objectID": "test:test.com:root..v2.3.uv.introduction.api-responses",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/introduction/api-responses",
    "title": "API Responses",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/api-responses",
    "content": "The following table summarizes the HTTP response codes you may receive from
the Primer REST API.
Status Code Description 
200 Success 
400 Bad Request 
401 Unauthorized 
403 Forbidden 
404 Entity Not Found 
409 Entity Already Exists 
422 Input Validation Failed",
    "domain": "test.com",
    "hash": "#status-codes",
    "hierarchy": {
      "h0": {
        "title": "API Responses",
      },
      "h2": {
        "id": "status-codes",
        "title": "Status Codes",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.3.uv.introduction.api-responses-status-codes-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/introduction/api-responses",
    "title": "Status Codes",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/api-responses",
    "code_snippets": [
      {
        "code": "{
  "error": {
    "errorId": "AnErrorId",
    "description": "A human description of the error.",
    "diagnosticsId": "1234567890",
    "validationErrors": []
  }
}",
        "lang": "json",
      },
    ],
    "content": "Primer uses conventional HTTP response codes to indicate the success or failure of an API request. HTTP codes in the 2XX range indicate a successful request, whereas codes in the 4XX range indicate a failed request usually due to invalid inputs or operations.
The format of the payload for all errors is common. When an unsuccessful request occurs, you will receive a payload in the following format:
All error payloads will be comprised of a unique errorId which you can use to identify the error, a human description description, and a diagnosticsId that you can quote when contacting the support team (support@primer.io). In case of a badly formed request, Primer will also return additional validationErrors.",
    "domain": "test.com",
    "hash": "#error-responses",
    "hierarchy": {
      "h0": {
        "title": "API Responses",
      },
      "h2": {
        "id": "error-responses",
        "title": "Error Responses",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.3.uv.introduction.api-responses-error-responses-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/introduction/api-responses",
    "title": "Error Responses",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/api-responses",
    "content": "As the payments are created, processed, and finalised, they go through a number of states that you will get as an API response, through webhook notifications, and in the Dashboard. These states are used across all processors, as processor specific states are mapped to these. An additional message, in the field processorMessage, from the processor may also be included that details the reason for the state, primarily on failure states.
Status Description 
PENDING The payment has been created by Primer but not yet authorized. 
FAILED The processor failed to process this payment. 
AUTHORIZED The payment is authorized and awaiting capture. 
SETTLING The payment has been submitted for settlement and funds will be settled later. 
PARTIALLY_SETTLED The payment has been partially settled. 
SETTLED Funds have been settled into your account. 
DECLINED This payment was declined by the processor, either at a gateway or acquirer level. See the reason object in your response payload for more details. 
CANCELLED The payment was cancelled prior to it being settled. 

Don't hesitate to reach out with any questions or feedback. You can email Primer directly at support@primer.io, or contact your Primer account manager.",
    "domain": "test.com",
    "hash": "#payment-status",
    "hierarchy": {
      "h0": {
        "title": "API Responses",
      },
      "h2": {
        "id": "payment-status",
        "title": "Payment Status",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.3.uv.introduction.api-responses-payment-status-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/introduction/api-responses",
    "title": "Payment Status",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/idempotency-key",
    "code_snippets": [
      {
        "code": "curl -X POST 'https://api.primer.io/<ENDPOINT>' \
  --header 'X-Idempotency-Key: <idempotency-key>'",
        "lang": "bash",
      },
    ],
    "content": "Primer supports a request idempotency mechanism for our Payments API. This optional feature enables you to safely retry a request without risking the user being charged or refunded multiple times.
This is particularly useful when an API call fails due to the request being invalid, due to a network issue, or if Primer is momentarily unavailable.
If this is the case, make another request with the same idempotency key:
If a request with the same idempotency key has already been successfully processed by Primer, the new request will be ignored. A 409 error will be returned with an errorId set to IdempotencyKeyAlreadyExists.

Otherwise, Primer will attempt to process the new request.


To make an idempotent request, generate an idempotency key and pass it to the header X-Idempotency-Key.
The way you generate the key is totally up to you, as long as it is unique per request attempt.
Keep in mind that a payment request resulting in a declined or failed payment is still considered Successfully processed for the API. Therefore, if you want to allow the user to retry an unsuccessful payment, make sure to not use the same idempotency key.
As a such, don't use anything too restrictive like an orderId for the idempotency key as multiple payment attempts and refunds can be made for a single order.",
    "domain": "test.com",
    "objectID": "test:test.com:root..v2.3.uv.introduction.idempotency-key-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/introduction/idempotency-key",
    "title": "Idempotency Key",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/loyalty-transactions",
    "content": "Primer's Loyalty API provides an interface to interact with 3rd party loyalty point and service providers.
All of the endpoints below reference a connectionId. This is the unique Primer identifier for your loyalty provider connection. Primer will provide this once the loyalty provider connection is created.
To identify the customer in the context of the loyalty provider, a customerId is also necessary.",
    "domain": "test.com",
    "objectID": "test:test.com:root..v2.3.uv.introduction.loyalty-transactions-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/introduction/loyalty-transactions",
    "title": "Loyalty Transactions",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/loyalty-transactions",
    "content": "Call the Loyalty Customers endpoint, which includes the customer's balance. In future this object could contain further details.",
    "domain": "test.com",
    "hash": "#get-the-customer-balance",
    "hierarchy": {
      "h0": {
        "title": "Loyalty Transactions",
      },
      "h2": {
        "id": "get-the-customer-balance",
        "title": "Get the customer balance",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.3.uv.introduction.loyalty-transactions-get-the-customer-balance-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/introduction/loyalty-transactions",
    "title": "Get the customer balance",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/loyalty-transactions",
    "content": "Call the Loyalty Transactions endpoint to create a REDEMPTION transaction.
Provide an orderId to link multiple transactions together.",
    "domain": "test.com",
    "hash": "#redeem-points",
    "hierarchy": {
      "h0": {
        "title": "Loyalty Transactions",
      },
      "h2": {
        "id": "redeem-points",
        "title": "Redeem points",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.3.uv.introduction.loyalty-transactions-redeem-points-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/introduction/loyalty-transactions",
    "title": "Redeem points",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/loyalty-transactions",
    "content": "Call the Loyalty Transactions endpoint to create a REFUND transaction. This transaction is completely independent from a redeem transaction.
Provide an orderId to link multiple transactions together.",
    "domain": "test.com",
    "hash": "#refund-points",
    "hierarchy": {
      "h0": {
        "title": "Loyalty Transactions",
      },
      "h2": {
        "id": "refund-points",
        "title": "Refund points",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.3.uv.introduction.loyalty-transactions-refund-points-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/introduction/loyalty-transactions",
    "title": "Refund points",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/loyalty-transactions",
    "content": "Call the Loyalty Transactions endpoint to retrieve a list of all your transactions. In most cases it makes sense to filter by connectionId. You can also filter by customerId or orderId.",
    "domain": "test.com",
    "hash": "#get-a-list-of-transactions",
    "hierarchy": {
      "h0": {
        "title": "Loyalty Transactions",
      },
      "h2": {
        "id": "get-a-list-of-transactions",
        "title": "Get a list of transactions",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.3.uv.introduction.loyalty-transactions-get-a-list-of-transactions-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/introduction/loyalty-transactions",
    "title": "Get a list of transactions",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "domain": "test.com",
    "objectID": "test:test.com:root..v2.3.uv.introduction.changelogs",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/introduction/changelogs",
    "title": "Changelogs",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "This version includes improvements to the Payments API.
Set X-Api-Version header to 2.3 to use v2.3 of the API.",
    "domain": "test.com",
    "hash": "#api-v23",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v23",
        "title": "API v2.3",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.3.uv.introduction.changelogs-api-v23-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/introduction/changelogs",
    "title": "API v2.3",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Improvements
The Payments API endpoints were modified to return error code IdempotencyKeyAlreadyExists  with status 409 when a payment request is submitted with an X-Idempotency-Keythat was already sent in a previous request.

The payment creation endpoint was improved to return the correct paymentMethodType

The payment status webhook was improved to return the correct paymentMethodType",
    "domain": "test.com",
    "hash": "#payments-api",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v23",
        "title": "API v2.3",
      },
      "h3": {
        "id": "payments-api",
        "title": "Payments API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.3.uv.introduction.changelogs-payments-api-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/introduction/changelogs",
    "title": "Payments API",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "This version includes improvements to the Client Session API, Payments API and the Payment Methods API.
You must set the X-Api-Version header to 2.2 to use v2.2 of the API.",
    "domain": "test.com",
    "hash": "#api-v22",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v22",
        "title": "API v2.2",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.3.uv.introduction.changelogs-api-v22-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/introduction/changelogs",
    "title": "API v2.2",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Added order.lineItems.productData on the request and response",
    "domain": "test.com",
    "hash": "#client-session-api",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v22",
        "title": "API v2.2",
      },
      "h3": {
        "id": "client-session-api",
        "title": "Client Session API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.3.uv.introduction.changelogs-client-session-api-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/introduction/changelogs",
    "title": "Client Session API",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Added order.lineItems.productData on the request and response",
    "domain": "test.com",
    "hash": "#payments-api-1",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v22",
        "title": "API v2.2",
      },
      "h3": {
        "id": "payments-api-1",
        "title": "Payments API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.3.uv.introduction.changelogs-payments-api-1-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/introduction/changelogs",
    "title": "Payments API",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Version 2.1 includes improvements to the Client Session API, Payments API and the Payment Methods API.
Starting API v2.1, the API Version X-Api-Version is a semantic version without a patch (e.g. 2.1) rather than a date 🎉
Set the X-Api-Version header to 2.1 to use v2.1 of the API.",
    "domain": "test.com",
    "hash": "#api-v21",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v21",
        "title": "API v2.1",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.3.uv.introduction.changelogs-api-v21-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/introduction/changelogs",
    "title": "API v2.1",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Added paymentMethod.paymentType and paymentMethod.descriptor on the request and response of the client session

Added order.lineItems[].productType on the request and response of the client session

Added GET /client-session to get the content of a client session

Added PATCH /client-session to update the content of a client session

Additional validation has been put in place to ensure that a currencyCode is always passed if any amount value is passed",
    "domain": "test.com",
    "hash": "#client-session-api-1",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v21",
        "title": "API v2.1",
      },
      "h3": {
        "id": "client-session-api-1",
        "title": "Client Session API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.3.uv.introduction.changelogs-client-session-api-1-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/introduction/changelogs",
    "title": "Client Session API",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Added paymentMethod.isVaulted boolean field to indicate whether the paymentMethod.paymentMethodToken in the response is a vaulted token (and can therefore be used for future payments) or not. This replaces vaultedPaymentMethodToken.

Added order.lineItems[].productType on the request and response

amount, currencyCode, customerId and orderId are now required fields when making a payment with a vaulted token (i.e. a recurring payment).

When paying with a vaulted token, additional validation has been put in place to ensure the customerId matches the customerId associated with the vaulted token.",
    "domain": "test.com",
    "hash": "#payments-api-2",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v21",
        "title": "API v2.1",
      },
      "h3": {
        "id": "payments-api-2",
        "title": "Payments API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.3.uv.introduction.changelogs-payments-api-2-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/introduction/changelogs",
    "title": "Payments API",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Added verify in POST /payment-instruments/{paymentMethodToken}/vault to set whether or not the payment method token should be verified before vaulting

Added isVerified to the payment method response",
    "domain": "test.com",
    "hash": "#payment-methods-api",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v21",
        "title": "API v2.1",
      },
      "h3": {
        "id": "payment-methods-api",
        "title": "Payment Methods API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.3.uv.introduction.changelogs-payment-methods-api-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/introduction/changelogs",
    "title": "Payment Methods API",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Version 2 includes improvements to the Client Session API and the Payments API.",
    "domain": "test.com",
    "hash": "#api-v2",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v2",
        "title": "API v2",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.3.uv.introduction.changelogs-api-v2-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/introduction/changelogs",
    "title": "API v2",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "X-API-Version -> 2021-09-27

Creating a payment using only a payment method token is now possible. The order, customer and metadata passed on the Client Session request is then used for the payment.

The create Client Session endpoint request was extended to include order, customer, etc.

All references to paymentInstrument from the previous Payments API version have been refactored to paymentMethod to be more consistent throughout

The customer billingAddress and shippingAddress fields are now all optional",
    "domain": "test.com",
    "hash": "#client-session-api-2",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v2",
        "title": "API v2",
      },
      "h3": {
        "id": "client-session-api-2",
        "title": "Client Session API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.3.uv.introduction.changelogs-client-session-api-2-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/introduction/changelogs",
    "title": "Client Session API",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "X-API-Version -> 2021-09-27

Creating a payment using only a payment method token is now possible. The order, customer and metadata passed on the Client Session request is then used for the payment.

The create payment endpoint request was extended to include order, customer, etc. It now more closely resembles the /client-session endpoint

The response of all the Payments API endpoints was refactored to match the create payment request structure

All references to paymentInstrument from the previous Payments API version have been refactored to paymentMethod to be more consistent throughout

All the payments API endpoints (create, capture, cancel, refund, etc.) are now versioned

paymentMethodData in PaymentMethod responses (for card payment method types) all now contain a first6digits field in addition to the last4digits returned. This is an opt-in field, so it is null by default.

The customer billingAddress and shippingAddress fields are now all optional",
    "domain": "test.com",
    "hash": "#payments-api-3",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v2",
        "title": "API v2",
      },
      "h3": {
        "id": "payments-api-3",
        "title": "Payments API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.3.uv.introduction.changelogs-payments-api-3-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/introduction/changelogs",
    "title": "Payments API",
    "type": "markdown",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/getting-started",
    "content": "The Primer API is used to manage Client Sessions, Payments and saved payment methods.
All other actions are either managed in the Universal Checkout implementation or in the Dashboard.
Check out:
Client Sessions

Universal Checkout

Managing Payments


Test the APIs yourself in our API Reference. Don't hesitate to reach out with any questions or feedback. You can email Primer directly at support@primer.io, or contact your Primer account manager.",
    "domain": "test.com",
    "objectID": "test:test.com:root..v2.2.uv.introduction.getting-started-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/introduction/getting-started",
    "title": "Getting Started",
    "type": "markdown",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/getting-started",
    "content": "Sandbox: https://api.sandbox.primer.io

Production: https://api.primer.io",
    "domain": "test.com",
    "hash": "#api-endpoint-deployments",
    "hierarchy": {
      "h0": {
        "title": "Getting Started",
      },
      "h2": {
        "id": "api-endpoint-deployments",
        "title": "API Endpoint Deployments",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.2.uv.introduction.getting-started-api-endpoint-deployments-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/introduction/getting-started",
    "title": "API Endpoint Deployments",
    "type": "markdown",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/getting-started",
    "code_snippets": [
      {
        "code": "curl -X POST 'https://api.primer.io/<ENDPOINT>' \
  --header 'X-Api-Version: 2.2'",
        "lang": "bash",
      },
    ],
    "content": "Primer makes updates to the APIs on a regular basis, as we release new features. To allow you to update your integration as you are ready, we allow for a X-Api-Version header to be passed on all API requests.
If you omit the version header, your request will default to the earliest supported version of the API.",
    "domain": "test.com",
    "hash": "#api-versions",
    "hierarchy": {
      "h0": {
        "title": "Getting Started",
      },
      "h2": {
        "id": "api-versions",
        "title": "API Versions",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.2.uv.introduction.getting-started-api-versions-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/introduction/getting-started",
    "title": "API Versions",
    "type": "markdown",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/getting-started",
    "content": "Read about the available versions of the APIs below on our Changelog.",
    "domain": "test.com",
    "hash": "#available-versions",
    "hierarchy": {
      "h0": {
        "title": "Getting Started",
      },
      "h2": {
        "id": "api-versions",
        "title": "API Versions",
      },
      "h3": {
        "id": "available-versions",
        "title": "Available Versions",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.2.uv.introduction.getting-started-available-versions-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/introduction/getting-started",
    "title": "Available Versions",
    "type": "markdown",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/authentication",
    "code_snippets": [
      {
        "code": "curl -X POST 'https://api.primer.io/<ENDPOINT>' \
  --header 'X-Api-Key: <YOUR_API_KEY>'",
        "lang": "bash",
      },
    ],
    "content": "Primer uses API keys to authenticate requests. You can manage API keys in the Developers area of the dashboard.
As API keys carry many privileges such as authorizing payments, it is important to keep them private and secure. Do not hardcode or share API keys (particularly in your source version control system), and they should only be used in your backend.
Authentication is handled via HTTP headers, specifically the X-Api-Key header.",
    "domain": "test.com",
    "objectID": "test:test.com:root..v2.2.uv.introduction.authentication-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/introduction/authentication",
    "title": "Authentication",
    "type": "markdown",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/authentication",
    "content": "Head up to the Developers area on the dashboard to manage your API keys.
You will be able to generate or revoke API keys and edit their respective scopes. Be aware that any changes to existing API keys will be reflected immediately and could cause unwanted side effects.",
    "domain": "test.com",
    "hash": "#managing-api-keys",
    "hierarchy": {
      "h0": {
        "title": "Authentication",
      },
      "h2": {
        "id": "managing-api-keys",
        "title": "Managing API Keys",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.2.uv.introduction.authentication-managing-api-keys-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/introduction/authentication",
    "title": "Managing API Keys",
    "type": "markdown",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/authentication",
    "content": "Scope Description 
client_tokens:write Create client tokens for use with the client SDK. 
third_party:webhook_trigger Allows you to post to our webhooks endpoint. API keys with this scope can be used to enable communication between your processor and Primer about important payment lifecycle events. 
transactions:authorize Authorize a payment 
transactions:cancel Cancel a payment. 
transactions:capture Submit a payment for settlement. 
transactions:retrieve Retrieve one or more payments. 
transactions:refund Refund a payment. 
payment_instrument:read Read stored payment methods. 
payment_instrument:write Write stored payment methods.",
    "domain": "test.com",
    "hash": "#available-scopes",
    "hierarchy": {
      "h0": {
        "title": "Authentication",
      },
      "h2": {
        "id": "available-scopes",
        "title": "Available scopes",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.2.uv.introduction.authentication-available-scopes-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/introduction/authentication",
    "title": "Available scopes",
    "type": "markdown",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/api-responses",
    "domain": "test.com",
    "objectID": "test:test.com:root..v2.2.uv.introduction.api-responses",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/introduction/api-responses",
    "title": "API Responses",
    "type": "markdown",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/api-responses",
    "content": "The following table summarizes the HTTP response codes you may receive from
the Primer REST API.
Status Code Description 
200 Success 
400 Bad Request 
401 Unauthorized 
403 Forbidden 
404 Entity Not Found 
409 Entity Already Exists 
422 Input Validation Failed",
    "domain": "test.com",
    "hash": "#status-codes",
    "hierarchy": {
      "h0": {
        "title": "API Responses",
      },
      "h2": {
        "id": "status-codes",
        "title": "Status Codes",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.2.uv.introduction.api-responses-status-codes-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/introduction/api-responses",
    "title": "Status Codes",
    "type": "markdown",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/api-responses",
    "code_snippets": [
      {
        "code": "{
  "error": {
    "errorId": "AnErrorId",
    "description": "A human description of the error.",
    "diagnosticsId": "1234567890",
    "validationErrors": []
  }
}",
        "lang": "json",
      },
    ],
    "content": "Primer uses conventional HTTP response codes to indicate the success or failure of an API request. HTTP codes in the 2XX range indicate a successful request, whereas codes in the 4XX range indicate a failed request usually due to invalid inputs or operations.
The format of the payload for all errors is common. When an unsuccessful request occurs, you will receive a payload in the following format:
All error payloads will be comprised of a unique errorId which you can use to identify the error, a human description description, and a diagnosticsId that you can quote when contacting the support team (support@primer.io). In case of a badly formed request, Primer will also return additional validationErrors.",
    "domain": "test.com",
    "hash": "#error-responses",
    "hierarchy": {
      "h0": {
        "title": "API Responses",
      },
      "h2": {
        "id": "error-responses",
        "title": "Error Responses",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.2.uv.introduction.api-responses-error-responses-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/introduction/api-responses",
    "title": "Error Responses",
    "type": "markdown",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/api-responses",
    "content": "As the payments are created, processed, and finalised, they go through a number of states that you will get as an API response, through webhook notifications, and in the Dashboard. These states are used across all processors, as processor specific states are mapped to these. An additional message, in the field processorMessage, from the processor may also be included that details the reason for the state, primarily on failure states.
Status Description 
PENDING The payment has been created by Primer but not yet authorized. 
FAILED The processor failed to process this payment. 
AUTHORIZED The payment is authorized and awaiting capture. 
SETTLING The payment has been submitted for settlement and funds will be settled later. 
PARTIALLY_SETTLED The payment has been partially settled. 
SETTLED Funds have been settled into your account. 
DECLINED This payment was declined by the processor, either at a gateway or acquirer level. See the reason object in your response payload for more details. 
CANCELLED The payment was cancelled prior to it being settled. 

Don't hesitate to reach out with any questions or feedback. You can email Primer directly at support@primer.io, or contact your Primer account manager.",
    "domain": "test.com",
    "hash": "#payment-status",
    "hierarchy": {
      "h0": {
        "title": "API Responses",
      },
      "h2": {
        "id": "payment-status",
        "title": "Payment Status",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.2.uv.introduction.api-responses-payment-status-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/introduction/api-responses",
    "title": "Payment Status",
    "type": "markdown",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/idempotency-key",
    "code_snippets": [
      {
        "code": "curl -X POST 'https://api.primer.io/<ENDPOINT>' \
  --header 'X-Idempotency-Key: <idempotency-key>'",
        "lang": "bash",
      },
    ],
    "content": "Primer supports a request idempotency mechanism for our Payments API. This optional feature enables you to safely retry a request without risking the user being charged or refunded multiple times.
This is particularly useful when an API call fails due to the request being invalid, due to a network issue, or if Primer is momentarily unavailable.
If this is the case, make another request with the same idempotency key:
If a request with the same idempotency key has already been successfully processed by Primer, the new request will be ignored. A 409 error will be returned with an errorId set to IdempotencyKeyAlreadyExists.

Otherwise, Primer will attempt to process the new request.


To make an idempotent request, generate an idempotency key and pass it to the header X-Idempotency-Key.
The way you generate the key is totally up to you, as long as it is unique per request attempt.
Keep in mind that a payment request resulting in a declined or failed payment is still considered Successfully processed for the API. Therefore, if you want to allow the user to retry an unsuccessful payment, make sure to not use the same idempotency key.
As a such, don't use anything too restrictive like an orderId for the idempotency key as multiple payment attempts and refunds can be made for a single order.",
    "domain": "test.com",
    "objectID": "test:test.com:root..v2.2.uv.introduction.idempotency-key-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/introduction/idempotency-key",
    "title": "Idempotency Key",
    "type": "markdown",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/loyalty-transactions",
    "content": "Primer's Loyalty API provides an interface to interact with 3rd party loyalty point and service providers.
All of the endpoints below reference a connectionId. This is the unique Primer identifier for your loyalty provider connection. Primer will provide this once the loyalty provider connection is created.
To identify the customer in the context of the loyalty provider, a customerId is also necessary.",
    "domain": "test.com",
    "objectID": "test:test.com:root..v2.2.uv.introduction.loyalty-transactions-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/introduction/loyalty-transactions",
    "title": "Loyalty Transactions",
    "type": "markdown",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/loyalty-transactions",
    "content": "Call the Loyalty Customers endpoint, which includes the customer's balance. In future this object could contain further details.",
    "domain": "test.com",
    "hash": "#get-the-customer-balance",
    "hierarchy": {
      "h0": {
        "title": "Loyalty Transactions",
      },
      "h2": {
        "id": "get-the-customer-balance",
        "title": "Get the customer balance",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.2.uv.introduction.loyalty-transactions-get-the-customer-balance-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/introduction/loyalty-transactions",
    "title": "Get the customer balance",
    "type": "markdown",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/loyalty-transactions",
    "content": "Call the Loyalty Transactions endpoint to create a REDEMPTION transaction.
Provide an orderId to link multiple transactions together.",
    "domain": "test.com",
    "hash": "#redeem-points",
    "hierarchy": {
      "h0": {
        "title": "Loyalty Transactions",
      },
      "h2": {
        "id": "redeem-points",
        "title": "Redeem points",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.2.uv.introduction.loyalty-transactions-redeem-points-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/introduction/loyalty-transactions",
    "title": "Redeem points",
    "type": "markdown",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/loyalty-transactions",
    "content": "Call the Loyalty Transactions endpoint to create a REFUND transaction. This transaction is completely independent from a redeem transaction.
Provide an orderId to link multiple transactions together.",
    "domain": "test.com",
    "hash": "#refund-points",
    "hierarchy": {
      "h0": {
        "title": "Loyalty Transactions",
      },
      "h2": {
        "id": "refund-points",
        "title": "Refund points",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.2.uv.introduction.loyalty-transactions-refund-points-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/introduction/loyalty-transactions",
    "title": "Refund points",
    "type": "markdown",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/loyalty-transactions",
    "content": "Call the Loyalty Transactions endpoint to retrieve a list of all your transactions. In most cases it makes sense to filter by connectionId. You can also filter by customerId or orderId.",
    "domain": "test.com",
    "hash": "#get-a-list-of-transactions",
    "hierarchy": {
      "h0": {
        "title": "Loyalty Transactions",
      },
      "h2": {
        "id": "get-a-list-of-transactions",
        "title": "Get a list of transactions",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.2.uv.introduction.loyalty-transactions-get-a-list-of-transactions-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/introduction/loyalty-transactions",
    "title": "Get a list of transactions",
    "type": "markdown",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "domain": "test.com",
    "objectID": "test:test.com:root..v2.2.uv.introduction.changelogs",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/introduction/changelogs",
    "title": "Changelogs",
    "type": "markdown",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "This version includes improvements to the Payments API.
Set X-Api-Version header to 2.3 to use v2.3 of the API.",
    "domain": "test.com",
    "hash": "#api-v23",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v23",
        "title": "API v2.3",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.2.uv.introduction.changelogs-api-v23-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/introduction/changelogs",
    "title": "API v2.3",
    "type": "markdown",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Improvements
The Payments API endpoints were modified to return error code IdempotencyKeyAlreadyExists  with status 409 when a payment request is submitted with an X-Idempotency-Keythat was already sent in a previous request.

The payment creation endpoint was improved to return the correct paymentMethodType

The payment status webhook was improved to return the correct paymentMethodType",
    "domain": "test.com",
    "hash": "#payments-api",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v23",
        "title": "API v2.3",
      },
      "h3": {
        "id": "payments-api",
        "title": "Payments API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.2.uv.introduction.changelogs-payments-api-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/introduction/changelogs",
    "title": "Payments API",
    "type": "markdown",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "This version includes improvements to the Client Session API, Payments API and the Payment Methods API.
You must set the X-Api-Version header to 2.2 to use v2.2 of the API.",
    "domain": "test.com",
    "hash": "#api-v22",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v22",
        "title": "API v2.2",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.2.uv.introduction.changelogs-api-v22-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/introduction/changelogs",
    "title": "API v2.2",
    "type": "markdown",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Added order.lineItems.productData on the request and response",
    "domain": "test.com",
    "hash": "#client-session-api",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v22",
        "title": "API v2.2",
      },
      "h3": {
        "id": "client-session-api",
        "title": "Client Session API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.2.uv.introduction.changelogs-client-session-api-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/introduction/changelogs",
    "title": "Client Session API",
    "type": "markdown",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Added order.lineItems.productData on the request and response",
    "domain": "test.com",
    "hash": "#payments-api-1",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v22",
        "title": "API v2.2",
      },
      "h3": {
        "id": "payments-api-1",
        "title": "Payments API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.2.uv.introduction.changelogs-payments-api-1-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/introduction/changelogs",
    "title": "Payments API",
    "type": "markdown",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Version 2.1 includes improvements to the Client Session API, Payments API and the Payment Methods API.
Starting API v2.1, the API Version X-Api-Version is a semantic version without a patch (e.g. 2.1) rather than a date 🎉
Set the X-Api-Version header to 2.1 to use v2.1 of the API.",
    "domain": "test.com",
    "hash": "#api-v21",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v21",
        "title": "API v2.1",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.2.uv.introduction.changelogs-api-v21-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/introduction/changelogs",
    "title": "API v2.1",
    "type": "markdown",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Added paymentMethod.paymentType and paymentMethod.descriptor on the request and response of the client session

Added order.lineItems[].productType on the request and response of the client session

Added GET /client-session to get the content of a client session

Added PATCH /client-session to update the content of a client session

Additional validation has been put in place to ensure that a currencyCode is always passed if any amount value is passed",
    "domain": "test.com",
    "hash": "#client-session-api-1",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v21",
        "title": "API v2.1",
      },
      "h3": {
        "id": "client-session-api-1",
        "title": "Client Session API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.2.uv.introduction.changelogs-client-session-api-1-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/introduction/changelogs",
    "title": "Client Session API",
    "type": "markdown",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Added paymentMethod.isVaulted boolean field to indicate whether the paymentMethod.paymentMethodToken in the response is a vaulted token (and can therefore be used for future payments) or not. This replaces vaultedPaymentMethodToken.

Added order.lineItems[].productType on the request and response

amount, currencyCode, customerId and orderId are now required fields when making a payment with a vaulted token (i.e. a recurring payment).

When paying with a vaulted token, additional validation has been put in place to ensure the customerId matches the customerId associated with the vaulted token.",
    "domain": "test.com",
    "hash": "#payments-api-2",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v21",
        "title": "API v2.1",
      },
      "h3": {
        "id": "payments-api-2",
        "title": "Payments API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.2.uv.introduction.changelogs-payments-api-2-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/introduction/changelogs",
    "title": "Payments API",
    "type": "markdown",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Added verify in POST /payment-instruments/{paymentMethodToken}/vault to set whether or not the payment method token should be verified before vaulting

Added isVerified to the payment method response",
    "domain": "test.com",
    "hash": "#payment-methods-api",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v21",
        "title": "API v2.1",
      },
      "h3": {
        "id": "payment-methods-api",
        "title": "Payment Methods API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.2.uv.introduction.changelogs-payment-methods-api-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/introduction/changelogs",
    "title": "Payment Methods API",
    "type": "markdown",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Version 2 includes improvements to the Client Session API and the Payments API.",
    "domain": "test.com",
    "hash": "#api-v2",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v2",
        "title": "API v2",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.2.uv.introduction.changelogs-api-v2-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/introduction/changelogs",
    "title": "API v2",
    "type": "markdown",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "X-API-Version -> 2021-09-27

Creating a payment using only a payment method token is now possible. The order, customer and metadata passed on the Client Session request is then used for the payment.

The create Client Session endpoint request was extended to include order, customer, etc.

All references to paymentInstrument from the previous Payments API version have been refactored to paymentMethod to be more consistent throughout

The customer billingAddress and shippingAddress fields are now all optional",
    "domain": "test.com",
    "hash": "#client-session-api-2",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v2",
        "title": "API v2",
      },
      "h3": {
        "id": "client-session-api-2",
        "title": "Client Session API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.2.uv.introduction.changelogs-client-session-api-2-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/introduction/changelogs",
    "title": "Client Session API",
    "type": "markdown",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "X-API-Version -> 2021-09-27

Creating a payment using only a payment method token is now possible. The order, customer and metadata passed on the Client Session request is then used for the payment.

The create payment endpoint request was extended to include order, customer, etc. It now more closely resembles the /client-session endpoint

The response of all the Payments API endpoints was refactored to match the create payment request structure

All references to paymentInstrument from the previous Payments API version have been refactored to paymentMethod to be more consistent throughout

All the payments API endpoints (create, capture, cancel, refund, etc.) are now versioned

paymentMethodData in PaymentMethod responses (for card payment method types) all now contain a first6digits field in addition to the last4digits returned. This is an opt-in field, so it is null by default.

The customer billingAddress and shippingAddress fields are now all optional",
    "domain": "test.com",
    "hash": "#payments-api-3",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v2",
        "title": "API v2",
      },
      "h3": {
        "id": "payments-api-3",
        "title": "Payments API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.2.uv.introduction.changelogs-payments-api-3-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/introduction/changelogs",
    "title": "Payments API",
    "type": "markdown",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/getting-started",
    "content": "The Primer API is used to manage Client Sessions, Payments and saved payment methods.
All other actions are either managed in the Universal Checkout implementation or in the Dashboard.
Check out:
Client Sessions

Universal Checkout

Managing Payments


Test the APIs yourself in our API Reference. Don't hesitate to reach out with any questions or feedback. You can email Primer directly at support@primer.io, or contact your Primer account manager.",
    "domain": "test.com",
    "objectID": "test:test.com:root..v2.1.uv.introduction.getting-started-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/introduction/getting-started",
    "title": "Getting Started",
    "type": "markdown",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/getting-started",
    "content": "Sandbox: https://api.sandbox.primer.io

Production: https://api.primer.io",
    "domain": "test.com",
    "hash": "#api-endpoint-deployments",
    "hierarchy": {
      "h0": {
        "title": "Getting Started",
      },
      "h2": {
        "id": "api-endpoint-deployments",
        "title": "API Endpoint Deployments",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.1.uv.introduction.getting-started-api-endpoint-deployments-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/introduction/getting-started",
    "title": "API Endpoint Deployments",
    "type": "markdown",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/getting-started",
    "code_snippets": [
      {
        "code": "curl -X POST 'https://api.primer.io/<ENDPOINT>' \
  --header 'X-Api-Version: 2.2'",
        "lang": "bash",
      },
    ],
    "content": "Primer makes updates to the APIs on a regular basis, as we release new features. To allow you to update your integration as you are ready, we allow for a X-Api-Version header to be passed on all API requests.
If you omit the version header, your request will default to the earliest supported version of the API.",
    "domain": "test.com",
    "hash": "#api-versions",
    "hierarchy": {
      "h0": {
        "title": "Getting Started",
      },
      "h2": {
        "id": "api-versions",
        "title": "API Versions",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.1.uv.introduction.getting-started-api-versions-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/introduction/getting-started",
    "title": "API Versions",
    "type": "markdown",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/getting-started",
    "content": "Read about the available versions of the APIs below on our Changelog.",
    "domain": "test.com",
    "hash": "#available-versions",
    "hierarchy": {
      "h0": {
        "title": "Getting Started",
      },
      "h2": {
        "id": "api-versions",
        "title": "API Versions",
      },
      "h3": {
        "id": "available-versions",
        "title": "Available Versions",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.1.uv.introduction.getting-started-available-versions-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/introduction/getting-started",
    "title": "Available Versions",
    "type": "markdown",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/authentication",
    "code_snippets": [
      {
        "code": "curl -X POST 'https://api.primer.io/<ENDPOINT>' \
  --header 'X-Api-Key: <YOUR_API_KEY>'",
        "lang": "bash",
      },
    ],
    "content": "Primer uses API keys to authenticate requests. You can manage API keys in the Developers area of the dashboard.
As API keys carry many privileges such as authorizing payments, it is important to keep them private and secure. Do not hardcode or share API keys (particularly in your source version control system), and they should only be used in your backend.
Authentication is handled via HTTP headers, specifically the X-Api-Key header.",
    "domain": "test.com",
    "objectID": "test:test.com:root..v2.1.uv.introduction.authentication-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/introduction/authentication",
    "title": "Authentication",
    "type": "markdown",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/authentication",
    "content": "Head up to the Developers area on the dashboard to manage your API keys.
You will be able to generate or revoke API keys and edit their respective scopes. Be aware that any changes to existing API keys will be reflected immediately and could cause unwanted side effects.",
    "domain": "test.com",
    "hash": "#managing-api-keys",
    "hierarchy": {
      "h0": {
        "title": "Authentication",
      },
      "h2": {
        "id": "managing-api-keys",
        "title": "Managing API Keys",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.1.uv.introduction.authentication-managing-api-keys-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/introduction/authentication",
    "title": "Managing API Keys",
    "type": "markdown",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/authentication",
    "content": "Scope Description 
client_tokens:write Create client tokens for use with the client SDK. 
third_party:webhook_trigger Allows you to post to our webhooks endpoint. API keys with this scope can be used to enable communication between your processor and Primer about important payment lifecycle events. 
transactions:authorize Authorize a payment 
transactions:cancel Cancel a payment. 
transactions:capture Submit a payment for settlement. 
transactions:retrieve Retrieve one or more payments. 
transactions:refund Refund a payment. 
payment_instrument:read Read stored payment methods. 
payment_instrument:write Write stored payment methods.",
    "domain": "test.com",
    "hash": "#available-scopes",
    "hierarchy": {
      "h0": {
        "title": "Authentication",
      },
      "h2": {
        "id": "available-scopes",
        "title": "Available scopes",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.1.uv.introduction.authentication-available-scopes-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/introduction/authentication",
    "title": "Available scopes",
    "type": "markdown",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/api-responses",
    "domain": "test.com",
    "objectID": "test:test.com:root..v2.1.uv.introduction.api-responses",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/introduction/api-responses",
    "title": "API Responses",
    "type": "markdown",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/api-responses",
    "content": "The following table summarizes the HTTP response codes you may receive from
the Primer REST API.
Status Code Description 
200 Success 
400 Bad Request 
401 Unauthorized 
403 Forbidden 
404 Entity Not Found 
409 Entity Already Exists 
422 Input Validation Failed",
    "domain": "test.com",
    "hash": "#status-codes",
    "hierarchy": {
      "h0": {
        "title": "API Responses",
      },
      "h2": {
        "id": "status-codes",
        "title": "Status Codes",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.1.uv.introduction.api-responses-status-codes-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/introduction/api-responses",
    "title": "Status Codes",
    "type": "markdown",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/api-responses",
    "code_snippets": [
      {
        "code": "{
  "error": {
    "errorId": "AnErrorId",
    "description": "A human description of the error.",
    "diagnosticsId": "1234567890",
    "validationErrors": []
  }
}",
        "lang": "json",
      },
    ],
    "content": "Primer uses conventional HTTP response codes to indicate the success or failure of an API request. HTTP codes in the 2XX range indicate a successful request, whereas codes in the 4XX range indicate a failed request usually due to invalid inputs or operations.
The format of the payload for all errors is common. When an unsuccessful request occurs, you will receive a payload in the following format:
All error payloads will be comprised of a unique errorId which you can use to identify the error, a human description description, and a diagnosticsId that you can quote when contacting the support team (support@primer.io). In case of a badly formed request, Primer will also return additional validationErrors.",
    "domain": "test.com",
    "hash": "#error-responses",
    "hierarchy": {
      "h0": {
        "title": "API Responses",
      },
      "h2": {
        "id": "error-responses",
        "title": "Error Responses",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.1.uv.introduction.api-responses-error-responses-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/introduction/api-responses",
    "title": "Error Responses",
    "type": "markdown",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/api-responses",
    "content": "As the payments are created, processed, and finalised, they go through a number of states that you will get as an API response, through webhook notifications, and in the Dashboard. These states are used across all processors, as processor specific states are mapped to these. An additional message, in the field processorMessage, from the processor may also be included that details the reason for the state, primarily on failure states.
Status Description 
PENDING The payment has been created by Primer but not yet authorized. 
FAILED The processor failed to process this payment. 
AUTHORIZED The payment is authorized and awaiting capture. 
SETTLING The payment has been submitted for settlement and funds will be settled later. 
PARTIALLY_SETTLED The payment has been partially settled. 
SETTLED Funds have been settled into your account. 
DECLINED This payment was declined by the processor, either at a gateway or acquirer level. See the reason object in your response payload for more details. 
CANCELLED The payment was cancelled prior to it being settled. 

Don't hesitate to reach out with any questions or feedback. You can email Primer directly at support@primer.io, or contact your Primer account manager.",
    "domain": "test.com",
    "hash": "#payment-status",
    "hierarchy": {
      "h0": {
        "title": "API Responses",
      },
      "h2": {
        "id": "payment-status",
        "title": "Payment Status",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.1.uv.introduction.api-responses-payment-status-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/introduction/api-responses",
    "title": "Payment Status",
    "type": "markdown",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/idempotency-key",
    "code_snippets": [
      {
        "code": "curl -X POST 'https://api.primer.io/<ENDPOINT>' \
  --header 'X-Idempotency-Key: <idempotency-key>'",
        "lang": "bash",
      },
    ],
    "content": "Primer supports a request idempotency mechanism for our Payments API. This optional feature enables you to safely retry a request without risking the user being charged or refunded multiple times.
This is particularly useful when an API call fails due to the request being invalid, due to a network issue, or if Primer is momentarily unavailable.
If this is the case, make another request with the same idempotency key:
If a request with the same idempotency key has already been successfully processed by Primer, the new request will be ignored. A 409 error will be returned with an errorId set to IdempotencyKeyAlreadyExists.

Otherwise, Primer will attempt to process the new request.


To make an idempotent request, generate an idempotency key and pass it to the header X-Idempotency-Key.
The way you generate the key is totally up to you, as long as it is unique per request attempt.
Keep in mind that a payment request resulting in a declined or failed payment is still considered Successfully processed for the API. Therefore, if you want to allow the user to retry an unsuccessful payment, make sure to not use the same idempotency key.
As a such, don't use anything too restrictive like an orderId for the idempotency key as multiple payment attempts and refunds can be made for a single order.",
    "domain": "test.com",
    "objectID": "test:test.com:root..v2.1.uv.introduction.idempotency-key-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/introduction/idempotency-key",
    "title": "Idempotency Key",
    "type": "markdown",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/loyalty-transactions",
    "content": "Primer's Loyalty API provides an interface to interact with 3rd party loyalty point and service providers.
All of the endpoints below reference a connectionId. This is the unique Primer identifier for your loyalty provider connection. Primer will provide this once the loyalty provider connection is created.
To identify the customer in the context of the loyalty provider, a customerId is also necessary.",
    "domain": "test.com",
    "objectID": "test:test.com:root..v2.1.uv.introduction.loyalty-transactions-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/introduction/loyalty-transactions",
    "title": "Loyalty Transactions",
    "type": "markdown",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/loyalty-transactions",
    "content": "Call the Loyalty Customers endpoint, which includes the customer's balance. In future this object could contain further details.",
    "domain": "test.com",
    "hash": "#get-the-customer-balance",
    "hierarchy": {
      "h0": {
        "title": "Loyalty Transactions",
      },
      "h2": {
        "id": "get-the-customer-balance",
        "title": "Get the customer balance",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.1.uv.introduction.loyalty-transactions-get-the-customer-balance-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/introduction/loyalty-transactions",
    "title": "Get the customer balance",
    "type": "markdown",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/loyalty-transactions",
    "content": "Call the Loyalty Transactions endpoint to create a REDEMPTION transaction.
Provide an orderId to link multiple transactions together.",
    "domain": "test.com",
    "hash": "#redeem-points",
    "hierarchy": {
      "h0": {
        "title": "Loyalty Transactions",
      },
      "h2": {
        "id": "redeem-points",
        "title": "Redeem points",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.1.uv.introduction.loyalty-transactions-redeem-points-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/introduction/loyalty-transactions",
    "title": "Redeem points",
    "type": "markdown",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/loyalty-transactions",
    "content": "Call the Loyalty Transactions endpoint to create a REFUND transaction. This transaction is completely independent from a redeem transaction.
Provide an orderId to link multiple transactions together.",
    "domain": "test.com",
    "hash": "#refund-points",
    "hierarchy": {
      "h0": {
        "title": "Loyalty Transactions",
      },
      "h2": {
        "id": "refund-points",
        "title": "Refund points",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.1.uv.introduction.loyalty-transactions-refund-points-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/introduction/loyalty-transactions",
    "title": "Refund points",
    "type": "markdown",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/loyalty-transactions",
    "content": "Call the Loyalty Transactions endpoint to retrieve a list of all your transactions. In most cases it makes sense to filter by connectionId. You can also filter by customerId or orderId.",
    "domain": "test.com",
    "hash": "#get-a-list-of-transactions",
    "hierarchy": {
      "h0": {
        "title": "Loyalty Transactions",
      },
      "h2": {
        "id": "get-a-list-of-transactions",
        "title": "Get a list of transactions",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.1.uv.introduction.loyalty-transactions-get-a-list-of-transactions-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/introduction/loyalty-transactions",
    "title": "Get a list of transactions",
    "type": "markdown",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "domain": "test.com",
    "objectID": "test:test.com:root..v2.1.uv.introduction.changelogs",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/introduction/changelogs",
    "title": "Changelogs",
    "type": "markdown",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "This version includes improvements to the Payments API.
Set X-Api-Version header to 2.3 to use v2.3 of the API.",
    "domain": "test.com",
    "hash": "#api-v23",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v23",
        "title": "API v2.3",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.1.uv.introduction.changelogs-api-v23-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/introduction/changelogs",
    "title": "API v2.3",
    "type": "markdown",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Improvements
The Payments API endpoints were modified to return error code IdempotencyKeyAlreadyExists  with status 409 when a payment request is submitted with an X-Idempotency-Keythat was already sent in a previous request.

The payment creation endpoint was improved to return the correct paymentMethodType

The payment status webhook was improved to return the correct paymentMethodType",
    "domain": "test.com",
    "hash": "#payments-api",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v23",
        "title": "API v2.3",
      },
      "h3": {
        "id": "payments-api",
        "title": "Payments API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.1.uv.introduction.changelogs-payments-api-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/introduction/changelogs",
    "title": "Payments API",
    "type": "markdown",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "This version includes improvements to the Client Session API, Payments API and the Payment Methods API.
You must set the X-Api-Version header to 2.2 to use v2.2 of the API.",
    "domain": "test.com",
    "hash": "#api-v22",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v22",
        "title": "API v2.2",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.1.uv.introduction.changelogs-api-v22-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/introduction/changelogs",
    "title": "API v2.2",
    "type": "markdown",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Added order.lineItems.productData on the request and response",
    "domain": "test.com",
    "hash": "#client-session-api",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v22",
        "title": "API v2.2",
      },
      "h3": {
        "id": "client-session-api",
        "title": "Client Session API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.1.uv.introduction.changelogs-client-session-api-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/introduction/changelogs",
    "title": "Client Session API",
    "type": "markdown",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Added order.lineItems.productData on the request and response",
    "domain": "test.com",
    "hash": "#payments-api-1",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v22",
        "title": "API v2.2",
      },
      "h3": {
        "id": "payments-api-1",
        "title": "Payments API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.1.uv.introduction.changelogs-payments-api-1-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/introduction/changelogs",
    "title": "Payments API",
    "type": "markdown",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Version 2.1 includes improvements to the Client Session API, Payments API and the Payment Methods API.
Starting API v2.1, the API Version X-Api-Version is a semantic version without a patch (e.g. 2.1) rather than a date 🎉
Set the X-Api-Version header to 2.1 to use v2.1 of the API.",
    "domain": "test.com",
    "hash": "#api-v21",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v21",
        "title": "API v2.1",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.1.uv.introduction.changelogs-api-v21-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/introduction/changelogs",
    "title": "API v2.1",
    "type": "markdown",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Added paymentMethod.paymentType and paymentMethod.descriptor on the request and response of the client session

Added order.lineItems[].productType on the request and response of the client session

Added GET /client-session to get the content of a client session

Added PATCH /client-session to update the content of a client session

Additional validation has been put in place to ensure that a currencyCode is always passed if any amount value is passed",
    "domain": "test.com",
    "hash": "#client-session-api-1",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v21",
        "title": "API v2.1",
      },
      "h3": {
        "id": "client-session-api-1",
        "title": "Client Session API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.1.uv.introduction.changelogs-client-session-api-1-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/introduction/changelogs",
    "title": "Client Session API",
    "type": "markdown",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Added paymentMethod.isVaulted boolean field to indicate whether the paymentMethod.paymentMethodToken in the response is a vaulted token (and can therefore be used for future payments) or not. This replaces vaultedPaymentMethodToken.

Added order.lineItems[].productType on the request and response

amount, currencyCode, customerId and orderId are now required fields when making a payment with a vaulted token (i.e. a recurring payment).

When paying with a vaulted token, additional validation has been put in place to ensure the customerId matches the customerId associated with the vaulted token.",
    "domain": "test.com",
    "hash": "#payments-api-2",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v21",
        "title": "API v2.1",
      },
      "h3": {
        "id": "payments-api-2",
        "title": "Payments API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.1.uv.introduction.changelogs-payments-api-2-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/introduction/changelogs",
    "title": "Payments API",
    "type": "markdown",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Added verify in POST /payment-instruments/{paymentMethodToken}/vault to set whether or not the payment method token should be verified before vaulting

Added isVerified to the payment method response",
    "domain": "test.com",
    "hash": "#payment-methods-api",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v21",
        "title": "API v2.1",
      },
      "h3": {
        "id": "payment-methods-api",
        "title": "Payment Methods API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.1.uv.introduction.changelogs-payment-methods-api-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/introduction/changelogs",
    "title": "Payment Methods API",
    "type": "markdown",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Version 2 includes improvements to the Client Session API and the Payments API.",
    "domain": "test.com",
    "hash": "#api-v2",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v2",
        "title": "API v2",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.1.uv.introduction.changelogs-api-v2-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/introduction/changelogs",
    "title": "API v2",
    "type": "markdown",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "X-API-Version -> 2021-09-27

Creating a payment using only a payment method token is now possible. The order, customer and metadata passed on the Client Session request is then used for the payment.

The create Client Session endpoint request was extended to include order, customer, etc.

All references to paymentInstrument from the previous Payments API version have been refactored to paymentMethod to be more consistent throughout

The customer billingAddress and shippingAddress fields are now all optional",
    "domain": "test.com",
    "hash": "#client-session-api-2",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v2",
        "title": "API v2",
      },
      "h3": {
        "id": "client-session-api-2",
        "title": "Client Session API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.1.uv.introduction.changelogs-client-session-api-2-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/introduction/changelogs",
    "title": "Client Session API",
    "type": "markdown",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "X-API-Version -> 2021-09-27

Creating a payment using only a payment method token is now possible. The order, customer and metadata passed on the Client Session request is then used for the payment.

The create payment endpoint request was extended to include order, customer, etc. It now more closely resembles the /client-session endpoint

The response of all the Payments API endpoints was refactored to match the create payment request structure

All references to paymentInstrument from the previous Payments API version have been refactored to paymentMethod to be more consistent throughout

All the payments API endpoints (create, capture, cancel, refund, etc.) are now versioned

paymentMethodData in PaymentMethod responses (for card payment method types) all now contain a first6digits field in addition to the last4digits returned. This is an opt-in field, so it is null by default.

The customer billingAddress and shippingAddress fields are now all optional",
    "domain": "test.com",
    "hash": "#payments-api-3",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v2",
        "title": "API v2",
      },
      "h3": {
        "id": "payments-api-3",
        "title": "Payments API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.1.uv.introduction.changelogs-payments-api-3-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/introduction/changelogs",
    "title": "Payments API",
    "type": "markdown",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/getting-started",
    "content": "The Primer API is used to manage Client Sessions, Payments and saved payment methods.
All other actions are either managed in the Universal Checkout implementation or in the Dashboard.
Check out:
Client Sessions

Universal Checkout

Managing Payments


Test the APIs yourself in our API Reference. Don't hesitate to reach out with any questions or feedback. You can email Primer directly at support@primer.io, or contact your Primer account manager.",
    "domain": "test.com",
    "objectID": "test:test.com:root..v2.uv.introduction.getting-started-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2/introduction/getting-started",
    "title": "Getting Started",
    "type": "markdown",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/getting-started",
    "content": "Sandbox: https://api.sandbox.primer.io

Production: https://api.primer.io",
    "domain": "test.com",
    "hash": "#api-endpoint-deployments",
    "hierarchy": {
      "h0": {
        "title": "Getting Started",
      },
      "h2": {
        "id": "api-endpoint-deployments",
        "title": "API Endpoint Deployments",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.uv.introduction.getting-started-api-endpoint-deployments-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2/introduction/getting-started",
    "title": "API Endpoint Deployments",
    "type": "markdown",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/getting-started",
    "code_snippets": [
      {
        "code": "curl -X POST 'https://api.primer.io/<ENDPOINT>' \
  --header 'X-Api-Version: 2.2'",
        "lang": "bash",
      },
    ],
    "content": "Primer makes updates to the APIs on a regular basis, as we release new features. To allow you to update your integration as you are ready, we allow for a X-Api-Version header to be passed on all API requests.
If you omit the version header, your request will default to the earliest supported version of the API.",
    "domain": "test.com",
    "hash": "#api-versions",
    "hierarchy": {
      "h0": {
        "title": "Getting Started",
      },
      "h2": {
        "id": "api-versions",
        "title": "API Versions",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.uv.introduction.getting-started-api-versions-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2/introduction/getting-started",
    "title": "API Versions",
    "type": "markdown",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/getting-started",
    "content": "Read about the available versions of the APIs below on our Changelog.",
    "domain": "test.com",
    "hash": "#available-versions",
    "hierarchy": {
      "h0": {
        "title": "Getting Started",
      },
      "h2": {
        "id": "api-versions",
        "title": "API Versions",
      },
      "h3": {
        "id": "available-versions",
        "title": "Available Versions",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.uv.introduction.getting-started-available-versions-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2/introduction/getting-started",
    "title": "Available Versions",
    "type": "markdown",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/authentication",
    "code_snippets": [
      {
        "code": "curl -X POST 'https://api.primer.io/<ENDPOINT>' \
  --header 'X-Api-Key: <YOUR_API_KEY>'",
        "lang": "bash",
      },
    ],
    "content": "Primer uses API keys to authenticate requests. You can manage API keys in the Developers area of the dashboard.
As API keys carry many privileges such as authorizing payments, it is important to keep them private and secure. Do not hardcode or share API keys (particularly in your source version control system), and they should only be used in your backend.
Authentication is handled via HTTP headers, specifically the X-Api-Key header.",
    "domain": "test.com",
    "objectID": "test:test.com:root..v2.uv.introduction.authentication-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2/introduction/authentication",
    "title": "Authentication",
    "type": "markdown",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/authentication",
    "content": "Head up to the Developers area on the dashboard to manage your API keys.
You will be able to generate or revoke API keys and edit their respective scopes. Be aware that any changes to existing API keys will be reflected immediately and could cause unwanted side effects.",
    "domain": "test.com",
    "hash": "#managing-api-keys",
    "hierarchy": {
      "h0": {
        "title": "Authentication",
      },
      "h2": {
        "id": "managing-api-keys",
        "title": "Managing API Keys",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.uv.introduction.authentication-managing-api-keys-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2/introduction/authentication",
    "title": "Managing API Keys",
    "type": "markdown",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/authentication",
    "content": "Scope Description 
client_tokens:write Create client tokens for use with the client SDK. 
third_party:webhook_trigger Allows you to post to our webhooks endpoint. API keys with this scope can be used to enable communication between your processor and Primer about important payment lifecycle events. 
transactions:authorize Authorize a payment 
transactions:cancel Cancel a payment. 
transactions:capture Submit a payment for settlement. 
transactions:retrieve Retrieve one or more payments. 
transactions:refund Refund a payment. 
payment_instrument:read Read stored payment methods. 
payment_instrument:write Write stored payment methods.",
    "domain": "test.com",
    "hash": "#available-scopes",
    "hierarchy": {
      "h0": {
        "title": "Authentication",
      },
      "h2": {
        "id": "available-scopes",
        "title": "Available scopes",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.uv.introduction.authentication-available-scopes-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2/introduction/authentication",
    "title": "Available scopes",
    "type": "markdown",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/api-responses",
    "domain": "test.com",
    "objectID": "test:test.com:root..v2.uv.introduction.api-responses",
    "org_id": "test",
    "pathname": "/docs/api/v2/introduction/api-responses",
    "title": "API Responses",
    "type": "markdown",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/api-responses",
    "content": "The following table summarizes the HTTP response codes you may receive from
the Primer REST API.
Status Code Description 
200 Success 
400 Bad Request 
401 Unauthorized 
403 Forbidden 
404 Entity Not Found 
409 Entity Already Exists 
422 Input Validation Failed",
    "domain": "test.com",
    "hash": "#status-codes",
    "hierarchy": {
      "h0": {
        "title": "API Responses",
      },
      "h2": {
        "id": "status-codes",
        "title": "Status Codes",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.uv.introduction.api-responses-status-codes-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2/introduction/api-responses",
    "title": "Status Codes",
    "type": "markdown",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/api-responses",
    "code_snippets": [
      {
        "code": "{
  "error": {
    "errorId": "AnErrorId",
    "description": "A human description of the error.",
    "diagnosticsId": "1234567890",
    "validationErrors": []
  }
}",
        "lang": "json",
      },
    ],
    "content": "Primer uses conventional HTTP response codes to indicate the success or failure of an API request. HTTP codes in the 2XX range indicate a successful request, whereas codes in the 4XX range indicate a failed request usually due to invalid inputs or operations.
The format of the payload for all errors is common. When an unsuccessful request occurs, you will receive a payload in the following format:
All error payloads will be comprised of a unique errorId which you can use to identify the error, a human description description, and a diagnosticsId that you can quote when contacting the support team (support@primer.io). In case of a badly formed request, Primer will also return additional validationErrors.",
    "domain": "test.com",
    "hash": "#error-responses",
    "hierarchy": {
      "h0": {
        "title": "API Responses",
      },
      "h2": {
        "id": "error-responses",
        "title": "Error Responses",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.uv.introduction.api-responses-error-responses-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2/introduction/api-responses",
    "title": "Error Responses",
    "type": "markdown",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/api-responses",
    "content": "As the payments are created, processed, and finalised, they go through a number of states that you will get as an API response, through webhook notifications, and in the Dashboard. These states are used across all processors, as processor specific states are mapped to these. An additional message, in the field processorMessage, from the processor may also be included that details the reason for the state, primarily on failure states.
Status Description 
PENDING The payment has been created by Primer but not yet authorized. 
FAILED The processor failed to process this payment. 
AUTHORIZED The payment is authorized and awaiting capture. 
SETTLING The payment has been submitted for settlement and funds will be settled later. 
PARTIALLY_SETTLED The payment has been partially settled. 
SETTLED Funds have been settled into your account. 
DECLINED This payment was declined by the processor, either at a gateway or acquirer level. See the reason object in your response payload for more details. 
CANCELLED The payment was cancelled prior to it being settled. 

Don't hesitate to reach out with any questions or feedback. You can email Primer directly at support@primer.io, or contact your Primer account manager.",
    "domain": "test.com",
    "hash": "#payment-status",
    "hierarchy": {
      "h0": {
        "title": "API Responses",
      },
      "h2": {
        "id": "payment-status",
        "title": "Payment Status",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.uv.introduction.api-responses-payment-status-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2/introduction/api-responses",
    "title": "Payment Status",
    "type": "markdown",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/idempotency-key",
    "code_snippets": [
      {
        "code": "curl -X POST 'https://api.primer.io/<ENDPOINT>' \
  --header 'X-Idempotency-Key: <idempotency-key>'",
        "lang": "bash",
      },
    ],
    "content": "Primer supports a request idempotency mechanism for our Payments API. This optional feature enables you to safely retry a request without risking the user being charged or refunded multiple times.
This is particularly useful when an API call fails due to the request being invalid, due to a network issue, or if Primer is momentarily unavailable.
If this is the case, make another request with the same idempotency key:
If a request with the same idempotency key has already been successfully processed by Primer, the new request will be ignored. A 409 error will be returned with an errorId set to IdempotencyKeyAlreadyExists.

Otherwise, Primer will attempt to process the new request.


To make an idempotent request, generate an idempotency key and pass it to the header X-Idempotency-Key.
The way you generate the key is totally up to you, as long as it is unique per request attempt.
Keep in mind that a payment request resulting in a declined or failed payment is still considered Successfully processed for the API. Therefore, if you want to allow the user to retry an unsuccessful payment, make sure to not use the same idempotency key.
As a such, don't use anything too restrictive like an orderId for the idempotency key as multiple payment attempts and refunds can be made for a single order.",
    "domain": "test.com",
    "objectID": "test:test.com:root..v2.uv.introduction.idempotency-key-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2/introduction/idempotency-key",
    "title": "Idempotency Key",
    "type": "markdown",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/loyalty-transactions",
    "content": "Primer's Loyalty API provides an interface to interact with 3rd party loyalty point and service providers.
All of the endpoints below reference a connectionId. This is the unique Primer identifier for your loyalty provider connection. Primer will provide this once the loyalty provider connection is created.
To identify the customer in the context of the loyalty provider, a customerId is also necessary.",
    "domain": "test.com",
    "objectID": "test:test.com:root..v2.uv.introduction.loyalty-transactions-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2/introduction/loyalty-transactions",
    "title": "Loyalty Transactions",
    "type": "markdown",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/loyalty-transactions",
    "content": "Call the Loyalty Customers endpoint, which includes the customer's balance. In future this object could contain further details.",
    "domain": "test.com",
    "hash": "#get-the-customer-balance",
    "hierarchy": {
      "h0": {
        "title": "Loyalty Transactions",
      },
      "h2": {
        "id": "get-the-customer-balance",
        "title": "Get the customer balance",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.uv.introduction.loyalty-transactions-get-the-customer-balance-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2/introduction/loyalty-transactions",
    "title": "Get the customer balance",
    "type": "markdown",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/loyalty-transactions",
    "content": "Call the Loyalty Transactions endpoint to create a REDEMPTION transaction.
Provide an orderId to link multiple transactions together.",
    "domain": "test.com",
    "hash": "#redeem-points",
    "hierarchy": {
      "h0": {
        "title": "Loyalty Transactions",
      },
      "h2": {
        "id": "redeem-points",
        "title": "Redeem points",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.uv.introduction.loyalty-transactions-redeem-points-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2/introduction/loyalty-transactions",
    "title": "Redeem points",
    "type": "markdown",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/loyalty-transactions",
    "content": "Call the Loyalty Transactions endpoint to create a REFUND transaction. This transaction is completely independent from a redeem transaction.
Provide an orderId to link multiple transactions together.",
    "domain": "test.com",
    "hash": "#refund-points",
    "hierarchy": {
      "h0": {
        "title": "Loyalty Transactions",
      },
      "h2": {
        "id": "refund-points",
        "title": "Refund points",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.uv.introduction.loyalty-transactions-refund-points-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2/introduction/loyalty-transactions",
    "title": "Refund points",
    "type": "markdown",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/loyalty-transactions",
    "content": "Call the Loyalty Transactions endpoint to retrieve a list of all your transactions. In most cases it makes sense to filter by connectionId. You can also filter by customerId or orderId.",
    "domain": "test.com",
    "hash": "#get-a-list-of-transactions",
    "hierarchy": {
      "h0": {
        "title": "Loyalty Transactions",
      },
      "h2": {
        "id": "get-a-list-of-transactions",
        "title": "Get a list of transactions",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.uv.introduction.loyalty-transactions-get-a-list-of-transactions-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2/introduction/loyalty-transactions",
    "title": "Get a list of transactions",
    "type": "markdown",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "domain": "test.com",
    "objectID": "test:test.com:root..v2.uv.introduction.changelogs",
    "org_id": "test",
    "pathname": "/docs/api/v2/introduction/changelogs",
    "title": "Changelogs",
    "type": "markdown",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "This version includes improvements to the Payments API.
Set X-Api-Version header to 2.3 to use v2.3 of the API.",
    "domain": "test.com",
    "hash": "#api-v23",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v23",
        "title": "API v2.3",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.uv.introduction.changelogs-api-v23-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2/introduction/changelogs",
    "title": "API v2.3",
    "type": "markdown",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Improvements
The Payments API endpoints were modified to return error code IdempotencyKeyAlreadyExists  with status 409 when a payment request is submitted with an X-Idempotency-Keythat was already sent in a previous request.

The payment creation endpoint was improved to return the correct paymentMethodType

The payment status webhook was improved to return the correct paymentMethodType",
    "domain": "test.com",
    "hash": "#payments-api",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v23",
        "title": "API v2.3",
      },
      "h3": {
        "id": "payments-api",
        "title": "Payments API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.uv.introduction.changelogs-payments-api-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2/introduction/changelogs",
    "title": "Payments API",
    "type": "markdown",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "This version includes improvements to the Client Session API, Payments API and the Payment Methods API.
You must set the X-Api-Version header to 2.2 to use v2.2 of the API.",
    "domain": "test.com",
    "hash": "#api-v22",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v22",
        "title": "API v2.2",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.uv.introduction.changelogs-api-v22-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2/introduction/changelogs",
    "title": "API v2.2",
    "type": "markdown",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Added order.lineItems.productData on the request and response",
    "domain": "test.com",
    "hash": "#client-session-api",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v22",
        "title": "API v2.2",
      },
      "h3": {
        "id": "client-session-api",
        "title": "Client Session API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.uv.introduction.changelogs-client-session-api-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2/introduction/changelogs",
    "title": "Client Session API",
    "type": "markdown",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Added order.lineItems.productData on the request and response",
    "domain": "test.com",
    "hash": "#payments-api-1",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v22",
        "title": "API v2.2",
      },
      "h3": {
        "id": "payments-api-1",
        "title": "Payments API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.uv.introduction.changelogs-payments-api-1-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2/introduction/changelogs",
    "title": "Payments API",
    "type": "markdown",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Version 2.1 includes improvements to the Client Session API, Payments API and the Payment Methods API.
Starting API v2.1, the API Version X-Api-Version is a semantic version without a patch (e.g. 2.1) rather than a date 🎉
Set the X-Api-Version header to 2.1 to use v2.1 of the API.",
    "domain": "test.com",
    "hash": "#api-v21",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v21",
        "title": "API v2.1",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.uv.introduction.changelogs-api-v21-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2/introduction/changelogs",
    "title": "API v2.1",
    "type": "markdown",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Added paymentMethod.paymentType and paymentMethod.descriptor on the request and response of the client session

Added order.lineItems[].productType on the request and response of the client session

Added GET /client-session to get the content of a client session

Added PATCH /client-session to update the content of a client session

Additional validation has been put in place to ensure that a currencyCode is always passed if any amount value is passed",
    "domain": "test.com",
    "hash": "#client-session-api-1",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v21",
        "title": "API v2.1",
      },
      "h3": {
        "id": "client-session-api-1",
        "title": "Client Session API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.uv.introduction.changelogs-client-session-api-1-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2/introduction/changelogs",
    "title": "Client Session API",
    "type": "markdown",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Added paymentMethod.isVaulted boolean field to indicate whether the paymentMethod.paymentMethodToken in the response is a vaulted token (and can therefore be used for future payments) or not. This replaces vaultedPaymentMethodToken.

Added order.lineItems[].productType on the request and response

amount, currencyCode, customerId and orderId are now required fields when making a payment with a vaulted token (i.e. a recurring payment).

When paying with a vaulted token, additional validation has been put in place to ensure the customerId matches the customerId associated with the vaulted token.",
    "domain": "test.com",
    "hash": "#payments-api-2",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v21",
        "title": "API v2.1",
      },
      "h3": {
        "id": "payments-api-2",
        "title": "Payments API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.uv.introduction.changelogs-payments-api-2-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2/introduction/changelogs",
    "title": "Payments API",
    "type": "markdown",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Added verify in POST /payment-instruments/{paymentMethodToken}/vault to set whether or not the payment method token should be verified before vaulting

Added isVerified to the payment method response",
    "domain": "test.com",
    "hash": "#payment-methods-api",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v21",
        "title": "API v2.1",
      },
      "h3": {
        "id": "payment-methods-api",
        "title": "Payment Methods API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.uv.introduction.changelogs-payment-methods-api-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2/introduction/changelogs",
    "title": "Payment Methods API",
    "type": "markdown",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "Version 2 includes improvements to the Client Session API and the Payments API.",
    "domain": "test.com",
    "hash": "#api-v2",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v2",
        "title": "API v2",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root..v2.uv.introduction.changelogs-api-v2-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2/introduction/changelogs",
    "title": "API v2",
    "type": "markdown",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "X-API-Version -> 2021-09-27

Creating a payment using only a payment method token is now possible. The order, customer and metadata passed on the Client Session request is then used for the payment.

The create Client Session endpoint request was extended to include order, customer, etc.

All references to paymentInstrument from the previous Payments API version have been refactored to paymentMethod to be more consistent throughout

The customer billingAddress and shippingAddress fields are now all optional",
    "domain": "test.com",
    "hash": "#client-session-api-2",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v2",
        "title": "API v2",
      },
      "h3": {
        "id": "client-session-api-2",
        "title": "Client Session API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.uv.introduction.changelogs-client-session-api-2-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2/introduction/changelogs",
    "title": "Client Session API",
    "type": "markdown",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/introduction",
        "title": "Introduction",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/introduction/changelogs",
    "content": "X-API-Version -> 2021-09-27

Creating a payment using only a payment method token is now possible. The order, customer and metadata passed on the Client Session request is then used for the payment.

The create payment endpoint request was extended to include order, customer, etc. It now more closely resembles the /client-session endpoint

The response of all the Payments API endpoints was refactored to match the create payment request structure

All references to paymentInstrument from the previous Payments API version have been refactored to paymentMethod to be more consistent throughout

All the payments API endpoints (create, capture, cancel, refund, etc.) are now versioned

paymentMethodData in PaymentMethod responses (for card payment method types) all now contain a first6digits field in addition to the last4digits returned. This is an opt-in field, so it is null by default.

The customer billingAddress and shippingAddress fields are now all optional",
    "domain": "test.com",
    "hash": "#payments-api-3",
    "hierarchy": {
      "h0": {
        "title": "Changelogs",
      },
      "h2": {
        "id": "api-v2",
        "title": "API v2",
      },
      "h3": {
        "id": "payments-api-3",
        "title": "Payments API",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root..v2.uv.introduction.changelogs-payments-api-3-chunk:0",
    "org_id": "test",
    "pathname": "/docs/api/v2/introduction/changelogs",
    "title": "Payments API",
    "type": "markdown",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_clientSessionApi.retrieveClientSideToken",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/client-session-api",
        "title": "Client Session API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/client-session-api/retrieve-client-side-token",
    "default_environment_id": "Default",
    "description": "This API call retrieves all the details associated with the client session corresponding to the client token that is provided in the request. The fields with empty values are excluded from the response.",
    "domain": "test.com",
    "endpoint_path": "/client-session",
    "endpoint_path_alternates": [
      "/client-session",
      "https://api.sandbox.primer.io/client-session",
      "https://api.sandbox.primer.io/client-session",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "GET",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_clientSessionApi.subpackage_clientSessionApi.retrieveClientSideToken",
    "org_id": "test",
    "pathname": "/docs/api/api-reference/client-session-api/retrieve-client-side-token",
    "response_type": "json",
    "title": "Retrieve a client session",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_clientSessionApi.createClientSideToken",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/client-session-api",
        "title": "Client Session API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/client-session-api/create-client-side-token",
    "default_environment_id": "Default",
    "description": "Creating a client session generates a client token: a temporary key used to initialize Universal Checkout and authenticate it against your account.
Universal Checkout automatically retrieves all the settings from the client session and the Dashboard to configure the payment methods and the checkout experience.


Note:
When creating a Client Session, please make sure to provide currencyCode, orderId, and at least one of amount or lineItems.
If any of these are not yet available, you can provide them w
hen making the payment request.


POST /client-session does not have required fields as all fields are not always known when a client session is created.
Use 

PATCH /client-session to update the parameters throughout the checkout session.
Client tokens expire after 24 hours.",
    "domain": "test.com",
    "endpoint_path": "/client-session",
    "endpoint_path_alternates": [
      "/client-session",
      "https://api.sandbox.primer.io/client-session",
      "https://api.sandbox.primer.io/client-session",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_clientSessionApi.subpackage_clientSessionApi.createClientSideToken",
    "org_id": "test",
    "pathname": "/docs/api/api-reference/client-session-api/create-client-side-token",
    "response_type": "json",
    "title": "Create a client session",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_clientSessionApi.updateClientSideToken",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/client-session-api",
        "title": "Client Session API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/client-session-api/update-client-side-token",
    "default_environment_id": "Default",
    "description": "You can update a clients session created earlier with the PATCH /client-session API call.
The only required field for the request is clientToken. Other supported request fields are same as for the POST /client-session API call.
You need to specify only the fields you wish to update. However, if the items that are to be updated are of type array, then you need to provide the complete array along with modified items.
If you wish to update nested fields on the client session, such as the customer emailAddress field, you can pass the customer object with only one field, emailAddress, to update.
If you simply wish to clear the value of the field, pass null as your input.
You can update paymentMethod.vaultOnSuccess field but updating of the paymentMethod.options field through PATCH /client-session is not supported.
The response will contain all the fields of the client session including the ones that were changed.",
    "domain": "test.com",
    "endpoint_path": "/client-session",
    "endpoint_path_alternates": [
      "/client-session",
      "https://api.sandbox.primer.io/client-session",
      "https://api.sandbox.primer.io/client-session",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "PATCH",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_clientSessionApi.subpackage_clientSessionApi.updateClientSideToken",
    "org_id": "test",
    "pathname": "/docs/api/api-reference/client-session-api/update-client-side-token",
    "response_type": "json",
    "title": "Update client session",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_paymentsApi.listPayments",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/list-payments",
    "code_snippets": [
      {
        "code": "curl --location --request GET 'https://api.primer.io/payments?status=FAILED,CANCELLED&customer_id=john-123' \
--header 'X-Api-Key: <YOUR_API_KEY>'",
        "lang": "bash",
      },
    ],
    "default_environment_id": "Default",
    "description": "Retrieve a list of your payments.
Results are paginated, they will only return up to 100 payments maximum.
To access the next page of result, set the cursor query parameter to the value of nextCursor in
your current result payload. Use prevCursor to go back to the previous page.
Note: this endpoint returns a list of
summarized payments. Not all payments attributes are present. You can use
the query parameters to filter payments. You can separate multiple query parameters with the & symbol.
Query parameters with types of the form "Array of strings" (such as the status parameter) can be specified as a comma-separated list.
For example, if you wanted to get both FAILED and CANCELLED payments, for customer john-123, you would use:
You can alternatively specify a list by repeating the parameter multiple times.
Note: payments will be available within a minute from being created.",
    "domain": "test.com",
    "endpoint_path": "/payments",
    "endpoint_path_alternates": [
      "/payments",
      "https://api.sandbox.primer.io/payments",
      "https://api.sandbox.primer.io/payments",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "GET",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.listPayments",
    "org_id": "test",
    "pathname": "/docs/api/api-reference/payments-api/list-payments",
    "response_type": "json",
    "title": "Search & list payments",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_paymentsApi.createPayment",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/create-payment",
    "default_environment_id": "Default",
    "description": "Create and authorize a payment for a given customer order. You
should provide a payment method token here to avoid PCI implications.
If only a payment method token is passed, the values passed with the Client Session is used to determine the amount, currency etc.
Note: amount, currencyCode and orderId are required during payment creation. Make sure to pass these fields when creating a client session, or if not yet available, when creating a payment.
All fields provided on this request will take preference over any field on the order associated with the client session. E.g. if you pass amount on this request, it will override the amount on the order associated with the Client Session.
Parameters that are not on this request will be fetched from previously created Client Session and merged. E.g. if you specify customer.billingAddress in Client Session and then pass customer.emailAddress data with this request, it will automatically merge the customer fields and use both billingAddress and emailAddress for later calculations.",
    "domain": "test.com",
    "endpoint_path": "/payments",
    "endpoint_path_alternates": [
      "/payments",
      "https://api.sandbox.primer.io/payments",
      "https://api.sandbox.primer.io/payments",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.createPayment",
    "org_id": "test",
    "pathname": "/docs/api/api-reference/payments-api/create-payment",
    "response_type": "json",
    "title": "Create a payment",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_paymentsApi.authorizePayment",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/authorize-payment",
    "default_environment_id": "Default",
    "description": "Manually authorize a payment using a provided processor. This is useful if you want to authorize a payment without a workflow action.
The processor merchant ID must be provided which can be found on the Integrations page.
The processor name is optional but it must be provided if your account has multiple processors configured which share the same merchant IDs.",
    "domain": "test.com",
    "endpoint_path": "/payments/:id/authorize",
    "endpoint_path_alternates": [
      "/payments/{id}/authorize",
      "https://api.sandbox.primer.io/payments/:id/authorize",
      "https://api.sandbox.primer.io/payments/%7Bid%7D/authorize",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_four_ErrorResponse",
      "four_hundred_nine_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.authorizePayment",
    "org_id": "test",
    "pathname": "/docs/api/api-reference/payments-api/authorize-payment",
    "response_type": "json",
    "title": "Authorize a payment",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_paymentsApi.capturePayment",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/capture-payment",
    "default_environment_id": "Default",
    "description": "If you have successfully authorized a payment, you can now
fully capture, or partially capture funds from the authorized payment, depending
on whether your selected payment processor supports it. The payment will
be updated to SETTLED or SETTLING, depending on the payment method type.
The payload sent in this capture request is completely optional. If you don't
send a payload with the capture request, the full amount that was authorized
will be sent for capture. Below are the available payload attributes, which
give you more granular control when capturing funds, if you require it.",
    "domain": "test.com",
    "endpoint_path": "/payments/:id/capture",
    "endpoint_path_alternates": [
      "/payments/{id}/capture",
      "https://api.sandbox.primer.io/payments/:id/capture",
      "https://api.sandbox.primer.io/payments/%7Bid%7D/capture",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_nine_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.capturePayment",
    "org_id": "test",
    "pathname": "/docs/api/api-reference/payments-api/capture-payment",
    "response_type": "json",
    "title": "Capture a payment",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_paymentsApi.cancelPayment",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/cancel-payment",
    "default_environment_id": "Default",
    "description": "Provided the payment has not reached SETTLED status, Primer will
send a "void" request to the payment processor, thereby cancelling the payment
and releasing the hold on customer funds. Upon success, the payment will transition
to CANCELLED. The payload is optional.",
    "domain": "test.com",
    "endpoint_path": "/payments/:id/cancel",
    "endpoint_path_alternates": [
      "/payments/{id}/cancel",
      "https://api.sandbox.primer.io/payments/:id/cancel",
      "https://api.sandbox.primer.io/payments/%7Bid%7D/cancel",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_nine_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.cancelPayment",
    "org_id": "test",
    "pathname": "/docs/api/api-reference/payments-api/cancel-payment",
    "response_type": "json",
    "title": "Cancel a payment",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_paymentsApi.refundPayment",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/refund-payment",
    "default_environment_id": "Default",
    "description": "By default, this request will refund the full amount.
Optionally, pass in a lesser amount for a partial refund.",
    "domain": "test.com",
    "endpoint_path": "/payments/:id/refund",
    "endpoint_path_alternates": [
      "/payments/{id}/refund",
      "https://api.sandbox.primer.io/payments/:id/refund",
      "https://api.sandbox.primer.io/payments/%7Bid%7D/refund",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_nine_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.refundPayment",
    "org_id": "test",
    "pathname": "/docs/api/api-reference/payments-api/refund-payment",
    "response_type": "json",
    "title": "Refund a payment",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_paymentsApi.resumePayment",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/resume-payment",
    "default_environment_id": "Default",
    "description": "Resume a payment's workflow execution from a paused state. This
is usually required when a Workflow was paused in order to get further information
from the customer, or when waiting for an asynchronous response from a third
party connection.",
    "domain": "test.com",
    "endpoint_path": "/payments/:id/resume",
    "endpoint_path_alternates": [
      "/payments/{id}/resume",
      "https://api.sandbox.primer.io/payments/:id/resume",
      "https://api.sandbox.primer.io/payments/%7Bid%7D/resume",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.resumePayment",
    "org_id": "test",
    "pathname": "/docs/api/api-reference/payments-api/resume-payment",
    "response_type": "json",
    "title": "Resume a payment",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_paymentsApi.adjustAuthorization",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/adjust-authorization",
    "default_environment_id": "Default",
    "description": "Adjust authorized amount. This is only possible if authorizationType was set to
ESTIMATED when the payment was created, and the mechanism is supported by the payment method.",
    "domain": "test.com",
    "endpoint_path": "/payments/:id/adjust-authorization",
    "endpoint_path_alternates": [
      "/payments/{id}/adjust-authorization",
      "https://api.sandbox.primer.io/payments/:id/adjust-authorization",
      "https://api.sandbox.primer.io/payments/%7Bid%7D/adjust-authorization",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_four_ErrorResponse",
      "four_hundred_nine_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.adjustAuthorization",
    "org_id": "test",
    "pathname": "/docs/api/api-reference/payments-api/adjust-authorization",
    "response_type": "json",
    "title": "Adjust authorized amount",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_paymentsApi.getPaymentById",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/get-payment-by-id",
    "default_environment_id": "Default",
    "description": "Retrieve a payment by its ID.",
    "domain": "test.com",
    "endpoint_path": "/payments/:id",
    "endpoint_path_alternates": [
      "/payments/{id}",
      "https://api.sandbox.primer.io/payments/:id",
      "https://api.sandbox.primer.io/payments/%7Bid%7D",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
    ],
    "method": "GET",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.getPaymentById",
    "org_id": "test",
    "pathname": "/docs/api/api-reference/payments-api/get-payment-by-id",
    "response_type": "json",
    "title": "Get a payment",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_paymentMethodsApi.vault_payment_method_payment_methods__token__vault_post",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/payment-methods-api",
        "title": "Payment Methods API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payment-methods-api/vault-payment-method-payment-methods-token-vault-post",
    "default_environment_id": "Default",
    "description": "Save a SINGLE_USE payment method token so it can be used
again later.
If you try to vault an already vaulted token, you will get the existing vaulted token back.",
    "domain": "test.com",
    "endpoint_path": "/payment-instruments/:paymentMethodToken/vault",
    "endpoint_path_alternates": [
      "/payment-instruments/{paymentMethodToken}/vault",
      "https://api.sandbox.primer.io/payment-instruments/:paymentMethodToken/vault",
      "https://api.sandbox.primer.io/payment-instruments/%7BpaymentMethodToken%7D/vault",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_paymentMethodsApi.subpackage_paymentMethodsApi.vault_payment_method_payment_methods__token__vault_post",
    "org_id": "test",
    "pathname": "/docs/api/api-reference/payment-methods-api/vault-payment-method-payment-methods-token-vault-post",
    "response_type": "json",
    "title": "Save a payment method token",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_paymentMethodsApi.get_payment_methods_payment_methods_get",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/payment-methods-api",
        "title": "Payment Methods API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payment-methods-api/get-payment-methods-payment-methods-get",
    "default_environment_id": "Default",
    "description": "Retrieve a list of stored payment methods for a customer.",
    "domain": "test.com",
    "endpoint_path": "/payment-instruments",
    "endpoint_path_alternates": [
      "/payment-instruments",
      "https://api.sandbox.primer.io/payment-instruments",
      "https://api.sandbox.primer.io/payment-instruments",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
    ],
    "method": "GET",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_paymentMethodsApi.subpackage_paymentMethodsApi.get_payment_methods_payment_methods_get",
    "org_id": "test",
    "pathname": "/docs/api/api-reference/payment-methods-api/get-payment-methods-payment-methods-get",
    "response_type": "json",
    "title": "List saved payment methods",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_paymentMethodsApi.delete_payment_method_payment_methods__token__delete",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/payment-methods-api",
        "title": "Payment Methods API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payment-methods-api/delete-payment-method-payment-methods-token-delete",
    "default_environment_id": "Default",
    "description": "Delete a saved payment method.",
    "domain": "test.com",
    "endpoint_path": "/payment-instruments/:paymentMethodToken",
    "endpoint_path_alternates": [
      "/payment-instruments/{paymentMethodToken}",
      "https://api.sandbox.primer.io/payment-instruments/:paymentMethodToken",
      "https://api.sandbox.primer.io/payment-instruments/%7BpaymentMethodToken%7D",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
    ],
    "method": "DELETE",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_paymentMethodsApi.subpackage_paymentMethodsApi.delete_payment_method_payment_methods__token__delete",
    "org_id": "test",
    "pathname": "/docs/api/api-reference/payment-methods-api/delete-payment-method-payment-methods-token-delete",
    "response_type": "json",
    "title": "Delete a saved payment method",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_paymentMethodsApi.set_payment_method_default_payment_methods__token__default_post",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/payment-methods-api",
        "title": "Payment Methods API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payment-methods-api/set-payment-method-default-payment-methods-token-default-post",
    "default_environment_id": "Default",
    "description": "Update a saved payment method to be the default stored payment method for a customer.",
    "domain": "test.com",
    "endpoint_path": "/payment-instruments/:paymentMethodToken/default",
    "endpoint_path_alternates": [
      "/payment-instruments/{paymentMethodToken}/default",
      "https://api.sandbox.primer.io/payment-instruments/:paymentMethodToken/default",
      "https://api.sandbox.primer.io/payment-instruments/%7BpaymentMethodToken%7D/default",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_paymentMethodsApi.subpackage_paymentMethodsApi.set_payment_method_default_payment_methods__token__default_post",
    "org_id": "test",
    "pathname": "/docs/api/api-reference/payment-methods-api/set-payment-method-default-payment-methods-token-default-post",
    "response_type": "json",
    "title": "Update the default saved payment method",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_observabilityApiBeta.external_payment",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/observability-api-beta",
        "title": "Observability API (Beta)",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/observability-api-beta/external-payment",
    "default_environment_id": "Default",
    "description": "The Observability API is currently in beta.
Please contact our Support Team via our JIRA Service Desk for access to the Beta.
If you don’t have access, please contact your account administrator for assistance.
Not yet integrated with Primer and interested in learning more? Contact us.
Creating a payment with the Observability API sends external payments data to Primer to populate Observability Payment Insights dashboards. Payments created through the Payments API will be automatically populated and do not need to be sent in the Observability API.
Create an API key with the observability-payments:write scope.
Each record must be created with a unique paymentId. To update a payment record with new data use the PATCH endpoint.",
    "domain": "test.com",
    "endpoint_path": "/observability/payments",
    "endpoint_path_alternates": [
      "/observability/payments",
      "https://api.sandbox.primer.io/observability/payments",
      "https://api.sandbox.primer.io/observability/payments",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_observabilityApiBeta.subpackage_observabilityApiBeta.external_payment",
    "org_id": "test",
    "pathname": "/docs/api/api-reference/observability-api-beta/external-payment",
    "response_type": "json",
    "title": "Create an external payment",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_observabilityApiBeta.external_payment_update",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/observability-api-beta",
        "title": "Observability API (Beta)",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/observability-api-beta/external-payment-update",
    "default_environment_id": "Default",
    "description": "The Observability API is currently in beta.
Please contact our Support Team via our JIRA Service Desk for access to the Beta.
If you don’t have access, please contact your account administrator for assistance.
Not yet integrated with Primer and interested in learning more? Contact us.
You can update payments created earlier through the Observability API with this endpoint. The only required field for the request is paymentId. Other supported request fields are the same as for the create an external payment API call.
If you wish to update nested fields on the payment, you only need to pass the fields that you wish to update. For example to update the processor name, you would pass in processor.name only.
The response will contain all the fields of the payment including the ones that were changed.",
    "domain": "test.com",
    "endpoint_path": "/observability/payments/:paymentId",
    "endpoint_path_alternates": [
      "/observability/payments/{paymentId}",
      "https://api.sandbox.primer.io/observability/payments/:paymentId",
      "https://api.sandbox.primer.io/observability/payments/%7BpaymentId%7D",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
    ],
    "method": "PATCH",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_observabilityApiBeta.subpackage_observabilityApiBeta.external_payment_update",
    "org_id": "test",
    "pathname": "/docs/api/api-reference/observability-api-beta/external-payment-update",
    "response_type": "json",
    "title": "Update an external payment",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_loyaltyApi.get_loyalty_customer",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/loyalty-api",
        "title": "Loyalty API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/loyalty-api/get-loyalty-customer",
    "default_environment_id": "Default",
    "description": "The Loyalty API is currently in beta.
Please contact our Support Team via our JIRA Service Desk for access to the Beta.
If you don’t have access, please contact your account administrator for assistance.
Not yet integrated with Primer and interested in learning more? Contact us.
Create an API key with the loyalty-transactions:read scopes.
Get a loyalty customer by ID and connection ID. This includes the customer's points balance.
The connectionId is the unique Primer identifier for your loyalty provider connection. Primer will provide this once the loyalty provider connection is created.
The customerId refers to the customer identifier on the loyalty provider's side.",
    "domain": "test.com",
    "endpoint_path": "/loyalty-customers/:id",
    "endpoint_path_alternates": [
      "/loyalty-customers/{id}",
      "https://api.sandbox.primer.io/loyalty-customers/:id",
      "https://api.sandbox.primer.io/loyalty-customers/%7Bid%7D",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
    ],
    "method": "GET",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_loyaltyApi.subpackage_loyaltyApi.get_loyalty_customer",
    "org_id": "test",
    "pathname": "/docs/api/api-reference/loyalty-api/get-loyalty-customer",
    "response_type": "json",
    "title": "Get a loyalty customer's points balance",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_loyaltyApi.get_loyalty_customer_transactions",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/loyalty-api",
        "title": "Loyalty API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/loyalty-api/get-loyalty-customer-transactions",
    "default_environment_id": "Default",
    "description": "The Loyalty API is currently in beta.
Please contact our Support Team via our JIRA Service Desk for access to the Beta.
If you don’t have access, please contact your account administrator for assistance.
Not yet integrated with Primer and interested in learning more? Contact us.
Create an API key with the loyalty-transactions:read scopes.
Get all your loyalty transactions. You can filter by connectionId (recommended) and by customerId and orderId.
Additionally provide a limit to restrict the number of transactions in the response, and an offset to determine where to start.",
    "domain": "test.com",
    "endpoint_path": "/loyalty-transactions",
    "endpoint_path_alternates": [
      "/loyalty-transactions",
      "https://api.sandbox.primer.io/loyalty-transactions",
      "https://api.sandbox.primer.io/loyalty-transactions",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "GET",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_loyaltyApi.subpackage_loyaltyApi.get_loyalty_customer_transactions",
    "org_id": "test",
    "pathname": "/docs/api/api-reference/loyalty-api/get-loyalty-customer-transactions",
    "response_type": "json",
    "title": "List the transactions for a customer",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_loyaltyApi.post_loyalty_transaction",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/loyalty-api",
        "title": "Loyalty API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/loyalty-api/post-loyalty-transaction",
    "default_environment_id": "Default",
    "description": "The Loyalty API is currently in beta.
Please contact our Support Team via our JIRA Service Desk for access to the Beta.
If you don’t have access, please contact your account administrator for assistance.
Not yet integrated with Primer and interested in learning more? Contact us.
Create an API key with the loyalty-transactions:write scopes.
Create a loyalty transaction. This is either a points redemption or a points refund.",
    "domain": "test.com",
    "endpoint_path": "/loyalty-transactions",
    "endpoint_path_alternates": [
      "/loyalty-transactions",
      "https://api.sandbox.primer.io/loyalty-transactions",
      "https://api.sandbox.primer.io/loyalty-transactions",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_loyaltyApi.subpackage_loyaltyApi.post_loyalty_transaction",
    "org_id": "test",
    "pathname": "/docs/api/api-reference/loyalty-api/post-loyalty-transaction",
    "response_type": "json",
    "title": "Create a loyalty transaction",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "ca56f687-5be3-4661-aeed-674a0f1f7193",
    "api_endpoint_id": "subpackage_paymentWebhooks.payment_status_webhook_event",
    "api_type": "webhook",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/webhooks",
        "title": "Webhooks",
      },
      {
        "pathname": "/docs/api/v2.3/webhooks/payment-webhooks",
        "title": "Payment Webhooks",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/webhooks/payment-webhooks/payment-status-webhook-event",
    "code_snippets": [
      {
        "code": "{
  "eventType":"PAYMENT.STATUS",
  "date":"2021-02-21T15:36:16.367687",
  "notificationConfig":{
    "id":"cc51f9f0-7e1c-492b-9d37-f83a818f6070",
    "description":"Payment webhook"
  },
  "version":"2.3",
  "signedAt": "1689221338",
  "payment":{
    "id":"DdRZ6YY0",
    "date":"2021-02-21T15:34:16.367687",
    "dateUpdated":"2021-02-21T15:35:16.133701",
    "amount":3000,
    "currencyCode":"GBP",
    "customerId":"cust-123",
    "orderId":"order-123",
    "status":"SETTLED",
    "cardTokenType":"CARD_PAN",
    "customer": {
      "emailAddress": "test@primer.io",
      "mobileNumber": "0123456789",
      "billingAddress": {
        "firstName": "John",
        "postalCode": "CB94BQ",
        "addressLine1": "10001 Alpha St",
        "countryCode": "GB",
        "city": "Cambridge",
        "state": "Cambridgeshire"
      }
    },
    "paymentMethod":{
      "paymentType":"FIRST_PAYMENT",
      "paymentMethodToken":"-lcWjvBAAs2DnIRXwxNjUzNTYzNjIy",
      "isVaulted": "false",
      "analyticsId":"LUi5pETUaVsdSEamK25L",
      "paymentMethodType":"PAYMENT_CARD",
      "paymentMethodData":{
        "last4Digits":"1111",
        "first6Digits": "411111",
        "expirationMonth":"03",
        "expirationYear":"2030",
        "cardholderName":"ADYEN",
        "network":"Visa",
        "isNetworkTokenized":false,
        "binData":{
          "network":"VISA",
          "issuerCountryCode":"US",
          "issuerName":"JPMORGAN CHASE BANK, N.A.",
          "regionalRestriction":"UNKNOWN",
          "accountNumberType":"UNKNOWN",
          "accountFundingType":"UNKNOWN",
          "prepaidReloadableIndicator":"NOT_APPLICABLE",
          "productUsageType":"UNKNOWN",
          "productCode":"UNKNOWN",
          "productName":"UNKNOWN"
        }
      },
      "authorizationType": "FINAL",
      "threeDSecureAuthentication":{
        "responseCode":"NOT_PERFORMED"
      }
    },
    "processor":{
      "name":"STRIPE",
      "processorMerchantId":"acct_1GORasdasqNWFwi8c",
      "amountCaptured":3000,
      "amountRefunded":0
    },
    "transactions":[
      {
        "date":"2021-02-21T15:34:16.367687",
        "amount":3000,
        "currencyCode":"GBP",
        "transactionType":"SALE",
        "orderId":"order-123",
        "processorTransactionId":"pi_3L3edsGZasdasdc1iget38p",
        "processorName":"STRIPE",
        "processorMerchantId":"acct_1GORasvasdNWFwi8c",
        "processorStatus":"SETTLED",
        "cardTokenType":"CARD_PAN"
      }
    ],
    "riskData":{
      "fraudChecks":{
        "source":"riskified",
        "preAuthorizationResult":"THREE_DS",
        "postAuthorizationResult":"ACCEPT"
      },
      "cvvCheck": {
        "source": "processor",
        "result": "MATCHED"
      },
      "avsCheck": {
        "source": "processor",
        "result": {
          "streetAddress": "NOT_MATCHED",
          "postalCode": "NOT_VERIFIED"
        }
      }
    }
  }
}",
        "lang": "JSON",
      },
    ],
    "description": "Primer notifies you with a PAYMENT.STATUS webhook when a payment's status has been updated. This is especially useful for asyncronous processor Connections, which do not respond with an upfront authorization.
The webhook events will arrive in the order that the payment status changes, for example you should expect a status of PENDING, then AUTHORIZED, then SETTLED (depending on how your workflow is set up).
The webhook body contains the full payment object.
Example payment status notification:
Learn more about how Primer handles webhooks.",
    "domain": "test.com",
    "endpoint_path": "",
    "keywords": [
      "endpoint",
      "api",
      "webhook",
      "PaymentStatusWebhookPayload",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.3.uv.webhooks.subpackage_paymentWebhooks.subpackage_paymentWebhooks.payment_status_webhook_event",
    "org_id": "test",
    "pathname": "/docs/api/webhooks/payment-webhooks/payment-status-webhook-event",
    "title": "Payment Status Update",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "ca56f687-5be3-4661-aeed-674a0f1f7193",
    "api_endpoint_id": "subpackage_paymentWebhooks.payment_refund_webhook_event",
    "api_type": "webhook",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/webhooks",
        "title": "Webhooks",
      },
      {
        "pathname": "/docs/api/v2.3/webhooks/payment-webhooks",
        "title": "Payment Webhooks",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/webhooks/payment-webhooks/payment-refund-webhook-event",
    "description": "Primer notifies you with a PAYMENT.REFUND Webhook when a refund request has been fully processed by a payment processor and the refund has reached a final state.
Check the transaction with the most recent transactionType: "REFUND" in the transactions array:
if processorStatus is SETTLED, the refund was successful and the funds have been returned to the customer

if processorStatus is FAILED, the refund was unsuccessful


Learn more about how Primer handles webhooks.",
    "domain": "test.com",
    "endpoint_path": "",
    "keywords": [
      "endpoint",
      "api",
      "webhook",
      "PaymentRefundWebhookPayload",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.3.uv.webhooks.subpackage_paymentWebhooks.subpackage_paymentWebhooks.payment_refund_webhook_event",
    "org_id": "test",
    "pathname": "/docs/api/webhooks/payment-webhooks/payment-refund-webhook-event",
    "title": "Payment Refund",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "ca56f687-5be3-4661-aeed-674a0f1f7193",
    "api_endpoint_id": "subpackage_disputeChargebacksWebhooks.dispute_open_webhook_event",
    "api_type": "webhook",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/webhooks",
        "title": "Webhooks",
      },
      {
        "pathname": "/docs/api/v2.3/webhooks/dispute-chargebacks-webhooks",
        "title": "Dispute Chargebacks Webhooks",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/webhooks/dispute-chargebacks-webhooks/dispute-open-webhook-event",
    "description": "Primer notifies you with a DISPUTE.OPEN webhook on newly opened disputes or chargebacks. This notification is unified across all processors.
Learn more about how Primer handles webhooks.",
    "domain": "test.com",
    "endpoint_path": "",
    "keywords": [
      "endpoint",
      "api",
      "webhook",
      "DisputeOpenWebhookPayload",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.3.uv.webhooks.subpackage_disputeChargebacksWebhooks.subpackage_disputeChargebacksWebhooks.dispute_open_webhook_event",
    "org_id": "test",
    "pathname": "/docs/api/webhooks/dispute-chargebacks-webhooks/dispute-open-webhook-event",
    "title": "Dispute Open",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "ca56f687-5be3-4661-aeed-674a0f1f7193",
    "api_endpoint_id": "subpackage_disputeChargebacksWebhooks.dispute_status_webhook_event",
    "api_type": "webhook",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/webhooks",
        "title": "Webhooks",
      },
      {
        "pathname": "/docs/api/v2.3/webhooks/dispute-chargebacks-webhooks",
        "title": "Dispute Chargebacks Webhooks",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/webhooks/dispute-chargebacks-webhooks/dispute-status-webhook-event",
    "description": "Primer notifies you with a DISPUTE.STATUS webhook that will provide information on retrievals, disputes (also known as chargebacks), and preabritration filings.
This notification is supported for processors Adyen, Braintree, Checkout.com & PayPal.
The DISPUTE.STATUS event can be used to proactively communicate with customers, issue refunds, send disputes to risk tools, or to proactively defend disputes.
The DISPUTE.STATUS event is currently in an open beta stage, as we continue to add more processors.
Learn more about managing disputes at Primer.",
    "domain": "test.com",
    "endpoint_path": "",
    "keywords": [
      "endpoint",
      "api",
      "webhook",
      "DisputeStatusWebhookPayload",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.3.uv.webhooks.subpackage_disputeChargebacksWebhooks.subpackage_disputeChargebacksWebhooks.dispute_status_webhook_event",
    "org_id": "test",
    "pathname": "/docs/api/webhooks/dispute-chargebacks-webhooks/dispute-status-webhook-event",
    "title": "Dispute Status",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_clientSessionApi.retrieveClientSideToken",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/client-session-api",
        "title": "Client Session API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/client-session-api/retrieve-client-side-token",
    "default_environment_id": "Default",
    "description": "This API call retrieves all the details associated with the client session corresponding to the client token that is provided in the request. The fields with empty values are excluded from the response.",
    "domain": "test.com",
    "endpoint_path": "/client-session",
    "endpoint_path_alternates": [
      "/client-session",
      "https://api.sandbox.primer.io/client-session",
      "https://api.sandbox.primer.io/client-session",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "GET",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_clientSessionApi.subpackage_clientSessionApi.retrieveClientSideToken",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/api-reference/client-session-api/retrieve-client-side-token",
    "response_type": "json",
    "title": "Retrieve a client session",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_clientSessionApi.createClientSideToken",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/client-session-api",
        "title": "Client Session API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/client-session-api/create-client-side-token",
    "default_environment_id": "Default",
    "description": "Creating a client session generates a client token: a temporary key used to initialize Universal Checkout and authenticate it against your account.
Universal Checkout automatically retrieves all the settings from the client session and the Dashboard to configure the payment methods and the checkout experience.


Note:
When creating a Client Session, please make sure to provide currencyCode, orderId, and at least one of amount or lineItems.
If any of these are not yet available, you can provide them w
hen making the payment request.


POST /client-session does not have required fields as all fields are not always known when a client session is created.
Use 

PATCH /client-session to update the parameters throughout the checkout session.
Client tokens expire after 24 hours.",
    "domain": "test.com",
    "endpoint_path": "/client-session",
    "endpoint_path_alternates": [
      "/client-session",
      "https://api.sandbox.primer.io/client-session",
      "https://api.sandbox.primer.io/client-session",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_clientSessionApi.subpackage_clientSessionApi.createClientSideToken",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/api-reference/client-session-api/create-client-side-token",
    "response_type": "json",
    "title": "Create a client session",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_clientSessionApi.updateClientSideToken",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/client-session-api",
        "title": "Client Session API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/client-session-api/update-client-side-token",
    "default_environment_id": "Default",
    "description": "You can update a clients session created earlier with the PATCH /client-session API call.
The only required field for the request is clientToken. Other supported request fields are same as for the POST /client-session API call.
You need to specify only the fields you wish to update. However, if the items that are to be updated are of type array, then you need to provide the complete array along with modified items.
If you wish to update nested fields on the client session, such as the customer emailAddress field, you can pass the customer object with only one field, emailAddress, to update.
If you simply wish to clear the value of the field, pass null as your input.
You can update paymentMethod.vaultOnSuccess field but updating of the paymentMethod.options field through PATCH /client-session is not supported.
The response will contain all the fields of the client session including the ones that were changed.",
    "domain": "test.com",
    "endpoint_path": "/client-session",
    "endpoint_path_alternates": [
      "/client-session",
      "https://api.sandbox.primer.io/client-session",
      "https://api.sandbox.primer.io/client-session",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "PATCH",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_clientSessionApi.subpackage_clientSessionApi.updateClientSideToken",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/api-reference/client-session-api/update-client-side-token",
    "response_type": "json",
    "title": "Update client session",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_paymentsApi.listPayments",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/list-payments",
    "code_snippets": [
      {
        "code": "curl --location --request GET 'https://api.primer.io/payments?status=FAILED,CANCELLED&customer_id=john-123' \
--header 'X-Api-Key: <YOUR_API_KEY>'",
        "lang": "bash",
      },
    ],
    "default_environment_id": "Default",
    "description": "Retrieve a list of your payments.
Results are paginated, they will only return up to 100 payments maximum.
To access the next page of result, set the cursor query parameter to the value of nextCursor in
your current result payload. Use prevCursor to go back to the previous page.
Note: this endpoint returns a list of
summarized payments. Not all payments attributes are present. You can use
the query parameters to filter payments. You can separate multiple query parameters with the & symbol.
Query parameters with types of the form "Array of strings" (such as the status parameter) can be specified as a comma-separated list.
For example, if you wanted to get both FAILED and CANCELLED payments, for customer john-123, you would use:
You can alternatively specify a list by repeating the parameter multiple times.
Note: payments will be available within a minute from being created.",
    "domain": "test.com",
    "endpoint_path": "/payments",
    "endpoint_path_alternates": [
      "/payments",
      "https://api.sandbox.primer.io/payments",
      "https://api.sandbox.primer.io/payments",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "GET",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.listPayments",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/api-reference/payments-api/list-payments",
    "response_type": "json",
    "title": "Search & list payments",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_paymentsApi.createPayment",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/create-payment",
    "default_environment_id": "Default",
    "description": "Create and authorize a payment for a given customer order. You
should provide a payment method token here to avoid PCI implications.
If only a payment method token is passed, the values passed with the Client Session is used to determine the amount, currency etc.
Note: amount, currencyCode and orderId are required during payment creation. Make sure to pass these fields when creating a client session, or if not yet available, when creating a payment.
All fields provided on this request will take preference over any field on the order associated with the client session. E.g. if you pass amount on this request, it will override the amount on the order associated with the Client Session.
Parameters that are not on this request will be fetched from previously created Client Session and merged. E.g. if you specify customer.billingAddress in Client Session and then pass customer.emailAddress data with this request, it will automatically merge the customer fields and use both billingAddress and emailAddress for later calculations.",
    "domain": "test.com",
    "endpoint_path": "/payments",
    "endpoint_path_alternates": [
      "/payments",
      "https://api.sandbox.primer.io/payments",
      "https://api.sandbox.primer.io/payments",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.createPayment",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/api-reference/payments-api/create-payment",
    "response_type": "json",
    "title": "Create a payment",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_paymentsApi.authorizePayment",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/authorize-payment",
    "default_environment_id": "Default",
    "description": "Manually authorize a payment using a provided processor. This is useful if you want to authorize a payment without a workflow action.
The processor merchant ID must be provided which can be found on the Integrations page.
The processor name is optional but it must be provided if your account has multiple processors configured which share the same merchant IDs.",
    "domain": "test.com",
    "endpoint_path": "/payments/:id/authorize",
    "endpoint_path_alternates": [
      "/payments/{id}/authorize",
      "https://api.sandbox.primer.io/payments/:id/authorize",
      "https://api.sandbox.primer.io/payments/%7Bid%7D/authorize",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_four_ErrorResponse",
      "four_hundred_nine_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.authorizePayment",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/api-reference/payments-api/authorize-payment",
    "response_type": "json",
    "title": "Authorize a payment",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_paymentsApi.capturePayment",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/capture-payment",
    "default_environment_id": "Default",
    "description": "If you have successfully authorized a payment, you can now
fully capture, or partially capture funds from the authorized payment, depending
on whether your selected payment processor supports it. The payment will
be updated to SETTLED or SETTLING, depending on the payment method type.
The payload sent in this capture request is completely optional. If you don't
send a payload with the capture request, the full amount that was authorized
will be sent for capture. Below are the available payload attributes, which
give you more granular control when capturing funds, if you require it.",
    "domain": "test.com",
    "endpoint_path": "/payments/:id/capture",
    "endpoint_path_alternates": [
      "/payments/{id}/capture",
      "https://api.sandbox.primer.io/payments/:id/capture",
      "https://api.sandbox.primer.io/payments/%7Bid%7D/capture",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_nine_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.capturePayment",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/api-reference/payments-api/capture-payment",
    "response_type": "json",
    "title": "Capture a payment",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_paymentsApi.cancelPayment",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/cancel-payment",
    "default_environment_id": "Default",
    "description": "Provided the payment has not reached SETTLED status, Primer will
send a "void" request to the payment processor, thereby cancelling the payment
and releasing the hold on customer funds. Upon success, the payment will transition
to CANCELLED. The payload is optional.",
    "domain": "test.com",
    "endpoint_path": "/payments/:id/cancel",
    "endpoint_path_alternates": [
      "/payments/{id}/cancel",
      "https://api.sandbox.primer.io/payments/:id/cancel",
      "https://api.sandbox.primer.io/payments/%7Bid%7D/cancel",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_nine_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.cancelPayment",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/api-reference/payments-api/cancel-payment",
    "response_type": "json",
    "title": "Cancel a payment",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_paymentsApi.refundPayment",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/refund-payment",
    "default_environment_id": "Default",
    "description": "By default, this request will refund the full amount.
Optionally, pass in a lesser amount for a partial refund.",
    "domain": "test.com",
    "endpoint_path": "/payments/:id/refund",
    "endpoint_path_alternates": [
      "/payments/{id}/refund",
      "https://api.sandbox.primer.io/payments/:id/refund",
      "https://api.sandbox.primer.io/payments/%7Bid%7D/refund",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_nine_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.refundPayment",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/api-reference/payments-api/refund-payment",
    "response_type": "json",
    "title": "Refund a payment",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_paymentsApi.resumePayment",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/resume-payment",
    "default_environment_id": "Default",
    "description": "Resume a payment's workflow execution from a paused state. This
is usually required when a Workflow was paused in order to get further information
from the customer, or when waiting for an asynchronous response from a third
party connection.",
    "domain": "test.com",
    "endpoint_path": "/payments/:id/resume",
    "endpoint_path_alternates": [
      "/payments/{id}/resume",
      "https://api.sandbox.primer.io/payments/:id/resume",
      "https://api.sandbox.primer.io/payments/%7Bid%7D/resume",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.resumePayment",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/api-reference/payments-api/resume-payment",
    "response_type": "json",
    "title": "Resume a payment",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_paymentsApi.adjustAuthorization",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/adjust-authorization",
    "default_environment_id": "Default",
    "description": "Adjust authorized amount. This is only possible if authorizationType was set to
ESTIMATED when the payment was created, and the mechanism is supported by the payment method.",
    "domain": "test.com",
    "endpoint_path": "/payments/:id/adjust-authorization",
    "endpoint_path_alternates": [
      "/payments/{id}/adjust-authorization",
      "https://api.sandbox.primer.io/payments/:id/adjust-authorization",
      "https://api.sandbox.primer.io/payments/%7Bid%7D/adjust-authorization",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_four_ErrorResponse",
      "four_hundred_nine_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.adjustAuthorization",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/api-reference/payments-api/adjust-authorization",
    "response_type": "json",
    "title": "Adjust authorized amount",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_paymentsApi.getPaymentById",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/get-payment-by-id",
    "default_environment_id": "Default",
    "description": "Retrieve a payment by its ID.",
    "domain": "test.com",
    "endpoint_path": "/payments/:id",
    "endpoint_path_alternates": [
      "/payments/{id}",
      "https://api.sandbox.primer.io/payments/:id",
      "https://api.sandbox.primer.io/payments/%7Bid%7D",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
    ],
    "method": "GET",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.getPaymentById",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/api-reference/payments-api/get-payment-by-id",
    "response_type": "json",
    "title": "Get a payment",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_paymentMethodsApi.vault_payment_method_payment_methods__token__vault_post",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/payment-methods-api",
        "title": "Payment Methods API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payment-methods-api/vault-payment-method-payment-methods-token-vault-post",
    "default_environment_id": "Default",
    "description": "Save a SINGLE_USE payment method token so it can be used
again later.
If you try to vault an already vaulted token, you will get the existing vaulted token back.",
    "domain": "test.com",
    "endpoint_path": "/payment-instruments/:paymentMethodToken/vault",
    "endpoint_path_alternates": [
      "/payment-instruments/{paymentMethodToken}/vault",
      "https://api.sandbox.primer.io/payment-instruments/:paymentMethodToken/vault",
      "https://api.sandbox.primer.io/payment-instruments/%7BpaymentMethodToken%7D/vault",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_paymentMethodsApi.subpackage_paymentMethodsApi.vault_payment_method_payment_methods__token__vault_post",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/api-reference/payment-methods-api/vault-payment-method-payment-methods-token-vault-post",
    "response_type": "json",
    "title": "Save a payment method token",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_paymentMethodsApi.get_payment_methods_payment_methods_get",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/payment-methods-api",
        "title": "Payment Methods API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payment-methods-api/get-payment-methods-payment-methods-get",
    "default_environment_id": "Default",
    "description": "Retrieve a list of stored payment methods for a customer.",
    "domain": "test.com",
    "endpoint_path": "/payment-instruments",
    "endpoint_path_alternates": [
      "/payment-instruments",
      "https://api.sandbox.primer.io/payment-instruments",
      "https://api.sandbox.primer.io/payment-instruments",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
    ],
    "method": "GET",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_paymentMethodsApi.subpackage_paymentMethodsApi.get_payment_methods_payment_methods_get",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/api-reference/payment-methods-api/get-payment-methods-payment-methods-get",
    "response_type": "json",
    "title": "List saved payment methods",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_paymentMethodsApi.delete_payment_method_payment_methods__token__delete",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/payment-methods-api",
        "title": "Payment Methods API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payment-methods-api/delete-payment-method-payment-methods-token-delete",
    "default_environment_id": "Default",
    "description": "Delete a saved payment method.",
    "domain": "test.com",
    "endpoint_path": "/payment-instruments/:paymentMethodToken",
    "endpoint_path_alternates": [
      "/payment-instruments/{paymentMethodToken}",
      "https://api.sandbox.primer.io/payment-instruments/:paymentMethodToken",
      "https://api.sandbox.primer.io/payment-instruments/%7BpaymentMethodToken%7D",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
    ],
    "method": "DELETE",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_paymentMethodsApi.subpackage_paymentMethodsApi.delete_payment_method_payment_methods__token__delete",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/api-reference/payment-methods-api/delete-payment-method-payment-methods-token-delete",
    "response_type": "json",
    "title": "Delete a saved payment method",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_paymentMethodsApi.set_payment_method_default_payment_methods__token__default_post",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/payment-methods-api",
        "title": "Payment Methods API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payment-methods-api/set-payment-method-default-payment-methods-token-default-post",
    "default_environment_id": "Default",
    "description": "Update a saved payment method to be the default stored payment method for a customer.",
    "domain": "test.com",
    "endpoint_path": "/payment-instruments/:paymentMethodToken/default",
    "endpoint_path_alternates": [
      "/payment-instruments/{paymentMethodToken}/default",
      "https://api.sandbox.primer.io/payment-instruments/:paymentMethodToken/default",
      "https://api.sandbox.primer.io/payment-instruments/%7BpaymentMethodToken%7D/default",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_paymentMethodsApi.subpackage_paymentMethodsApi.set_payment_method_default_payment_methods__token__default_post",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/api-reference/payment-methods-api/set-payment-method-default-payment-methods-token-default-post",
    "response_type": "json",
    "title": "Update the default saved payment method",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_observabilityApiBeta.external_payment",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/observability-api-beta",
        "title": "Observability API (Beta)",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/observability-api-beta/external-payment",
    "default_environment_id": "Default",
    "description": "The Observability API is currently in beta.
Please contact our Support Team via our JIRA Service Desk for access to the Beta.
If you don’t have access, please contact your account administrator for assistance.
Not yet integrated with Primer and interested in learning more? Contact us.
Creating a payment with the Observability API sends external payments data to Primer to populate Observability Payment Insights dashboards. Payments created through the Payments API will be automatically populated and do not need to be sent in the Observability API.
Create an API key with the observability-payments:write scope.
Each record must be created with a unique paymentId. To update a payment record with new data use the PATCH endpoint.",
    "domain": "test.com",
    "endpoint_path": "/observability/payments",
    "endpoint_path_alternates": [
      "/observability/payments",
      "https://api.sandbox.primer.io/observability/payments",
      "https://api.sandbox.primer.io/observability/payments",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_observabilityApiBeta.subpackage_observabilityApiBeta.external_payment",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/api-reference/observability-api-beta/external-payment",
    "response_type": "json",
    "title": "Create an external payment",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_observabilityApiBeta.external_payment_update",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/observability-api-beta",
        "title": "Observability API (Beta)",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/observability-api-beta/external-payment-update",
    "default_environment_id": "Default",
    "description": "The Observability API is currently in beta.
Please contact our Support Team via our JIRA Service Desk for access to the Beta.
If you don’t have access, please contact your account administrator for assistance.
Not yet integrated with Primer and interested in learning more? Contact us.
You can update payments created earlier through the Observability API with this endpoint. The only required field for the request is paymentId. Other supported request fields are the same as for the create an external payment API call.
If you wish to update nested fields on the payment, you only need to pass the fields that you wish to update. For example to update the processor name, you would pass in processor.name only.
The response will contain all the fields of the payment including the ones that were changed.",
    "domain": "test.com",
    "endpoint_path": "/observability/payments/:paymentId",
    "endpoint_path_alternates": [
      "/observability/payments/{paymentId}",
      "https://api.sandbox.primer.io/observability/payments/:paymentId",
      "https://api.sandbox.primer.io/observability/payments/%7BpaymentId%7D",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
    ],
    "method": "PATCH",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_observabilityApiBeta.subpackage_observabilityApiBeta.external_payment_update",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/api-reference/observability-api-beta/external-payment-update",
    "response_type": "json",
    "title": "Update an external payment",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_loyaltyApi.get_loyalty_customer",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/loyalty-api",
        "title": "Loyalty API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/loyalty-api/get-loyalty-customer",
    "default_environment_id": "Default",
    "description": "The Loyalty API is currently in beta.
Please contact our Support Team via our JIRA Service Desk for access to the Beta.
If you don’t have access, please contact your account administrator for assistance.
Not yet integrated with Primer and interested in learning more? Contact us.
Create an API key with the loyalty-transactions:read scopes.
Get a loyalty customer by ID and connection ID. This includes the customer's points balance.
The connectionId is the unique Primer identifier for your loyalty provider connection. Primer will provide this once the loyalty provider connection is created.
The customerId refers to the customer identifier on the loyalty provider's side.",
    "domain": "test.com",
    "endpoint_path": "/loyalty-customers/:id",
    "endpoint_path_alternates": [
      "/loyalty-customers/{id}",
      "https://api.sandbox.primer.io/loyalty-customers/:id",
      "https://api.sandbox.primer.io/loyalty-customers/%7Bid%7D",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
    ],
    "method": "GET",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_loyaltyApi.subpackage_loyaltyApi.get_loyalty_customer",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/api-reference/loyalty-api/get-loyalty-customer",
    "response_type": "json",
    "title": "Get a loyalty customer's points balance",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_loyaltyApi.get_loyalty_customer_transactions",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/loyalty-api",
        "title": "Loyalty API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/loyalty-api/get-loyalty-customer-transactions",
    "default_environment_id": "Default",
    "description": "The Loyalty API is currently in beta.
Please contact our Support Team via our JIRA Service Desk for access to the Beta.
If you don’t have access, please contact your account administrator for assistance.
Not yet integrated with Primer and interested in learning more? Contact us.
Create an API key with the loyalty-transactions:read scopes.
Get all your loyalty transactions. You can filter by connectionId (recommended) and by customerId and orderId.
Additionally provide a limit to restrict the number of transactions in the response, and an offset to determine where to start.",
    "domain": "test.com",
    "endpoint_path": "/loyalty-transactions",
    "endpoint_path_alternates": [
      "/loyalty-transactions",
      "https://api.sandbox.primer.io/loyalty-transactions",
      "https://api.sandbox.primer.io/loyalty-transactions",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "GET",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_loyaltyApi.subpackage_loyaltyApi.get_loyalty_customer_transactions",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/api-reference/loyalty-api/get-loyalty-customer-transactions",
    "response_type": "json",
    "title": "List the transactions for a customer",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "api_endpoint_id": "subpackage_loyaltyApi.post_loyalty_transaction",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.3/api-reference/loyalty-api",
        "title": "Loyalty API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/loyalty-api/post-loyalty-transaction",
    "default_environment_id": "Default",
    "description": "The Loyalty API is currently in beta.
Please contact our Support Team via our JIRA Service Desk for access to the Beta.
If you don’t have access, please contact your account administrator for assistance.
Not yet integrated with Primer and interested in learning more? Contact us.
Create an API key with the loyalty-transactions:write scopes.
Create a loyalty transaction. This is either a points redemption or a points refund.",
    "domain": "test.com",
    "endpoint_path": "/loyalty-transactions",
    "endpoint_path_alternates": [
      "/loyalty-transactions",
      "https://api.sandbox.primer.io/loyalty-transactions",
      "https://api.sandbox.primer.io/loyalty-transactions",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.3.uv.api-reference.subpackage_loyaltyApi.subpackage_loyaltyApi.post_loyalty_transaction",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/api-reference/loyalty-api/post-loyalty-transaction",
    "response_type": "json",
    "title": "Create a loyalty transaction",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "ca56f687-5be3-4661-aeed-674a0f1f7193",
    "api_endpoint_id": "subpackage_paymentWebhooks.payment_status_webhook_event",
    "api_type": "webhook",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/webhooks",
        "title": "Webhooks",
      },
      {
        "pathname": "/docs/api/v2.3/webhooks/payment-webhooks",
        "title": "Payment Webhooks",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/webhooks/payment-webhooks/payment-status-webhook-event",
    "code_snippets": [
      {
        "code": "{
  "eventType":"PAYMENT.STATUS",
  "date":"2021-02-21T15:36:16.367687",
  "notificationConfig":{
    "id":"cc51f9f0-7e1c-492b-9d37-f83a818f6070",
    "description":"Payment webhook"
  },
  "version":"2.3",
  "signedAt": "1689221338",
  "payment":{
    "id":"DdRZ6YY0",
    "date":"2021-02-21T15:34:16.367687",
    "dateUpdated":"2021-02-21T15:35:16.133701",
    "amount":3000,
    "currencyCode":"GBP",
    "customerId":"cust-123",
    "orderId":"order-123",
    "status":"SETTLED",
    "cardTokenType":"CARD_PAN",
    "customer": {
      "emailAddress": "test@primer.io",
      "mobileNumber": "0123456789",
      "billingAddress": {
        "firstName": "John",
        "postalCode": "CB94BQ",
        "addressLine1": "10001 Alpha St",
        "countryCode": "GB",
        "city": "Cambridge",
        "state": "Cambridgeshire"
      }
    },
    "paymentMethod":{
      "paymentType":"FIRST_PAYMENT",
      "paymentMethodToken":"-lcWjvBAAs2DnIRXwxNjUzNTYzNjIy",
      "isVaulted": "false",
      "analyticsId":"LUi5pETUaVsdSEamK25L",
      "paymentMethodType":"PAYMENT_CARD",
      "paymentMethodData":{
        "last4Digits":"1111",
        "first6Digits": "411111",
        "expirationMonth":"03",
        "expirationYear":"2030",
        "cardholderName":"ADYEN",
        "network":"Visa",
        "isNetworkTokenized":false,
        "binData":{
          "network":"VISA",
          "issuerCountryCode":"US",
          "issuerName":"JPMORGAN CHASE BANK, N.A.",
          "regionalRestriction":"UNKNOWN",
          "accountNumberType":"UNKNOWN",
          "accountFundingType":"UNKNOWN",
          "prepaidReloadableIndicator":"NOT_APPLICABLE",
          "productUsageType":"UNKNOWN",
          "productCode":"UNKNOWN",
          "productName":"UNKNOWN"
        }
      },
      "authorizationType": "FINAL",
      "threeDSecureAuthentication":{
        "responseCode":"NOT_PERFORMED"
      }
    },
    "processor":{
      "name":"STRIPE",
      "processorMerchantId":"acct_1GORasdasqNWFwi8c",
      "amountCaptured":3000,
      "amountRefunded":0
    },
    "transactions":[
      {
        "date":"2021-02-21T15:34:16.367687",
        "amount":3000,
        "currencyCode":"GBP",
        "transactionType":"SALE",
        "orderId":"order-123",
        "processorTransactionId":"pi_3L3edsGZasdasdc1iget38p",
        "processorName":"STRIPE",
        "processorMerchantId":"acct_1GORasvasdNWFwi8c",
        "processorStatus":"SETTLED",
        "cardTokenType":"CARD_PAN"
      }
    ],
    "riskData":{
      "fraudChecks":{
        "source":"riskified",
        "preAuthorizationResult":"THREE_DS",
        "postAuthorizationResult":"ACCEPT"
      },
      "cvvCheck": {
        "source": "processor",
        "result": "MATCHED"
      },
      "avsCheck": {
        "source": "processor",
        "result": {
          "streetAddress": "NOT_MATCHED",
          "postalCode": "NOT_VERIFIED"
        }
      }
    }
  }
}",
        "lang": "JSON",
      },
    ],
    "description": "Primer notifies you with a PAYMENT.STATUS webhook when a payment's status has been updated. This is especially useful for asyncronous processor Connections, which do not respond with an upfront authorization.
The webhook events will arrive in the order that the payment status changes, for example you should expect a status of PENDING, then AUTHORIZED, then SETTLED (depending on how your workflow is set up).
The webhook body contains the full payment object.
Example payment status notification:
Learn more about how Primer handles webhooks.",
    "domain": "test.com",
    "endpoint_path": "",
    "keywords": [
      "endpoint",
      "api",
      "webhook",
      "PaymentStatusWebhookPayload",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.3.uv.webhooks.subpackage_paymentWebhooks.subpackage_paymentWebhooks.payment_status_webhook_event",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/webhooks/payment-webhooks/payment-status-webhook-event",
    "title": "Payment Status Update",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "ca56f687-5be3-4661-aeed-674a0f1f7193",
    "api_endpoint_id": "subpackage_paymentWebhooks.payment_refund_webhook_event",
    "api_type": "webhook",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/webhooks",
        "title": "Webhooks",
      },
      {
        "pathname": "/docs/api/v2.3/webhooks/payment-webhooks",
        "title": "Payment Webhooks",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/webhooks/payment-webhooks/payment-refund-webhook-event",
    "description": "Primer notifies you with a PAYMENT.REFUND Webhook when a refund request has been fully processed by a payment processor and the refund has reached a final state.
Check the transaction with the most recent transactionType: "REFUND" in the transactions array:
if processorStatus is SETTLED, the refund was successful and the funds have been returned to the customer

if processorStatus is FAILED, the refund was unsuccessful


Learn more about how Primer handles webhooks.",
    "domain": "test.com",
    "endpoint_path": "",
    "keywords": [
      "endpoint",
      "api",
      "webhook",
      "PaymentRefundWebhookPayload",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.3.uv.webhooks.subpackage_paymentWebhooks.subpackage_paymentWebhooks.payment_refund_webhook_event",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/webhooks/payment-webhooks/payment-refund-webhook-event",
    "title": "Payment Refund",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "ca56f687-5be3-4661-aeed-674a0f1f7193",
    "api_endpoint_id": "subpackage_disputeChargebacksWebhooks.dispute_open_webhook_event",
    "api_type": "webhook",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/webhooks",
        "title": "Webhooks",
      },
      {
        "pathname": "/docs/api/v2.3/webhooks/dispute-chargebacks-webhooks",
        "title": "Dispute Chargebacks Webhooks",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/webhooks/dispute-chargebacks-webhooks/dispute-open-webhook-event",
    "description": "Primer notifies you with a DISPUTE.OPEN webhook on newly opened disputes or chargebacks. This notification is unified across all processors.
Learn more about how Primer handles webhooks.",
    "domain": "test.com",
    "endpoint_path": "",
    "keywords": [
      "endpoint",
      "api",
      "webhook",
      "DisputeOpenWebhookPayload",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.3.uv.webhooks.subpackage_disputeChargebacksWebhooks.subpackage_disputeChargebacksWebhooks.dispute_open_webhook_event",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/webhooks/dispute-chargebacks-webhooks/dispute-open-webhook-event",
    "title": "Dispute Open",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "ca56f687-5be3-4661-aeed-674a0f1f7193",
    "api_endpoint_id": "subpackage_disputeChargebacksWebhooks.dispute_status_webhook_event",
    "api_type": "webhook",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.3/webhooks",
        "title": "Webhooks",
      },
      {
        "pathname": "/docs/api/v2.3/webhooks/dispute-chargebacks-webhooks",
        "title": "Dispute Chargebacks Webhooks",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/webhooks/dispute-chargebacks-webhooks/dispute-status-webhook-event",
    "description": "Primer notifies you with a DISPUTE.STATUS webhook that will provide information on retrievals, disputes (also known as chargebacks), and preabritration filings.
This notification is supported for processors Adyen, Braintree, Checkout.com & PayPal.
The DISPUTE.STATUS event can be used to proactively communicate with customers, issue refunds, send disputes to risk tools, or to proactively defend disputes.
The DISPUTE.STATUS event is currently in an open beta stage, as we continue to add more processors.
Learn more about managing disputes at Primer.",
    "domain": "test.com",
    "endpoint_path": "",
    "keywords": [
      "endpoint",
      "api",
      "webhook",
      "DisputeStatusWebhookPayload",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.3.uv.webhooks.subpackage_disputeChargebacksWebhooks.subpackage_disputeChargebacksWebhooks.dispute_status_webhook_event",
    "org_id": "test",
    "pathname": "/docs/api/v2.3/webhooks/dispute-chargebacks-webhooks/dispute-status-webhook-event",
    "title": "Dispute Status",
    "type": "api-reference",
    "version": {
      "id": "v2.3",
      "pathname": "/docs/api/v2.3",
      "title": "v2.3",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "090e0b31-c453-4f41-8269-845a6e8a461f",
    "api_endpoint_id": "subpackage_clientSessionApi.retrieveClientSideToken",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.2/api-reference/client-session-api",
        "title": "Client Session API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/client-session-api/retrieve-client-side-token",
    "default_environment_id": "Default",
    "description": "This API call retrieves all the details associated with the client session corresponding to the client token that is provided in the request. The fields with empty values are excluded from the response.",
    "domain": "test.com",
    "endpoint_path": "/client-session",
    "endpoint_path_alternates": [
      "/client-session",
      "https://api.sandbox.primer.io/client-session",
      "https://api.sandbox.primer.io/client-session",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "GET",
    "objectID": "test:test.com:root..v2.2.uv.api-reference.subpackage_clientSessionApi.subpackage_clientSessionApi.retrieveClientSideToken",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/api-reference/client-session-api/retrieve-client-side-token",
    "response_type": "json",
    "title": "Retrieve a client session",
    "type": "api-reference",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "090e0b31-c453-4f41-8269-845a6e8a461f",
    "api_endpoint_id": "subpackage_clientSessionApi.createClientSideToken",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.2/api-reference/client-session-api",
        "title": "Client Session API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/client-session-api/create-client-side-token",
    "default_environment_id": "Default",
    "description": "Creating a client session generates a client token: a temporary key used to initialize Universal Checkout and authenticate it against your account.
Universal Checkout automatically retrieves all the settings from the client session and the Dashboard to configure the payment methods and the checkout experience.


Note:
When creating a Client Session, please make sure to provide currencyCode, orderId, and at least one of amount or lineItems.
If any of these are not yet available, you can provide them w
hen making the payment request.


POST /client-session does not have required fields as all fields are not always known when a client session is created.
Use 

PATCH /client-session to update the parameters throughout the checkout session.
Client tokens expire after 24 hours.",
    "domain": "test.com",
    "endpoint_path": "/client-session",
    "endpoint_path_alternates": [
      "/client-session",
      "https://api.sandbox.primer.io/client-session",
      "https://api.sandbox.primer.io/client-session",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.2.uv.api-reference.subpackage_clientSessionApi.subpackage_clientSessionApi.createClientSideToken",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/api-reference/client-session-api/create-client-side-token",
    "response_type": "json",
    "title": "Create a client session",
    "type": "api-reference",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "090e0b31-c453-4f41-8269-845a6e8a461f",
    "api_endpoint_id": "subpackage_clientSessionApi.updateClientSideToken",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.2/api-reference/client-session-api",
        "title": "Client Session API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/client-session-api/update-client-side-token",
    "default_environment_id": "Default",
    "description": "You can update a clients session created earlier with the PATCH /client-session API call.
The only required field for the request is clientToken. Other supported request fields are same as for the POST /client-session API call.
You need to specify only the fields you wish to update. However, if the items that are to be updated are of type array, then you need to provide the complete array along with modified items.
If you wish to update nested fields on the client session, such as the customer emailAddress field, you can pass the customer object with only one field, emailAddress, to update.
If you simply wish to clear the value of the field, pass null as your input.
You can update paymentMethod.vaultOnSuccess field but updating of the paymentMethod.options field through PATCH /client-session is not supported.
The response will contain all the fields of the client session including the ones that were changed.",
    "domain": "test.com",
    "endpoint_path": "/client-session",
    "endpoint_path_alternates": [
      "/client-session",
      "https://api.sandbox.primer.io/client-session",
      "https://api.sandbox.primer.io/client-session",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "PATCH",
    "objectID": "test:test.com:root..v2.2.uv.api-reference.subpackage_clientSessionApi.subpackage_clientSessionApi.updateClientSideToken",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/api-reference/client-session-api/update-client-side-token",
    "response_type": "json",
    "title": "Update client session",
    "type": "api-reference",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "090e0b31-c453-4f41-8269-845a6e8a461f",
    "api_endpoint_id": "subpackage_paymentsApi.listPayments",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.2/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/list-payments",
    "code_snippets": [
      {
        "code": "curl --location --request GET 'https://api.primer.io/payments?status=FAILED,CANCELLED&customer_id=john-123' \
--header 'X-Api-Key: <YOUR_API_KEY>'",
        "lang": "bash",
      },
    ],
    "default_environment_id": "Default",
    "description": "Retrieve a list of your payments.
Results are paginated, they will only return up to 100 payments maximum.
To access the next page of result, set the cursor query parameter to the value of nextCursor in
your current result payload. Use prevCursor to go back to the previous page.
Note: this endpoint returns a list of
summarized payments. Not all payments attributes are present. You can use
the query parameters to filter payments. You can separate multiple query parameters with the & symbol.
Query parameters with types of the form "Array of strings" (such as the status parameter) can be specified as a comma-separated list.
For example, if you wanted to get both FAILED and CANCELLED payments, for customer john-123, you would use:
You can alternatively specify a list by repeating the parameter multiple times.
Note: payments will be available within a minute from being created.",
    "domain": "test.com",
    "endpoint_path": "/payments",
    "endpoint_path_alternates": [
      "/payments",
      "https://api.sandbox.primer.io/payments",
      "https://api.sandbox.primer.io/payments",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "GET",
    "objectID": "test:test.com:root..v2.2.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.listPayments",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/api-reference/payments-api/list-payments",
    "response_type": "json",
    "title": "Search & list payments",
    "type": "api-reference",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "090e0b31-c453-4f41-8269-845a6e8a461f",
    "api_endpoint_id": "subpackage_paymentsApi.createPayment",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.2/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/create-payment",
    "default_environment_id": "Default",
    "description": "Create and authorize a payment for a given customer order. You
should provide a payment method token here to avoid PCI implications.
If only a payment method token is passed, the values passed with the Client Session is used to determine the amount, currency etc.
Note: amount, currencyCode and orderId are required during payment creation. Make sure to pass these fields when creating a client session, or if not yet available, when creating a payment.
All fields provided on this request will take preference over any field on the order associated with the client session. E.g. if you pass amount on this request, it will override the amount on the order associated with the Client Session.
Parameters that are not on this request will be fetched from previously created Client Session and merged. E.g. if you specify customer.billingAddress in Client Session and then pass customer.emailAddress data with this request, it will automatically merge the customer fields and use both billingAddress and emailAddress for later calculations.",
    "domain": "test.com",
    "endpoint_path": "/payments",
    "endpoint_path_alternates": [
      "/payments",
      "https://api.sandbox.primer.io/payments",
      "https://api.sandbox.primer.io/payments",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.2.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.createPayment",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/api-reference/payments-api/create-payment",
    "response_type": "json",
    "title": "Create a payment",
    "type": "api-reference",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "090e0b31-c453-4f41-8269-845a6e8a461f",
    "api_endpoint_id": "subpackage_paymentsApi.authorizePayment",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.2/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/authorize-payment",
    "default_environment_id": "Default",
    "description": "Manually authorize a payment using a provided processor. This is useful if you want to authorize a payment without a workflow action.
The processor merchant ID must be provided which can be found on the Integrations page.
The processor name is optional but it must be provided if your account has multiple processors configured which share the same merchant IDs.",
    "domain": "test.com",
    "endpoint_path": "/payments/:id/authorize",
    "endpoint_path_alternates": [
      "/payments/{id}/authorize",
      "https://api.sandbox.primer.io/payments/:id/authorize",
      "https://api.sandbox.primer.io/payments/%7Bid%7D/authorize",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_four_ErrorResponse",
      "four_hundred_nine_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.2.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.authorizePayment",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/api-reference/payments-api/authorize-payment",
    "response_type": "json",
    "title": "Authorize a payment",
    "type": "api-reference",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "090e0b31-c453-4f41-8269-845a6e8a461f",
    "api_endpoint_id": "subpackage_paymentsApi.capturePayment",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.2/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/capture-payment",
    "default_environment_id": "Default",
    "description": "If you have successfully authorized a payment, you can now
fully capture, or partially capture funds from the authorized payment, depending
on whether your selected payment processor supports it. The payment will
be updated to SETTLED or SETTLING, depending on the payment method type.
The payload sent in this capture request is completely optional. If you don't
send a payload with the capture request, the full amount that was authorized
will be sent for capture. Below are the available payload attributes, which
give you more granular control when capturing funds, if you require it.",
    "domain": "test.com",
    "endpoint_path": "/payments/:id/capture",
    "endpoint_path_alternates": [
      "/payments/{id}/capture",
      "https://api.sandbox.primer.io/payments/:id/capture",
      "https://api.sandbox.primer.io/payments/%7Bid%7D/capture",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.2.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.capturePayment",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/api-reference/payments-api/capture-payment",
    "response_type": "json",
    "title": "Capture a payment",
    "type": "api-reference",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "090e0b31-c453-4f41-8269-845a6e8a461f",
    "api_endpoint_id": "subpackage_paymentsApi.cancelPayment",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.2/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/cancel-payment",
    "default_environment_id": "Default",
    "description": "Provided the payment has not reached SETTLED status, Primer will
send a "void" request to the payment processor, thereby cancelling the payment
and releasing the hold on customer funds. Upon success, the payment will transition
to CANCELLED. The payload is optional.",
    "domain": "test.com",
    "endpoint_path": "/payments/:id/cancel",
    "endpoint_path_alternates": [
      "/payments/{id}/cancel",
      "https://api.sandbox.primer.io/payments/:id/cancel",
      "https://api.sandbox.primer.io/payments/%7Bid%7D/cancel",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.2.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.cancelPayment",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/api-reference/payments-api/cancel-payment",
    "response_type": "json",
    "title": "Cancel a payment",
    "type": "api-reference",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "090e0b31-c453-4f41-8269-845a6e8a461f",
    "api_endpoint_id": "subpackage_paymentsApi.refundPayment",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.2/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/refund-payment",
    "default_environment_id": "Default",
    "description": "By default, this request will refund the full amount.
Optionally, pass in a lesser amount for a partial refund.",
    "domain": "test.com",
    "endpoint_path": "/payments/:id/refund",
    "endpoint_path_alternates": [
      "/payments/{id}/refund",
      "https://api.sandbox.primer.io/payments/:id/refund",
      "https://api.sandbox.primer.io/payments/%7Bid%7D/refund",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.2.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.refundPayment",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/api-reference/payments-api/refund-payment",
    "response_type": "json",
    "title": "Refund a payment",
    "type": "api-reference",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "090e0b31-c453-4f41-8269-845a6e8a461f",
    "api_endpoint_id": "subpackage_paymentsApi.resumePayment",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.2/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/resume-payment",
    "default_environment_id": "Default",
    "description": "Resume a payment's workflow execution from a paused state. This
is usually required when a Workflow was paused in order to get further information
from the customer, or when waiting for an asynchronous response from a third
party connection.",
    "domain": "test.com",
    "endpoint_path": "/payments/:id/resume",
    "endpoint_path_alternates": [
      "/payments/{id}/resume",
      "https://api.sandbox.primer.io/payments/:id/resume",
      "https://api.sandbox.primer.io/payments/%7Bid%7D/resume",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.2.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.resumePayment",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/api-reference/payments-api/resume-payment",
    "response_type": "json",
    "title": "Resume a payment",
    "type": "api-reference",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "090e0b31-c453-4f41-8269-845a6e8a461f",
    "api_endpoint_id": "subpackage_paymentsApi.adjustAuthorization",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.2/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/adjust-authorization",
    "default_environment_id": "Default",
    "description": "Adjust authorized amount. This is only possible if authorizationType was set to
ESTIMATED when the payment was created, and the mechanism is supported by the payment method.",
    "domain": "test.com",
    "endpoint_path": "/payments/:id/adjust-authorization",
    "endpoint_path_alternates": [
      "/payments/{id}/adjust-authorization",
      "https://api.sandbox.primer.io/payments/:id/adjust-authorization",
      "https://api.sandbox.primer.io/payments/%7Bid%7D/adjust-authorization",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_four_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.2.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.adjustAuthorization",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/api-reference/payments-api/adjust-authorization",
    "response_type": "json",
    "title": "Adjust authorized amount",
    "type": "api-reference",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "090e0b31-c453-4f41-8269-845a6e8a461f",
    "api_endpoint_id": "subpackage_paymentsApi.getPaymentById",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.2/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/get-payment-by-id",
    "default_environment_id": "Default",
    "description": "Retrieve a payment by its ID.",
    "domain": "test.com",
    "endpoint_path": "/payments/:id",
    "endpoint_path_alternates": [
      "/payments/{id}",
      "https://api.sandbox.primer.io/payments/:id",
      "https://api.sandbox.primer.io/payments/%7Bid%7D",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
    ],
    "method": "GET",
    "objectID": "test:test.com:root..v2.2.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.getPaymentById",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/api-reference/payments-api/get-payment-by-id",
    "response_type": "json",
    "title": "Get a payment",
    "type": "api-reference",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "090e0b31-c453-4f41-8269-845a6e8a461f",
    "api_endpoint_id": "subpackage_paymentMethodsApi.vault_payment_method_payment_methods__token__vault_post",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.2/api-reference/payment-methods-api",
        "title": "Payment Methods API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payment-methods-api/vault-payment-method-payment-methods-token-vault-post",
    "default_environment_id": "Default",
    "description": "Save a SINGLE_USE payment method token so it can be used
again later.
If you try to vault an already vaulted token, you will get the existing vaulted token back.",
    "domain": "test.com",
    "endpoint_path": "/payment-instruments/:paymentMethodToken/vault",
    "endpoint_path_alternates": [
      "/payment-instruments/{paymentMethodToken}/vault",
      "https://api.sandbox.primer.io/payment-instruments/:paymentMethodToken/vault",
      "https://api.sandbox.primer.io/payment-instruments/%7BpaymentMethodToken%7D/vault",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.2.uv.api-reference.subpackage_paymentMethodsApi.subpackage_paymentMethodsApi.vault_payment_method_payment_methods__token__vault_post",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/api-reference/payment-methods-api/vault-payment-method-payment-methods-token-vault-post",
    "response_type": "json",
    "title": "Save a payment method token",
    "type": "api-reference",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "090e0b31-c453-4f41-8269-845a6e8a461f",
    "api_endpoint_id": "subpackage_paymentMethodsApi.get_payment_methods_payment_methods_get",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.2/api-reference/payment-methods-api",
        "title": "Payment Methods API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payment-methods-api/get-payment-methods-payment-methods-get",
    "default_environment_id": "Default",
    "description": "Retrieve a list of stored payment methods for a customer.",
    "domain": "test.com",
    "endpoint_path": "/payment-instruments",
    "endpoint_path_alternates": [
      "/payment-instruments",
      "https://api.sandbox.primer.io/payment-instruments",
      "https://api.sandbox.primer.io/payment-instruments",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
    ],
    "method": "GET",
    "objectID": "test:test.com:root..v2.2.uv.api-reference.subpackage_paymentMethodsApi.subpackage_paymentMethodsApi.get_payment_methods_payment_methods_get",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/api-reference/payment-methods-api/get-payment-methods-payment-methods-get",
    "response_type": "json",
    "title": "List saved payment methods",
    "type": "api-reference",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "090e0b31-c453-4f41-8269-845a6e8a461f",
    "api_endpoint_id": "subpackage_paymentMethodsApi.delete_payment_method_payment_methods__token__delete",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.2/api-reference/payment-methods-api",
        "title": "Payment Methods API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payment-methods-api/delete-payment-method-payment-methods-token-delete",
    "default_environment_id": "Default",
    "description": "Delete a saved payment method.",
    "domain": "test.com",
    "endpoint_path": "/payment-instruments/:paymentMethodToken",
    "endpoint_path_alternates": [
      "/payment-instruments/{paymentMethodToken}",
      "https://api.sandbox.primer.io/payment-instruments/:paymentMethodToken",
      "https://api.sandbox.primer.io/payment-instruments/%7BpaymentMethodToken%7D",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
    ],
    "method": "DELETE",
    "objectID": "test:test.com:root..v2.2.uv.api-reference.subpackage_paymentMethodsApi.subpackage_paymentMethodsApi.delete_payment_method_payment_methods__token__delete",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/api-reference/payment-methods-api/delete-payment-method-payment-methods-token-delete",
    "response_type": "json",
    "title": "Delete a saved payment method",
    "type": "api-reference",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "090e0b31-c453-4f41-8269-845a6e8a461f",
    "api_endpoint_id": "subpackage_paymentMethodsApi.set_payment_method_default_payment_methods__token__default_post",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.2/api-reference/payment-methods-api",
        "title": "Payment Methods API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payment-methods-api/set-payment-method-default-payment-methods-token-default-post",
    "default_environment_id": "Default",
    "description": "Update a saved payment method to be the default stored payment method for a customer.",
    "domain": "test.com",
    "endpoint_path": "/payment-instruments/:paymentMethodToken/default",
    "endpoint_path_alternates": [
      "/payment-instruments/{paymentMethodToken}/default",
      "https://api.sandbox.primer.io/payment-instruments/:paymentMethodToken/default",
      "https://api.sandbox.primer.io/payment-instruments/%7BpaymentMethodToken%7D/default",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.2.uv.api-reference.subpackage_paymentMethodsApi.subpackage_paymentMethodsApi.set_payment_method_default_payment_methods__token__default_post",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/api-reference/payment-methods-api/set-payment-method-default-payment-methods-token-default-post",
    "response_type": "json",
    "title": "Update the default saved payment method",
    "type": "api-reference",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "090e0b31-c453-4f41-8269-845a6e8a461f",
    "api_endpoint_id": "subpackage_observabilityApiBeta.external_payment",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.2/api-reference/observability-api-beta",
        "title": "Observability API (Beta)",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/observability-api-beta/external-payment",
    "default_environment_id": "Default",
    "description": "The Observability API is currently in beta.
Please contact our Support Team via our JIRA Service Desk for access to the Beta.
If you don’t have access, please contact your account administrator for assistance.
Not yet integrated with Primer and interested in learning more? Contact us.
Creating a payment with the Observability API sends external payments data to Primer to populate Observability Payment Insights dashboards. Payments created through the Payments API will be automatically populated and do not need to be sent in the Observability API.
Create an API key with the observability-payments:write scope.
Each record must be created with a unique paymentId. To update a payment record with new data use the PATCH endpoint.",
    "domain": "test.com",
    "endpoint_path": "/observability/payments",
    "endpoint_path_alternates": [
      "/observability/payments",
      "https://api.sandbox.primer.io/observability/payments",
      "https://api.sandbox.primer.io/observability/payments",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.2.uv.api-reference.subpackage_observabilityApiBeta.subpackage_observabilityApiBeta.external_payment",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/api-reference/observability-api-beta/external-payment",
    "response_type": "json",
    "title": "Create an external payment",
    "type": "api-reference",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "090e0b31-c453-4f41-8269-845a6e8a461f",
    "api_endpoint_id": "subpackage_observabilityApiBeta.external_payment_update",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.2/api-reference/observability-api-beta",
        "title": "Observability API (Beta)",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/observability-api-beta/external-payment-update",
    "default_environment_id": "Default",
    "description": "The Observability API is currently in beta.
Please contact our Support Team via our JIRA Service Desk for access to the Beta.
If you don’t have access, please contact your account administrator for assistance.
Not yet integrated with Primer and interested in learning more? Contact us.
You can update payments created earlier through the Observability API with this endpoint. The only required field for the request is paymentId. Other supported request fields are the same as for the create an external payment API call.
If you wish to update nested fields on the payment, you only need to pass the fields that you wish to update. For example to update the processor name, you would pass in processor.name only.
The response will contain all the fields of the payment including the ones that were changed.",
    "domain": "test.com",
    "endpoint_path": "/observability/payments/:paymentId",
    "endpoint_path_alternates": [
      "/observability/payments/{paymentId}",
      "https://api.sandbox.primer.io/observability/payments/:paymentId",
      "https://api.sandbox.primer.io/observability/payments/%7BpaymentId%7D",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
    ],
    "method": "PATCH",
    "objectID": "test:test.com:root..v2.2.uv.api-reference.subpackage_observabilityApiBeta.subpackage_observabilityApiBeta.external_payment_update",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/api-reference/observability-api-beta/external-payment-update",
    "response_type": "json",
    "title": "Update an external payment",
    "type": "api-reference",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "090e0b31-c453-4f41-8269-845a6e8a461f",
    "api_endpoint_id": "subpackage_loyaltyApi.get_loyalty_customer",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.2/api-reference/loyalty-api",
        "title": "Loyalty API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/loyalty-api/get-loyalty-customer",
    "default_environment_id": "Default",
    "description": "The Loyalty API is currently in beta.
Please contact our Support Team via our JIRA Service Desk for access to the Beta.
If you don’t have access, please contact your account administrator for assistance.
Not yet integrated with Primer and interested in learning more? Contact us.
Create an API key with the loyalty-transactions:read scopes.
Get a loyalty customer by ID and connection ID. This includes the customer's points balance.
The connectionId is the unique Primer identifier for your loyalty provider connection. Primer will provide this once the loyalty provider connection is created.
The customerId refers to the customer identifier on the loyalty provider's side.",
    "domain": "test.com",
    "endpoint_path": "/loyalty-customers/:id",
    "endpoint_path_alternates": [
      "/loyalty-customers/{id}",
      "https://api.sandbox.primer.io/loyalty-customers/:id",
      "https://api.sandbox.primer.io/loyalty-customers/%7Bid%7D",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
    ],
    "method": "GET",
    "objectID": "test:test.com:root..v2.2.uv.api-reference.subpackage_loyaltyApi.subpackage_loyaltyApi.get_loyalty_customer",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/api-reference/loyalty-api/get-loyalty-customer",
    "response_type": "json",
    "title": "Get a loyalty customer's points balance",
    "type": "api-reference",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "090e0b31-c453-4f41-8269-845a6e8a461f",
    "api_endpoint_id": "subpackage_loyaltyApi.get_loyalty_customer_transactions",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.2/api-reference/loyalty-api",
        "title": "Loyalty API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/loyalty-api/get-loyalty-customer-transactions",
    "default_environment_id": "Default",
    "description": "The Loyalty API is currently in beta.
Please contact our Support Team via our JIRA Service Desk for access to the Beta.
If you don’t have access, please contact your account administrator for assistance.
Not yet integrated with Primer and interested in learning more? Contact us.
Create an API key with the loyalty-transactions:read scopes.
Get all your loyalty transactions. You can filter by connectionId (recommended) and by customerId and orderId.
Additionally provide a limit to restrict the number of transactions in the response, and an offset to determine where to start.",
    "domain": "test.com",
    "endpoint_path": "/loyalty-transactions",
    "endpoint_path_alternates": [
      "/loyalty-transactions",
      "https://api.sandbox.primer.io/loyalty-transactions",
      "https://api.sandbox.primer.io/loyalty-transactions",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "GET",
    "objectID": "test:test.com:root..v2.2.uv.api-reference.subpackage_loyaltyApi.subpackage_loyaltyApi.get_loyalty_customer_transactions",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/api-reference/loyalty-api/get-loyalty-customer-transactions",
    "response_type": "json",
    "title": "List the transactions for a customer",
    "type": "api-reference",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "090e0b31-c453-4f41-8269-845a6e8a461f",
    "api_endpoint_id": "subpackage_loyaltyApi.post_loyalty_transaction",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.2/api-reference/loyalty-api",
        "title": "Loyalty API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/loyalty-api/post-loyalty-transaction",
    "default_environment_id": "Default",
    "description": "The Loyalty API is currently in beta.
Please contact our Support Team via our JIRA Service Desk for access to the Beta.
If you don’t have access, please contact your account administrator for assistance.
Not yet integrated with Primer and interested in learning more? Contact us.
Create an API key with the loyalty-transactions:write scopes.
Create a loyalty transaction. This is either a points redemption or a points refund.",
    "domain": "test.com",
    "endpoint_path": "/loyalty-transactions",
    "endpoint_path_alternates": [
      "/loyalty-transactions",
      "https://api.sandbox.primer.io/loyalty-transactions",
      "https://api.sandbox.primer.io/loyalty-transactions",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.2.uv.api-reference.subpackage_loyaltyApi.subpackage_loyaltyApi.post_loyalty_transaction",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/api-reference/loyalty-api/post-loyalty-transaction",
    "response_type": "json",
    "title": "Create a loyalty transaction",
    "type": "api-reference",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "c5629660-3984-4ce0-989e-9c6fb0df36d9",
    "api_endpoint_id": "subpackage_paymentWebhooks.payment_status_webhook_event",
    "api_type": "webhook",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/webhooks",
        "title": "Webhooks",
      },
      {
        "pathname": "/docs/api/v2.2/webhooks/payment-webhooks",
        "title": "Payment Webhooks",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/webhooks/payment-webhooks/payment-status-webhook-event",
    "code_snippets": [
      {
        "code": "{
  "eventType":"PAYMENT.STATUS",
  "date":"2021-02-21T15:36:16.367687",
  "notificationConfig":{
    "id":"cc51f9f0-7e1c-492b-9d37-f83a818f6070",
    "description":"Payment webhook"
  },
  "version":"2.2",
  "signedAt": "1689221338",
  "payment":{
    "id":"DdRZ6YY0",
    "date":"2021-02-21T15:34:16.367687",
    "dateUpdated":"2021-02-21T15:35:16.133701",
    "amount":3000,
    "currencyCode":"GBP",
    "customerId":"cust-123",
    "orderId":"order-123",
    "status":"SETTLED",
    "cardTokenType":"CARD_PAN",
    "customer": {
      "emailAddress": "test@primer.io",
      "mobileNumber": "0123456789",
      "billingAddress": {
        "firstName": "John",
        "postalCode": "CB94BQ",
        "addressLine1": "10001 Alpha St",
        "countryCode": "GB",
        "city": "Cambridge",
        "state": "Cambridgeshire"
      }
    },
    "paymentMethod":{
      "paymentType":"FIRST_PAYMENT",
      "paymentMethodToken":"-lcWjvBAAs2DnIRXwxNjUzNTYzNjIy",
      "isVaulted": "false",
      "analyticsId":"LUi5pETUaVsdSEamK25L",
      "paymentMethodType":"PAYMENT_CARD",
      "paymentMethodData":{
        "last4Digits":"1111",
        "first6Digits": "411111",
        "expirationMonth":"03",
        "expirationYear":"2030",
        "cardholderName":"ADYEN",
        "network":"Visa",
        "isNetworkTokenized":false,
        "binData":{
          "network":"VISA",
          "issuerCountryCode":"US",
          "issuerName":"JPMORGAN CHASE BANK, N.A.",
          "regionalRestriction":"UNKNOWN",
          "accountNumberType":"UNKNOWN",
          "accountFundingType":"UNKNOWN",
          "prepaidReloadableIndicator":"NOT_APPLICABLE",
          "productUsageType":"UNKNOWN",
          "productCode":"UNKNOWN",
          "productName":"UNKNOWN"
        }
      },
      "authorizationType": "FINAL",
      "threeDSecureAuthentication":{
        "responseCode":"NOT_PERFORMED"
      }
    },
    "processor":{
      "name":"STRIPE",
      "processorMerchantId":"acct_1GORasdasqNWFwi8c",
      "amountCaptured":3000,
      "amountRefunded":0
    },
    "transactions":[
      {
        "date":"2021-02-21T15:34:16.367687",
        "amount":3000,
        "currencyCode":"GBP",
        "transactionType":"SALE",
        "orderId":"order-123",
        "processorTransactionId":"pi_3L3edsGZasdasdc1iget38p",
        "processorName":"STRIPE",
        "processorMerchantId":"acct_1GORasvasdNWFwi8c",
        "processorStatus":"SETTLED",
        "cardTokenType":"CARD_PAN"
      }
    ],
    "riskData":{
      "fraudChecks":{
        "source":"riskified",
        "preAuthorizationResult":"THREE_DS",
        "postAuthorizationResult":"ACCEPT"
      },
      "cvvCheck": {
        "source": "processor",
        "result": "MATCHED"
      },
      "avsCheck": {
        "source": "processor",
        "result": {
          "streetAddress": "NOT_MATCHED",
          "postalCode": "NOT_VERIFIED"
        }
      }
    }
  }
}",
        "lang": "JSON",
      },
    ],
    "description": "Primer notifies you with a PAYMENT.STATUS webhook when a payment's status has been updated. This is especially useful for asyncronous processor Connections, which do not respond with an upfront authorization.
The webhook events will arrive in the order that the payment status changes, for example you should expect a status of PENDING, then AUTHORIZED, then SETTLED (depending on how your workflow is set up).
The webhook body contains the full payment object.
Example payment status notification:
Learn more about how Primer handles webhooks.",
    "domain": "test.com",
    "endpoint_path": "",
    "keywords": [
      "endpoint",
      "api",
      "webhook",
      "PaymentStatusWebhookPayload",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.2.uv.webhooks.subpackage_paymentWebhooks.subpackage_paymentWebhooks.payment_status_webhook_event",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/webhooks/payment-webhooks/payment-status-webhook-event",
    "title": "Payment Status Update",
    "type": "api-reference",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "c5629660-3984-4ce0-989e-9c6fb0df36d9",
    "api_endpoint_id": "subpackage_paymentWebhooks.payment_refund_webhook_event",
    "api_type": "webhook",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/webhooks",
        "title": "Webhooks",
      },
      {
        "pathname": "/docs/api/v2.2/webhooks/payment-webhooks",
        "title": "Payment Webhooks",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/webhooks/payment-webhooks/payment-refund-webhook-event",
    "description": "Primer notifies you with a PAYMENT.REFUND Webhook when a refund request has been fully processed by a payment processor and the refund has reached a final state.
Check the transaction with the most recent transactionType: "REFUND" in the transactions array:
if processorStatus is SETTLED, the refund was successful and the funds have been returned to the customer

if processorStatus is FAILED, the refund was unsuccessful


Learn more about how Primer handles webhooks.",
    "domain": "test.com",
    "endpoint_path": "",
    "keywords": [
      "endpoint",
      "api",
      "webhook",
      "PaymentRefundWebhookPayload",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.2.uv.webhooks.subpackage_paymentWebhooks.subpackage_paymentWebhooks.payment_refund_webhook_event",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/webhooks/payment-webhooks/payment-refund-webhook-event",
    "title": "Payment Refund",
    "type": "api-reference",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "c5629660-3984-4ce0-989e-9c6fb0df36d9",
    "api_endpoint_id": "subpackage_disputeChargebacksWebhooks.dispute_open_webhook_event",
    "api_type": "webhook",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/webhooks",
        "title": "Webhooks",
      },
      {
        "pathname": "/docs/api/v2.2/webhooks/dispute-chargebacks-webhooks",
        "title": "Dispute Chargebacks Webhooks",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/webhooks/dispute-chargebacks-webhooks/dispute-open-webhook-event",
    "description": "Primer notifies you with a DISPUTE.OPEN webhook on newly opened disputes or chargebacks. This notification is unified across all processors.
Learn more about how Primer handles webhooks.",
    "domain": "test.com",
    "endpoint_path": "",
    "keywords": [
      "endpoint",
      "api",
      "webhook",
      "DisputeOpenWebhookPayload",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.2.uv.webhooks.subpackage_disputeChargebacksWebhooks.subpackage_disputeChargebacksWebhooks.dispute_open_webhook_event",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/webhooks/dispute-chargebacks-webhooks/dispute-open-webhook-event",
    "title": "Dispute Open",
    "type": "api-reference",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "c5629660-3984-4ce0-989e-9c6fb0df36d9",
    "api_endpoint_id": "subpackage_disputeChargebacksWebhooks.dispute_status_webhook_event",
    "api_type": "webhook",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.2/webhooks",
        "title": "Webhooks",
      },
      {
        "pathname": "/docs/api/v2.2/webhooks/dispute-chargebacks-webhooks",
        "title": "Dispute Chargebacks Webhooks",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/webhooks/dispute-chargebacks-webhooks/dispute-status-webhook-event",
    "description": "Primer notifies you with a DISPUTE.STATUS webhook that will provide information on retrievals, disputes (also known as chargebacks), and preabritration filings.
This notification is supported for processors Adyen, Braintree, Checkout.com & PayPal.
The DISPUTE.STATUS event can be used to proactively communicate with customers, issue refunds, send disputes to risk tools, or to proactively defend disputes.
The DISPUTE.STATUS event is currently in an open beta stage, as we continue to add more processors.
Learn more about managing disputes at Primer.",
    "domain": "test.com",
    "endpoint_path": "",
    "keywords": [
      "endpoint",
      "api",
      "webhook",
      "DisputeStatusWebhookPayload",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.2.uv.webhooks.subpackage_disputeChargebacksWebhooks.subpackage_disputeChargebacksWebhooks.dispute_status_webhook_event",
    "org_id": "test",
    "pathname": "/docs/api/v2.2/webhooks/dispute-chargebacks-webhooks/dispute-status-webhook-event",
    "title": "Dispute Status",
    "type": "api-reference",
    "version": {
      "id": "v2.2",
      "pathname": "/docs/api/v2.2",
      "title": "v2.2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "7ed504c0-fc2e-4a52-b3fd-b277869eda14",
    "api_endpoint_id": "subpackage_clientSessionApi.retrieveClientSideToken",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.1/api-reference/client-session-api",
        "title": "Client Session API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/client-session-api/retrieve-client-side-token",
    "default_environment_id": "Default",
    "description": "This API call retrieves all the details associated with the client session corresponding to the client token that is provided in the request. The fields with empty values are excluded from the response.",
    "domain": "test.com",
    "endpoint_path": "/client-session",
    "endpoint_path_alternates": [
      "/client-session",
      "https://api.sandbox.primer.io/client-session",
      "https://api.sandbox.primer.io/client-session",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "GET",
    "objectID": "test:test.com:root..v2.1.uv.api-reference.subpackage_clientSessionApi.subpackage_clientSessionApi.retrieveClientSideToken",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/api-reference/client-session-api/retrieve-client-side-token",
    "response_type": "json",
    "title": "Retrieve a client session",
    "type": "api-reference",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "7ed504c0-fc2e-4a52-b3fd-b277869eda14",
    "api_endpoint_id": "subpackage_clientSessionApi.createClientSideToken",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.1/api-reference/client-session-api",
        "title": "Client Session API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/client-session-api/create-client-side-token",
    "default_environment_id": "Default",
    "description": "Creating a client session generates a client token: a temporary key used to initialize Universal Checkout and authenticate it against your account.
Universal Checkout automatically retrieves all the settings from the client session and the Dashboard to configure the payment methods and the checkout experience.


Note:
When creating a Client Session, please make sure to provide currencyCode, orderId, and at least one of amount or lineItems.
If any of these are not yet available, you can provide them when making the payment request.
POST /client-session does not have required fields as all fields are not always known when a client session is created.
Use PATCH /client-session to update the parameters throughout the checkout session.
Client tokens expire after 24 hours.",
    "domain": "test.com",
    "endpoint_path": "/client-session",
    "endpoint_path_alternates": [
      "/client-session",
      "https://api.sandbox.primer.io/client-session",
      "https://api.sandbox.primer.io/client-session",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.1.uv.api-reference.subpackage_clientSessionApi.subpackage_clientSessionApi.createClientSideToken",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/api-reference/client-session-api/create-client-side-token",
    "response_type": "json",
    "title": "Create a client session",
    "type": "api-reference",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "7ed504c0-fc2e-4a52-b3fd-b277869eda14",
    "api_endpoint_id": "subpackage_clientSessionApi.updateClientSideToken",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.1/api-reference/client-session-api",
        "title": "Client Session API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/client-session-api/update-client-side-token",
    "default_environment_id": "Default",
    "description": "You can update a clients session created earlier with the PATCH /client-session API call.
The only required field for the request is clientToken. Other supported request fields are same as for the POST /client-session API call.
You need to specify only the fields you wish to update. However, if the items that are to be updated are of type array, then you need to provide the complete array along with modified items.
If you wish to update nested fields on the client session, such as the customer emailAddress field, you can pass the customer object with only one field, emailAddress, to update.
If you simply wish to clear the value of the field, pass null as your input.
You can update paymentMethod.vaultOnSuccess field but updating of the paymentMethod.options field through PATCH /client-session is not supported.
The response will contain all the fields of the client session including the ones that were changed.",
    "domain": "test.com",
    "endpoint_path": "/client-session",
    "endpoint_path_alternates": [
      "/client-session",
      "https://api.sandbox.primer.io/client-session",
      "https://api.sandbox.primer.io/client-session",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "PATCH",
    "objectID": "test:test.com:root..v2.1.uv.api-reference.subpackage_clientSessionApi.subpackage_clientSessionApi.updateClientSideToken",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/api-reference/client-session-api/update-client-side-token",
    "response_type": "json",
    "title": "Update client session",
    "type": "api-reference",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "7ed504c0-fc2e-4a52-b3fd-b277869eda14",
    "api_endpoint_id": "subpackage_paymentsApi.listPayments",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.1/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/list-payments",
    "code_snippets": [
      {
        "code": "curl --location --request GET 'https://api.primer.io/payments?status=FAILED,CANCELLED&customer_id=john-123' \
--header 'X-Api-Key: <YOUR_API_KEY>'",
        "lang": "bash",
      },
    ],
    "default_environment_id": "Default",
    "description": "Retrieve a list of your payments.
Results are paginated, they will only return up to 100 payments maximum.
To access the next page of result, set the cursor query parameter to the value of nextCursor in
your current result payload. Use prevCursor to go back to the previous page.
Note: this endpoint returns a list of
summarized payments. Not all payments attributes are present. You can use
the query parameters to filter payments. You can separate multiple query parameters with the & symbol.
Query parameters with types of the form "Array of strings" (such as the status parameter) can be specified as a comma-separated list.
For example, if you wanted to get both FAILED and CANCELLED payments, for customer john-123, you would use:
You can alternatively specify a list by repeating the parameter multiple times.
Note: payments will be available within a minute from being created.",
    "domain": "test.com",
    "endpoint_path": "/payments",
    "endpoint_path_alternates": [
      "/payments",
      "https://api.sandbox.primer.io/payments",
      "https://api.sandbox.primer.io/payments",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "GET",
    "objectID": "test:test.com:root..v2.1.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.listPayments",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/api-reference/payments-api/list-payments",
    "response_type": "json",
    "title": "Search & list payments",
    "type": "api-reference",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "7ed504c0-fc2e-4a52-b3fd-b277869eda14",
    "api_endpoint_id": "subpackage_paymentsApi.createPayment",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.1/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/create-payment",
    "default_environment_id": "Default",
    "description": "Create and authorize a payment for a given customer order. You
should provide a payment method token here to avoid PCI implications.
If only a payment method token is passed, the values passed with the Client Session determine the amount, currency etc.
Note: amount, currencyCode and orderId are required during payment creation. Make sure to pass these fields when creating a client session, or if not yet available, when creating a payment.
All fields provided on this request will take preference over any field on the order associated with the client session. E.g. if you pass amount on this request, it will override the amount on the order associated with the Client Session.",
    "domain": "test.com",
    "endpoint_path": "/payments",
    "endpoint_path_alternates": [
      "/payments",
      "https://api.sandbox.primer.io/payments",
      "https://api.sandbox.primer.io/payments",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.1.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.createPayment",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/api-reference/payments-api/create-payment",
    "response_type": "json",
    "title": "Create a payment",
    "type": "api-reference",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "7ed504c0-fc2e-4a52-b3fd-b277869eda14",
    "api_endpoint_id": "subpackage_paymentsApi.capturePayment",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.1/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/capture-payment",
    "default_environment_id": "Default",
    "description": "If you have successfully authorized a payment, you can now
fully capture, or partially capture funds from the authorized payment, depending
on whether your selected payment processor supports it. The payment will
be updated to SETTLED or SETTLING, depending on the payment method type.
The payload sent in this capture request is completely optional. If you don't
send a payload with the capture request, the full amount that was authorized
will be sent for capture. Below are the available payload attributes, which
give you more granular control when capturing funds, if you require it.",
    "domain": "test.com",
    "endpoint_path": "/payments/:id/capture",
    "endpoint_path_alternates": [
      "/payments/{id}/capture",
      "https://api.sandbox.primer.io/payments/:id/capture",
      "https://api.sandbox.primer.io/payments/%7Bid%7D/capture",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.1.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.capturePayment",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/api-reference/payments-api/capture-payment",
    "response_type": "json",
    "title": "Capture a payment",
    "type": "api-reference",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "7ed504c0-fc2e-4a52-b3fd-b277869eda14",
    "api_endpoint_id": "subpackage_paymentsApi.cancelPayment",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.1/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/cancel-payment",
    "default_environment_id": "Default",
    "description": "Provided the payment has not reached SETTLED status, Primer will
send a "void" request to the payment processor, thereby cancelling the payment
and releasing the hold on customer funds. Upon success, the payment will transition
to CANCELLED. The payload is optional.",
    "domain": "test.com",
    "endpoint_path": "/payments/:id/cancel",
    "endpoint_path_alternates": [
      "/payments/{id}/cancel",
      "https://api.sandbox.primer.io/payments/:id/cancel",
      "https://api.sandbox.primer.io/payments/%7Bid%7D/cancel",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.1.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.cancelPayment",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/api-reference/payments-api/cancel-payment",
    "response_type": "json",
    "title": "Cancel a payment",
    "type": "api-reference",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "7ed504c0-fc2e-4a52-b3fd-b277869eda14",
    "api_endpoint_id": "subpackage_paymentsApi.refundPayment",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.1/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/refund-payment",
    "default_environment_id": "Default",
    "description": "By default, this request will refund the full amount.
Optionally, pass in a lesser amount for a partial refund.",
    "domain": "test.com",
    "endpoint_path": "/payments/:id/refund",
    "endpoint_path_alternates": [
      "/payments/{id}/refund",
      "https://api.sandbox.primer.io/payments/:id/refund",
      "https://api.sandbox.primer.io/payments/%7Bid%7D/refund",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.1.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.refundPayment",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/api-reference/payments-api/refund-payment",
    "response_type": "json",
    "title": "Refund a payment",
    "type": "api-reference",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "7ed504c0-fc2e-4a52-b3fd-b277869eda14",
    "api_endpoint_id": "subpackage_paymentsApi.resumePayment",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.1/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/resume-payment",
    "default_environment_id": "Default",
    "description": "Resume a payment's workflow execution from a paused state. This
is usually required when a Workflow was paused in order to get further information
from the customer, or when waiting for an asynchronous response from a third
party connection.",
    "domain": "test.com",
    "endpoint_path": "/payments/:id/resume",
    "endpoint_path_alternates": [
      "/payments/{id}/resume",
      "https://api.sandbox.primer.io/payments/:id/resume",
      "https://api.sandbox.primer.io/payments/%7Bid%7D/resume",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.1.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.resumePayment",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/api-reference/payments-api/resume-payment",
    "response_type": "json",
    "title": "Resume a payment",
    "type": "api-reference",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "7ed504c0-fc2e-4a52-b3fd-b277869eda14",
    "api_endpoint_id": "subpackage_paymentsApi.getPaymentById",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.1/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/get-payment-by-id",
    "default_environment_id": "Default",
    "description": "Retrieve a payment by its ID.",
    "domain": "test.com",
    "endpoint_path": "/payments/:id",
    "endpoint_path_alternates": [
      "/payments/{id}",
      "https://api.sandbox.primer.io/payments/:id",
      "https://api.sandbox.primer.io/payments/%7Bid%7D",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
    ],
    "method": "GET",
    "objectID": "test:test.com:root..v2.1.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.getPaymentById",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/api-reference/payments-api/get-payment-by-id",
    "response_type": "json",
    "title": "Get a payment",
    "type": "api-reference",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "7ed504c0-fc2e-4a52-b3fd-b277869eda14",
    "api_endpoint_id": "subpackage_paymentMethodsApi.vault_payment_method_payment_methods__token__vault_post",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.1/api-reference/payment-methods-api",
        "title": "Payment Methods API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payment-methods-api/vault-payment-method-payment-methods-token-vault-post",
    "default_environment_id": "Default",
    "description": "Save a SINGLE_USE payment method token so it can be used
again later.
If you try to vault an already vaulted token, you will get the existing vaulted token back.",
    "domain": "test.com",
    "endpoint_path": "/payment-instruments/:paymentMethodToken/vault",
    "endpoint_path_alternates": [
      "/payment-instruments/{paymentMethodToken}/vault",
      "https://api.sandbox.primer.io/payment-instruments/:paymentMethodToken/vault",
      "https://api.sandbox.primer.io/payment-instruments/%7BpaymentMethodToken%7D/vault",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.1.uv.api-reference.subpackage_paymentMethodsApi.subpackage_paymentMethodsApi.vault_payment_method_payment_methods__token__vault_post",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/api-reference/payment-methods-api/vault-payment-method-payment-methods-token-vault-post",
    "response_type": "json",
    "title": "Save a payment method token",
    "type": "api-reference",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "7ed504c0-fc2e-4a52-b3fd-b277869eda14",
    "api_endpoint_id": "subpackage_paymentMethodsApi.get_payment_methods_payment_methods_get",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.1/api-reference/payment-methods-api",
        "title": "Payment Methods API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payment-methods-api/get-payment-methods-payment-methods-get",
    "default_environment_id": "Default",
    "description": "Retrieve a list of stored payment methods for a customer.",
    "domain": "test.com",
    "endpoint_path": "/payment-instruments",
    "endpoint_path_alternates": [
      "/payment-instruments",
      "https://api.sandbox.primer.io/payment-instruments",
      "https://api.sandbox.primer.io/payment-instruments",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
    ],
    "method": "GET",
    "objectID": "test:test.com:root..v2.1.uv.api-reference.subpackage_paymentMethodsApi.subpackage_paymentMethodsApi.get_payment_methods_payment_methods_get",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/api-reference/payment-methods-api/get-payment-methods-payment-methods-get",
    "response_type": "json",
    "title": "List saved payment methods",
    "type": "api-reference",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "7ed504c0-fc2e-4a52-b3fd-b277869eda14",
    "api_endpoint_id": "subpackage_paymentMethodsApi.delete_payment_method_payment_methods__token__delete",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.1/api-reference/payment-methods-api",
        "title": "Payment Methods API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payment-methods-api/delete-payment-method-payment-methods-token-delete",
    "default_environment_id": "Default",
    "description": "Delete a saved payment method.",
    "domain": "test.com",
    "endpoint_path": "/payment-instruments/:paymentMethodToken",
    "endpoint_path_alternates": [
      "/payment-instruments/{paymentMethodToken}",
      "https://api.sandbox.primer.io/payment-instruments/:paymentMethodToken",
      "https://api.sandbox.primer.io/payment-instruments/%7BpaymentMethodToken%7D",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
    ],
    "method": "DELETE",
    "objectID": "test:test.com:root..v2.1.uv.api-reference.subpackage_paymentMethodsApi.subpackage_paymentMethodsApi.delete_payment_method_payment_methods__token__delete",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/api-reference/payment-methods-api/delete-payment-method-payment-methods-token-delete",
    "response_type": "json",
    "title": "Delete a saved payment method",
    "type": "api-reference",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "7ed504c0-fc2e-4a52-b3fd-b277869eda14",
    "api_endpoint_id": "subpackage_paymentMethodsApi.set_payment_method_default_payment_methods__token__default_post",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2.1/api-reference/payment-methods-api",
        "title": "Payment Methods API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payment-methods-api/set-payment-method-default-payment-methods-token-default-post",
    "default_environment_id": "Default",
    "description": "Update a saved payment method to be the default stored payment method for a customer.",
    "domain": "test.com",
    "endpoint_path": "/payment-instruments/:paymentMethodToken/default",
    "endpoint_path_alternates": [
      "/payment-instruments/{paymentMethodToken}/default",
      "https://api.sandbox.primer.io/payment-instruments/:paymentMethodToken/default",
      "https://api.sandbox.primer.io/payment-instruments/%7BpaymentMethodToken%7D/default",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.1.uv.api-reference.subpackage_paymentMethodsApi.subpackage_paymentMethodsApi.set_payment_method_default_payment_methods__token__default_post",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/api-reference/payment-methods-api/set-payment-method-default-payment-methods-token-default-post",
    "response_type": "json",
    "title": "Update the default saved payment method",
    "type": "api-reference",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "3e1141df-b4bc-4dab-9542-53cf91851645",
    "api_endpoint_id": "subpackage_paymentWebhooks.payment_status_webhook_event",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/webhooks",
        "title": "Webhooks",
      },
      {
        "pathname": "/docs/api/v2.1/webhooks/payment-webhooks",
        "title": "Payment Webhooks",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/webhooks/payment-webhooks/payment-status-webhook-event",
    "code_snippets": [
      {
        "code": "{
  "eventType":"PAYMENT.STATUS",
  "date":"2021-02-21T15:36:16.367687",
  "notificationConfig":{
    "id":"cc51f9f0-7e1c-492b-9d37-f83a818f6070",
    "description":"Payment webhook"
  },
  "signedAt": "1689221338",
  "version":"2.1",
  "payment":{
    "id":"DdRZ6YY0",
    "date":"2022-01-01T12:12:12.000000",
    "amount":3000,
    "currencyCode":"GBP",
    "customerId":"cust-123",
    "orderId":"order-123",
    "status":"SETTLED",
    "paymentMethod":{
      "paymentType":"FIRST_PAYMENT",
      "paymentMethodToken":"-lcWjvBAAs2DnIRXwxNjUzNTYzNjIy",
      "analyticsId":"LUi5pETUaVsdSEamK25L",
      "paymentMethodType":"PAYMENT_CARD",
      "paymentMethodData":{
        "last4Digits":"1111",
        "expirationMonth":"03",
        "expirationYear":"2030",
        "cardholderName":"ADYEN",
        "network":"Visa",
        "isNetworkTokenized":false,
        "binData":{
          "network":"VISA",
          "issuerCountryCode":"US",
          "issuerName":"JPMORGAN CHASE BANK, N.A.",
          "regionalRestriction":"UNKNOWN",
          "accountNumberType":"UNKNOWN",
          "accountFundingType":"UNKNOWN",
          "prepaidReloadableIndicator":"NOT_APPLICABLE",
          "productUsageType":"UNKNOWN",
          "productCode":"UNKNOWN",
          "productName":"UNKNOWN"
        }
      },
      "threeDSecureAuthentication":{
        "responseCode":"NOT_PERFORMED"
      }
    },
    "processor":{
      "name":"STRIPE",
      "processorMerchantId":"acct_1GORasdasqNWFwi8c",
      "amountCaptured":3000,
      "amountRefunded":0
    },
    "transactions":[
      {
        "date":"2022-05-26T11:14:11.946300",
        "amount":3000,
        "currencyCode":"GBP",
        "transactionType":"SALE",
        "processorTransactionId":"pi_3L3edsGZasdasdc1iget38p",
        "processorName":"STRIPE",
        "processorMerchantId":"acct_1GORasvasdNWFwi8c",
        "processorStatus":"SETTLED"
      }
    ]
  }
}",
        "lang": "JSON",
      },
    ],
    "default_environment_id": "Default",
    "description": "Primer notifies you with a PAYMENT.STATUS webhook when a payment's status has been updated. This is especially useful for asynchronous processor Connections, which do not respond with an upfront authorization.
The webhook body contains the full payment object.
Example payment status notification:
Learn more about how Primer handles webhooks.",
    "domain": "test.com",
    "endpoint_path": "/payment-status",
    "endpoint_path_alternates": [
      "/payment-status",
      "https://api.sandbox.primer.io/payment-status",
      "https://api.sandbox.primer.io/payment-status",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.1.uv.webhooks.subpackage_paymentWebhooks.subpackage_paymentWebhooks.payment_status_webhook_event",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/webhooks/payment-webhooks/payment-status-webhook-event",
    "title": "Payment Status Update",
    "type": "api-reference",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "3e1141df-b4bc-4dab-9542-53cf91851645",
    "api_endpoint_id": "subpackage_paymentWebhooks.payment_refund_webhook_event",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/webhooks",
        "title": "Webhooks",
      },
      {
        "pathname": "/docs/api/v2.1/webhooks/payment-webhooks",
        "title": "Payment Webhooks",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/webhooks/payment-webhooks/payment-refund-webhook-event",
    "code_snippets": [
      {
        "code": "{
  "eventType":"PAYMENT.REFUND",
  "date":"2021-02-21T15:36:16.367687",
  "notificationConfig":{
    "id":"cc51f9f0-7e1c-492b-9d37-f83a818f6070",
    "description":"Refund webhook"
  },
  "signedAt": "1689221338",
  "version":"2.1",
  "payment":{
    "id":"DdRZ6YY0",
    "date":"2022-01-01T12:12:12.000000",
    "amount":3000,
    "currencyCode":"GBP",
    "customerId":"cust-123",
    "orderId":"order-123",
    "status":"SETTLED",
    "paymentMethod":{
      "paymentMethodToken":"-lcWjvBASh2EpYaHgVwxNjUzNTYzNjIy",
      "analyticsId":"LUi5pETUV2EpYaHgV77SEamK25L",
      "paymentMethodType":"PAYMENT_CARD",
      "paymentMethodData":{
        "paymentType":"FIRST_PAYMENT",
        "last4Digits":"1111",
        "expirationMonth":"03",
        "expirationYear":"2030",
        "cardholderName":"ADYEN",
        "network":"Visa",
        "isNetworkTokenized":false,
        "binData":{
          "network":"VISA",
          "issuerCountryCode":"US",
          "issuerName":"JPMORGAN CHASE BANK, N.A.",
          "regionalRestriction":"UNKNOWN",
          "accountNumberType":"UNKNOWN",
          "accountFundingType":"UNKNOWN",
          "prepaidReloadableIndicator":"NOT_APPLICABLE",
          "productUsageType":"UNKNOWN",
          "productCode":"UNKNOWN",
          "productName":"UNKNOWN"
        }
      },
      "threeDSecureAuthentication":{
        "responseCode":"NOT_PERFORMED"
      }
    },
    "processor":{
      "name":"STRIPE",
      "processorMerchantId":"acct_1G2EpYaHgVZqNWFwi8c",
      "amountCaptured":3000,
      "amountRefunded":3000
    },
    "transactions":[
      {
        "date":"2022-05-26T11:14:11.946300",
        "amount":3000,
        "currencyCode":"GBP",
        "transactionType":"SALE",
        "processorTransactionId":"pi_3L3ed23NWFwiNWFwi8c1iget38p",
        "processorName":"STRIPE",
        "processorMerchantId":"acct_1GORcaGv23NWFwi8c",
        "processorStatus":"SETTLED"
      },
      {
        "date":"2022-05-26T11:14:11.946300",
        "amount":3001,
        "currencyCode":"GBP",
        "transactionType":"REFUND",
        "processorTransactionId":"pi_3L3ed23NWFwiNWFwi8c1iget38p",
        "processorName":"STRIPE",
        "processorMerchantId":"acct_1GORcaGv23NWFwi8c",
        "processorStatus":"FAILED",
        "processorStatusReason":{
          "type":"APPLICATION_ERROR",
          "declineType":"SOFT_DECLINE",
          "code":"UNKNOWN",
          "message":"Refund amount too large"
        }
      }
    ]
  }
}",
        "lang": "JSON",
      },
    ],
    "default_environment_id": "Default",
    "description": "Primer notifies you with a PAYMENT.REFUND Webhook when a refund request has been fully processed by a payment processor and the refund has reached a final state.
Check the transaction with the most recent transactionType: "REFUND" in the transactions array:
if processorStatus is SETTLED, the refund was successful and the funds have been returned to the customer

if processorStatus is FAILED, the refund was unsuccessful


Example refund notification:
Learn more about how Primer handles webhooks.",
    "domain": "test.com",
    "endpoint_path": "/payment-refund",
    "endpoint_path_alternates": [
      "/payment-refund",
      "https://api.sandbox.primer.io/payment-refund",
      "https://api.sandbox.primer.io/payment-refund",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.1.uv.webhooks.subpackage_paymentWebhooks.subpackage_paymentWebhooks.payment_refund_webhook_event",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/webhooks/payment-webhooks/payment-refund-webhook-event",
    "title": "Payment Refund",
    "type": "api-reference",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "3e1141df-b4bc-4dab-9542-53cf91851645",
    "api_endpoint_id": "subpackage_disputeChargebacksWebhooks.dispute_open_webhook_event",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2.1/webhooks",
        "title": "Webhooks",
      },
      {
        "pathname": "/docs/api/v2.1/webhooks/dispute-chargebacks-webhooks",
        "title": "Dispute Chargebacks Webhooks",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/webhooks/dispute-chargebacks-webhooks/dispute-open-webhook-event",
    "code_snippets": [
      {
        "code": "{
  "eventType":"DISPUTE.OPENED",
  "version":"2.1",
  "primerAccountId":"7fcd50f1-99f2-416e-8013-6ecd1c1285c3",
  "transactionId":"c3f662ad-d197-492e-b78b-63eefa64a31d",
  "orderId":"order-123",
  "processorId":"Adyen",
  "processorDisputeId":"adyen_ref_123",
  "paymentId":"ecb8d3bc-805d-4d97-826e-ef8d4cc3d2a2",
  "raw_processor_callback":{
      "example":{
        "raw_callback":"request",
        "from":"Adyen"
      }
  }
}",
        "lang": "JSON",
      },
    ],
    "default_environment_id": "Default",
    "description": "Primer notifies you with a DISPUTE.OPEN webhook on newly opened disputes or chargebacks. This notification is unified across all processors.
Example of dispute event:
Learn more about how Primer handles webhooks.",
    "domain": "test.com",
    "endpoint_path": "/dispute-opened",
    "endpoint_path_alternates": [
      "/dispute-opened",
      "https://api.sandbox.primer.io/dispute-opened",
      "https://api.sandbox.primer.io/dispute-opened",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.1.uv.webhooks.subpackage_disputeChargebacksWebhooks.subpackage_disputeChargebacksWebhooks.dispute_open_webhook_event",
    "org_id": "test",
    "pathname": "/docs/api/v2.1/webhooks/dispute-chargebacks-webhooks/dispute-open-webhook-event",
    "title": "Dispute Open",
    "type": "api-reference",
    "version": {
      "id": "v2.1",
      "pathname": "/docs/api/v2.1",
      "title": "v2.1",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "fe590ab9-f9e7-4719-8ec5-b595affff88d",
    "api_endpoint_id": "subpackage_clientSessionApi.createClientSideToken",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2/api-reference/client-session-api",
        "title": "Client Session API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/client-session-api/create-client-side-token",
    "default_environment_id": "Default",
    "description": "Creating a client session generates a client token: a temporary key used to initialize Universal Checkout and authenticate it against your account.
Universal Checkout automatically retrieves all the settings from the client session and the Dashboard to configure the payment methods and the checkout experience.


Note:
When creating a Client Session, please make sure to provide currencyCode, orderId, and amount.
If any of these are not yet available, you can provide them when making the payment request.
Client tokens expire after 24 hours.",
    "domain": "test.com",
    "endpoint_path": "/client-session",
    "endpoint_path_alternates": [
      "/client-session",
      "https://api.sandbox.primer.io/client-session",
      "https://api.sandbox.primer.io/client-session",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.uv.api-reference.subpackage_clientSessionApi.subpackage_clientSessionApi.createClientSideToken",
    "org_id": "test",
    "pathname": "/docs/api/v2/api-reference/client-session-api/create-client-side-token",
    "response_type": "json",
    "title": "Create a client session",
    "type": "api-reference",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "fe590ab9-f9e7-4719-8ec5-b595affff88d",
    "api_endpoint_id": "subpackage_paymentsApi.listPayments",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/list-payments",
    "code_snippets": [
      {
        "code": "curl --location --request GET 'https://api.primer.io/payments?status=FAILED,CANCELLED&customer_id=john-123' \
--header 'X-Api-Key: <YOUR_API_KEY>'",
        "lang": "bash",
      },
    ],
    "default_environment_id": "Default",
    "description": "Retrieve a list of your payments.
Results are paginated, they will only return up to 100 payments maximum.
To access the next page of result, set the cursor query parameter to the value of nextCursor in your current result payload. Use prevCursor to go back to the previous page.
Note: this endpoint returns a list of summarized payments. Not all payments attributes are present. You can use the query parameters to filter payments.
You can separate multiple query parameters with the & symbol.
Query parameters with types of the form "Array of strings" (such as the status parameter) can be specified as a comma-separated list.
For example, if you wanted to get both FAILED and CANCELLED payments, for customer john-123, you would use:
You can alternatively specify a list by repeating the parameter multiple times.
Note: payments will be available within a minute from being created.",
    "domain": "test.com",
    "endpoint_path": "/payments",
    "endpoint_path_alternates": [
      "/payments",
      "https://api.sandbox.primer.io/payments",
      "https://api.sandbox.primer.io/payments",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "GET",
    "objectID": "test:test.com:root..v2.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.listPayments",
    "org_id": "test",
    "pathname": "/docs/api/v2/api-reference/payments-api/list-payments",
    "response_type": "json",
    "title": "Search & list payments",
    "type": "api-reference",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "fe590ab9-f9e7-4719-8ec5-b595affff88d",
    "api_endpoint_id": "subpackage_paymentsApi.createPayment",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/create-payment",
    "default_environment_id": "Default",
    "description": "Create and authorize a payment for a given customer order. You should provide a payment method token here to avoid PCI implications.
If only a payment method token is passed, the values passed with the Client Session determine the amount, currency etc.
Note: amount, currencyCode and orderId are required during payment creation. Make sure to pass these fields when creating a client session, or if not yet available, when creating a payment.
All fields provided on this request will take preference over any field on the order associated with the client session. E.g. if you pass amount on this request, it will override the amount on the order associated with the Client Session.",
    "domain": "test.com",
    "endpoint_path": "/payments",
    "endpoint_path_alternates": [
      "/payments",
      "https://api.sandbox.primer.io/payments",
      "https://api.sandbox.primer.io/payments",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.createPayment",
    "org_id": "test",
    "pathname": "/docs/api/v2/api-reference/payments-api/create-payment",
    "response_type": "json",
    "title": "Create a payment",
    "type": "api-reference",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "fe590ab9-f9e7-4719-8ec5-b595affff88d",
    "api_endpoint_id": "subpackage_paymentsApi.capturePayment",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/capture-payment",
    "default_environment_id": "Default",
    "description": "If you have successfully authorized a payment, you can now fully capture, or partially capture funds from the authorized payment, depending on whether your selected payment processor supports it. The payment will be updated to SETTLED or SETTLING, depending on the payment method type.
The payload sent in this capture request is completely optional. If you don't send a payload with the capture request, the full amount that was authorized will be sent for capture.
Below are the available payload attributes, which give you more granular control when capturing funds, if you require it.",
    "domain": "test.com",
    "endpoint_path": "/payments/:id/capture",
    "endpoint_path_alternates": [
      "/payments/{id}/capture",
      "https://api.sandbox.primer.io/payments/:id/capture",
      "https://api.sandbox.primer.io/payments/%7Bid%7D/capture",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.capturePayment",
    "org_id": "test",
    "pathname": "/docs/api/v2/api-reference/payments-api/capture-payment",
    "response_type": "json",
    "title": "Capture a payment",
    "type": "api-reference",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "fe590ab9-f9e7-4719-8ec5-b595affff88d",
    "api_endpoint_id": "subpackage_paymentsApi.cancelPayment",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/cancel-payment",
    "default_environment_id": "Default",
    "description": "Provided the payment has not reached SETTLED status, Primer will send a "void" request to the payment processor, thereby cancelling the payment and releasing the hold on customer funds.
Upon success, the payment will transition to CANCELLED.
The payload is optional.",
    "domain": "test.com",
    "endpoint_path": "/payments/:id/cancel",
    "endpoint_path_alternates": [
      "/payments/{id}/cancel",
      "https://api.sandbox.primer.io/payments/:id/cancel",
      "https://api.sandbox.primer.io/payments/%7Bid%7D/cancel",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.cancelPayment",
    "org_id": "test",
    "pathname": "/docs/api/v2/api-reference/payments-api/cancel-payment",
    "response_type": "json",
    "title": "Cancel a payment",
    "type": "api-reference",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "fe590ab9-f9e7-4719-8ec5-b595affff88d",
    "api_endpoint_id": "subpackage_paymentsApi.refundPayment",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/refund-payment",
    "default_environment_id": "Default",
    "description": "By default, this request will refund the full amount.
Optionally, pass in a lesser amount for a partial refund.",
    "domain": "test.com",
    "endpoint_path": "/payments/:id/refund",
    "endpoint_path_alternates": [
      "/payments/{id}/refund",
      "https://api.sandbox.primer.io/payments/:id/refund",
      "https://api.sandbox.primer.io/payments/%7Bid%7D/refund",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.refundPayment",
    "org_id": "test",
    "pathname": "/docs/api/v2/api-reference/payments-api/refund-payment",
    "response_type": "json",
    "title": "Refund a payment",
    "type": "api-reference",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "fe590ab9-f9e7-4719-8ec5-b595affff88d",
    "api_endpoint_id": "subpackage_paymentsApi.resumePayment",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/resume-payment",
    "default_environment_id": "Default",
    "description": "Resume a payment's workflow execution from a paused state. This is usually required when a Workflow was paused in order to get further information from the customer, or when waiting for an asynchronous response from a third party connection.",
    "domain": "test.com",
    "endpoint_path": "/payments/:id/resume",
    "endpoint_path_alternates": [
      "/payments/{id}/resume",
      "https://api.sandbox.primer.io/payments/:id/resume",
      "https://api.sandbox.primer.io/payments/%7Bid%7D/resume",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.resumePayment",
    "org_id": "test",
    "pathname": "/docs/api/v2/api-reference/payments-api/resume-payment",
    "response_type": "json",
    "title": "Resume a payment",
    "type": "api-reference",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "fe590ab9-f9e7-4719-8ec5-b595affff88d",
    "api_endpoint_id": "subpackage_paymentsApi.getPaymentById",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2/api-reference/payments-api",
        "title": "Payments API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payments-api/get-payment-by-id",
    "default_environment_id": "Default",
    "description": "Retrieve a payment by its ID.",
    "domain": "test.com",
    "endpoint_path": "/payments/:id",
    "endpoint_path_alternates": [
      "/payments/{id}",
      "https://api.sandbox.primer.io/payments/:id",
      "https://api.sandbox.primer.io/payments/%7Bid%7D",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
    ],
    "method": "GET",
    "objectID": "test:test.com:root..v2.uv.api-reference.subpackage_paymentsApi.subpackage_paymentsApi.getPaymentById",
    "org_id": "test",
    "pathname": "/docs/api/v2/api-reference/payments-api/get-payment-by-id",
    "response_type": "json",
    "title": "Get a payment",
    "type": "api-reference",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "fe590ab9-f9e7-4719-8ec5-b595affff88d",
    "api_endpoint_id": "subpackage_paymentMethodsApi.vault_payment_method_payment_methods__token__vault_post",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2/api-reference/payment-methods-api",
        "title": "Payment Methods API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payment-methods-api/vault-payment-method-payment-methods-token-vault-post",
    "default_environment_id": "Default",
    "description": "Save a SINGLE_USE payment method token so it can be used again later.
If you try to vault an already vaulted token, you will get the existing vaulted token back.",
    "domain": "test.com",
    "endpoint_path": "/payment-instruments/:token/vault",
    "endpoint_path_alternates": [
      "/payment-instruments/{token}/vault",
      "https://api.sandbox.primer.io/payment-instruments/:token/vault",
      "https://api.sandbox.primer.io/payment-instruments/%7Btoken%7D/vault",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_twenty_two_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.uv.api-reference.subpackage_paymentMethodsApi.subpackage_paymentMethodsApi.vault_payment_method_payment_methods__token__vault_post",
    "org_id": "test",
    "pathname": "/docs/api/v2/api-reference/payment-methods-api/vault-payment-method-payment-methods-token-vault-post",
    "response_type": "json",
    "title": "Save a payment method token",
    "type": "api-reference",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "fe590ab9-f9e7-4719-8ec5-b595affff88d",
    "api_endpoint_id": "subpackage_paymentMethodsApi.get_payment_methods_payment_methods_get",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2/api-reference/payment-methods-api",
        "title": "Payment Methods API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payment-methods-api/get-payment-methods-payment-methods-get",
    "default_environment_id": "Default",
    "description": "Retrieve a list of stored payment methods for a customer.",
    "domain": "test.com",
    "endpoint_path": "/payment-instruments",
    "endpoint_path_alternates": [
      "/payment-instruments",
      "https://api.sandbox.primer.io/payment-instruments",
      "https://api.sandbox.primer.io/payment-instruments",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
    ],
    "method": "GET",
    "objectID": "test:test.com:root..v2.uv.api-reference.subpackage_paymentMethodsApi.subpackage_paymentMethodsApi.get_payment_methods_payment_methods_get",
    "org_id": "test",
    "pathname": "/docs/api/v2/api-reference/payment-methods-api/get-payment-methods-payment-methods-get",
    "response_type": "json",
    "title": "List saved payment methods",
    "type": "api-reference",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "fe590ab9-f9e7-4719-8ec5-b595affff88d",
    "api_endpoint_id": "subpackage_paymentMethodsApi.delete_payment_method_payment_methods__token__delete",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2/api-reference/payment-methods-api",
        "title": "Payment Methods API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payment-methods-api/delete-payment-method-payment-methods-token-delete",
    "default_environment_id": "Default",
    "description": "Delete a saved payment method.",
    "domain": "test.com",
    "endpoint_path": "/payment-instruments/:token",
    "endpoint_path_alternates": [
      "/payment-instruments/{token}",
      "https://api.sandbox.primer.io/payment-instruments/:token",
      "https://api.sandbox.primer.io/payment-instruments/%7Btoken%7D",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
    ],
    "method": "DELETE",
    "objectID": "test:test.com:root..v2.uv.api-reference.subpackage_paymentMethodsApi.subpackage_paymentMethodsApi.delete_payment_method_payment_methods__token__delete",
    "org_id": "test",
    "pathname": "/docs/api/v2/api-reference/payment-methods-api/delete-payment-method-payment-methods-token-delete",
    "response_type": "json",
    "title": "Delete a saved payment method",
    "type": "api-reference",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "fe590ab9-f9e7-4719-8ec5-b595affff88d",
    "api_endpoint_id": "subpackage_paymentMethodsApi.set_payment_method_default_payment_methods__token__default_post",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/docs/api/v2/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/docs/api/v2/api-reference/payment-methods-api",
        "title": "Payment Methods API",
      },
    ],
    "canonicalPathname": "/docs/api/v2.3/api-reference/payment-methods-api/set-payment-method-default-payment-methods-token-default-post",
    "default_environment_id": "Default",
    "description": "Update a saved payment method to be the default stored payment method for a customer.",
    "domain": "test.com",
    "endpoint_path": "/payment-instruments/:token/default",
    "endpoint_path_alternates": [
      "/payment-instruments/{token}/default",
      "https://api.sandbox.primer.io/payment-instruments/:token/default",
      "https://api.sandbox.primer.io/payment-instruments/%7Btoken%7D/default",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.sandbox.primer.io",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "four_hundred_ErrorResponse",
    ],
    "method": "POST",
    "objectID": "test:test.com:root..v2.uv.api-reference.subpackage_paymentMethodsApi.subpackage_paymentMethodsApi.set_payment_method_default_payment_methods__token__default_post",
    "org_id": "test",
    "pathname": "/docs/api/v2/api-reference/payment-methods-api/set-payment-method-default-payment-methods-token-default-post",
    "response_type": "json",
    "title": "Update the default saved payment method",
    "type": "api-reference",
    "version": {
      "id": "v2",
      "pathname": "/docs/api/v2",
      "title": "v2",
    },
    "visible_by": [
      "role/everyone",
    ],
  },
]