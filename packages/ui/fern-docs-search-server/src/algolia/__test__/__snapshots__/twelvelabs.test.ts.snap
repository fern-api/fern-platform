[
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/guides/get-started",
        "title": "Get Started",
      },
    ],
    "canonicalPathname": "/guides/get-started/introduction",
    "content": "The Twelve Labs Video Understanding Platform leverages artificial intelligence to extract information from videos. It identifies and interprets movements, actions, objects, individuals, sounds, on-screen text, and spoken words. Built on a state-of-the-art multimodal foundation model optimized for videos, the platform enables you to add rich, contextual video understanding to your applications through developer-friendly APIs.",
    "domain": "test.com",
    "objectID": "test:test.com:root.uv.guides.guides.get-started.introduction-chunk:0",
    "org_id": "test",
    "pathname": "/guides/get-started/introduction",
    "tab": {
      "pathname": "/guides",
      "title": "Docs",
    },
    "title": "Introduction",
    "type": "markdown",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/guides/get-started",
        "title": "Get Started",
      },
    ],
    "canonicalPathname": "/guides/get-started/introduction",
    "content": "Twelve Labs equips developers with the following key capabilities:
Deep Semantic Search: Find the exact moment you need within your videos using natural language queries instead of tags or metadata.

Zero-shot Classification: Use natural language to create your custom taxonomy, facilitating accurate and efficient video classification tailored to your unique use case.

Dynamic Video-to-Text Generation: Capture the essence of your videos into concise summaries or custom reports. The platform offers built-in formats to generate titles, topics, summaries, hashtags, chapters, and highlights. Additionally, you can provide a prompt detailing the content and desired output format, such as a police report, to tailor the results to your needs.

Intuitive Integration: Embed a state-of-the-art multimodal foundation model for video understanding into your application in just a few API calls.

Rapid Result Retrieval: Receive your results within seconds.

Scalability: Our cloud-native distributed infrastructure seamlessly processes thousands of concurrent requests.",
    "domain": "test.com",
    "hash": "#key-capabilities-of-twelve-labs-for-multimodal-video-understanding",
    "hierarchy": {
      "h0": {
        "title": "Introduction",
      },
      "h2": {
        "id": "key-capabilities-of-twelve-labs-for-multimodal-video-understanding",
        "title": "Key Capabilities of Twelve Labs for Multimodal Video Understanding",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root.uv.guides.guides.get-started.introduction-key-capabilities-of-twelve-labs-for-multimodal-video-understanding-chunk:0",
    "org_id": "test",
    "pathname": "/guides/get-started/introduction",
    "tab": {
      "pathname": "/guides",
      "title": "Docs",
    },
    "title": "Key Capabilities of Twelve Labs for Multimodal Video Understanding",
    "type": "markdown",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/guides/get-started",
        "title": "Get Started",
      },
    ],
    "canonicalPathname": "/guides/get-started/introduction",
    "content": "The table below provides a basic comparison between Twelve Labs Video Understanding Platform and other video AI solutions:
Simplified API Integration: Perform a rich set of video understanding tasks with just a few API calls. This allows you to focus on building your application rather than aggregating data from separate image and speech APIs or managing multiple data sources.

Natural Language Use: Tap into the model's capabilities using everyday language to write queries or prompts. This method is more effective, intuitive, flexible, and accurate than using solely rules, tags, or keywords.

Image-to-Video Search: Perform searches using images as queries and find videos semantically similar to the provided images. This addresses the challenges you face when the existing reverse image search tools yield inconsistent results or when describing the desired results using text is challenging.

Multimodal Approach: The platform adopts a video-first, multimodal approach, surpassing traditional unimodal models that depend exclusively on text or images, providing a comprehensive understanding of your videos.

One-time Video Indexing for Multiple Tasks: Index your videos once and create contextual video embeddings that encapsulate semantics for scaling and repurposing, allowing you to search and classify your videos swiftly.

Flexible Deployment: The platform can adapt to varied business needs, with deployment options spanning on-premise, hybrid, or cloud-based environments.

Fine-tuning Capabilities: Though our state-of-the-art foundation model for video understanding already yields highly accurate results, we can provide fine-tuning capabilities to help you get more out of the models and achieve better results with only a few examples.


For details on fine-tuning the models or different deployment options, please contact us at [email protected].",
    "domain": "test.com",
    "hash": "#twelve-labs-advantages",
    "hierarchy": {
      "h0": {
        "title": "Introduction",
      },
      "h2": {
        "id": "twelve-labs-advantages",
        "title": "Twelve Labs’ Advantages",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root.uv.guides.guides.get-started.introduction-twelve-labs-advantages-chunk:0",
    "org_id": "test",
    "pathname": "/guides/get-started/introduction",
    "tab": {
      "pathname": "/guides",
      "title": "Docs",
    },
    "title": "Twelve Labs’ Advantages",
    "type": "markdown",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/guides/get-started",
        "title": "Get Started",
      },
    ],
    "canonicalPathname": "/guides/get-started/introduction",
    "content": "Experience the key capabilities of the Twelve Labs Video Understanding platform by signing up for a free account.",
    "domain": "test.com",
    "hash": "#discover-twelve-labs",
    "hierarchy": {
      "h0": {
        "title": "Introduction",
      },
      "h2": {
        "id": "discover-twelve-labs",
        "title": "Discover Twelve Labs",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root.uv.guides.guides.get-started.introduction-discover-twelve-labs-chunk:0",
    "org_id": "test",
    "pathname": "/guides/get-started/introduction",
    "tab": {
      "pathname": "/guides",
      "title": "Docs",
    },
    "title": "Discover Twelve Labs",
    "type": "markdown",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/guides/get-started",
        "title": "Get Started",
      },
    ],
    "canonicalPathname": "/guides/get-started/platform-overview",
    "content": "The Twelve Labs Video Understanding Platform, currently in beta, offers an API suite for integrating a state-of-the-art foundation model that understands contextual information from your videos, making it accessible to your applications. The API is organized around REST and is compatible with most programming languages. You can also use Postman or other REST clients to send requests and view responses.",
    "domain": "test.com",
    "objectID": "test:test.com:root.uv.guides.guides.get-started.platform-overview-chunk:0",
    "org_id": "test",
    "pathname": "/guides/get-started/platform-overview",
    "tab": {
      "pathname": "/guides",
      "title": "Docs",
    },
    "title": "Platform Overview",
    "type": "markdown",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/guides/get-started",
        "title": "Get Started",
      },
    ],
    "canonicalPathname": "/guides/get-started/platform-overview",
    "content": "The following diagram illustrates the architecture of the Twelve Labs Video Understanding Platform and how different parts interact:",
    "domain": "test.com",
    "hash": "#architecture-overview",
    "hierarchy": {
      "h0": {
        "title": "Platform Overview",
      },
      "h2": {
        "id": "architecture-overview",
        "title": "Architecture Overview",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root.uv.guides.guides.get-started.platform-overview-architecture-overview-chunk:0",
    "org_id": "test",
    "pathname": "/guides/get-started/platform-overview",
    "tab": {
      "pathname": "/guides",
      "title": "Docs",
    },
    "title": "Architecture Overview",
    "type": "markdown",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/guides/get-started",
        "title": "Get Started",
      },
    ],
    "canonicalPathname": "/guides/get-started/platform-overview",
    "content": "An index is a basic unit for organizing and storing video data, consisting of video embeddings and metadata. Indexes facilitate information retrieval and processing. You can use indexes to group related videos, making it easier to manage and search through your video data.",
    "domain": "test.com",
    "hash": "#indexes",
    "hierarchy": {
      "h0": {
        "title": "Platform Overview",
      },
      "h2": {
        "id": "architecture-overview",
        "title": "Architecture Overview",
      },
      "h3": {
        "id": "indexes",
        "title": "Indexes",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root.uv.guides.guides.get-started.platform-overview-indexes-chunk:0",
    "org_id": "test",
    "pathname": "/guides/get-started/platform-overview",
    "tab": {
      "pathname": "/guides",
      "title": "Docs",
    },
    "title": "Indexes",
    "type": "markdown",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/guides/get-started",
        "title": "Get Started",
      },
    ],
    "canonicalPathname": "/guides/get-started/platform-overview",
    "content": "A video understanding engine consists of a family of deep neural networks built on top of our multimodal foundation model for video understanding. These engines offer search, classification, and summarization capabilities. For each index, you must configure the engines you want to enable. The available engines and their capabilities are detailed on the Video Understanding Engines page.",
    "domain": "test.com",
    "hash": "#video-understanding-engines",
    "hierarchy": {
      "h0": {
        "title": "Platform Overview",
      },
      "h2": {
        "id": "architecture-overview",
        "title": "Architecture Overview",
      },
      "h3": {
        "id": "video-understanding-engines",
        "title": "Video Understanding Engines",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root.uv.guides.guides.get-started.platform-overview-video-understanding-engines-chunk:0",
    "org_id": "test",
    "pathname": "/guides/get-started/platform-overview",
    "tab": {
      "pathname": "/guides",
      "title": "Docs",
    },
    "title": "Video Understanding Engines",
    "type": "markdown",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/guides/get-started",
        "title": "Get Started",
      },
    ],
    "canonicalPathname": "/guides/get-started/platform-overview",
    "content": "The engine options define the types of information that a specific engine will process. Currently, the platform provides the following engine options:
Visual: Processes visual elements within the video.

Conversation: Analyzes spoken words and dialogues.

Text in Video: Detects and processes text appearing in the video.

Logo: Identifies logos within the video content.


For more details, see the Engine Options page.",
    "domain": "test.com",
    "hash": "#engine-options",
    "hierarchy": {
      "h0": {
        "title": "Platform Overview",
      },
      "h2": {
        "id": "architecture-overview",
        "title": "Architecture Overview",
      },
      "h3": {
        "id": "engine-options",
        "title": "Engine Options",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root.uv.guides.guides.get-started.platform-overview-engine-options-chunk:0",
    "org_id": "test",
    "pathname": "/guides/get-started/platform-overview",
    "tab": {
      "pathname": "/guides",
      "title": "Docs",
    },
    "title": "Engine Options",
    "type": "markdown",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/guides/get-started",
        "title": "Get Started",
      },
    ],
    "canonicalPathname": "/guides/get-started/platform-overview",
    "content": "This component processes user inputs such as search queries, classification queries, and prompts for generating text from video. It returns the corresponding results to your application, enabling you to leverage the platform's capabilities effectively.",
    "domain": "test.com",
    "hash": "#queryprompt-processing-engine",
    "hierarchy": {
      "h0": {
        "title": "Platform Overview",
      },
      "h2": {
        "id": "architecture-overview",
        "title": "Architecture Overview",
      },
      "h3": {
        "id": "queryprompt-processing-engine",
        "title": "Query/Prompt Processing Engine",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root.uv.guides.guides.get-started.platform-overview-queryprompt-processing-engine-chunk:0",
    "org_id": "test",
    "pathname": "/guides/get-started/platform-overview",
    "tab": {
      "pathname": "/guides",
      "title": "Docs",
    },
    "title": "Query/Prompt Processing Engine",
    "type": "markdown",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/guides/get-started",
        "title": "Get Started",
      },
    ],
    "canonicalPathname": "/guides/get-started/quickstart",
    "content": "This guide demonstrates building a production-ready video understanding service using a three-step process:
Create an Index: Organize and store video data, consisting of video embeddings and metadata.

Upload Videos: Add video content to your index for processing.

Perform Downstream Tasks: Utilize the platform's capabilities to search, classify, and generate text from videos.


Each step is composed of a single API call, making the process straightforward and efficient.
Note: You can interact with the platform using one of the available SDKs or an HTTP client like requests or axios. This guide demonstrates how to use the SDKs, the recommended approach for most scenarios.",
    "domain": "test.com",
    "objectID": "test:test.com:root.uv.guides.guides.get-started.quickstart-chunk:0",
    "org_id": "test",
    "pathname": "/guides/get-started/quickstart",
    "tab": {
      "pathname": "/guides",
      "title": "Docs",
    },
    "title": "Quickstart",
    "type": "markdown",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/guides/get-started",
        "title": "Get Started",
      },
    ],
    "canonicalPathname": "/guides/get-started/quickstart",
    "content": "Familiarity with the concepts described on the Platform overview page.

A free account on Twelve Labs. Sign up or sign in if you already have one.

An API key. Retrieve it by navigating to the API Key page, logging in, and selecting the Copy icon next to your API key.

Videos to upload must meet the following requirements:
Video resolution: Between 360p and 4K.

Video and audio formats: Must be encoded in formats listed on the FFmpeg Formats Documentation page.

Duration: For Marengo, between 4 seconds and 2 hours. For Pegasus, between 4 seconds and 30 minutes.

File size: Must not exceed 2 GB.

Audio track: Required if the conversation engine option is selected.



Install the Twelve Labs SDK for your programming language:
Python: pip install twelvelabs

Node.js: yarn add twelvelabs-js",
    "domain": "test.com",
    "hash": "#prerequisites",
    "hierarchy": {
      "h0": {
        "title": "Quickstart",
      },
      "h2": {
        "id": "prerequisites",
        "title": "Prerequisites",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root.uv.guides.guides.get-started.quickstart-prerequisites-chunk:0",
    "org_id": "test",
    "pathname": "/guides/get-started/quickstart",
    "tab": {
      "pathname": "/guides",
      "title": "Docs",
    },
    "title": "Prerequisites",
    "type": "markdown",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/guides/get-started",
        "title": "Get Started",
      },
    ],
    "canonicalPathname": "/guides/get-started/quickstart",
    "content": "Follow the steps in one of the guides below, depending on what task you want to complete:
Search Videos: Use natural language queries to find specific moments in your videos.

Generate Text from Video: Create summaries, titles, and more from video content.

Classify Videos: Organize videos into categories based on custom taxonomies.

Create Video Embeddings: Generate embeddings for advanced video analysis.


For detailed instructions, refer to the specific guides on each task.",
    "domain": "test.com",
    "hash": "#procedure",
    "hierarchy": {
      "h0": {
        "title": "Quickstart",
      },
      "h2": {
        "id": "procedure",
        "title": "Procedure",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root.uv.guides.guides.get-started.quickstart-procedure-chunk:0",
    "org_id": "test",
    "pathname": "/guides/get-started/quickstart",
    "tab": {
      "pathname": "/guides",
      "title": "Docs",
    },
    "title": "Procedure",
    "type": "markdown",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/guides/guides",
        "title": "Guides",
      },
    ],
    "canonicalPathname": "/guides/guides/authentication",
    "content": "The Twelve Labs API uses API keys for authentication. Treat your API key like a password and do not distribute or hardcode it. If you suspect your account is compromised, generate a new key.",
    "domain": "test.com",
    "objectID": "test:test.com:root.uv.guides.guides.guides.authentication-chunk:0",
    "org_id": "test",
    "pathname": "/guides/guides/authentication",
    "tab": {
      "pathname": "/guides",
      "title": "Docs",
    },
    "title": "Authentication",
    "type": "markdown",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/guides/guides",
        "title": "Guides",
      },
    ],
    "canonicalPathname": "/guides/guides/authentication",
    "content": "Retrieve API Key: Go to the API key page and select the copy icon next to the key to copy it to your clipboard.

Generate a New API Key: Go to the API key page and select the Regenerate Key button under the API Key section.

Revoke API Key: Go to the API key page and select the Revoke Key button under the API Key section.


For security reasons, API keys automatically expire every 90 days. You must generate a new key to continue using the API once it expires.
Note
If your policy requires more frequent key rotation, you can generate a new key at any time.

To temporarily suspend API usage without deleting your account, you can revoke your API key.",
    "domain": "test.com",
    "hash": "#managing-api-keys",
    "hierarchy": {
      "h0": {
        "title": "Authentication",
      },
      "h2": {
        "id": "managing-api-keys",
        "title": "Managing API Keys",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root.uv.guides.guides.guides.authentication-managing-api-keys-chunk:0",
    "org_id": "test",
    "pathname": "/guides/guides/authentication",
    "tab": {
      "pathname": "/guides",
      "title": "Docs",
    },
    "title": "Managing API Keys",
    "type": "markdown",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/guides/guides",
        "title": "Guides",
      },
    ],
    "canonicalPathname": "/guides/guides/authentication",
    "content": "When using the SDK client, provide the API key when instantiating the client.",
    "domain": "test.com",
    "hash": "#using-the-sdk",
    "hierarchy": {
      "h0": {
        "title": "Authentication",
      },
      "h2": {
        "id": "using-the-sdk",
        "title": "Using the SDK",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root.uv.guides.guides.guides.authentication-using-the-sdk-chunk:0",
    "org_id": "test",
    "pathname": "/guides/guides/authentication",
    "tab": {
      "pathname": "/guides",
      "title": "Docs",
    },
    "title": "Using the SDK",
    "type": "markdown",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/guides/guides",
        "title": "Guides",
      },
    ],
    "canonicalPathname": "/guides/guides/authentication",
    "content": "You must have an API key.",
    "domain": "test.com",
    "hash": "#prerequisites",
    "hierarchy": {
      "h0": {
        "title": "Authentication",
      },
      "h2": {
        "id": "using-the-sdk",
        "title": "Using the SDK",
      },
      "h3": {
        "id": "prerequisites",
        "title": "Prerequisites",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root.uv.guides.guides.guides.authentication-prerequisites-chunk:0",
    "org_id": "test",
    "pathname": "/guides/guides/authentication",
    "tab": {
      "pathname": "/guides",
      "title": "Docs",
    },
    "title": "Prerequisites",
    "type": "markdown",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/guides/guides",
        "title": "Guides",
      },
    ],
    "canonicalPathname": "/guides/guides/authentication",
    "code_snippets": [
      {
        "code": "try:
    index = client.index.create(
        name="<YOUR_INDEX_NAME>",
        engines=[
            {
                "name": "marengo2.6",
                "options": ["visual", "conversation"],
            }
        ]
    )
    print(f"Created index: id={index.id}")
except AuthenticationError as e:
    print(e)",
        "lang": "python",
      },
      {
        "code": "try {
    let index = await client.index.create({
        name: '<YOUR_INDEX_NAME>',
        engines: [
            {
                name: 'marengo2.6',
                options: ['visual', 'conversation'],
            },
        ],
    });
    console.log(`Created index: id=${index.id} name=${index.name} engines=${JSON.stringify(index.engines)}`);
} catch (e) {
    console.log(e);
}",
        "lang": "javascript",
      },
    ],
    "content": "Install the twelvelabs package:
Python: pip install twelvelabs

Node.js: yarn add twelvelabs-js



Import the SDK into your application:
Python: from twelvelabs import TwelveLabs

Node.js: import { TwelveLabs } from 'twelvelabs-js';



Instantiate the SDK client:
Python: client = TwelveLabs(api_key="<YOUR_API_KEY>")

Node.js: const client = new TwelveLabs({ apiKey: '<YOUR_API_KEY>' });



Use the SDK to interact with the platform:
Example: Create an index




If the API key is valid, the index will be created successfully. If it is expired or invalid, an error message will be returned.",
    "domain": "test.com",
    "hash": "#procedure",
    "hierarchy": {
      "h0": {
        "title": "Authentication",
      },
      "h2": {
        "id": "using-the-sdk",
        "title": "Using the SDK",
      },
      "h3": {
        "id": "procedure",
        "title": "Procedure",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root.uv.guides.guides.guides.authentication-procedure-chunk:0",
    "org_id": "test",
    "pathname": "/guides/guides/authentication",
    "tab": {
      "pathname": "/guides",
      "title": "Docs",
    },
    "title": "Procedure",
    "type": "markdown",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/guides/guides",
        "title": "Guides",
      },
    ],
    "canonicalPathname": "/guides/guides/authentication",
    "content": "When using an HTTP client like requests or axios, include the API key in the headers of each HTTP request.",
    "domain": "test.com",
    "hash": "#using-an-http-client",
    "hierarchy": {
      "h0": {
        "title": "Authentication",
      },
      "h2": {
        "id": "using-an-http-client",
        "title": "Using an HTTP Client",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root.uv.guides.guides.guides.authentication-using-an-http-client-chunk:0",
    "org_id": "test",
    "pathname": "/guides/guides/authentication",
    "tab": {
      "pathname": "/guides",
      "title": "Docs",
    },
    "title": "Using an HTTP Client",
    "type": "markdown",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/guides/guides",
        "title": "Guides",
      },
    ],
    "canonicalPathname": "/guides/guides/authentication",
    "content": "You must have an API key.

The URL of the API service should be stored in the API_URL variable.",
    "domain": "test.com",
    "hash": "#prerequisites-1",
    "hierarchy": {
      "h0": {
        "title": "Authentication",
      },
      "h2": {
        "id": "using-an-http-client",
        "title": "Using an HTTP Client",
      },
      "h3": {
        "id": "prerequisites-1",
        "title": "Prerequisites",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root.uv.guides.guides.guides.authentication-prerequisites-1-chunk:0",
    "org_id": "test",
    "pathname": "/guides/guides/authentication",
    "tab": {
      "pathname": "/guides",
      "title": "Docs",
    },
    "title": "Prerequisites",
    "type": "markdown",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/guides/guides",
        "title": "Guides",
      },
    ],
    "canonicalPathname": "/guides/guides/authentication",
    "code_snippets": [
      {
        "code": "INDEX_NAME = "<YOUR_INDEX_NAME>"
data = {
    "engines": [
        {
            "engine_name": "marengo2.6",
            "engine_options": ["visual", "conversation", "text_in_video", "logo"]
        }
    ],
    "index_name": INDEX_NAME,
}
response = requests.post(INDEXES_URL, headers=headers, json=data)
print(f'Status code: {response.status_code}')
print(response.json())",
        "lang": "python",
      },
      {
        "code": "const INDEX_NAME = '<YOUR_INDEX_NAME>';
const resp = await axios.post(
    INDEXES_URL,
    {
        'engine_id': 'marengo2.5',
        'index_options': ['visual', 'conversation', 'text_in_video'],
        'index_name': INDEX_NAME
    },
    { headers }
);
const { data: response } = resp;
console.log(`Status code: ${resp.status}`);
console.log(response);",
        "lang": "javascript",
      },
    ],
    "content": "Install the necessary packages:
Python: python -m pip install requests

Node.js: npm install axios form-data



Configure the HTTP request headers:
Python: headers = { "x-api-key": "<YOUR_API_KEY>" }

Node.js: const headers = { 'x-api-key': '<YOUR_API_KEY>' }



Declare the /indexes endpoint:
Python: INDEXES_URL = f"{API_URL}/indexes"

Node.js: const INDEXES_URL = ${API_URL}/indexes;



Use the POST method to create a new index:


If the API key is valid, the index will be created successfully. If it is expired or invalid, an error message will be returned.",
    "domain": "test.com",
    "hash": "#procedure-1",
    "hierarchy": {
      "h0": {
        "title": "Authentication",
      },
      "h2": {
        "id": "using-an-http-client",
        "title": "Using an HTTP Client",
      },
      "h3": {
        "id": "procedure-1",
        "title": "Procedure",
      },
    },
    "level": "h3",
    "objectID": "test:test.com:root.uv.guides.guides.guides.authentication-procedure-1-chunk:0",
    "org_id": "test",
    "pathname": "/guides/guides/authentication",
    "tab": {
      "pathname": "/guides",
      "title": "Docs",
    },
    "title": "Procedure",
    "type": "markdown",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/guides/guides",
        "title": "Guides",
      },
    ],
    "canonicalPathname": "/guides/guides/create-indexes",
    "content": "An index is a fundamental unit for organizing and storing video data, consisting of video embeddings and metadata. Indexes facilitate information retrieval and processing.
You can use indexes to group related videos. For example, if you want to upload multiple videos from a car race, you can create a single index and upload all the videos to it. After uploading, you can search for specific moments across all videos in that index in a single request.",
    "domain": "test.com",
    "objectID": "test:test.com:root.uv.guides.guides.guides.create-indexes-chunk:0",
    "org_id": "test",
    "pathname": "/guides/guides/create-indexes",
    "tab": {
      "pathname": "/guides",
      "title": "Docs",
    },
    "title": "Create Indexes",
    "type": "markdown",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/guides/guides",
        "title": "Guides",
      },
    ],
    "canonicalPathname": "/guides/guides/create-indexes",
    "content": "You’re familiar with the concepts described on the Platform overview page.

You have an API key. To retrieve your API key, navigate to the API Key page and log in with your credentials. Then, select the Copy icon to the right of your API key to copy it to your clipboard.",
    "domain": "test.com",
    "hash": "#prerequisites",
    "hierarchy": {
      "h0": {
        "title": "Create Indexes",
      },
      "h2": {
        "id": "prerequisites",
        "title": "Prerequisites",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root.uv.guides.guides.guides.create-indexes-prerequisites-chunk:0",
    "org_id": "test",
    "pathname": "/guides/guides/create-indexes",
    "tab": {
      "pathname": "/guides",
      "title": "Docs",
    },
    "title": "Prerequisites",
    "type": "markdown",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/guides/guides",
        "title": "Guides",
      },
    ],
    "canonicalPathname": "/guides/guides/create-indexes",
    "code_snippets": [
      {
        "code": "engines = [
    {
        "name": "marengo2.6",
        "options": ["visual", "conversation", "text_in_video", "logo"]
    }
]",
        "lang": "python",
      },
      {
        "code": "const engines = [
    {
        name: 'marengo2.6',
        options: ['visual', 'conversation', 'text_in_video', 'logo'],
    },
];",
        "lang": "javascript",
      },
      {
        "code": "index = client.index.create(
    name="<YOUR_INDEX_NAME>",
    engines=engines,
    addons=["thumbnail"]  # Optional
)
print(f"A new index has been created: id={index.id} name={index.name} engines={index.engines}")",
        "lang": "python",
      },
      {
        "code": "let index = await client.index.create({
    name: '<YOUR_INDEX_NAME>',
    engines: engines,
    addons: ['thumbnail'], // Optional
});
console.log(`A new index has been created: id=${index.id} name=${index.name} engines=${JSON.stringify(index.engines)}`);",
        "lang": "javascript",
      },
      {
        "code": "A new index has been created: id=65d345106efba5e3988d6d4b name=index-01 engines=[Engine(name='marengo2.6', options=['visual', 'conversation', 'text_in_video', 'logo'], addons=None)]",
      },
    ],
    "content": "Import the SDK into your application:
Python: from twelvelabs import TwelveLabs

Node.js: import { TwelveLabs } from 'twelvelabs-js';



Instantiate the SDK client with your API key:
Python: client = TwelveLabs(api_key="<YOUR_API_KEY>")

Node.js: const client = new TwelveLabs({ apiKey: '<YOUR_API_KEY>' });



Specify the desired engine configuration:
The example below enables the Marengo video understanding engine and the following engine options - visual, conversation, text_in_video, and logo:
Python:

Node.js:





Create a new index:
Invoke the create method of the client.index object with the following parameters:
name: A string representing the name of your new index. Choose a succinct and descriptive name for your index.

engines: An object specifying your engine configuration. You constructed this object in the previous step.

(Optional) addons: An array of strings specifying the add-ons you want to enable for your index. This example enables the thumbnail generation feature.

Python:

Node.js:






The response should look similar to the following one:
Note that the response contains, among other information, a field named id, representing the unique identifier of your new index.",
    "domain": "test.com",
    "hash": "#procedure",
    "hierarchy": {
      "h0": {
        "title": "Create Indexes",
      },
      "h2": {
        "id": "procedure",
        "title": "Procedure",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root.uv.guides.guides.guides.create-indexes-procedure-chunk:0",
    "org_id": "test",
    "pathname": "/guides/guides/create-indexes",
    "tab": {
      "pathname": "/guides",
      "title": "Docs",
    },
    "title": "Procedure",
    "type": "markdown",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/guides/guides",
        "title": "Guides",
      },
    ],
    "canonicalPathname": "/guides/guides/upload-videos",
    "content": "This guide shows how you can upload a video file to the Twelve Labs platform. The platform offers the following options for uploading single videos:
Upload from the local file system: Use this option to upload a single video file from your local file system.

Upload from a direct URL: Use this option to upload a video file from a publicly accessible URL. The platform will retrieve the file directly from the specified URL, so your application doesn't have to store the video locally and upload it.


Notes:
The platform supports uploading video files that can play without additional user interaction or custom video players. Ensure your URL points to the raw video file, not a web page containing the video. Links to third-party hosting sites, cloud storage services, or videos requiring extra steps to play are not supported.

The ability to upload videos from YouTube is no longer supported.",
    "domain": "test.com",
    "objectID": "test:test.com:root.uv.guides.guides.guides.upload-videos-chunk:0",
    "org_id": "test",
    "pathname": "/guides/guides/upload-videos",
    "tab": {
      "pathname": "/guides",
      "title": "Docs",
    },
    "title": "Upload Videos",
    "type": "markdown",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/guides/guides",
        "title": "Guides",
      },
    ],
    "canonicalPathname": "/guides/guides/upload-videos",
    "content": "You’re familiar with the concepts described on the Platform overview page.

You have an API key. To retrieve your API key, navigate to the API Key page and log in with your credentials. Then, select the Copy icon to the right of your API key to copy it to your clipboard.

You’ve already created an index.

The video you wish to upload must meet the following requirements:
Video resolution: Must be greater or equal to 360p and less or equal to 4K.

Video and audio formats: The video files you wish to upload must be encoded in the video and audio formats listed on the FFmpeg Formats Documentation page.

Duration: For Marengo, it must be between 4 seconds and 2 hours (7,200s). For Pegasus, it must be between 4 seconds and 30 minutes (1,800s).

File size: Must not exceed 2 GB.

Audio track: If the conversation engine option is selected, the video you're uploading must contain an audio track.",
    "domain": "test.com",
    "hash": "#prerequisites",
    "hierarchy": {
      "h0": {
        "title": "Upload Videos",
      },
      "h2": {
        "id": "prerequisites",
        "title": "Prerequisites",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root.uv.guides.guides.guides.upload-videos-prerequisites-chunk:0",
    "org_id": "test",
    "pathname": "/guides/guides/upload-videos",
    "tab": {
      "pathname": "/guides",
      "title": "Docs",
    },
    "title": "Prerequisites",
    "type": "markdown",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/guides/guides",
        "title": "Guides",
      },
    ],
    "canonicalPathname": "/guides/guides/upload-videos",
    "code_snippets": [
      {
        "code": "from twelvelabs import TwelveLabs
from twelvelabs.models.task import Task",
        "lang": "python",
      },
      {
        "code": "import { TwelveLabs, Task } from 'twelvelabs-js';",
        "lang": "javascript",
      },
      {
        "code": "client = TwelveLabs(api_key="<YOUR_API_KEY>")",
        "lang": "python",
      },
      {
        "code": "const client = new TwelveLabs({ apiKey: '<YOUR_API_KEY>' });",
        "lang": "javascript",
      },
      {
        "code": "task = client.task.create(
    index_id="<YOUR_INDEX_ID>",
    file="<YOUR_VIDEO_FILE>",
    transcription_file="<YOUR_TRANSCRIPTION_FILE>"  # Optional
)
print(f"Task id={task.id}")",
        "lang": "python",
      },
      {
        "code": "const task = await client.task.create({
    indexId: '<YOUR_INDEX_ID>',
    file: '<YOUR_VIDEO_FILE>',
    transcriptionFile: '<YOUR_TRANSCRIPTION_FILE>',  // Optional
});
console.log(`Task id=${task.id}`);",
        "lang": "javascript",
      },
      {
        "code": "task = client.task.create(
    index_id="<YOUR_INDEX_ID>",
    url="<YOUR_VIDEO_URL>",
    transcription_url="<YOUR_TRANSCRIPTION_URL>"  # Optional
)
print(f"Task id={task.id}")",
        "lang": "python",
      },
      {
        "code": "const task = await client.task.create({
    indexId: '<YOUR_INDEX_ID>',
    url: '<YOUR_VIDEO_URL>',
    transcriptionUrl: '<YOUR_TRANSCRIPTION_URL>',  // Optional
});
console.log(`Task id=${task.id}`);",
        "lang": "javascript",
      },
      {
        "code": "def on_task_update(task: Task):
    print(f"  Status={task.status}")
task.wait_for_done(sleep_interval=5, callback=on_task_update)
if task.status != "ready":
    raise RuntimeError(f"Indexing failed with status {task.status}")
print(f"The unique identifier of your video is {task.video_id}.")",
        "lang": "python",
      },
      {
        "code": "await task.waitForDone(500, (task: Task) => {
    console.log(`  Status=${task.status}`);
});
if (task.status !== 'ready') {
    throw new Error(`Indexing failed with status ${task.status}`);
}
console.log(`The unique identifier of your video is ${task.videoId}`);",
        "lang": "javascript",
      },
    ],
    "content": "Import the required packages into your application:
Python:

Node.js:



Instantiate the SDK client with your API key:
Python:

Node.js:



Upload a video:
From the local file system:
Python:

Node.js:



From a direct URL:
Python:

Node.js:





Monitor the indexing process:
Python:

Node.js:




Once a video has been successfully uploaded and indexed, the task object contains, among other information, a field named video_id, representing the unique identifier of your video.",
    "domain": "test.com",
    "hash": "#procedure",
    "hierarchy": {
      "h0": {
        "title": "Upload Videos",
      },
      "h2": {
        "id": "procedure",
        "title": "Procedure",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:root.uv.guides.guides.guides.upload-videos-procedure-chunk:0",
    "org_id": "test",
    "pathname": "/guides/guides/upload-videos",
    "tab": {
      "pathname": "/guides",
      "title": "Docs",
    },
    "title": "Procedure",
    "type": "markdown",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [],
    "canonicalPathname": "/api-reference/api-reference",
    "content": "The Twelve Labs API provides a comprehensive suite of tools for integrating advanced video understanding capabilities into your applications. This overview covers the key components and functionalities of the API, helping you get started with building powerful video-based solutions.",
    "domain": "test.com",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3-chunk:0",
    "org_id": "test",
    "pathname": "/api-reference/api-reference",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "API Reference",
    "type": "markdown",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [],
    "canonicalPathname": "/api-reference/api-reference",
    "content": "Video Indexing: Organize and store video data efficiently, enabling fast retrieval and processing.

Semantic Search: Use natural language queries to find specific moments within videos.

Video Classification: Categorize videos based on custom taxonomies using zero-shot classification.

Text Generation: Create summaries, titles, and other text outputs from video content.

Multimodal Analysis: Leverage a video-first, multimodal approach for comprehensive video understanding.",
    "domain": "test.com",
    "hash": "#key-features",
    "hierarchy": {
      "h0": {
        "title": "API Reference",
      },
      "h2": {
        "id": "key-features",
        "title": "Key Features",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3-key-features-chunk:0",
    "org_id": "test",
    "pathname": "/api-reference/api-reference",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Key Features",
    "type": "markdown",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [],
    "canonicalPathname": "/api-reference/api-reference",
    "content": "The API is organized around REST principles, making it easy to integrate with most programming languages and tools. It supports the following operations:
Index Management: Create, update, and manage video indexes.

Video Uploading: Add videos to your indexes from local files or direct URLs.

Search and Query: Perform searches and queries to extract information from videos.

Classification and Analysis: Apply classification models and analyze video content.",
    "domain": "test.com",
    "hash": "#api-structure",
    "hierarchy": {
      "h0": {
        "title": "API Reference",
      },
      "h2": {
        "id": "api-structure",
        "title": "API Structure",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3-api-structure-chunk:0",
    "org_id": "test",
    "pathname": "/api-reference/api-reference",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "API Structure",
    "type": "markdown",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [],
    "canonicalPathname": "/api-reference/api-reference",
    "content": "Access to the API requires an API key, which you can obtain by signing up for a Twelve Labs account. Include the API key in the headers of your requests to authenticate and authorize your access.",
    "domain": "test.com",
    "hash": "#authentication",
    "hierarchy": {
      "h0": {
        "title": "API Reference",
      },
      "h2": {
        "id": "authentication",
        "title": "Authentication",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3-authentication-chunk:0",
    "org_id": "test",
    "pathname": "/api-reference/api-reference",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Authentication",
    "type": "markdown",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [],
    "canonicalPathname": "/api-reference/api-reference",
    "content": "Sign Up: Create a free account on Twelve Labs to access the API.

Obtain API Key: Retrieve your API key from the API Key page after logging in.

Install SDK: Use the Twelve Labs SDK for your preferred programming language to simplify API interactions.
Python: pip install twelvelabs

Node.js: yarn add twelvelabs-js



Explore API Endpoints: Use the API to create indexes, upload videos, and perform various video understanding tasks.",
    "domain": "test.com",
    "hash": "#getting-started",
    "hierarchy": {
      "h0": {
        "title": "API Reference",
      },
      "h2": {
        "id": "getting-started",
        "title": "Getting Started",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3-getting-started-chunk:0",
    "org_id": "test",
    "pathname": "/api-reference/api-reference",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Getting Started",
    "type": "markdown",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "authed": false,
    "breadcrumb": [],
    "canonicalPathname": "/api-reference/api-reference",
    "content": "For more detailed information on each API endpoint and its parameters, refer to the specific API documentation sections. If you encounter any issues or have questions, contact Twelve Labs support or visit the community forums for assistance.


This page provides a general overview of the Twelve Labs API, helping you understand its capabilities and how to start using it effectively.",
    "domain": "test.com",
    "hash": "#support-and-resources",
    "hierarchy": {
      "h0": {
        "title": "API Reference",
      },
      "h2": {
        "id": "support-and-resources",
        "title": "Support and Resources",
      },
    },
    "level": "h2",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3-support-and-resources-chunk:0",
    "org_id": "test",
    "pathname": "/api-reference/api-reference",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Support and Resources",
    "type": "markdown",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_tasks.list",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/tasks",
        "title": "Tasks",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/tasks/list",
    "default_environment_id": "Default",
    "description": "This method returns a list of the video indexing tasks in your account. The API returns your video indexing tasks sorted by creation date, with the newest at the top of the list.",
    "domain": "test.com",
    "endpoint_path": "/tasks",
    "endpoint_path_alternates": [
      "/tasks",
      "https://api.twelvelabs.io/tasks",
      "https://api.twelvelabs.io/tasks",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "TasksListRequestBadRequestErrorBody",
    ],
    "method": "GET",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_tasks.list",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/tasks/list",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "List video indexing tasks",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_tasks.list",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/tasks",
        "title": "Tasks",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/tasks/list",
    "default_environment_id": "Default",
    "description": "The video indexing tasks have successfully been retrieved.",
    "domain": "test.com",
    "endpoint_path": "/tasks",
    "endpoint_path_alternates": [
      "/tasks",
      "https://api.twelvelabs.io/tasks",
      "https://api.twelvelabs.io/tasks",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "hash": "#response",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "TasksListRequestBadRequestErrorBody",
    ],
    "method": "GET",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_tasks.list-response",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/tasks/list",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "List video indexing tasks",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_tasks.create",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/tasks",
        "title": "Tasks",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/tasks/create",
    "default_environment_id": "Default",
    "description": "This method creates a video indexing task that uploads and indexes a video.
Ensure your video meets the requirements in the Prerequisites section of the Upload single videos page.
Upload options:
Local file: Use the video_file parameter.

Publicly accessible URL: Use the video_url parameter.


NOTES:
The platform supports video URLs that can play without additional user interaction or custom video players. Ensure your URL points to the raw video file, not a web page containing the video. Links to third-party hosting sites, cloud storage services, or videos requiring extra steps to play are not supported.

This endpoint is rate-limited. For details, see the Rate limits page.",
    "domain": "test.com",
    "endpoint_path": "/tasks",
    "endpoint_path_alternates": [
      "/tasks",
      "https://api.twelvelabs.io/tasks",
      "https://api.twelvelabs.io/tasks",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "TasksCreateRequestBadRequestErrorBody",
    ],
    "method": "POST",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_tasks.create",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/tasks/create",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Create a video indexing task",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_tasks.create",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/tasks",
        "title": "Tasks",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/tasks/create",
    "default_environment_id": "Default",
    "description": "A video indexing task has successfully been created.",
    "domain": "test.com",
    "endpoint_path": "/tasks",
    "endpoint_path_alternates": [
      "/tasks",
      "https://api.twelvelabs.io/tasks",
      "https://api.twelvelabs.io/tasks",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "hash": "#response",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "TasksCreateRequestBadRequestErrorBody",
    ],
    "method": "POST",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_tasks.create-response",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/tasks/create",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Create a video indexing task",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_tasks.retrieve",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/tasks",
        "title": "Tasks",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/tasks/retrieve",
    "default_environment_id": "Default",
    "description": "This method retrieves a video indexing task.",
    "domain": "test.com",
    "endpoint_path": "/tasks/:task_id",
    "endpoint_path_alternates": [
      "/tasks/{task_id}",
      "https://api.twelvelabs.io/tasks/:task_id",
      "https://api.twelvelabs.io/tasks/%7Btask_id%7D",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "TasksRetrieveRequestBadRequestErrorBody",
    ],
    "method": "GET",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_tasks.retrieve",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/tasks/retrieve",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Retrieve a video indexing task",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_tasks.retrieve",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/tasks",
        "title": "Tasks",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/tasks/retrieve",
    "default_environment_id": "Default",
    "description": "The specified video indexing task has successfully been retrieved.",
    "domain": "test.com",
    "endpoint_path": "/tasks/:task_id",
    "endpoint_path_alternates": [
      "/tasks/{task_id}",
      "https://api.twelvelabs.io/tasks/:task_id",
      "https://api.twelvelabs.io/tasks/%7Btask_id%7D",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "hash": "#response",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "TasksRetrieveRequestBadRequestErrorBody",
    ],
    "method": "GET",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_tasks.retrieve-response",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/tasks/retrieve",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Retrieve a video indexing task",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_tasks.delete",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/tasks",
        "title": "Tasks",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/tasks/delete",
    "default_environment_id": "Default",
    "description": "This action cannot be undone.
Note the following about deleting a video indexing task:
You can only delete video indexing tasks for which the status is ready or failed.

If the status of your video indexing task is ready, you must first delete the video vector associated with your video indexing task by calling the DELETE method of the /indexes/videos endpoint.",
    "domain": "test.com",
    "endpoint_path": "/tasks/:task_id",
    "endpoint_path_alternates": [
      "/tasks/{task_id}",
      "https://api.twelvelabs.io/tasks/:task_id",
      "https://api.twelvelabs.io/tasks/%7Btask_id%7D",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "TasksDeleteRequestBadRequestErrorBody",
    ],
    "method": "DELETE",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_tasks.delete",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/tasks/delete",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Delete a video indexing task",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_tasks.status",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/tasks",
        "title": "Tasks",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/tasks/status",
    "default_environment_id": "Default",
    "description": "This method retrieves the number video indexing tasks in each status for the specified index.",
    "domain": "test.com",
    "endpoint_path": "/tasks/status",
    "endpoint_path_alternates": [
      "/tasks/status",
      "https://api.twelvelabs.io/tasks/status",
      "https://api.twelvelabs.io/tasks/status",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "TasksStatusRequestBadRequestErrorBody",
    ],
    "method": "GET",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_tasks.status",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/tasks/status",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Retrieve tasks by status",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_tasks.status",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/tasks",
        "title": "Tasks",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/tasks/status",
    "default_environment_id": "Default",
    "description": "An object containing the number video indexing tasks in each status.",
    "domain": "test.com",
    "endpoint_path": "/tasks/status",
    "endpoint_path_alternates": [
      "/tasks/status",
      "https://api.twelvelabs.io/tasks/status",
      "https://api.twelvelabs.io/tasks/status",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "hash": "#response",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "TasksStatusRequestBadRequestErrorBody",
    ],
    "method": "GET",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_tasks.status-response",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/tasks/status",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Retrieve tasks by status",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_tasks.transfers",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/tasks",
        "title": "Tasks",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/tasks/transfers",
    "default_environment_id": "Default",
    "domain": "test.com",
    "endpoint_path": "/tasks/transfers",
    "endpoint_path_alternates": [
      "/tasks/transfers",
      "https://api.twelvelabs.io/tasks/transfers",
      "https://api.twelvelabs.io/tasks/transfers",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
    ],
    "method": "POST",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_tasks.transfers",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/tasks/transfers",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Transfers",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_uploadVideos.cloud-to-cloud-import-videos",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/upload-videos",
        "title": "Upload videos",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/upload-videos/cloud-to-cloud-import-videos",
    "default_environment_id": "Default",
    "description": "An import represents the process of uploading and indexing all videos from the specified integration. This method initiates an asynchronous import and returns two lists:
Videos that will be imported.

Videos that will not be imported, typically due to unmet prerequisites.


The actual uploading and indexing of videos occur asynchronously after you invoke this method. To monitor the status of each upload after invoking this method, use the GET method of the /tasks/transfers/import/{integration-id}/status endpoint.
NOTES:
Before importing videos, you must set up an integration. For details, see the Set up an integration section.

The videos you wish to upload must meet the requirements in the Prerequisites section of the Upload single videos page.",
    "domain": "test.com",
    "endpoint_path": "/tasks/transfers/import/:integration-id",
    "endpoint_path_alternates": [
      "/tasks/transfers/import/{integration-id}",
      "https://api.twelvelabs.io/tasks/transfers/import/:integration-id",
      "https://api.twelvelabs.io/tasks/transfers/import/%7Bintegration-id%7D",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "CloudToCloudImportVideosRequestBadRequestErrorBody",
    ],
    "method": "POST",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_uploadVideos.cloud-to-cloud-import-videos",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/upload-videos/cloud-to-cloud-import-videos",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Import videos",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_uploadVideos.cloud-to-cloud-import-videos",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/upload-videos",
        "title": "Upload videos",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/upload-videos/cloud-to-cloud-import-videos",
    "default_environment_id": "Default",
    "description": "An import has successfully been initiated.",
    "domain": "test.com",
    "endpoint_path": "/tasks/transfers/import/:integration-id",
    "endpoint_path_alternates": [
      "/tasks/transfers/import/{integration-id}",
      "https://api.twelvelabs.io/tasks/transfers/import/:integration-id",
      "https://api.twelvelabs.io/tasks/transfers/import/%7Bintegration-id%7D",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "hash": "#response",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "CloudToCloudImportVideosRequestBadRequestErrorBody",
    ],
    "method": "POST",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_uploadVideos.cloud-to-cloud-import-videos-response",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/upload-videos/cloud-to-cloud-import-videos",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Import videos",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_uploadVideos.cloud-to-cloud-retrieve-status",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/upload-videos",
        "title": "Upload videos",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/upload-videos/cloud-to-cloud-retrieve-status",
    "default_environment_id": "Default",
    "description": "This method retrieves the current status for each video from a specified integration and index. It returns an object containing lists of videos grouped by status. See the Task object page for details on each status.",
    "domain": "test.com",
    "endpoint_path": "/tasks/transfers/import/:integration-id/status",
    "endpoint_path_alternates": [
      "/tasks/transfers/import/{integration-id}/status",
      "https://api.twelvelabs.io/tasks/transfers/import/:integration-id/status",
      "https://api.twelvelabs.io/tasks/transfers/import/%7Bintegration-id%7D/status",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "CloudToCloudRetrieveStatusRequestBadRequestErrorBody",
    ],
    "method": "GET",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_uploadVideos.cloud-to-cloud-retrieve-status",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/upload-videos/cloud-to-cloud-retrieve-status",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Retrieve import status",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_uploadVideos.cloud-to-cloud-retrieve-status",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/upload-videos",
        "title": "Upload videos",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/upload-videos/cloud-to-cloud-retrieve-status",
    "default_environment_id": "Default",
    "description": "The status for each video from the specified integration and index has successfully been retrieved",
    "domain": "test.com",
    "endpoint_path": "/tasks/transfers/import/:integration-id/status",
    "endpoint_path_alternates": [
      "/tasks/transfers/import/{integration-id}/status",
      "https://api.twelvelabs.io/tasks/transfers/import/:integration-id/status",
      "https://api.twelvelabs.io/tasks/transfers/import/%7Bintegration-id%7D/status",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "hash": "#response",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "CloudToCloudRetrieveStatusRequestBadRequestErrorBody",
    ],
    "method": "GET",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_uploadVideos.cloud-to-cloud-retrieve-status-response",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/upload-videos/cloud-to-cloud-retrieve-status",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Retrieve import status",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_uploadVideos.cloud-to-cloud-retrieve-import-logs",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/upload-videos",
        "title": "Upload videos",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/upload-videos/cloud-to-cloud-retrieve-import-logs",
    "default_environment_id": "Default",
    "description": "This endpoint returns a chronological list of import operations for the specified integration. The list is sorted by creation date, with the oldest imports first. Each item in the list contains:
The number of videos in each status

Detailed error information for failed uploads, including filenames and error messages.


Use this endpoint to track import progress and troubleshoot potential issues across multiple operations.",
    "domain": "test.com",
    "endpoint_path": "/tasks/transfers/import/:integration-id/logs",
    "endpoint_path_alternates": [
      "/tasks/transfers/import/{integration-id}/logs",
      "https://api.twelvelabs.io/tasks/transfers/import/:integration-id/logs",
      "https://api.twelvelabs.io/tasks/transfers/import/%7Bintegration-id%7D/logs",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "CloudToCloudRetrieveImportLogsRequestBadRequestErrorBody",
    ],
    "method": "GET",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_uploadVideos.cloud-to-cloud-retrieve-import-logs",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/upload-videos/cloud-to-cloud-retrieve-import-logs",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Retrieve import logs",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_uploadVideos.cloud-to-cloud-retrieve-import-logs",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/upload-videos",
        "title": "Upload videos",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/upload-videos/cloud-to-cloud-retrieve-import-logs",
    "default_environment_id": "Default",
    "description": "The import logs have successfully been retrieved.",
    "domain": "test.com",
    "endpoint_path": "/tasks/transfers/import/:integration-id/logs",
    "endpoint_path_alternates": [
      "/tasks/transfers/import/{integration-id}/logs",
      "https://api.twelvelabs.io/tasks/transfers/import/:integration-id/logs",
      "https://api.twelvelabs.io/tasks/transfers/import/%7Bintegration-id%7D/logs",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "hash": "#response",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "CloudToCloudRetrieveImportLogsRequestBadRequestErrorBody",
    ],
    "method": "GET",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_uploadVideos.cloud-to-cloud-retrieve-import-logs-response",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/upload-videos/cloud-to-cloud-retrieve-import-logs",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Retrieve import logs",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_indexes.list",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/indexes",
        "title": "Indexes",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/indexes/list",
    "default_environment_id": "Default",
    "description": "This method returns a list of the indexes in your account. The API returns indexes sorted by creation date, with the oldest indexes at the top of the list.",
    "domain": "test.com",
    "endpoint_path": "/indexes",
    "endpoint_path_alternates": [
      "/indexes",
      "https://api.twelvelabs.io/indexes",
      "https://api.twelvelabs.io/indexes",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "IndexesListRequestBadRequestErrorBody",
    ],
    "method": "GET",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_indexes.list",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/indexes/list",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "List indexes",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_indexes.list",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/indexes",
        "title": "Indexes",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/indexes/list",
    "default_environment_id": "Default",
    "description": "The indexes have successfully been retrieved.",
    "domain": "test.com",
    "endpoint_path": "/indexes",
    "endpoint_path_alternates": [
      "/indexes",
      "https://api.twelvelabs.io/indexes",
      "https://api.twelvelabs.io/indexes",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "hash": "#response",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "IndexesListRequestBadRequestErrorBody",
    ],
    "method": "GET",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_indexes.list-response",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/indexes/list",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "List indexes",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_indexes.create",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/indexes",
        "title": "Indexes",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/indexes/create",
    "default_environment_id": "Default",
    "description": "This method creates an index.",
    "domain": "test.com",
    "endpoint_path": "/indexes",
    "endpoint_path_alternates": [
      "/indexes",
      "https://api.twelvelabs.io/indexes",
      "https://api.twelvelabs.io/indexes",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "IndexesCreateRequestBadRequestErrorBody",
    ],
    "method": "POST",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_indexes.create",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/indexes/create",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Create an index",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_indexes.create",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/indexes",
        "title": "Indexes",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/indexes/create",
    "default_environment_id": "Default",
    "description": "An index has successfully been created",
    "domain": "test.com",
    "endpoint_path": "/indexes",
    "endpoint_path_alternates": [
      "/indexes",
      "https://api.twelvelabs.io/indexes",
      "https://api.twelvelabs.io/indexes",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "hash": "#response",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "IndexesCreateRequestBadRequestErrorBody",
    ],
    "method": "POST",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_indexes.create-response",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/indexes/create",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Create an index",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_indexes.retrieve",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/indexes",
        "title": "Indexes",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/indexes/retrieve",
    "default_environment_id": "Default",
    "description": "This method retrieves details about the specified index.",
    "domain": "test.com",
    "endpoint_path": "/indexes/:index-id",
    "endpoint_path_alternates": [
      "/indexes/{index-id}",
      "https://api.twelvelabs.io/indexes/:index-id",
      "https://api.twelvelabs.io/indexes/%7Bindex-id%7D",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "IndexesRetrieveRequestBadRequestErrorBody",
    ],
    "method": "GET",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_indexes.retrieve",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/indexes/retrieve",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Retrieve an index",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_indexes.retrieve",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/indexes",
        "title": "Indexes",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/indexes/retrieve",
    "default_environment_id": "Default",
    "description": "The specified index has successfully been retrieved.",
    "domain": "test.com",
    "endpoint_path": "/indexes/:index-id",
    "endpoint_path_alternates": [
      "/indexes/{index-id}",
      "https://api.twelvelabs.io/indexes/:index-id",
      "https://api.twelvelabs.io/indexes/%7Bindex-id%7D",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "hash": "#response",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "IndexesRetrieveRequestBadRequestErrorBody",
    ],
    "method": "GET",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_indexes.retrieve-response",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/indexes/retrieve",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Retrieve an index",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_indexes.update",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/indexes",
        "title": "Indexes",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/indexes/update",
    "default_environment_id": "Default",
    "description": "This method updates the name of the specified index.",
    "domain": "test.com",
    "endpoint_path": "/indexes/:index-id",
    "endpoint_path_alternates": [
      "/indexes/{index-id}",
      "https://api.twelvelabs.io/indexes/:index-id",
      "https://api.twelvelabs.io/indexes/%7Bindex-id%7D",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "IndexesUpdateRequestBadRequestErrorBody",
    ],
    "method": "PUT",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_indexes.update",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/indexes/update",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Update an index",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_indexes.delete",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/indexes",
        "title": "Indexes",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/indexes/delete",
    "default_environment_id": "Default",
    "description": "This method deletes the specified index and all the videos within it. This action cannot be undone.",
    "domain": "test.com",
    "endpoint_path": "/indexes/:index-id",
    "endpoint_path_alternates": [
      "/indexes/{index-id}",
      "https://api.twelvelabs.io/indexes/:index-id",
      "https://api.twelvelabs.io/indexes/%7Bindex-id%7D",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "IndexesDeleteRequestBadRequestErrorBody",
    ],
    "method": "DELETE",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_indexes.delete",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/indexes/delete",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Delete an index",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_indexes/videos.list",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/indexes",
        "title": "Indexes",
      },
      {
        "pathname": "/api-reference/api-reference/indexes/videos",
        "title": "Videos",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/indexes/videos/list",
    "default_environment_id": "Default",
    "description": "This method returns a list of the videos in the specified index. By default, the API returns your videos sorted by creation date, with the newest at the top of the list.",
    "domain": "test.com",
    "endpoint_path": "/indexes/:index-id/videos",
    "endpoint_path_alternates": [
      "/indexes/{index-id}/videos",
      "https://api.twelvelabs.io/indexes/:index-id/videos",
      "https://api.twelvelabs.io/indexes/%7Bindex-id%7D/videos",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "VideosListRequestBadRequestErrorBody",
    ],
    "method": "GET",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_indexes/videos.list",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/indexes/videos/list",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "List videos",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_indexes/videos.list",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/indexes",
        "title": "Indexes",
      },
      {
        "pathname": "/api-reference/api-reference/indexes/videos",
        "title": "Videos",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/indexes/videos/list",
    "default_environment_id": "Default",
    "description": "The video vectors in the specified index have successfully been retrieved.",
    "domain": "test.com",
    "endpoint_path": "/indexes/:index-id/videos",
    "endpoint_path_alternates": [
      "/indexes/{index-id}/videos",
      "https://api.twelvelabs.io/indexes/:index-id/videos",
      "https://api.twelvelabs.io/indexes/%7Bindex-id%7D/videos",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "hash": "#response",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "VideosListRequestBadRequestErrorBody",
    ],
    "method": "GET",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_indexes/videos.list-response",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/indexes/videos/list",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "List videos",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_indexes/videos.retrieve",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/indexes",
        "title": "Indexes",
      },
      {
        "pathname": "/api-reference/api-reference/indexes/videos",
        "title": "Videos",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/indexes/videos/retrieve",
    "default_environment_id": "Default",
    "description": "This method retrieves information about the specified video.
🚧 Important
When retrieving video embeddings, the response includes breaking changes that might require updates to your application code. Key differences:
The video_embeddings field has been renamed to video_embedding (plural to singular)

The response now includes a nested array named segments.",
    "domain": "test.com",
    "endpoint_path": "/indexes/:index-id/videos/:video-id",
    "endpoint_path_alternates": [
      "/indexes/{index-id}/videos/{video-id}",
      "https://api.twelvelabs.io/indexes/:index-id/videos/:video-id",
      "https://api.twelvelabs.io/indexes/%7Bindex-id%7D/videos/%7Bvideo-id%7D",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "VideosRetrieveRequestBadRequestErrorBody",
    ],
    "method": "GET",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_indexes/videos.retrieve",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/indexes/videos/retrieve",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Retrieve video information",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_indexes/videos.retrieve",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/indexes",
        "title": "Indexes",
      },
      {
        "pathname": "/api-reference/api-reference/indexes/videos",
        "title": "Videos",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/indexes/videos/retrieve",
    "default_environment_id": "Default",
    "description": "The specified video information has successfully been retrieved.",
    "domain": "test.com",
    "endpoint_path": "/indexes/:index-id/videos/:video-id",
    "endpoint_path_alternates": [
      "/indexes/{index-id}/videos/{video-id}",
      "https://api.twelvelabs.io/indexes/:index-id/videos/:video-id",
      "https://api.twelvelabs.io/indexes/%7Bindex-id%7D/videos/%7Bvideo-id%7D",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "hash": "#response",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "VideosRetrieveRequestBadRequestErrorBody",
    ],
    "method": "GET",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_indexes/videos.retrieve-response",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/indexes/videos/retrieve",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Retrieve video information",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_indexes/videos.update",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/indexes",
        "title": "Indexes",
      },
      {
        "pathname": "/api-reference/api-reference/indexes/videos",
        "title": "Videos",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/indexes/videos/update",
    "default_environment_id": "Default",
    "description": "Use this method to update the title and the metadata of a video.",
    "domain": "test.com",
    "endpoint_path": "/indexes/:index-id/videos/:video-id",
    "endpoint_path_alternates": [
      "/indexes/{index-id}/videos/{video-id}",
      "https://api.twelvelabs.io/indexes/:index-id/videos/:video-id",
      "https://api.twelvelabs.io/indexes/%7Bindex-id%7D/videos/%7Bvideo-id%7D",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "VideosUpdateRequestBadRequestErrorBody",
    ],
    "method": "PUT",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_indexes/videos.update",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/indexes/videos/update",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Update video information",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_indexes/videos.delete",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/indexes",
        "title": "Indexes",
      },
      {
        "pathname": "/api-reference/api-reference/indexes/videos",
        "title": "Videos",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/indexes/videos/delete",
    "default_environment_id": "Default",
    "description": "This method deletes all the information about the specified video This action cannot be undone.",
    "domain": "test.com",
    "endpoint_path": "/indexes/:index-id/videos/:video-id",
    "endpoint_path_alternates": [
      "/indexes/{index-id}/videos/{video-id}",
      "https://api.twelvelabs.io/indexes/:index-id/videos/:video-id",
      "https://api.twelvelabs.io/indexes/%7Bindex-id%7D/videos/%7Bvideo-id%7D",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "VideosDeleteRequestBadRequestErrorBody",
    ],
    "method": "DELETE",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_indexes/videos.delete",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/indexes/videos/delete",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Delete video information",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_summarize.create",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/summarize",
        "title": "Summarize",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/summarize/create",
    "default_environment_id": "Default",
    "description": "This endpoint generates summaries, chapters, or highlights for your videos. Optionally, you can provide a prompt to customize the output.
NOTE: This endpoint is rate-limited. For details, see the Rate limits page.",
    "domain": "test.com",
    "endpoint_path": "/summarize",
    "endpoint_path_alternates": [
      "/summarize",
      "https://api.twelvelabs.io/summarize",
      "https://api.twelvelabs.io/summarize",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "SummarizeCreateRequestBadRequestErrorBody",
    ],
    "method": "POST",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_summarize.create",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/summarize/create",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Summaries, chapters, or highlights",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_summarize.create",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/summarize",
        "title": "Summarize",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/summarize/create",
    "default_environment_id": "Default",
    "description": "The specified video has successfully been summarized.",
    "domain": "test.com",
    "endpoint_path": "/summarize",
    "endpoint_path_alternates": [
      "/summarize",
      "https://api.twelvelabs.io/summarize",
      "https://api.twelvelabs.io/summarize",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "hash": "#response",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "SummarizeCreateRequestBadRequestErrorBody",
    ],
    "method": "POST",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_summarize.create-response",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/summarize/create",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Summaries, chapters, or highlights",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_generate.create",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/generate",
        "title": "Generate",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/generate/create",
    "default_environment_id": "Default",
    "description": "This endpoint generates open-ended texts based on your videos, including but not limited to tables of content, action items, memos, and detailed analyses.
NOTES:
This endpoint is rate-limited. For details, see the Rate limits page.

This endpoint supports streaming responses. For details on integrating this feature into your application, refer to the Streaming response guide.",
    "domain": "test.com",
    "endpoint_path": "/generate",
    "endpoint_path_alternates": [
      "/generate",
      "https://api.twelvelabs.io/generate",
      "https://api.twelvelabs.io/generate",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "GenerateCreateRequestBadRequestErrorBody",
    ],
    "method": "POST",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_generate.create",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/generate/create",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Open-ended texts",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_generate.create",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/generate",
        "title": "Generate",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/generate/create",
    "default_environment_id": "Default",
    "description": "The specified video has successfully been processed.",
    "domain": "test.com",
    "endpoint_path": "/generate",
    "endpoint_path_alternates": [
      "/generate",
      "https://api.twelvelabs.io/generate",
      "https://api.twelvelabs.io/generate",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "hash": "#response",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "GenerateCreateRequestBadRequestErrorBody",
    ],
    "method": "POST",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_generate.create-response",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/generate/create",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Open-ended texts",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_embed.create",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/embed",
        "title": "Embed",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/embed/create",
    "default_environment_id": "Default",
    "description": "This method creates embedings for text, image, and audio content.
Before you create an embedding, ensure that the following prerequisites are met:
Text embeddings

Image embeddings

Audio embeddings


Parameters for embeddings:
Common parameters:
engine_name: The video understanding engine you want to use. Example: "Marengo-retrieval-2.6".



Text embeddings:
text: Text for which to create an embedding.



Image embeddings:
Provide one of the following:
image_url: Publicly accessible URL of your image file.

image_file: Local image file.



Audio embeddings:
Provide one of the following:
audio_url: Publicly accessible URL of your audio file.

audio_file: Local audio file.




NOTES:
The “Marengo-retrieval-2.6” video understanding engine generates embeddings for all modalities in the same latent space. This shared space enables any-to-any searches across different types of content.

You can create multiple types of embeddings in a single API call.

Audio embeddings combine generic sound and human speech in a single embedding. For videos with transcriptions, you can retrieve transcriptions and then create text embeddings from these transcriptions.


🚧 Important
The response includes breaking changes that might require updates to your application code.
Common changes:
The is_success boolean flag has been removed.
Media-specific changes:

Text:The response now includes a nested array named segments.

Image: The response now includes a nested array named segments.

Audio: No additional changes.",
    "domain": "test.com",
    "endpoint_path": "/embed",
    "endpoint_path_alternates": [
      "/embed",
      "https://api.twelvelabs.io/embed",
      "https://api.twelvelabs.io/embed",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "EmbedCreateRequestBadRequestErrorBody",
    ],
    "method": "POST",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_embed.create",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/embed/create",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Create embeddings for text, image, and audio",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_embed.create",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/embed",
        "title": "Embed",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/embed/create",
    "default_environment_id": "Default",
    "description": "A text embedding has successfully been created.",
    "domain": "test.com",
    "endpoint_path": "/embed",
    "endpoint_path_alternates": [
      "/embed",
      "https://api.twelvelabs.io/embed",
      "https://api.twelvelabs.io/embed",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "hash": "#response",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "EmbedCreateRequestBadRequestErrorBody",
    ],
    "method": "POST",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_embed.create-response",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/embed/create",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Create embeddings for text, image, and audio",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_embed/tasks.list",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/embed",
        "title": "Embed",
      },
      {
        "pathname": "/api-reference/api-reference/embed/tasks",
        "title": "Tasks",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/embed/tasks/list",
    "default_environment_id": "Default",
    "description": "This method returns a list of the video embedding tasks in your account. The platform returns your video embedding tasks sorted by creation date, with the newest at the top of the list.
NOTES:
Video embeddings are stored for seven days

When you invoke this method without specifying the started_at and ended_at parameters, the platform returns all the video embedding tasks created within the last seven days.",
    "domain": "test.com",
    "endpoint_path": "/embed/tasks",
    "endpoint_path_alternates": [
      "/embed/tasks",
      "https://api.twelvelabs.io/embed/tasks",
      "https://api.twelvelabs.io/embed/tasks",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "TasksListRequestBadRequestErrorBody",
    ],
    "method": "GET",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_embed/tasks.list",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/embed/tasks/list",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "List video embedding tasks",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_embed/tasks.list",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/embed",
        "title": "Embed",
      },
      {
        "pathname": "/api-reference/api-reference/embed/tasks",
        "title": "Tasks",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/embed/tasks/list",
    "default_environment_id": "Default",
    "description": "A list of video embedding tasks has successfully been retrieved.",
    "domain": "test.com",
    "endpoint_path": "/embed/tasks",
    "endpoint_path_alternates": [
      "/embed/tasks",
      "https://api.twelvelabs.io/embed/tasks",
      "https://api.twelvelabs.io/embed/tasks",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "hash": "#response",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "TasksListRequestBadRequestErrorBody",
    ],
    "method": "GET",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_embed/tasks.list-response",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/embed/tasks/list",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "List video embedding tasks",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_embed/tasks.create",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/embed",
        "title": "Embed",
      },
      {
        "pathname": "/api-reference/api-reference/embed/tasks",
        "title": "Tasks",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/embed/tasks/create",
    "default_environment_id": "Default",
    "description": "This method creates a new video embedding task that uploads a video to the platform and creates one or multiple video embeddings.
Ensure your video meets the requirements in the Prerequisites section of the Create video embeddings page.
Upload options:
Local file: Use the video_file parameter

Publicly accessible URL: Use the video_url parameter.


Specify at least one option. If both are provided, video_url takes precedence.
NOTES:
The “Marengo-retrieval-2.6” video understanding engine generates embeddings for all modalities in the same latent space. This shared space enables any-to-any searches across different types of content.

Video embeddings are stored for seven days.

The platform supports uploading video files that can play without additional user interaction or custom video players. Ensure your URL points to the raw video file, not a web page containing the video. Links to third-party hosting sites, cloud storage services, or videos requiring extra steps to play are not supported.",
    "domain": "test.com",
    "endpoint_path": "/embed/tasks",
    "endpoint_path_alternates": [
      "/embed/tasks",
      "https://api.twelvelabs.io/embed/tasks",
      "https://api.twelvelabs.io/embed/tasks",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "TasksCreateRequestBadRequestErrorBody",
    ],
    "method": "POST",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_embed/tasks.create",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/embed/tasks/create",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Create a video embedding task",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_embed/tasks.create",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/embed",
        "title": "Embed",
      },
      {
        "pathname": "/api-reference/api-reference/embed/tasks",
        "title": "Tasks",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/embed/tasks/create",
    "default_environment_id": "Default",
    "description": "A video embedding task has successfully been created.",
    "domain": "test.com",
    "endpoint_path": "/embed/tasks",
    "endpoint_path_alternates": [
      "/embed/tasks",
      "https://api.twelvelabs.io/embed/tasks",
      "https://api.twelvelabs.io/embed/tasks",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "hash": "#response",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "TasksCreateRequestBadRequestErrorBody",
    ],
    "method": "POST",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_embed/tasks.create-response",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/embed/tasks/create",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Create a video embedding task",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_embed/tasks.retrieve",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/embed",
        "title": "Embed",
      },
      {
        "pathname": "/api-reference/api-reference/embed/tasks",
        "title": "Tasks",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/embed/tasks/retrieve",
    "default_environment_id": "Default",
    "description": "This method retrieves embeddings for a specific video embedding task. Ensure the task status is ready before invoking this method. Refer to the Retrieve a video embedding task page for instructions on checking the task status.
🚧 Important
The response includes breaking changes that might require updates to your application code. Key differences:
The video_embeddings field has been renamed to video_embedding (plural to singular)

The response now includes a nested array named segments.



The metadata field is now nested under video_embedding.",
    "domain": "test.com",
    "endpoint_path": "/embed/tasks/:task_id",
    "endpoint_path_alternates": [
      "/embed/tasks/{task_id}",
      "https://api.twelvelabs.io/embed/tasks/:task_id",
      "https://api.twelvelabs.io/embed/tasks/%7Btask_id%7D",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "TasksRetrieveRequestBadRequestErrorBody",
    ],
    "method": "GET",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_embed/tasks.retrieve",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/embed/tasks/retrieve",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Retrieve video embeddings",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_embed/tasks.retrieve",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/embed",
        "title": "Embed",
      },
      {
        "pathname": "/api-reference/api-reference/embed/tasks",
        "title": "Tasks",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/embed/tasks/retrieve",
    "default_environment_id": "Default",
    "description": "Video embeddings have successfully been retrieved.",
    "domain": "test.com",
    "endpoint_path": "/embed/tasks/:task_id",
    "endpoint_path_alternates": [
      "/embed/tasks/{task_id}",
      "https://api.twelvelabs.io/embed/tasks/:task_id",
      "https://api.twelvelabs.io/embed/tasks/%7Btask_id%7D",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "hash": "#response",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "TasksRetrieveRequestBadRequestErrorBody",
    ],
    "method": "GET",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_embed/tasks.retrieve-response",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/embed/tasks/retrieve",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Retrieve video embeddings",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_embed/tasks/status.retrieve",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/embed",
        "title": "Embed",
      },
      {
        "pathname": "/api-reference/api-reference/embed/tasks",
        "title": "Tasks",
      },
      {
        "pathname": "/api-reference/api-reference/embed/tasks/status",
        "title": "Status",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/embed/tasks/status/retrieve",
    "default_environment_id": "Default",
    "description": "This method retrieves the status of a video embedding task. Check the task status of a video embedding task to determine when you can retrieve the embedding.
A task can have one of the following statuses:
processing: The platform is creating the embeddings.

ready: Processing is complete. Retrieve the embeddings by invoking the GET method of the /embed/tasks/{task_id} endpoint.

failed: The task could not be completed, and the embeddings haven't been created.",
    "domain": "test.com",
    "endpoint_path": "/embed/tasks/:task_id/status",
    "endpoint_path_alternates": [
      "/embed/tasks/{task_id}/status",
      "https://api.twelvelabs.io/embed/tasks/:task_id/status",
      "https://api.twelvelabs.io/embed/tasks/%7Btask_id%7D/status",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "StatusRetrieveRequestBadRequestErrorBody",
    ],
    "method": "GET",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_embed/tasks/status.retrieve",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/embed/tasks/status/retrieve",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Retrieve the status of a video embedding task",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_embed/tasks/status.retrieve",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/embed",
        "title": "Embed",
      },
      {
        "pathname": "/api-reference/api-reference/embed/tasks",
        "title": "Tasks",
      },
      {
        "pathname": "/api-reference/api-reference/embed/tasks/status",
        "title": "Status",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/embed/tasks/status/retrieve",
    "default_environment_id": "Default",
    "description": "The status of your video embedding task has been retrieved.",
    "domain": "test.com",
    "endpoint_path": "/embed/tasks/:task_id/status",
    "endpoint_path_alternates": [
      "/embed/tasks/{task_id}/status",
      "https://api.twelvelabs.io/embed/tasks/:task_id/status",
      "https://api.twelvelabs.io/embed/tasks/%7Btask_id%7D/status",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "hash": "#response",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "StatusRetrieveRequestBadRequestErrorBody",
    ],
    "method": "GET",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_embed/tasks/status.retrieve-response",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/embed/tasks/status/retrieve",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Retrieve the status of a video embedding task",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_search.query",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/search",
        "title": "Search",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/search/query",
    "default_environment_id": "Default",
    "description": "Use this endpoint to search for relevant matches in an index using text or various media queries.
Text queries:
Use the query_text parameter to specify your query.


Media queries:
Set the query_media_type parameter to the corresponding media type (example: image).

Specify either one of the following parameters:
query_media_url: Publicly accessible URL of your media file.

query_media_file: Local media file.
If both query_media_url and query_media_file are specified in the same request, query_media_url takes precedence.




Before using a media file as a query, ensure that the file meets the prerequisites.
NOTE: This endpoint is rate-limited. For details, see the Rate limits page.",
    "domain": "test.com",
    "endpoint_path": "/search",
    "endpoint_path_alternates": [
      "/search",
      "https://api.twelvelabs.io/search",
      "https://api.twelvelabs.io/search",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "SearchQueryRequestBadRequestErrorBody",
    ],
    "method": "POST",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_search.query",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/search/query",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Make any-to-video search requests",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_search.query",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/search",
        "title": "Search",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/search/query",
    "default_environment_id": "Default",
    "description": "Successfully performed a search request.",
    "domain": "test.com",
    "endpoint_path": "/search",
    "endpoint_path_alternates": [
      "/search",
      "https://api.twelvelabs.io/search",
      "https://api.twelvelabs.io/search",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "hash": "#response",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "SearchQueryRequestBadRequestErrorBody",
    ],
    "method": "POST",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_search.query-response",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/search/query",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Make any-to-video search requests",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_search.retrieve",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/search",
        "title": "Search",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/search/retrieve",
    "default_environment_id": "Default",
    "description": "Use this endpoint to retrieve a specific page of search results.
NOTE: When you use pagination, you will not be charged for retrieving subsequent pages of results.",
    "domain": "test.com",
    "endpoint_path": "/search/:page-token",
    "endpoint_path_alternates": [
      "/search/{page-token}",
      "https://api.twelvelabs.io/search/:page-token",
      "https://api.twelvelabs.io/search/%7Bpage-token%7D",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "SearchRetrieveRequestBadRequestErrorBody",
    ],
    "method": "GET",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_search.retrieve",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/search/retrieve",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Retrieve a specific page of search results",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_search.retrieve",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/search",
        "title": "Search",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/search/retrieve",
    "default_environment_id": "Default",
    "description": "Successfully retrieved the specified page of search results.",
    "domain": "test.com",
    "endpoint_path": "/search/:page-token",
    "endpoint_path_alternates": [
      "/search/{page-token}",
      "https://api.twelvelabs.io/search/:page-token",
      "https://api.twelvelabs.io/search/%7Bpage-token%7D",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "hash": "#response",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "SearchRetrieveRequestBadRequestErrorBody",
    ],
    "method": "GET",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_search.retrieve-response",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/search/retrieve",
    "response_type": "json",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Retrieve a specific page of search results",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_gist.create",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/gist",
        "title": "Gist",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/gist/create",
    "default_environment_id": "Default",
    "domain": "test.com",
    "endpoint_path": "/gist",
    "endpoint_path_alternates": [
      "/gist",
      "https://api.twelvelabs.io/gist",
      "https://api.twelvelabs.io/gist",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
    ],
    "method": "POST",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_gist.create",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/gist/create",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Create",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
  {
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_embedNew.create",
    "api_type": "http",
    "authed": false,
    "breadcrumb": [
      {
        "pathname": "/api-reference/api-reference",
        "title": "API Reference",
      },
      {
        "pathname": "/api-reference/api-reference/embed-new",
        "title": "Embed New",
      },
    ],
    "canonicalPathname": "/api-reference/api-reference/embed-new/create",
    "default_environment_id": "Default",
    "domain": "test.com",
    "endpoint_path": "/embed-new",
    "endpoint_path_alternates": [
      "/embed-new",
      "https://api.twelvelabs.io/embed-new",
      "https://api.twelvelabs.io/embed-new",
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3",
      },
    ],
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
    ],
    "method": "POST",
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_embedNew.create",
    "org_id": "test",
    "pathname": "/api-reference/api-reference/embed-new/create",
    "tab": {
      "pathname": "/api-reference",
      "title": "API Reference",
    },
    "title": "Create",
    "type": "api-reference",
    "visible_by": [
      "role/everyone",
    ],
  },
]