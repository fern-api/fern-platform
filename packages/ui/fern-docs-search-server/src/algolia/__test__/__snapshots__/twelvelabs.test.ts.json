[
  {
    "objectID": "test:test.com:root.uv.guides.guides.get-started.introduction-chunk:0",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/guides/get-started/introduction",
    "pathname": "/guides/get-started/introduction",
    "title": "Introduction",
    "breadcrumb": [
      {
        "title": "Get Started",
        "pathname": "/guides/get-started"
      }
    ],
    "tab": {
      "title": "Docs",
      "pathname": "/guides"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "type": "markdown",
    "content": "The Twelve Labs Video Understanding Platform leverages artificial intelligence to extract information from videos. It identifies and interprets movements, actions, objects, individuals, sounds, on-screen text, and spoken words. Built on a state-of-the-art multimodal foundation model optimized for videos, the platform enables you to add rich, contextual video understanding to your applications through developer-friendly APIs."
  },
  {
    "objectID": "test:test.com:root.uv.guides.guides.get-started.introduction-key-capabilities-of-twelve-labs-for-multimodal-video-understanding-chunk:0",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/guides/get-started/introduction",
    "pathname": "/guides/get-started/introduction",
    "title": "Key Capabilities of Twelve Labs for Multimodal Video Understanding",
    "breadcrumb": [
      {
        "title": "Get Started",
        "pathname": "/guides/get-started"
      }
    ],
    "tab": {
      "title": "Docs",
      "pathname": "/guides"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "type": "markdown",
    "hash": "#key-capabilities-of-twelve-labs-for-multimodal-video-understanding",
    "content": "Twelve Labs equips developers with the following key capabilities:\nDeep Semantic Search: Find the exact moment you need within your videos using natural language queries instead of tags or metadata.\n\nZero-shot Classification: Use natural language to create your custom taxonomy, facilitating accurate and efficient video classification tailored to your unique use case.\n\nDynamic Video-to-Text Generation: Capture the essence of your videos into concise summaries or custom reports. The platform offers built-in formats to generate titles, topics, summaries, hashtags, chapters, and highlights. Additionally, you can provide a prompt detailing the content and desired output format, such as a police report, to tailor the results to your needs.\n\nIntuitive Integration: Embed a state-of-the-art multimodal foundation model for video understanding into your application in just a few API calls.\n\nRapid Result Retrieval: Receive your results within seconds.\n\nScalability: Our cloud-native distributed infrastructure seamlessly processes thousands of concurrent requests.",
    "hierarchy": {
      "h0": {
        "title": "Introduction"
      },
      "h2": {
        "id": "key-capabilities-of-twelve-labs-for-multimodal-video-understanding",
        "title": "Key Capabilities of Twelve Labs for Multimodal Video Understanding"
      }
    },
    "level": "h2"
  },
  {
    "objectID": "test:test.com:root.uv.guides.guides.get-started.introduction-twelve-labs-advantages-chunk:0",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/guides/get-started/introduction",
    "pathname": "/guides/get-started/introduction",
    "title": "Twelve Labs’ Advantages",
    "breadcrumb": [
      {
        "title": "Get Started",
        "pathname": "/guides/get-started"
      }
    ],
    "tab": {
      "title": "Docs",
      "pathname": "/guides"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "type": "markdown",
    "hash": "#twelve-labs-advantages",
    "content": "The table below provides a basic comparison between Twelve Labs Video Understanding Platform and other video AI solutions:\nSimplified API Integration: Perform a rich set of video understanding tasks with just a few API calls. This allows you to focus on building your application rather than aggregating data from separate image and speech APIs or managing multiple data sources.\n\nNatural Language Use: Tap into the model's capabilities using everyday language to write queries or prompts. This method is more effective, intuitive, flexible, and accurate than using solely rules, tags, or keywords.\n\nImage-to-Video Search: Perform searches using images as queries and find videos semantically similar to the provided images. This addresses the challenges you face when the existing reverse image search tools yield inconsistent results or when describing the desired results using text is challenging.\n\nMultimodal Approach: The platform adopts a video-first, multimodal approach, surpassing traditional unimodal models that depend exclusively on text or images, providing a comprehensive understanding of your videos.\n\nOne-time Video Indexing for Multiple Tasks: Index your videos once and create contextual video embeddings that encapsulate semantics for scaling and repurposing, allowing you to search and classify your videos swiftly.\n\nFlexible Deployment: The platform can adapt to varied business needs, with deployment options spanning on-premise, hybrid, or cloud-based environments.\n\nFine-tuning Capabilities: Though our state-of-the-art foundation model for video understanding already yields highly accurate results, we can provide fine-tuning capabilities to help you get more out of the models and achieve better results with only a few examples.\n\n\nFor details on fine-tuning the models or different deployment options, please contact us at [email protected].",
    "hierarchy": {
      "h0": {
        "title": "Introduction"
      },
      "h2": {
        "id": "twelve-labs-advantages",
        "title": "Twelve Labs’ Advantages"
      }
    },
    "level": "h2"
  },
  {
    "objectID": "test:test.com:root.uv.guides.guides.get-started.introduction-discover-twelve-labs-chunk:0",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/guides/get-started/introduction",
    "pathname": "/guides/get-started/introduction",
    "title": "Discover Twelve Labs",
    "breadcrumb": [
      {
        "title": "Get Started",
        "pathname": "/guides/get-started"
      }
    ],
    "tab": {
      "title": "Docs",
      "pathname": "/guides"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "type": "markdown",
    "hash": "#discover-twelve-labs",
    "content": "Experience the key capabilities of the Twelve Labs Video Understanding platform by signing up for a free account.",
    "hierarchy": {
      "h0": {
        "title": "Introduction"
      },
      "h2": {
        "id": "discover-twelve-labs",
        "title": "Discover Twelve Labs"
      }
    },
    "level": "h2"
  },
  {
    "objectID": "test:test.com:root.uv.guides.guides.get-started.platform-overview-chunk:0",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/guides/get-started/platform-overview",
    "pathname": "/guides/get-started/platform-overview",
    "title": "Platform Overview",
    "breadcrumb": [
      {
        "title": "Get Started",
        "pathname": "/guides/get-started"
      }
    ],
    "tab": {
      "title": "Docs",
      "pathname": "/guides"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "type": "markdown",
    "content": "The Twelve Labs Video Understanding Platform, currently in beta, offers an API suite for integrating a state-of-the-art foundation model that understands contextual information from your videos, making it accessible to your applications. The API is organized around REST and is compatible with most programming languages. You can also use Postman or other REST clients to send requests and view responses."
  },
  {
    "objectID": "test:test.com:root.uv.guides.guides.get-started.platform-overview-architecture-overview-chunk:0",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/guides/get-started/platform-overview",
    "pathname": "/guides/get-started/platform-overview",
    "title": "Architecture Overview",
    "breadcrumb": [
      {
        "title": "Get Started",
        "pathname": "/guides/get-started"
      }
    ],
    "tab": {
      "title": "Docs",
      "pathname": "/guides"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "type": "markdown",
    "hash": "#architecture-overview",
    "content": "The following diagram illustrates the architecture of the Twelve Labs Video Understanding Platform and how different parts interact:",
    "hierarchy": {
      "h0": {
        "title": "Platform Overview"
      },
      "h2": {
        "id": "architecture-overview",
        "title": "Architecture Overview"
      }
    },
    "level": "h2"
  },
  {
    "objectID": "test:test.com:root.uv.guides.guides.get-started.platform-overview-indexes-chunk:0",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/guides/get-started/platform-overview",
    "pathname": "/guides/get-started/platform-overview",
    "title": "Indexes",
    "breadcrumb": [
      {
        "title": "Get Started",
        "pathname": "/guides/get-started"
      }
    ],
    "tab": {
      "title": "Docs",
      "pathname": "/guides"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "type": "markdown",
    "hash": "#indexes",
    "content": "An index is a basic unit for organizing and storing video data, consisting of video embeddings and metadata. Indexes facilitate information retrieval and processing. You can use indexes to group related videos, making it easier to manage and search through your video data.",
    "hierarchy": {
      "h0": {
        "title": "Platform Overview"
      },
      "h2": {
        "id": "architecture-overview",
        "title": "Architecture Overview"
      },
      "h3": {
        "id": "indexes",
        "title": "Indexes"
      }
    },
    "level": "h3"
  },
  {
    "objectID": "test:test.com:root.uv.guides.guides.get-started.platform-overview-video-understanding-engines-chunk:0",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/guides/get-started/platform-overview",
    "pathname": "/guides/get-started/platform-overview",
    "title": "Video Understanding Engines",
    "breadcrumb": [
      {
        "title": "Get Started",
        "pathname": "/guides/get-started"
      }
    ],
    "tab": {
      "title": "Docs",
      "pathname": "/guides"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "type": "markdown",
    "hash": "#video-understanding-engines",
    "content": "A video understanding engine consists of a family of deep neural networks built on top of our multimodal foundation model for video understanding. These engines offer search, classification, and summarization capabilities. For each index, you must configure the engines you want to enable. The available engines and their capabilities are detailed on the Video Understanding Engines page.",
    "hierarchy": {
      "h0": {
        "title": "Platform Overview"
      },
      "h2": {
        "id": "architecture-overview",
        "title": "Architecture Overview"
      },
      "h3": {
        "id": "video-understanding-engines",
        "title": "Video Understanding Engines"
      }
    },
    "level": "h3"
  },
  {
    "objectID": "test:test.com:root.uv.guides.guides.get-started.platform-overview-engine-options-chunk:0",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/guides/get-started/platform-overview",
    "pathname": "/guides/get-started/platform-overview",
    "title": "Engine Options",
    "breadcrumb": [
      {
        "title": "Get Started",
        "pathname": "/guides/get-started"
      }
    ],
    "tab": {
      "title": "Docs",
      "pathname": "/guides"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "type": "markdown",
    "hash": "#engine-options",
    "content": "The engine options define the types of information that a specific engine will process. Currently, the platform provides the following engine options:\nVisual: Processes visual elements within the video.\n\nConversation: Analyzes spoken words and dialogues.\n\nText in Video: Detects and processes text appearing in the video.\n\nLogo: Identifies logos within the video content.\n\n\nFor more details, see the Engine Options page.",
    "hierarchy": {
      "h0": {
        "title": "Platform Overview"
      },
      "h2": {
        "id": "architecture-overview",
        "title": "Architecture Overview"
      },
      "h3": {
        "id": "engine-options",
        "title": "Engine Options"
      }
    },
    "level": "h3"
  },
  {
    "objectID": "test:test.com:root.uv.guides.guides.get-started.platform-overview-queryprompt-processing-engine-chunk:0",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/guides/get-started/platform-overview",
    "pathname": "/guides/get-started/platform-overview",
    "title": "Query/Prompt Processing Engine",
    "breadcrumb": [
      {
        "title": "Get Started",
        "pathname": "/guides/get-started"
      }
    ],
    "tab": {
      "title": "Docs",
      "pathname": "/guides"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "type": "markdown",
    "hash": "#queryprompt-processing-engine",
    "content": "This component processes user inputs such as search queries, classification queries, and prompts for generating text from video. It returns the corresponding results to your application, enabling you to leverage the platform's capabilities effectively.",
    "hierarchy": {
      "h0": {
        "title": "Platform Overview"
      },
      "h2": {
        "id": "architecture-overview",
        "title": "Architecture Overview"
      },
      "h3": {
        "id": "queryprompt-processing-engine",
        "title": "Query/Prompt Processing Engine"
      }
    },
    "level": "h3"
  },
  {
    "objectID": "test:test.com:root.uv.guides.guides.get-started.quickstart-chunk:0",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/guides/get-started/quickstart",
    "pathname": "/guides/get-started/quickstart",
    "title": "Quickstart",
    "breadcrumb": [
      {
        "title": "Get Started",
        "pathname": "/guides/get-started"
      }
    ],
    "tab": {
      "title": "Docs",
      "pathname": "/guides"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "type": "markdown",
    "content": "This guide demonstrates building a production-ready video understanding service using a three-step process:\nCreate an Index: Organize and store video data, consisting of video embeddings and metadata.\n\nUpload Videos: Add video content to your index for processing.\n\nPerform Downstream Tasks: Utilize the platform's capabilities to search, classify, and generate text from videos.\n\n\nEach step is composed of a single API call, making the process straightforward and efficient.\nNote: You can interact with the platform using one of the available SDKs or an HTTP client like requests or axios. This guide demonstrates how to use the SDKs, the recommended approach for most scenarios."
  },
  {
    "objectID": "test:test.com:root.uv.guides.guides.get-started.quickstart-prerequisites-chunk:0",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/guides/get-started/quickstart",
    "pathname": "/guides/get-started/quickstart",
    "title": "Prerequisites",
    "breadcrumb": [
      {
        "title": "Get Started",
        "pathname": "/guides/get-started"
      }
    ],
    "tab": {
      "title": "Docs",
      "pathname": "/guides"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "type": "markdown",
    "hash": "#prerequisites",
    "content": "Familiarity with the concepts described on the Platform overview page.\n\nA free account on Twelve Labs. Sign up or sign in if you already have one.\n\nAn API key. Retrieve it by navigating to the API Key page, logging in, and selecting the Copy icon next to your API key.\n\nVideos to upload must meet the following requirements:\nVideo resolution: Between 360p and 4K.\n\nVideo and audio formats: Must be encoded in formats listed on the FFmpeg Formats Documentation page.\n\nDuration: For Marengo, between 4 seconds and 2 hours. For Pegasus, between 4 seconds and 30 minutes.\n\nFile size: Must not exceed 2 GB.\n\nAudio track: Required if the conversation engine option is selected.\n\n\n\nInstall the Twelve Labs SDK for your programming language:\nPython: pip install twelvelabs\n\nNode.js: yarn add twelvelabs-js",
    "hierarchy": {
      "h0": {
        "title": "Quickstart"
      },
      "h2": {
        "id": "prerequisites",
        "title": "Prerequisites"
      }
    },
    "level": "h2"
  },
  {
    "objectID": "test:test.com:root.uv.guides.guides.get-started.quickstart-procedure-chunk:0",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/guides/get-started/quickstart",
    "pathname": "/guides/get-started/quickstart",
    "title": "Procedure",
    "breadcrumb": [
      {
        "title": "Get Started",
        "pathname": "/guides/get-started"
      }
    ],
    "tab": {
      "title": "Docs",
      "pathname": "/guides"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "type": "markdown",
    "hash": "#procedure",
    "content": "Follow the steps in one of the guides below, depending on what task you want to complete:\nSearch Videos: Use natural language queries to find specific moments in your videos.\n\nGenerate Text from Video: Create summaries, titles, and more from video content.\n\nClassify Videos: Organize videos into categories based on custom taxonomies.\n\nCreate Video Embeddings: Generate embeddings for advanced video analysis.\n\n\nFor detailed instructions, refer to the specific guides on each task.",
    "hierarchy": {
      "h0": {
        "title": "Quickstart"
      },
      "h2": {
        "id": "procedure",
        "title": "Procedure"
      }
    },
    "level": "h2"
  },
  {
    "objectID": "test:test.com:root.uv.guides.guides.guides.authentication-chunk:0",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/guides/guides/authentication",
    "pathname": "/guides/guides/authentication",
    "title": "Authentication",
    "breadcrumb": [
      {
        "title": "Guides",
        "pathname": "/guides/guides"
      }
    ],
    "tab": {
      "title": "Docs",
      "pathname": "/guides"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "type": "markdown",
    "content": "The Twelve Labs API uses API keys for authentication. Treat your API key like a password and do not distribute or hardcode it. If you suspect your account is compromised, generate a new key."
  },
  {
    "objectID": "test:test.com:root.uv.guides.guides.guides.authentication-managing-api-keys-chunk:0",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/guides/guides/authentication",
    "pathname": "/guides/guides/authentication",
    "title": "Managing API Keys",
    "breadcrumb": [
      {
        "title": "Guides",
        "pathname": "/guides/guides"
      }
    ],
    "tab": {
      "title": "Docs",
      "pathname": "/guides"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "type": "markdown",
    "hash": "#managing-api-keys",
    "content": "Retrieve API Key: Go to the API key page and select the copy icon next to the key to copy it to your clipboard.\n\nGenerate a New API Key: Go to the API key page and select the Regenerate Key button under the API Key section.\n\nRevoke API Key: Go to the API key page and select the Revoke Key button under the API Key section.\n\n\nFor security reasons, API keys automatically expire every 90 days. You must generate a new key to continue using the API once it expires.\nNote\nIf your policy requires more frequent key rotation, you can generate a new key at any time.\n\nTo temporarily suspend API usage without deleting your account, you can revoke your API key.",
    "hierarchy": {
      "h0": {
        "title": "Authentication"
      },
      "h2": {
        "id": "managing-api-keys",
        "title": "Managing API Keys"
      }
    },
    "level": "h2"
  },
  {
    "objectID": "test:test.com:root.uv.guides.guides.guides.authentication-using-the-sdk-chunk:0",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/guides/guides/authentication",
    "pathname": "/guides/guides/authentication",
    "title": "Using the SDK",
    "breadcrumb": [
      {
        "title": "Guides",
        "pathname": "/guides/guides"
      }
    ],
    "tab": {
      "title": "Docs",
      "pathname": "/guides"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "type": "markdown",
    "hash": "#using-the-sdk",
    "content": "When using the SDK client, provide the API key when instantiating the client.",
    "hierarchy": {
      "h0": {
        "title": "Authentication"
      },
      "h2": {
        "id": "using-the-sdk",
        "title": "Using the SDK"
      }
    },
    "level": "h2"
  },
  {
    "objectID": "test:test.com:root.uv.guides.guides.guides.authentication-prerequisites-chunk:0",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/guides/guides/authentication",
    "pathname": "/guides/guides/authentication",
    "title": "Prerequisites",
    "breadcrumb": [
      {
        "title": "Guides",
        "pathname": "/guides/guides"
      }
    ],
    "tab": {
      "title": "Docs",
      "pathname": "/guides"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "type": "markdown",
    "hash": "#prerequisites",
    "content": "You must have an API key.",
    "hierarchy": {
      "h0": {
        "title": "Authentication"
      },
      "h2": {
        "id": "using-the-sdk",
        "title": "Using the SDK"
      },
      "h3": {
        "id": "prerequisites",
        "title": "Prerequisites"
      }
    },
    "level": "h3"
  },
  {
    "objectID": "test:test.com:root.uv.guides.guides.guides.authentication-procedure-chunk:0",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/guides/guides/authentication",
    "pathname": "/guides/guides/authentication",
    "title": "Procedure",
    "breadcrumb": [
      {
        "title": "Guides",
        "pathname": "/guides/guides"
      }
    ],
    "tab": {
      "title": "Docs",
      "pathname": "/guides"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "type": "markdown",
    "hash": "#procedure",
    "content": "Install the twelvelabs package:\nPython: pip install twelvelabs\n\nNode.js: yarn add twelvelabs-js\n\n\n\nImport the SDK into your application:\nPython: from twelvelabs import TwelveLabs\n\nNode.js: import { TwelveLabs } from 'twelvelabs-js';\n\n\n\nInstantiate the SDK client:\nPython: client = TwelveLabs(api_key=\"<YOUR_API_KEY>\")\n\nNode.js: const client = new TwelveLabs({ apiKey: '<YOUR_API_KEY>' });\n\n\n\nUse the SDK to interact with the platform:\nExample: Create an index\n\n\n\n\nIf the API key is valid, the index will be created successfully. If it is expired or invalid, an error message will be returned.",
    "code_snippets": [
      {
        "lang": "python",
        "code": "try:\n    index = client.index.create(\n        name=\"<YOUR_INDEX_NAME>\",\n        engines=[\n            {\n                \"name\": \"marengo2.6\",\n                \"options\": [\"visual\", \"conversation\"],\n            }\n        ]\n    )\n    print(f\"Created index: id={index.id}\")\nexcept AuthenticationError as e:\n    print(e)"
      },
      {
        "lang": "javascript",
        "code": "try {\n    let index = await client.index.create({\n        name: '<YOUR_INDEX_NAME>',\n        engines: [\n            {\n                name: 'marengo2.6',\n                options: ['visual', 'conversation'],\n            },\n        ],\n    });\n    console.log(`Created index: id=${index.id} name=${index.name} engines=${JSON.stringify(index.engines)}`);\n} catch (e) {\n    console.log(e);\n}"
      }
    ],
    "hierarchy": {
      "h0": {
        "title": "Authentication"
      },
      "h2": {
        "id": "using-the-sdk",
        "title": "Using the SDK"
      },
      "h3": {
        "id": "procedure",
        "title": "Procedure"
      }
    },
    "level": "h3"
  },
  {
    "objectID": "test:test.com:root.uv.guides.guides.guides.authentication-using-an-http-client-chunk:0",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/guides/guides/authentication",
    "pathname": "/guides/guides/authentication",
    "title": "Using an HTTP Client",
    "breadcrumb": [
      {
        "title": "Guides",
        "pathname": "/guides/guides"
      }
    ],
    "tab": {
      "title": "Docs",
      "pathname": "/guides"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "type": "markdown",
    "hash": "#using-an-http-client",
    "content": "When using an HTTP client like requests or axios, include the API key in the headers of each HTTP request.",
    "hierarchy": {
      "h0": {
        "title": "Authentication"
      },
      "h2": {
        "id": "using-an-http-client",
        "title": "Using an HTTP Client"
      }
    },
    "level": "h2"
  },
  {
    "objectID": "test:test.com:root.uv.guides.guides.guides.authentication-prerequisites-1-chunk:0",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/guides/guides/authentication",
    "pathname": "/guides/guides/authentication",
    "title": "Prerequisites",
    "breadcrumb": [
      {
        "title": "Guides",
        "pathname": "/guides/guides"
      }
    ],
    "tab": {
      "title": "Docs",
      "pathname": "/guides"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "type": "markdown",
    "hash": "#prerequisites-1",
    "content": "You must have an API key.\n\nThe URL of the API service should be stored in the API_URL variable.",
    "hierarchy": {
      "h0": {
        "title": "Authentication"
      },
      "h2": {
        "id": "using-an-http-client",
        "title": "Using an HTTP Client"
      },
      "h3": {
        "id": "prerequisites-1",
        "title": "Prerequisites"
      }
    },
    "level": "h3"
  },
  {
    "objectID": "test:test.com:root.uv.guides.guides.guides.authentication-procedure-1-chunk:0",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/guides/guides/authentication",
    "pathname": "/guides/guides/authentication",
    "title": "Procedure",
    "breadcrumb": [
      {
        "title": "Guides",
        "pathname": "/guides/guides"
      }
    ],
    "tab": {
      "title": "Docs",
      "pathname": "/guides"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "type": "markdown",
    "hash": "#procedure-1",
    "content": "Install the necessary packages:\nPython: python -m pip install requests\n\nNode.js: npm install axios form-data\n\n\n\nConfigure the HTTP request headers:\nPython: headers = { \"x-api-key\": \"<YOUR_API_KEY>\" }\n\nNode.js: const headers = { 'x-api-key': '<YOUR_API_KEY>' }\n\n\n\nDeclare the /indexes endpoint:\nPython: INDEXES_URL = f\"{API_URL}/indexes\"\n\nNode.js: const INDEXES_URL = ${API_URL}/indexes;\n\n\n\nUse the POST method to create a new index:\n\n\nIf the API key is valid, the index will be created successfully. If it is expired or invalid, an error message will be returned.",
    "code_snippets": [
      {
        "lang": "python",
        "code": "INDEX_NAME = \"<YOUR_INDEX_NAME>\"\ndata = {\n    \"engines\": [\n        {\n            \"engine_name\": \"marengo2.6\",\n            \"engine_options\": [\"visual\", \"conversation\", \"text_in_video\", \"logo\"]\n        }\n    ],\n    \"index_name\": INDEX_NAME,\n}\nresponse = requests.post(INDEXES_URL, headers=headers, json=data)\nprint(f'Status code: {response.status_code}')\nprint(response.json())"
      },
      {
        "lang": "javascript",
        "code": "const INDEX_NAME = '<YOUR_INDEX_NAME>';\nconst resp = await axios.post(\n    INDEXES_URL,\n    {\n        'engine_id': 'marengo2.5',\n        'index_options': ['visual', 'conversation', 'text_in_video'],\n        'index_name': INDEX_NAME\n    },\n    { headers }\n);\nconst { data: response } = resp;\nconsole.log(`Status code: ${resp.status}`);\nconsole.log(response);"
      }
    ],
    "hierarchy": {
      "h0": {
        "title": "Authentication"
      },
      "h2": {
        "id": "using-an-http-client",
        "title": "Using an HTTP Client"
      },
      "h3": {
        "id": "procedure-1",
        "title": "Procedure"
      }
    },
    "level": "h3"
  },
  {
    "objectID": "test:test.com:root.uv.guides.guides.guides.create-indexes-chunk:0",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/guides/guides/create-indexes",
    "pathname": "/guides/guides/create-indexes",
    "title": "Create Indexes",
    "breadcrumb": [
      {
        "title": "Guides",
        "pathname": "/guides/guides"
      }
    ],
    "tab": {
      "title": "Docs",
      "pathname": "/guides"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "type": "markdown",
    "content": "An index is a fundamental unit for organizing and storing video data, consisting of video embeddings and metadata. Indexes facilitate information retrieval and processing.\nYou can use indexes to group related videos. For example, if you want to upload multiple videos from a car race, you can create a single index and upload all the videos to it. After uploading, you can search for specific moments across all videos in that index in a single request."
  },
  {
    "objectID": "test:test.com:root.uv.guides.guides.guides.create-indexes-prerequisites-chunk:0",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/guides/guides/create-indexes",
    "pathname": "/guides/guides/create-indexes",
    "title": "Prerequisites",
    "breadcrumb": [
      {
        "title": "Guides",
        "pathname": "/guides/guides"
      }
    ],
    "tab": {
      "title": "Docs",
      "pathname": "/guides"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "type": "markdown",
    "hash": "#prerequisites",
    "content": "You’re familiar with the concepts described on the Platform overview page.\n\nYou have an API key. To retrieve your API key, navigate to the API Key page and log in with your credentials. Then, select the Copy icon to the right of your API key to copy it to your clipboard.",
    "hierarchy": {
      "h0": {
        "title": "Create Indexes"
      },
      "h2": {
        "id": "prerequisites",
        "title": "Prerequisites"
      }
    },
    "level": "h2"
  },
  {
    "objectID": "test:test.com:root.uv.guides.guides.guides.create-indexes-procedure-chunk:0",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/guides/guides/create-indexes",
    "pathname": "/guides/guides/create-indexes",
    "title": "Procedure",
    "breadcrumb": [
      {
        "title": "Guides",
        "pathname": "/guides/guides"
      }
    ],
    "tab": {
      "title": "Docs",
      "pathname": "/guides"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "type": "markdown",
    "hash": "#procedure",
    "content": "Import the SDK into your application:\nPython: from twelvelabs import TwelveLabs\n\nNode.js: import { TwelveLabs } from 'twelvelabs-js';\n\n\n\nInstantiate the SDK client with your API key:\nPython: client = TwelveLabs(api_key=\"<YOUR_API_KEY>\")\n\nNode.js: const client = new TwelveLabs({ apiKey: '<YOUR_API_KEY>' });\n\n\n\nSpecify the desired engine configuration:\nThe example below enables the Marengo video understanding engine and the following engine options - visual, conversation, text_in_video, and logo:\nPython:\n\nNode.js:\n\n\n\n\n\nCreate a new index:\nInvoke the create method of the client.index object with the following parameters:\nname: A string representing the name of your new index. Choose a succinct and descriptive name for your index.\n\nengines: An object specifying your engine configuration. You constructed this object in the previous step.\n\n(Optional) addons: An array of strings specifying the add-ons you want to enable for your index. This example enables the thumbnail generation feature.\n\nPython:\n\nNode.js:\n\n\n\n\n\n\nThe response should look similar to the following one:\nNote that the response contains, among other information, a field named id, representing the unique identifier of your new index.",
    "code_snippets": [
      {
        "lang": "python",
        "code": "engines = [\n    {\n        \"name\": \"marengo2.6\",\n        \"options\": [\"visual\", \"conversation\", \"text_in_video\", \"logo\"]\n    }\n]"
      },
      {
        "lang": "javascript",
        "code": "const engines = [\n    {\n        name: 'marengo2.6',\n        options: ['visual', 'conversation', 'text_in_video', 'logo'],\n    },\n];"
      },
      {
        "lang": "python",
        "code": "index = client.index.create(\n    name=\"<YOUR_INDEX_NAME>\",\n    engines=engines,\n    addons=[\"thumbnail\"]  # Optional\n)\nprint(f\"A new index has been created: id={index.id} name={index.name} engines={index.engines}\")"
      },
      {
        "lang": "javascript",
        "code": "let index = await client.index.create({\n    name: '<YOUR_INDEX_NAME>',\n    engines: engines,\n    addons: ['thumbnail'], // Optional\n});\nconsole.log(`A new index has been created: id=${index.id} name=${index.name} engines=${JSON.stringify(index.engines)}`);"
      },
      {
        "code": "A new index has been created: id=65d345106efba5e3988d6d4b name=index-01 engines=[Engine(name='marengo2.6', options=['visual', 'conversation', 'text_in_video', 'logo'], addons=None)]"
      }
    ],
    "hierarchy": {
      "h0": {
        "title": "Create Indexes"
      },
      "h2": {
        "id": "procedure",
        "title": "Procedure"
      }
    },
    "level": "h2"
  },
  {
    "objectID": "test:test.com:root.uv.guides.guides.guides.upload-videos-chunk:0",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/guides/guides/upload-videos",
    "pathname": "/guides/guides/upload-videos",
    "title": "Upload Videos",
    "breadcrumb": [
      {
        "title": "Guides",
        "pathname": "/guides/guides"
      }
    ],
    "tab": {
      "title": "Docs",
      "pathname": "/guides"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "type": "markdown",
    "content": "This guide shows how you can upload a video file to the Twelve Labs platform. The platform offers the following options for uploading single videos:\nUpload from the local file system: Use this option to upload a single video file from your local file system.\n\nUpload from a direct URL: Use this option to upload a video file from a publicly accessible URL. The platform will retrieve the file directly from the specified URL, so your application doesn't have to store the video locally and upload it.\n\n\nNotes:\nThe platform supports uploading video files that can play without additional user interaction or custom video players. Ensure your URL points to the raw video file, not a web page containing the video. Links to third-party hosting sites, cloud storage services, or videos requiring extra steps to play are not supported.\n\nThe ability to upload videos from YouTube is no longer supported."
  },
  {
    "objectID": "test:test.com:root.uv.guides.guides.guides.upload-videos-prerequisites-chunk:0",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/guides/guides/upload-videos",
    "pathname": "/guides/guides/upload-videos",
    "title": "Prerequisites",
    "breadcrumb": [
      {
        "title": "Guides",
        "pathname": "/guides/guides"
      }
    ],
    "tab": {
      "title": "Docs",
      "pathname": "/guides"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "type": "markdown",
    "hash": "#prerequisites",
    "content": "You’re familiar with the concepts described on the Platform overview page.\n\nYou have an API key. To retrieve your API key, navigate to the API Key page and log in with your credentials. Then, select the Copy icon to the right of your API key to copy it to your clipboard.\n\nYou’ve already created an index.\n\nThe video you wish to upload must meet the following requirements:\nVideo resolution: Must be greater or equal to 360p and less or equal to 4K.\n\nVideo and audio formats: The video files you wish to upload must be encoded in the video and audio formats listed on the FFmpeg Formats Documentation page.\n\nDuration: For Marengo, it must be between 4 seconds and 2 hours (7,200s). For Pegasus, it must be between 4 seconds and 30 minutes (1,800s).\n\nFile size: Must not exceed 2 GB.\n\nAudio track: If the conversation engine option is selected, the video you're uploading must contain an audio track.",
    "hierarchy": {
      "h0": {
        "title": "Upload Videos"
      },
      "h2": {
        "id": "prerequisites",
        "title": "Prerequisites"
      }
    },
    "level": "h2"
  },
  {
    "objectID": "test:test.com:root.uv.guides.guides.guides.upload-videos-procedure-chunk:0",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/guides/guides/upload-videos",
    "pathname": "/guides/guides/upload-videos",
    "title": "Procedure",
    "breadcrumb": [
      {
        "title": "Guides",
        "pathname": "/guides/guides"
      }
    ],
    "tab": {
      "title": "Docs",
      "pathname": "/guides"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "type": "markdown",
    "hash": "#procedure",
    "content": "Import the required packages into your application:\nPython:\n\nNode.js:\n\n\n\nInstantiate the SDK client with your API key:\nPython:\n\nNode.js:\n\n\n\nUpload a video:\nFrom the local file system:\nPython:\n\nNode.js:\n\n\n\nFrom a direct URL:\nPython:\n\nNode.js:\n\n\n\n\n\nMonitor the indexing process:\nPython:\n\nNode.js:\n\n\n\n\nOnce a video has been successfully uploaded and indexed, the task object contains, among other information, a field named video_id, representing the unique identifier of your video.",
    "code_snippets": [
      {
        "lang": "python",
        "code": "from twelvelabs import TwelveLabs\nfrom twelvelabs.models.task import Task"
      },
      {
        "lang": "javascript",
        "code": "import { TwelveLabs, Task } from 'twelvelabs-js';"
      },
      {
        "lang": "python",
        "code": "client = TwelveLabs(api_key=\"<YOUR_API_KEY>\")"
      },
      {
        "lang": "javascript",
        "code": "const client = new TwelveLabs({ apiKey: '<YOUR_API_KEY>' });"
      },
      {
        "lang": "python",
        "code": "task = client.task.create(\n    index_id=\"<YOUR_INDEX_ID>\",\n    file=\"<YOUR_VIDEO_FILE>\",\n    transcription_file=\"<YOUR_TRANSCRIPTION_FILE>\"  # Optional\n)\nprint(f\"Task id={task.id}\")"
      },
      {
        "lang": "javascript",
        "code": "const task = await client.task.create({\n    indexId: '<YOUR_INDEX_ID>',\n    file: '<YOUR_VIDEO_FILE>',\n    transcriptionFile: '<YOUR_TRANSCRIPTION_FILE>',  // Optional\n});\nconsole.log(`Task id=${task.id}`);"
      },
      {
        "lang": "python",
        "code": "task = client.task.create(\n    index_id=\"<YOUR_INDEX_ID>\",\n    url=\"<YOUR_VIDEO_URL>\",\n    transcription_url=\"<YOUR_TRANSCRIPTION_URL>\"  # Optional\n)\nprint(f\"Task id={task.id}\")"
      },
      {
        "lang": "javascript",
        "code": "const task = await client.task.create({\n    indexId: '<YOUR_INDEX_ID>',\n    url: '<YOUR_VIDEO_URL>',\n    transcriptionUrl: '<YOUR_TRANSCRIPTION_URL>',  // Optional\n});\nconsole.log(`Task id=${task.id}`);"
      },
      {
        "lang": "python",
        "code": "def on_task_update(task: Task):\n    print(f\"  Status={task.status}\")\ntask.wait_for_done(sleep_interval=5, callback=on_task_update)\nif task.status != \"ready\":\n    raise RuntimeError(f\"Indexing failed with status {task.status}\")\nprint(f\"The unique identifier of your video is {task.video_id}.\")"
      },
      {
        "lang": "javascript",
        "code": "await task.waitForDone(500, (task: Task) => {\n    console.log(`  Status=${task.status}`);\n});\nif (task.status !== 'ready') {\n    throw new Error(`Indexing failed with status ${task.status}`);\n}\nconsole.log(`The unique identifier of your video is ${task.videoId}`);"
      }
    ],
    "hierarchy": {
      "h0": {
        "title": "Upload Videos"
      },
      "h2": {
        "id": "procedure",
        "title": "Procedure"
      }
    },
    "level": "h2"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3-chunk:0",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference",
    "pathname": "/api-reference/api-reference",
    "title": "API Reference",
    "breadcrumb": [],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "type": "markdown",
    "content": "The Twelve Labs API provides a comprehensive suite of tools for integrating advanced video understanding capabilities into your applications. This overview covers the key components and functionalities of the API, helping you get started with building powerful video-based solutions."
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3-key-features-chunk:0",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference",
    "pathname": "/api-reference/api-reference",
    "title": "Key Features",
    "breadcrumb": [],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "type": "markdown",
    "hash": "#key-features",
    "content": "Video Indexing: Organize and store video data efficiently, enabling fast retrieval and processing.\n\nSemantic Search: Use natural language queries to find specific moments within videos.\n\nVideo Classification: Categorize videos based on custom taxonomies using zero-shot classification.\n\nText Generation: Create summaries, titles, and other text outputs from video content.\n\nMultimodal Analysis: Leverage a video-first, multimodal approach for comprehensive video understanding.",
    "hierarchy": {
      "h0": {
        "title": "API Reference"
      },
      "h2": {
        "id": "key-features",
        "title": "Key Features"
      }
    },
    "level": "h2"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3-api-structure-chunk:0",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference",
    "pathname": "/api-reference/api-reference",
    "title": "API Structure",
    "breadcrumb": [],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "type": "markdown",
    "hash": "#api-structure",
    "content": "The API is organized around REST principles, making it easy to integrate with most programming languages and tools. It supports the following operations:\nIndex Management: Create, update, and manage video indexes.\n\nVideo Uploading: Add videos to your indexes from local files or direct URLs.\n\nSearch and Query: Perform searches and queries to extract information from videos.\n\nClassification and Analysis: Apply classification models and analyze video content.",
    "hierarchy": {
      "h0": {
        "title": "API Reference"
      },
      "h2": {
        "id": "api-structure",
        "title": "API Structure"
      }
    },
    "level": "h2"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3-authentication-chunk:0",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference",
    "pathname": "/api-reference/api-reference",
    "title": "Authentication",
    "breadcrumb": [],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "type": "markdown",
    "hash": "#authentication",
    "content": "Access to the API requires an API key, which you can obtain by signing up for a Twelve Labs account. Include the API key in the headers of your requests to authenticate and authorize your access.",
    "hierarchy": {
      "h0": {
        "title": "API Reference"
      },
      "h2": {
        "id": "authentication",
        "title": "Authentication"
      }
    },
    "level": "h2"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3-getting-started-chunk:0",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference",
    "pathname": "/api-reference/api-reference",
    "title": "Getting Started",
    "breadcrumb": [],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "type": "markdown",
    "hash": "#getting-started",
    "content": "Sign Up: Create a free account on Twelve Labs to access the API.\n\nObtain API Key: Retrieve your API key from the API Key page after logging in.\n\nInstall SDK: Use the Twelve Labs SDK for your preferred programming language to simplify API interactions.\nPython: pip install twelvelabs\n\nNode.js: yarn add twelvelabs-js\n\n\n\nExplore API Endpoints: Use the API to create indexes, upload videos, and perform various video understanding tasks.",
    "hierarchy": {
      "h0": {
        "title": "API Reference"
      },
      "h2": {
        "id": "getting-started",
        "title": "Getting Started"
      }
    },
    "level": "h2"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3-support-and-resources-chunk:0",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference",
    "pathname": "/api-reference/api-reference",
    "title": "Support and Resources",
    "breadcrumb": [],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "type": "markdown",
    "hash": "#support-and-resources",
    "content": "For more detailed information on each API endpoint and its parameters, refer to the specific API documentation sections. If you encounter any issues or have questions, contact Twelve Labs support or visit the community forums for assistance.\n\n\nThis page provides a general overview of the Twelve Labs API, helping you understand its capabilities and how to start using it effectively.",
    "hierarchy": {
      "h0": {
        "title": "API Reference"
      },
      "h2": {
        "id": "support-and-resources",
        "title": "Support and Resources"
      }
    },
    "level": "h2"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_tasks.list",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/tasks/list",
    "pathname": "/api-reference/api-reference/tasks/list",
    "title": "List video indexing tasks",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Tasks",
        "pathname": "/api-reference/api-reference/tasks"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_tasks.list",
    "method": "GET",
    "endpoint_path": "/tasks",
    "endpoint_path_alternates": [
      "/tasks",
      "https://api.twelvelabs.io/tasks",
      "https://api.twelvelabs.io/tasks"
    ],
    "response_type": "json",
    "description": "This method returns a list of the video indexing tasks in your account. The API returns your video indexing tasks sorted by creation date, with the newest at the top of the list.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "TasksListRequestBadRequestErrorBody"
    ],
    "type": "api-reference"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_tasks.list-response",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/tasks/list",
    "pathname": "/api-reference/api-reference/tasks/list",
    "title": "List video indexing tasks",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Tasks",
        "pathname": "/api-reference/api-reference/tasks"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_tasks.list",
    "method": "GET",
    "endpoint_path": "/tasks",
    "endpoint_path_alternates": [
      "/tasks",
      "https://api.twelvelabs.io/tasks",
      "https://api.twelvelabs.io/tasks"
    ],
    "response_type": "json",
    "description": "The video indexing tasks have successfully been retrieved.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "TasksListRequestBadRequestErrorBody"
    ],
    "type": "api-reference",
    "hash": "#response"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_tasks.create",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/tasks/create",
    "pathname": "/api-reference/api-reference/tasks/create",
    "title": "Create a video indexing task",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Tasks",
        "pathname": "/api-reference/api-reference/tasks"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_tasks.create",
    "method": "POST",
    "endpoint_path": "/tasks",
    "endpoint_path_alternates": [
      "/tasks",
      "https://api.twelvelabs.io/tasks",
      "https://api.twelvelabs.io/tasks"
    ],
    "response_type": "json",
    "description": "This method creates a video indexing task that uploads and indexes a video.\nEnsure your video meets the requirements in the Prerequisites section of the Upload single videos page.\nUpload options:\nLocal file: Use the video_file parameter.\n\nPublicly accessible URL: Use the video_url parameter.\n\n\nNOTES:\nThe platform supports video URLs that can play without additional user interaction or custom video players. Ensure your URL points to the raw video file, not a web page containing the video. Links to third-party hosting sites, cloud storage services, or videos requiring extra steps to play are not supported.\n\nThis endpoint is rate-limited. For details, see the Rate limits page.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "TasksCreateRequestBadRequestErrorBody"
    ],
    "type": "api-reference"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_tasks.create-response",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/tasks/create",
    "pathname": "/api-reference/api-reference/tasks/create",
    "title": "Create a video indexing task",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Tasks",
        "pathname": "/api-reference/api-reference/tasks"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_tasks.create",
    "method": "POST",
    "endpoint_path": "/tasks",
    "endpoint_path_alternates": [
      "/tasks",
      "https://api.twelvelabs.io/tasks",
      "https://api.twelvelabs.io/tasks"
    ],
    "response_type": "json",
    "description": "A video indexing task has successfully been created.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "TasksCreateRequestBadRequestErrorBody"
    ],
    "type": "api-reference",
    "hash": "#response"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_tasks.retrieve",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/tasks/retrieve",
    "pathname": "/api-reference/api-reference/tasks/retrieve",
    "title": "Retrieve a video indexing task",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Tasks",
        "pathname": "/api-reference/api-reference/tasks"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_tasks.retrieve",
    "method": "GET",
    "endpoint_path": "/tasks/:task_id",
    "endpoint_path_alternates": [
      "/tasks/{task_id}",
      "https://api.twelvelabs.io/tasks/:task_id",
      "https://api.twelvelabs.io/tasks/%7Btask_id%7D"
    ],
    "response_type": "json",
    "description": "This method retrieves a video indexing task.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "TasksRetrieveRequestBadRequestErrorBody"
    ],
    "type": "api-reference"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_tasks.retrieve-response",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/tasks/retrieve",
    "pathname": "/api-reference/api-reference/tasks/retrieve",
    "title": "Retrieve a video indexing task",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Tasks",
        "pathname": "/api-reference/api-reference/tasks"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_tasks.retrieve",
    "method": "GET",
    "endpoint_path": "/tasks/:task_id",
    "endpoint_path_alternates": [
      "/tasks/{task_id}",
      "https://api.twelvelabs.io/tasks/:task_id",
      "https://api.twelvelabs.io/tasks/%7Btask_id%7D"
    ],
    "response_type": "json",
    "description": "The specified video indexing task has successfully been retrieved.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "TasksRetrieveRequestBadRequestErrorBody"
    ],
    "type": "api-reference",
    "hash": "#response"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_tasks.delete",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/tasks/delete",
    "pathname": "/api-reference/api-reference/tasks/delete",
    "title": "Delete a video indexing task",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Tasks",
        "pathname": "/api-reference/api-reference/tasks"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_tasks.delete",
    "method": "DELETE",
    "endpoint_path": "/tasks/:task_id",
    "endpoint_path_alternates": [
      "/tasks/{task_id}",
      "https://api.twelvelabs.io/tasks/:task_id",
      "https://api.twelvelabs.io/tasks/%7Btask_id%7D"
    ],
    "description": "This action cannot be undone.\nNote the following about deleting a video indexing task:\nYou can only delete video indexing tasks for which the status is ready or failed.\n\nIf the status of your video indexing task is ready, you must first delete the video vector associated with your video indexing task by calling the DELETE method of the /indexes/videos endpoint.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "TasksDeleteRequestBadRequestErrorBody"
    ],
    "type": "api-reference"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_tasks.status",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/tasks/status",
    "pathname": "/api-reference/api-reference/tasks/status",
    "title": "Retrieve tasks by status",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Tasks",
        "pathname": "/api-reference/api-reference/tasks"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_tasks.status",
    "method": "GET",
    "endpoint_path": "/tasks/status",
    "endpoint_path_alternates": [
      "/tasks/status",
      "https://api.twelvelabs.io/tasks/status",
      "https://api.twelvelabs.io/tasks/status"
    ],
    "response_type": "json",
    "description": "This method retrieves the number video indexing tasks in each status for the specified index.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "TasksStatusRequestBadRequestErrorBody"
    ],
    "type": "api-reference"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_tasks.status-response",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/tasks/status",
    "pathname": "/api-reference/api-reference/tasks/status",
    "title": "Retrieve tasks by status",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Tasks",
        "pathname": "/api-reference/api-reference/tasks"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_tasks.status",
    "method": "GET",
    "endpoint_path": "/tasks/status",
    "endpoint_path_alternates": [
      "/tasks/status",
      "https://api.twelvelabs.io/tasks/status",
      "https://api.twelvelabs.io/tasks/status"
    ],
    "response_type": "json",
    "description": "An object containing the number video indexing tasks in each status.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "TasksStatusRequestBadRequestErrorBody"
    ],
    "type": "api-reference",
    "hash": "#response"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_tasks.transfers",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/tasks/transfers",
    "pathname": "/api-reference/api-reference/tasks/transfers",
    "title": "Transfers",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Tasks",
        "pathname": "/api-reference/api-reference/tasks"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_tasks.transfers",
    "method": "POST",
    "endpoint_path": "/tasks/transfers",
    "endpoint_path_alternates": [
      "/tasks/transfers",
      "https://api.twelvelabs.io/tasks/transfers",
      "https://api.twelvelabs.io/tasks/transfers"
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi"
    ],
    "type": "api-reference"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_uploadVideos.cloud-to-cloud-import-videos",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/upload-videos/cloud-to-cloud-import-videos",
    "pathname": "/api-reference/api-reference/upload-videos/cloud-to-cloud-import-videos",
    "title": "Import videos",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Upload videos",
        "pathname": "/api-reference/api-reference/upload-videos"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_uploadVideos.cloud-to-cloud-import-videos",
    "method": "POST",
    "endpoint_path": "/tasks/transfers/import/:integration-id",
    "endpoint_path_alternates": [
      "/tasks/transfers/import/{integration-id}",
      "https://api.twelvelabs.io/tasks/transfers/import/:integration-id",
      "https://api.twelvelabs.io/tasks/transfers/import/%7Bintegration-id%7D"
    ],
    "response_type": "json",
    "description": "An import represents the process of uploading and indexing all videos from the specified integration. This method initiates an asynchronous import and returns two lists:\nVideos that will be imported.\n\nVideos that will not be imported, typically due to unmet prerequisites.\n\n\nThe actual uploading and indexing of videos occur asynchronously after you invoke this method. To monitor the status of each upload after invoking this method, use the GET method of the /tasks/transfers/import/{integration-id}/status endpoint.\nNOTES:\nBefore importing videos, you must set up an integration. For details, see the Set up an integration section.\n\nThe videos you wish to upload must meet the requirements in the Prerequisites section of the Upload single videos page.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "CloudToCloudImportVideosRequestBadRequestErrorBody"
    ],
    "type": "api-reference"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_uploadVideos.cloud-to-cloud-import-videos-response",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/upload-videos/cloud-to-cloud-import-videos",
    "pathname": "/api-reference/api-reference/upload-videos/cloud-to-cloud-import-videos",
    "title": "Import videos",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Upload videos",
        "pathname": "/api-reference/api-reference/upload-videos"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_uploadVideos.cloud-to-cloud-import-videos",
    "method": "POST",
    "endpoint_path": "/tasks/transfers/import/:integration-id",
    "endpoint_path_alternates": [
      "/tasks/transfers/import/{integration-id}",
      "https://api.twelvelabs.io/tasks/transfers/import/:integration-id",
      "https://api.twelvelabs.io/tasks/transfers/import/%7Bintegration-id%7D"
    ],
    "response_type": "json",
    "description": "An import has successfully been initiated.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "CloudToCloudImportVideosRequestBadRequestErrorBody"
    ],
    "type": "api-reference",
    "hash": "#response"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_uploadVideos.cloud-to-cloud-retrieve-status",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/upload-videos/cloud-to-cloud-retrieve-status",
    "pathname": "/api-reference/api-reference/upload-videos/cloud-to-cloud-retrieve-status",
    "title": "Retrieve import status",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Upload videos",
        "pathname": "/api-reference/api-reference/upload-videos"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_uploadVideos.cloud-to-cloud-retrieve-status",
    "method": "GET",
    "endpoint_path": "/tasks/transfers/import/:integration-id/status",
    "endpoint_path_alternates": [
      "/tasks/transfers/import/{integration-id}/status",
      "https://api.twelvelabs.io/tasks/transfers/import/:integration-id/status",
      "https://api.twelvelabs.io/tasks/transfers/import/%7Bintegration-id%7D/status"
    ],
    "response_type": "json",
    "description": "This method retrieves the current status for each video from a specified integration and index. It returns an object containing lists of videos grouped by status. See the Task object page for details on each status.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "CloudToCloudRetrieveStatusRequestBadRequestErrorBody"
    ],
    "type": "api-reference"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_uploadVideos.cloud-to-cloud-retrieve-status-response",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/upload-videos/cloud-to-cloud-retrieve-status",
    "pathname": "/api-reference/api-reference/upload-videos/cloud-to-cloud-retrieve-status",
    "title": "Retrieve import status",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Upload videos",
        "pathname": "/api-reference/api-reference/upload-videos"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_uploadVideos.cloud-to-cloud-retrieve-status",
    "method": "GET",
    "endpoint_path": "/tasks/transfers/import/:integration-id/status",
    "endpoint_path_alternates": [
      "/tasks/transfers/import/{integration-id}/status",
      "https://api.twelvelabs.io/tasks/transfers/import/:integration-id/status",
      "https://api.twelvelabs.io/tasks/transfers/import/%7Bintegration-id%7D/status"
    ],
    "response_type": "json",
    "description": "The status for each video from the specified integration and index has successfully been retrieved",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "CloudToCloudRetrieveStatusRequestBadRequestErrorBody"
    ],
    "type": "api-reference",
    "hash": "#response"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_uploadVideos.cloud-to-cloud-retrieve-import-logs",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/upload-videos/cloud-to-cloud-retrieve-import-logs",
    "pathname": "/api-reference/api-reference/upload-videos/cloud-to-cloud-retrieve-import-logs",
    "title": "Retrieve import logs",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Upload videos",
        "pathname": "/api-reference/api-reference/upload-videos"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_uploadVideos.cloud-to-cloud-retrieve-import-logs",
    "method": "GET",
    "endpoint_path": "/tasks/transfers/import/:integration-id/logs",
    "endpoint_path_alternates": [
      "/tasks/transfers/import/{integration-id}/logs",
      "https://api.twelvelabs.io/tasks/transfers/import/:integration-id/logs",
      "https://api.twelvelabs.io/tasks/transfers/import/%7Bintegration-id%7D/logs"
    ],
    "response_type": "json",
    "description": "This endpoint returns a chronological list of import operations for the specified integration. The list is sorted by creation date, with the oldest imports first. Each item in the list contains:\nThe number of videos in each status\n\nDetailed error information for failed uploads, including filenames and error messages.\n\n\nUse this endpoint to track import progress and troubleshoot potential issues across multiple operations.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "CloudToCloudRetrieveImportLogsRequestBadRequestErrorBody"
    ],
    "type": "api-reference"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_uploadVideos.cloud-to-cloud-retrieve-import-logs-response",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/upload-videos/cloud-to-cloud-retrieve-import-logs",
    "pathname": "/api-reference/api-reference/upload-videos/cloud-to-cloud-retrieve-import-logs",
    "title": "Retrieve import logs",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Upload videos",
        "pathname": "/api-reference/api-reference/upload-videos"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_uploadVideos.cloud-to-cloud-retrieve-import-logs",
    "method": "GET",
    "endpoint_path": "/tasks/transfers/import/:integration-id/logs",
    "endpoint_path_alternates": [
      "/tasks/transfers/import/{integration-id}/logs",
      "https://api.twelvelabs.io/tasks/transfers/import/:integration-id/logs",
      "https://api.twelvelabs.io/tasks/transfers/import/%7Bintegration-id%7D/logs"
    ],
    "response_type": "json",
    "description": "The import logs have successfully been retrieved.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "CloudToCloudRetrieveImportLogsRequestBadRequestErrorBody"
    ],
    "type": "api-reference",
    "hash": "#response"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_indexes.list",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/indexes/list",
    "pathname": "/api-reference/api-reference/indexes/list",
    "title": "List indexes",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Indexes",
        "pathname": "/api-reference/api-reference/indexes"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_indexes.list",
    "method": "GET",
    "endpoint_path": "/indexes",
    "endpoint_path_alternates": [
      "/indexes",
      "https://api.twelvelabs.io/indexes",
      "https://api.twelvelabs.io/indexes"
    ],
    "response_type": "json",
    "description": "This method returns a list of the indexes in your account. The API returns indexes sorted by creation date, with the oldest indexes at the top of the list.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "IndexesListRequestBadRequestErrorBody"
    ],
    "type": "api-reference"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_indexes.list-response",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/indexes/list",
    "pathname": "/api-reference/api-reference/indexes/list",
    "title": "List indexes",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Indexes",
        "pathname": "/api-reference/api-reference/indexes"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_indexes.list",
    "method": "GET",
    "endpoint_path": "/indexes",
    "endpoint_path_alternates": [
      "/indexes",
      "https://api.twelvelabs.io/indexes",
      "https://api.twelvelabs.io/indexes"
    ],
    "response_type": "json",
    "description": "The indexes have successfully been retrieved.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "IndexesListRequestBadRequestErrorBody"
    ],
    "type": "api-reference",
    "hash": "#response"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_indexes.create",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/indexes/create",
    "pathname": "/api-reference/api-reference/indexes/create",
    "title": "Create an index",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Indexes",
        "pathname": "/api-reference/api-reference/indexes"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_indexes.create",
    "method": "POST",
    "endpoint_path": "/indexes",
    "endpoint_path_alternates": [
      "/indexes",
      "https://api.twelvelabs.io/indexes",
      "https://api.twelvelabs.io/indexes"
    ],
    "response_type": "json",
    "description": "This method creates an index.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "IndexesCreateRequestBadRequestErrorBody"
    ],
    "type": "api-reference"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_indexes.create-response",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/indexes/create",
    "pathname": "/api-reference/api-reference/indexes/create",
    "title": "Create an index",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Indexes",
        "pathname": "/api-reference/api-reference/indexes"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_indexes.create",
    "method": "POST",
    "endpoint_path": "/indexes",
    "endpoint_path_alternates": [
      "/indexes",
      "https://api.twelvelabs.io/indexes",
      "https://api.twelvelabs.io/indexes"
    ],
    "response_type": "json",
    "description": "An index has successfully been created",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "IndexesCreateRequestBadRequestErrorBody"
    ],
    "type": "api-reference",
    "hash": "#response"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_indexes.retrieve",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/indexes/retrieve",
    "pathname": "/api-reference/api-reference/indexes/retrieve",
    "title": "Retrieve an index",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Indexes",
        "pathname": "/api-reference/api-reference/indexes"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_indexes.retrieve",
    "method": "GET",
    "endpoint_path": "/indexes/:index-id",
    "endpoint_path_alternates": [
      "/indexes/{index-id}",
      "https://api.twelvelabs.io/indexes/:index-id",
      "https://api.twelvelabs.io/indexes/%7Bindex-id%7D"
    ],
    "response_type": "json",
    "description": "This method retrieves details about the specified index.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "IndexesRetrieveRequestBadRequestErrorBody"
    ],
    "type": "api-reference"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_indexes.retrieve-response",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/indexes/retrieve",
    "pathname": "/api-reference/api-reference/indexes/retrieve",
    "title": "Retrieve an index",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Indexes",
        "pathname": "/api-reference/api-reference/indexes"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_indexes.retrieve",
    "method": "GET",
    "endpoint_path": "/indexes/:index-id",
    "endpoint_path_alternates": [
      "/indexes/{index-id}",
      "https://api.twelvelabs.io/indexes/:index-id",
      "https://api.twelvelabs.io/indexes/%7Bindex-id%7D"
    ],
    "response_type": "json",
    "description": "The specified index has successfully been retrieved.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "IndexesRetrieveRequestBadRequestErrorBody"
    ],
    "type": "api-reference",
    "hash": "#response"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_indexes.update",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/indexes/update",
    "pathname": "/api-reference/api-reference/indexes/update",
    "title": "Update an index",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Indexes",
        "pathname": "/api-reference/api-reference/indexes"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_indexes.update",
    "method": "PUT",
    "endpoint_path": "/indexes/:index-id",
    "endpoint_path_alternates": [
      "/indexes/{index-id}",
      "https://api.twelvelabs.io/indexes/:index-id",
      "https://api.twelvelabs.io/indexes/%7Bindex-id%7D"
    ],
    "description": "This method updates the name of the specified index.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "IndexesUpdateRequestBadRequestErrorBody"
    ],
    "type": "api-reference"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_indexes.delete",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/indexes/delete",
    "pathname": "/api-reference/api-reference/indexes/delete",
    "title": "Delete an index",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Indexes",
        "pathname": "/api-reference/api-reference/indexes"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_indexes.delete",
    "method": "DELETE",
    "endpoint_path": "/indexes/:index-id",
    "endpoint_path_alternates": [
      "/indexes/{index-id}",
      "https://api.twelvelabs.io/indexes/:index-id",
      "https://api.twelvelabs.io/indexes/%7Bindex-id%7D"
    ],
    "description": "This method deletes the specified index and all the videos within it. This action cannot be undone.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "IndexesDeleteRequestBadRequestErrorBody"
    ],
    "type": "api-reference"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_indexes/videos.list",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/indexes/videos/list",
    "pathname": "/api-reference/api-reference/indexes/videos/list",
    "title": "List videos",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Indexes",
        "pathname": "/api-reference/api-reference/indexes"
      },
      {
        "title": "Videos",
        "pathname": "/api-reference/api-reference/indexes/videos"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_indexes/videos.list",
    "method": "GET",
    "endpoint_path": "/indexes/:index-id/videos",
    "endpoint_path_alternates": [
      "/indexes/{index-id}/videos",
      "https://api.twelvelabs.io/indexes/:index-id/videos",
      "https://api.twelvelabs.io/indexes/%7Bindex-id%7D/videos"
    ],
    "response_type": "json",
    "description": "This method returns a list of the videos in the specified index. By default, the API returns your videos sorted by creation date, with the newest at the top of the list.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "VideosListRequestBadRequestErrorBody"
    ],
    "type": "api-reference"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_indexes/videos.list-response",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/indexes/videos/list",
    "pathname": "/api-reference/api-reference/indexes/videos/list",
    "title": "List videos",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Indexes",
        "pathname": "/api-reference/api-reference/indexes"
      },
      {
        "title": "Videos",
        "pathname": "/api-reference/api-reference/indexes/videos"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_indexes/videos.list",
    "method": "GET",
    "endpoint_path": "/indexes/:index-id/videos",
    "endpoint_path_alternates": [
      "/indexes/{index-id}/videos",
      "https://api.twelvelabs.io/indexes/:index-id/videos",
      "https://api.twelvelabs.io/indexes/%7Bindex-id%7D/videos"
    ],
    "response_type": "json",
    "description": "The video vectors in the specified index have successfully been retrieved.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "VideosListRequestBadRequestErrorBody"
    ],
    "type": "api-reference",
    "hash": "#response"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_indexes/videos.retrieve",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/indexes/videos/retrieve",
    "pathname": "/api-reference/api-reference/indexes/videos/retrieve",
    "title": "Retrieve video information",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Indexes",
        "pathname": "/api-reference/api-reference/indexes"
      },
      {
        "title": "Videos",
        "pathname": "/api-reference/api-reference/indexes/videos"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_indexes/videos.retrieve",
    "method": "GET",
    "endpoint_path": "/indexes/:index-id/videos/:video-id",
    "endpoint_path_alternates": [
      "/indexes/{index-id}/videos/{video-id}",
      "https://api.twelvelabs.io/indexes/:index-id/videos/:video-id",
      "https://api.twelvelabs.io/indexes/%7Bindex-id%7D/videos/%7Bvideo-id%7D"
    ],
    "response_type": "json",
    "description": "This method retrieves information about the specified video.\n🚧 Important\nWhen retrieving video embeddings, the response includes breaking changes that might require updates to your application code. Key differences:\nThe video_embeddings field has been renamed to video_embedding (plural to singular)\n\nThe response now includes a nested array named segments.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "VideosRetrieveRequestBadRequestErrorBody"
    ],
    "type": "api-reference"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_indexes/videos.retrieve-response",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/indexes/videos/retrieve",
    "pathname": "/api-reference/api-reference/indexes/videos/retrieve",
    "title": "Retrieve video information",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Indexes",
        "pathname": "/api-reference/api-reference/indexes"
      },
      {
        "title": "Videos",
        "pathname": "/api-reference/api-reference/indexes/videos"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_indexes/videos.retrieve",
    "method": "GET",
    "endpoint_path": "/indexes/:index-id/videos/:video-id",
    "endpoint_path_alternates": [
      "/indexes/{index-id}/videos/{video-id}",
      "https://api.twelvelabs.io/indexes/:index-id/videos/:video-id",
      "https://api.twelvelabs.io/indexes/%7Bindex-id%7D/videos/%7Bvideo-id%7D"
    ],
    "response_type": "json",
    "description": "The specified video information has successfully been retrieved.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "VideosRetrieveRequestBadRequestErrorBody"
    ],
    "type": "api-reference",
    "hash": "#response"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_indexes/videos.update",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/indexes/videos/update",
    "pathname": "/api-reference/api-reference/indexes/videos/update",
    "title": "Update video information",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Indexes",
        "pathname": "/api-reference/api-reference/indexes"
      },
      {
        "title": "Videos",
        "pathname": "/api-reference/api-reference/indexes/videos"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_indexes/videos.update",
    "method": "PUT",
    "endpoint_path": "/indexes/:index-id/videos/:video-id",
    "endpoint_path_alternates": [
      "/indexes/{index-id}/videos/{video-id}",
      "https://api.twelvelabs.io/indexes/:index-id/videos/:video-id",
      "https://api.twelvelabs.io/indexes/%7Bindex-id%7D/videos/%7Bvideo-id%7D"
    ],
    "description": "Use this method to update the title and the metadata of a video.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "VideosUpdateRequestBadRequestErrorBody"
    ],
    "type": "api-reference"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_indexes/videos.delete",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/indexes/videos/delete",
    "pathname": "/api-reference/api-reference/indexes/videos/delete",
    "title": "Delete video information",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Indexes",
        "pathname": "/api-reference/api-reference/indexes"
      },
      {
        "title": "Videos",
        "pathname": "/api-reference/api-reference/indexes/videos"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_indexes/videos.delete",
    "method": "DELETE",
    "endpoint_path": "/indexes/:index-id/videos/:video-id",
    "endpoint_path_alternates": [
      "/indexes/{index-id}/videos/{video-id}",
      "https://api.twelvelabs.io/indexes/:index-id/videos/:video-id",
      "https://api.twelvelabs.io/indexes/%7Bindex-id%7D/videos/%7Bvideo-id%7D"
    ],
    "description": "This method deletes all the information about the specified video This action cannot be undone.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "VideosDeleteRequestBadRequestErrorBody"
    ],
    "type": "api-reference"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_summarize.create",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/summarize/create",
    "pathname": "/api-reference/api-reference/summarize/create",
    "title": "Summaries, chapters, or highlights",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Summarize",
        "pathname": "/api-reference/api-reference/summarize"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_summarize.create",
    "method": "POST",
    "endpoint_path": "/summarize",
    "endpoint_path_alternates": [
      "/summarize",
      "https://api.twelvelabs.io/summarize",
      "https://api.twelvelabs.io/summarize"
    ],
    "response_type": "json",
    "description": "This endpoint generates summaries, chapters, or highlights for your videos. Optionally, you can provide a prompt to customize the output.\nNOTE: This endpoint is rate-limited. For details, see the Rate limits page.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "SummarizeCreateRequestBadRequestErrorBody"
    ],
    "type": "api-reference"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_summarize.create-response",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/summarize/create",
    "pathname": "/api-reference/api-reference/summarize/create",
    "title": "Summaries, chapters, or highlights",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Summarize",
        "pathname": "/api-reference/api-reference/summarize"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_summarize.create",
    "method": "POST",
    "endpoint_path": "/summarize",
    "endpoint_path_alternates": [
      "/summarize",
      "https://api.twelvelabs.io/summarize",
      "https://api.twelvelabs.io/summarize"
    ],
    "response_type": "json",
    "description": "The specified video has successfully been summarized.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "SummarizeCreateRequestBadRequestErrorBody"
    ],
    "type": "api-reference",
    "hash": "#response"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_generate.create",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/generate/create",
    "pathname": "/api-reference/api-reference/generate/create",
    "title": "Open-ended texts",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Generate",
        "pathname": "/api-reference/api-reference/generate"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_generate.create",
    "method": "POST",
    "endpoint_path": "/generate",
    "endpoint_path_alternates": [
      "/generate",
      "https://api.twelvelabs.io/generate",
      "https://api.twelvelabs.io/generate"
    ],
    "response_type": "json",
    "description": "This endpoint generates open-ended texts based on your videos, including but not limited to tables of content, action items, memos, and detailed analyses.\nNOTES:\nThis endpoint is rate-limited. For details, see the Rate limits page.\n\nThis endpoint supports streaming responses. For details on integrating this feature into your application, refer to the Streaming response guide.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "GenerateCreateRequestBadRequestErrorBody"
    ],
    "type": "api-reference"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_generate.create-response",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/generate/create",
    "pathname": "/api-reference/api-reference/generate/create",
    "title": "Open-ended texts",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Generate",
        "pathname": "/api-reference/api-reference/generate"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_generate.create",
    "method": "POST",
    "endpoint_path": "/generate",
    "endpoint_path_alternates": [
      "/generate",
      "https://api.twelvelabs.io/generate",
      "https://api.twelvelabs.io/generate"
    ],
    "response_type": "json",
    "description": "The specified video has successfully been processed.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "GenerateCreateRequestBadRequestErrorBody"
    ],
    "type": "api-reference",
    "hash": "#response"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_embed.create",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/embed/create",
    "pathname": "/api-reference/api-reference/embed/create",
    "title": "Create embeddings for text, image, and audio",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Embed",
        "pathname": "/api-reference/api-reference/embed"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_embed.create",
    "method": "POST",
    "endpoint_path": "/embed",
    "endpoint_path_alternates": [
      "/embed",
      "https://api.twelvelabs.io/embed",
      "https://api.twelvelabs.io/embed"
    ],
    "response_type": "json",
    "description": "This method creates embedings for text, image, and audio content.\nBefore you create an embedding, ensure that the following prerequisites are met:\nText embeddings\n\nImage embeddings\n\nAudio embeddings\n\n\nParameters for embeddings:\nCommon parameters:\nengine_name: The video understanding engine you want to use. Example: \"Marengo-retrieval-2.6\".\n\n\n\nText embeddings:\ntext: Text for which to create an embedding.\n\n\n\nImage embeddings:\nProvide one of the following:\nimage_url: Publicly accessible URL of your image file.\n\nimage_file: Local image file.\n\n\n\nAudio embeddings:\nProvide one of the following:\naudio_url: Publicly accessible URL of your audio file.\n\naudio_file: Local audio file.\n\n\n\n\nNOTES:\nThe “Marengo-retrieval-2.6” video understanding engine generates embeddings for all modalities in the same latent space. This shared space enables any-to-any searches across different types of content.\n\nYou can create multiple types of embeddings in a single API call.\n\nAudio embeddings combine generic sound and human speech in a single embedding. For videos with transcriptions, you can retrieve transcriptions and then create text embeddings from these transcriptions.\n\n\n🚧 Important\nThe response includes breaking changes that might require updates to your application code.\nCommon changes:\nThe is_success boolean flag has been removed.\nMedia-specific changes:\n\nText:The response now includes a nested array named segments.\n\nImage: The response now includes a nested array named segments.\n\nAudio: No additional changes.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "EmbedCreateRequestBadRequestErrorBody"
    ],
    "type": "api-reference"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_embed.create-response",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/embed/create",
    "pathname": "/api-reference/api-reference/embed/create",
    "title": "Create embeddings for text, image, and audio",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Embed",
        "pathname": "/api-reference/api-reference/embed"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_embed.create",
    "method": "POST",
    "endpoint_path": "/embed",
    "endpoint_path_alternates": [
      "/embed",
      "https://api.twelvelabs.io/embed",
      "https://api.twelvelabs.io/embed"
    ],
    "response_type": "json",
    "description": "A text embedding has successfully been created.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "EmbedCreateRequestBadRequestErrorBody"
    ],
    "type": "api-reference",
    "hash": "#response"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_embed/tasks.list",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/embed/tasks/list",
    "pathname": "/api-reference/api-reference/embed/tasks/list",
    "title": "List video embedding tasks",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Embed",
        "pathname": "/api-reference/api-reference/embed"
      },
      {
        "title": "Tasks",
        "pathname": "/api-reference/api-reference/embed/tasks"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_embed/tasks.list",
    "method": "GET",
    "endpoint_path": "/embed/tasks",
    "endpoint_path_alternates": [
      "/embed/tasks",
      "https://api.twelvelabs.io/embed/tasks",
      "https://api.twelvelabs.io/embed/tasks"
    ],
    "response_type": "json",
    "description": "This method returns a list of the video embedding tasks in your account. The platform returns your video embedding tasks sorted by creation date, with the newest at the top of the list.\nNOTES:\nVideo embeddings are stored for seven days\n\nWhen you invoke this method without specifying the started_at and ended_at parameters, the platform returns all the video embedding tasks created within the last seven days.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "TasksListRequestBadRequestErrorBody"
    ],
    "type": "api-reference"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_embed/tasks.list-response",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/embed/tasks/list",
    "pathname": "/api-reference/api-reference/embed/tasks/list",
    "title": "List video embedding tasks",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Embed",
        "pathname": "/api-reference/api-reference/embed"
      },
      {
        "title": "Tasks",
        "pathname": "/api-reference/api-reference/embed/tasks"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_embed/tasks.list",
    "method": "GET",
    "endpoint_path": "/embed/tasks",
    "endpoint_path_alternates": [
      "/embed/tasks",
      "https://api.twelvelabs.io/embed/tasks",
      "https://api.twelvelabs.io/embed/tasks"
    ],
    "response_type": "json",
    "description": "A list of video embedding tasks has successfully been retrieved.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "TasksListRequestBadRequestErrorBody"
    ],
    "type": "api-reference",
    "hash": "#response"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_embed/tasks.create",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/embed/tasks/create",
    "pathname": "/api-reference/api-reference/embed/tasks/create",
    "title": "Create a video embedding task",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Embed",
        "pathname": "/api-reference/api-reference/embed"
      },
      {
        "title": "Tasks",
        "pathname": "/api-reference/api-reference/embed/tasks"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_embed/tasks.create",
    "method": "POST",
    "endpoint_path": "/embed/tasks",
    "endpoint_path_alternates": [
      "/embed/tasks",
      "https://api.twelvelabs.io/embed/tasks",
      "https://api.twelvelabs.io/embed/tasks"
    ],
    "response_type": "json",
    "description": "This method creates a new video embedding task that uploads a video to the platform and creates one or multiple video embeddings.\nEnsure your video meets the requirements in the Prerequisites section of the Create video embeddings page.\nUpload options:\nLocal file: Use the video_file parameter\n\nPublicly accessible URL: Use the video_url parameter.\n\n\nSpecify at least one option. If both are provided, video_url takes precedence.\nNOTES:\nThe “Marengo-retrieval-2.6” video understanding engine generates embeddings for all modalities in the same latent space. This shared space enables any-to-any searches across different types of content.\n\nVideo embeddings are stored for seven days.\n\nThe platform supports uploading video files that can play without additional user interaction or custom video players. Ensure your URL points to the raw video file, not a web page containing the video. Links to third-party hosting sites, cloud storage services, or videos requiring extra steps to play are not supported.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "TasksCreateRequestBadRequestErrorBody"
    ],
    "type": "api-reference"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_embed/tasks.create-response",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/embed/tasks/create",
    "pathname": "/api-reference/api-reference/embed/tasks/create",
    "title": "Create a video embedding task",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Embed",
        "pathname": "/api-reference/api-reference/embed"
      },
      {
        "title": "Tasks",
        "pathname": "/api-reference/api-reference/embed/tasks"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_embed/tasks.create",
    "method": "POST",
    "endpoint_path": "/embed/tasks",
    "endpoint_path_alternates": [
      "/embed/tasks",
      "https://api.twelvelabs.io/embed/tasks",
      "https://api.twelvelabs.io/embed/tasks"
    ],
    "response_type": "json",
    "description": "A video embedding task has successfully been created.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "TasksCreateRequestBadRequestErrorBody"
    ],
    "type": "api-reference",
    "hash": "#response"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_embed/tasks.retrieve",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/embed/tasks/retrieve",
    "pathname": "/api-reference/api-reference/embed/tasks/retrieve",
    "title": "Retrieve video embeddings",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Embed",
        "pathname": "/api-reference/api-reference/embed"
      },
      {
        "title": "Tasks",
        "pathname": "/api-reference/api-reference/embed/tasks"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_embed/tasks.retrieve",
    "method": "GET",
    "endpoint_path": "/embed/tasks/:task_id",
    "endpoint_path_alternates": [
      "/embed/tasks/{task_id}",
      "https://api.twelvelabs.io/embed/tasks/:task_id",
      "https://api.twelvelabs.io/embed/tasks/%7Btask_id%7D"
    ],
    "response_type": "json",
    "description": "This method retrieves embeddings for a specific video embedding task. Ensure the task status is ready before invoking this method. Refer to the Retrieve a video embedding task page for instructions on checking the task status.\n🚧 Important\nThe response includes breaking changes that might require updates to your application code. Key differences:\nThe video_embeddings field has been renamed to video_embedding (plural to singular)\n\nThe response now includes a nested array named segments.\n\n\n\nThe metadata field is now nested under video_embedding.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "TasksRetrieveRequestBadRequestErrorBody"
    ],
    "type": "api-reference"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_embed/tasks.retrieve-response",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/embed/tasks/retrieve",
    "pathname": "/api-reference/api-reference/embed/tasks/retrieve",
    "title": "Retrieve video embeddings",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Embed",
        "pathname": "/api-reference/api-reference/embed"
      },
      {
        "title": "Tasks",
        "pathname": "/api-reference/api-reference/embed/tasks"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_embed/tasks.retrieve",
    "method": "GET",
    "endpoint_path": "/embed/tasks/:task_id",
    "endpoint_path_alternates": [
      "/embed/tasks/{task_id}",
      "https://api.twelvelabs.io/embed/tasks/:task_id",
      "https://api.twelvelabs.io/embed/tasks/%7Btask_id%7D"
    ],
    "response_type": "json",
    "description": "Video embeddings have successfully been retrieved.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "TasksRetrieveRequestBadRequestErrorBody"
    ],
    "type": "api-reference",
    "hash": "#response"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_embed/tasks/status.retrieve",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/embed/tasks/status/retrieve",
    "pathname": "/api-reference/api-reference/embed/tasks/status/retrieve",
    "title": "Retrieve the status of a video embedding task",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Embed",
        "pathname": "/api-reference/api-reference/embed"
      },
      {
        "title": "Tasks",
        "pathname": "/api-reference/api-reference/embed/tasks"
      },
      {
        "title": "Status",
        "pathname": "/api-reference/api-reference/embed/tasks/status"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_embed/tasks/status.retrieve",
    "method": "GET",
    "endpoint_path": "/embed/tasks/:task_id/status",
    "endpoint_path_alternates": [
      "/embed/tasks/{task_id}/status",
      "https://api.twelvelabs.io/embed/tasks/:task_id/status",
      "https://api.twelvelabs.io/embed/tasks/%7Btask_id%7D/status"
    ],
    "response_type": "json",
    "description": "This method retrieves the status of a video embedding task. Check the task status of a video embedding task to determine when you can retrieve the embedding.\nA task can have one of the following statuses:\nprocessing: The platform is creating the embeddings.\n\nready: Processing is complete. Retrieve the embeddings by invoking the GET method of the /embed/tasks/{task_id} endpoint.\n\nfailed: The task could not be completed, and the embeddings haven't been created.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "StatusRetrieveRequestBadRequestErrorBody"
    ],
    "type": "api-reference"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_embed/tasks/status.retrieve-response",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/embed/tasks/status/retrieve",
    "pathname": "/api-reference/api-reference/embed/tasks/status/retrieve",
    "title": "Retrieve the status of a video embedding task",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Embed",
        "pathname": "/api-reference/api-reference/embed"
      },
      {
        "title": "Tasks",
        "pathname": "/api-reference/api-reference/embed/tasks"
      },
      {
        "title": "Status",
        "pathname": "/api-reference/api-reference/embed/tasks/status"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_embed/tasks/status.retrieve",
    "method": "GET",
    "endpoint_path": "/embed/tasks/:task_id/status",
    "endpoint_path_alternates": [
      "/embed/tasks/{task_id}/status",
      "https://api.twelvelabs.io/embed/tasks/:task_id/status",
      "https://api.twelvelabs.io/embed/tasks/%7Btask_id%7D/status"
    ],
    "response_type": "json",
    "description": "The status of your video embedding task has been retrieved.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "StatusRetrieveRequestBadRequestErrorBody"
    ],
    "type": "api-reference",
    "hash": "#response"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_search.query",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/search/query",
    "pathname": "/api-reference/api-reference/search/query",
    "title": "Make any-to-video search requests",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Search",
        "pathname": "/api-reference/api-reference/search"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_search.query",
    "method": "POST",
    "endpoint_path": "/search",
    "endpoint_path_alternates": [
      "/search",
      "https://api.twelvelabs.io/search",
      "https://api.twelvelabs.io/search"
    ],
    "response_type": "json",
    "description": "Use this endpoint to search for relevant matches in an index using text or various media queries.\nText queries:\nUse the query_text parameter to specify your query.\n\n\nMedia queries:\nSet the query_media_type parameter to the corresponding media type (example: image).\n\nSpecify either one of the following parameters:\nquery_media_url: Publicly accessible URL of your media file.\n\nquery_media_file: Local media file.\nIf both query_media_url and query_media_file are specified in the same request, query_media_url takes precedence.\n\n\n\n\nBefore using a media file as a query, ensure that the file meets the prerequisites.\nNOTE: This endpoint is rate-limited. For details, see the Rate limits page.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "SearchQueryRequestBadRequestErrorBody"
    ],
    "type": "api-reference"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_search.query-response",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/search/query",
    "pathname": "/api-reference/api-reference/search/query",
    "title": "Make any-to-video search requests",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Search",
        "pathname": "/api-reference/api-reference/search"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_search.query",
    "method": "POST",
    "endpoint_path": "/search",
    "endpoint_path_alternates": [
      "/search",
      "https://api.twelvelabs.io/search",
      "https://api.twelvelabs.io/search"
    ],
    "response_type": "json",
    "description": "Successfully performed a search request.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "SearchQueryRequestBadRequestErrorBody"
    ],
    "type": "api-reference",
    "hash": "#response"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_search.retrieve",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/search/retrieve",
    "pathname": "/api-reference/api-reference/search/retrieve",
    "title": "Retrieve a specific page of search results",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Search",
        "pathname": "/api-reference/api-reference/search"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_search.retrieve",
    "method": "GET",
    "endpoint_path": "/search/:page-token",
    "endpoint_path_alternates": [
      "/search/{page-token}",
      "https://api.twelvelabs.io/search/:page-token",
      "https://api.twelvelabs.io/search/%7Bpage-token%7D"
    ],
    "response_type": "json",
    "description": "Use this endpoint to retrieve a specific page of search results.\nNOTE: When you use pagination, you will not be charged for retrieving subsequent pages of results.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "SearchRetrieveRequestBadRequestErrorBody"
    ],
    "type": "api-reference"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_search.retrieve-response",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/search/retrieve",
    "pathname": "/api-reference/api-reference/search/retrieve",
    "title": "Retrieve a specific page of search results",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Search",
        "pathname": "/api-reference/api-reference/search"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_search.retrieve",
    "method": "GET",
    "endpoint_path": "/search/:page-token",
    "endpoint_path_alternates": [
      "/search/{page-token}",
      "https://api.twelvelabs.io/search/:page-token",
      "https://api.twelvelabs.io/search/%7Bpage-token%7D"
    ],
    "response_type": "json",
    "description": "Successfully retrieved the specified page of search results.",
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi",
      "json",
      "SearchRetrieveRequestBadRequestErrorBody"
    ],
    "type": "api-reference",
    "hash": "#response"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_gist.create",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/gist/create",
    "pathname": "/api-reference/api-reference/gist/create",
    "title": "Create",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Gist",
        "pathname": "/api-reference/api-reference/gist"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_gist.create",
    "method": "POST",
    "endpoint_path": "/gist",
    "endpoint_path_alternates": [
      "/gist",
      "https://api.twelvelabs.io/gist",
      "https://api.twelvelabs.io/gist"
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi"
    ],
    "type": "api-reference"
  },
  {
    "objectID": "test:test.com:a1e69a1f-3ea3-4860-97ab-8cae4e192ea3:endpoint_embedNew.create",
    "org_id": "test",
    "domain": "test.com",
    "canonicalPathname": "/api-reference/api-reference/embed-new/create",
    "pathname": "/api-reference/api-reference/embed-new/create",
    "title": "Create",
    "breadcrumb": [
      {
        "title": "API Reference",
        "pathname": "/api-reference/api-reference"
      },
      {
        "title": "Embed New",
        "pathname": "/api-reference/api-reference/embed-new"
      }
    ],
    "tab": {
      "title": "API Reference",
      "pathname": "/api-reference"
    },
    "visible_by": [
      "role/everyone"
    ],
    "authed": false,
    "api_type": "http",
    "api_definition_id": "a1e69a1f-3ea3-4860-97ab-8cae4e192ea3",
    "api_endpoint_id": "endpoint_embedNew.create",
    "method": "POST",
    "endpoint_path": "/embed-new",
    "endpoint_path_alternates": [
      "/embed-new",
      "https://api.twelvelabs.io/embed-new",
      "https://api.twelvelabs.io/embed-new"
    ],
    "environments": [
      {
        "id": "Default",
        "url": "https://api.twelvelabs.io/v1.3"
      }
    ],
    "default_environment_id": "Default",
    "keywords": [
      "endpoint",
      "api",
      "http",
      "rest",
      "openapi"
    ],
    "type": "api-reference"
  }
]