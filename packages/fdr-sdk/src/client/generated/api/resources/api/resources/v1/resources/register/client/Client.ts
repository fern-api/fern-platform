/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "../../../../../../../../environments";
import * as core from "../../../../../../../../core";
import * as FernRegistry from "../../../../../../../index";
import urlJoin from "url-join";

export declare namespace Register {
    interface Options {
        environment?: core.Supplier<environments.FernRegistryEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }

    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
    }
}

export class Register {
    constructor(protected readonly _options: Register.Options = {}) {}

    /**
     * @param {FernRegistry.api.v1.register.RegisterApiDefinitionRequest} request
     * @param {Register.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.api.v1.register.registerApiDefinition({
     *         orgId: FernRegistry.OrgId("string"),
     *         apiId: FernRegistry.ApiId("string"),
     *         definition: {
     *             rootPackage: {
     *                 endpoints: [{
     *                         auth: true,
     *                         defaultEnvironment: FernRegistry.EnvironmentId("string"),
     *                         environments: [{
     *                                 "key": "value"
     *                             }],
     *                         method: "GET",
     *                         id: FernRegistry.EndpointId("string"),
     *                         originalEndpointId: "string",
     *                         name: "string",
     *                         path: {
     *                             parts: [{
     *                                     type: "literal",
     *                                     value: {
     *                                         "key": "value"
     *                                     }
     *                                 }],
     *                             pathParameters: [{
     *                                     key: FernRegistry.PropertyKey("string"),
     *                                     type: {
     *                                         type: "id"
     *                                     },
     *                                     description: {
     *                                         "key": "value"
     *                                     },
     *                                     availability: {
     *                                         "key": "value"
     *                                     }
     *                                 }]
     *                         },
     *                         queryParameters: [{
     *                                 key: "string",
     *                                 type: {
     *                                     type: "id"
     *                                 },
     *                                 arrayEncoding: {
     *                                     "key": "value"
     *                                 },
     *                                 description: {
     *                                     "key": "value"
     *                                 },
     *                                 availability: {
     *                                     "key": "value"
     *                                 }
     *                             }],
     *                         headers: [{
     *                                 key: "string",
     *                                 type: {
     *                                     type: "id"
     *                                 },
     *                                 description: {
     *                                     "key": "value"
     *                                 },
     *                                 availability: {
     *                                     "key": "value"
     *                                 }
     *                             }],
     *                         request: {
     *                             type: {
     *                                 type: "json"
     *                             },
     *                             description: {
     *                                 "key": "value"
     *                             }
     *                         },
     *                         response: {
     *                             type: {
     *                                 type: "object"
     *                             },
     *                             statusCode: {
     *                                 "key": "value"
     *                             },
     *                             description: {
     *                                 "key": "value"
     *                             }
     *                         },
     *                         errors: [{
     *                                 "key": "value"
     *                             }],
     *                         errorsV2: [{
     *                                 "key": "value"
     *                             }],
     *                         examples: [{
     *                                 name: {
     *                                     "key": "value"
     *                                 },
     *                                 path: "string",
     *                                 pathParameters: {
     *                                     "string": {
     *                                         "key": "value"
     *                                     }
     *                                 },
     *                                 queryParameters: {
     *                                     "string": {
     *                                         "key": "value"
     *                                     }
     *                                 },
     *                                 headers: {
     *                                     "string": {
     *                                         "key": "value"
     *                                     }
     *                                 },
     *                                 requestBody: {
     *                                     "key": "value"
     *                                 },
     *                                 requestBodyV3: {
     *                                     "key": "value"
     *                                 },
     *                                 responseStatusCode: 1,
     *                                 responseBody: {
     *                                     "key": "value"
     *                                 },
     *                                 responseBodyV3: {
     *                                     "key": "value"
     *                                 },
     *                                 codeSamples: {
     *                                     "key": "value"
     *                                 },
     *                                 description: {
     *                                     "key": "value"
     *                                 }
     *                             }],
     *                         description: {
     *                             "key": "value"
     *                         },
     *                         availability: {
     *                             "key": "value"
     *                         }
     *                     }],
     *                 websockets: [{
     *                         id: FernRegistry.WebSocketId("string"),
     *                         auth: true,
     *                         name: {
     *                             "key": "value"
     *                         },
     *                         defaultEnvironment: {
     *                             "key": "value"
     *                         },
     *                         environments: [{
     *                                 "key": "value"
     *                             }],
     *                         path: {
     *                             parts: [{
     *                                     type: "literal",
     *                                     value: {
     *                                         "key": "value"
     *                                     }
     *                                 }],
     *                             pathParameters: [{
     *                                     key: FernRegistry.PropertyKey("string"),
     *                                     type: {
     *                                         type: "id"
     *                                     },
     *                                     description: {
     *                                         "key": "value"
     *                                     },
     *                                     availability: {
     *                                         "key": "value"
     *                                     }
     *                                 }]
     *                         },
     *                         headers: [{
     *                                 "key": "value"
     *                             }],
     *                         queryParameters: [{
     *                                 "key": "value"
     *                             }],
     *                         messages: [{
     *                                 "key": "value"
     *                             }],
     *                         examples: [{
     *                                 "key": "value"
     *                             }],
     *                         description: {
     *                             "key": "value"
     *                         },
     *                         availability: {
     *                             "key": "value"
     *                         }
     *                     }],
     *                 webhooks: [{
     *                         method: "GET",
     *                         id: FernRegistry.WebhookId("string"),
     *                         name: {
     *                             "key": "value"
     *                         },
     *                         path: [{
     *                                 "key": "value"
     *                             }],
     *                         headers: [{
     *                                 "key": "value"
     *                             }],
     *                         payload: {
     *                             type: {
     *                                 type: "object"
     *                             },
     *                             description: {
     *                                 "key": "value"
     *                             }
     *                         },
     *                         examples: [{
     *                                 "key": "value"
     *                             }],
     *                         description: {
     *                             "key": "value"
     *                         }
     *                     }],
     *                 types: [FernRegistry.TypeId("string")],
     *                 subpackages: [FernRegistry.api.v1.SubpackageId("string")],
     *                 pointsTo: FernRegistry.api.v1.SubpackageId("string")
     *             },
     *             types: {
     *                 "string": {
     *                     name: "string",
     *                     shape: {
     *                         type: "alias",
     *                         value: {
     *                             type: "id"
     *                         }
     *                     },
     *                     description: {
     *                         "key": "value"
     *                     },
     *                     availability: {
     *                         "key": "value"
     *                     }
     *                 }
     *             },
     *             subpackages: {
     *                 "string": {
     *                     subpackageId: FernRegistry.api.v1.SubpackageId("string"),
     *                     name: "string",
     *                     displayName: "string",
     *                     endpoints: [{
     *                             auth: true,
     *                             defaultEnvironment: FernRegistry.EnvironmentId("string"),
     *                             environments: [{
     *                                     "key": "value"
     *                                 }],
     *                             method: "GET",
     *                             id: FernRegistry.EndpointId("string"),
     *                             originalEndpointId: "string",
     *                             name: "string",
     *                             path: {
     *                                 parts: [{
     *                                         type: "literal",
     *                                         value: {
     *                                             "key": "value"
     *                                         }
     *                                     }],
     *                                 pathParameters: [{
     *                                         key: FernRegistry.PropertyKey("string"),
     *                                         type: {
     *                                             type: "id"
     *                                         },
     *                                         description: {
     *                                             "key": "value"
     *                                         },
     *                                         availability: {
     *                                             "key": "value"
     *                                         }
     *                                     }]
     *                             },
     *                             queryParameters: [{
     *                                     key: "string",
     *                                     type: {
     *                                         type: "id"
     *                                     },
     *                                     arrayEncoding: {
     *                                         "key": "value"
     *                                     },
     *                                     description: {
     *                                         "key": "value"
     *                                     },
     *                                     availability: {
     *                                         "key": "value"
     *                                     }
     *                                 }],
     *                             headers: [{
     *                                     key: "string",
     *                                     type: {
     *                                         type: "id"
     *                                     },
     *                                     description: {
     *                                         "key": "value"
     *                                     },
     *                                     availability: {
     *                                         "key": "value"
     *                                     }
     *                                 }],
     *                             request: {
     *                                 type: {
     *                                     type: "json"
     *                                 },
     *                                 description: {
     *                                     "key": "value"
     *                                 }
     *                             },
     *                             response: {
     *                                 type: {
     *                                     type: "object"
     *                                 },
     *                                 statusCode: {
     *                                     "key": "value"
     *                                 },
     *                                 description: {
     *                                     "key": "value"
     *                                 }
     *                             },
     *                             errors: [{
     *                                     "key": "value"
     *                                 }],
     *                             errorsV2: [{
     *                                     "key": "value"
     *                                 }],
     *                             examples: [{
     *                                     name: {
     *                                         "key": "value"
     *                                     },
     *                                     path: "string",
     *                                     pathParameters: {
     *                                         "string": {
     *                                             "key": "value"
     *                                         }
     *                                     },
     *                                     queryParameters: {
     *                                         "string": {
     *                                             "key": "value"
     *                                         }
     *                                     },
     *                                     headers: {
     *                                         "string": {
     *                                             "key": "value"
     *                                         }
     *                                     },
     *                                     requestBody: {
     *                                         "key": "value"
     *                                     },
     *                                     requestBodyV3: {
     *                                         "key": "value"
     *                                     },
     *                                     responseStatusCode: 1,
     *                                     responseBody: {
     *                                         "key": "value"
     *                                     },
     *                                     responseBodyV3: {
     *                                         "key": "value"
     *                                     },
     *                                     codeSamples: {
     *                                         "key": "value"
     *                                     },
     *                                     description: {
     *                                         "key": "value"
     *                                     }
     *                                 }],
     *                             description: {
     *                                 "key": "value"
     *                             },
     *                             availability: {
     *                                 "key": "value"
     *                             }
     *                         }],
     *                     websockets: [{
     *                             id: FernRegistry.WebSocketId("string"),
     *                             auth: true,
     *                             name: {
     *                                 "key": "value"
     *                             },
     *                             defaultEnvironment: {
     *                                 "key": "value"
     *                             },
     *                             environments: [{
     *                                     "key": "value"
     *                                 }],
     *                             path: {
     *                                 parts: [{
     *                                         type: "literal",
     *                                         value: {
     *                                             "key": "value"
     *                                         }
     *                                     }],
     *                                 pathParameters: [{
     *                                         key: FernRegistry.PropertyKey("string"),
     *                                         type: {
     *                                             type: "id"
     *                                         },
     *                                         description: {
     *                                             "key": "value"
     *                                         },
     *                                         availability: {
     *                                             "key": "value"
     *                                         }
     *                                     }]
     *                             },
     *                             headers: [{
     *                                     "key": "value"
     *                                 }],
     *                             queryParameters: [{
     *                                     "key": "value"
     *                                 }],
     *                             messages: [{
     *                                     "key": "value"
     *                                 }],
     *                             examples: [{
     *                                     "key": "value"
     *                                 }],
     *                             description: {
     *                                 "key": "value"
     *                             },
     *                             availability: {
     *                                 "key": "value"
     *                             }
     *                         }],
     *                     webhooks: [{
     *                             method: "GET",
     *                             id: FernRegistry.WebhookId("string"),
     *                             name: {
     *                                 "key": "value"
     *                             },
     *                             path: [{
     *                                     "key": "value"
     *                                 }],
     *                             headers: [{
     *                                     "key": "value"
     *                                 }],
     *                             payload: {
     *                                 type: {
     *                                     type: "object"
     *                                 },
     *                                 description: {
     *                                     "key": "value"
     *                                 }
     *                             },
     *                             examples: [{
     *                                     "key": "value"
     *                                 }],
     *                             description: {
     *                                 "key": "value"
     *                             }
     *                         }],
     *                     types: [FernRegistry.TypeId("string")],
     *                     subpackages: [FernRegistry.api.v1.SubpackageId("string")],
     *                     pointsTo: FernRegistry.api.v1.SubpackageId("string"),
     *                     description: {
     *                         "key": "value"
     *                     }
     *                 }
     *             },
     *             auth: {
     *                 type: "bearerAuth"
     *             },
     *             globalHeaders: [{
     *                     key: "string",
     *                     type: {
     *                         type: "id"
     *                     },
     *                     description: {
     *                         "key": "value"
     *                     },
     *                     availability: {
     *                         "key": "value"
     *                     }
     *                 }],
     *             snippetsConfiguration: {
     *                 typescriptSdk: {
     *                     package: "string",
     *                     version: {
     *                         "key": "value"
     *                     }
     *                 },
     *                 pythonSdk: {
     *                     package: "string",
     *                     version: {
     *                         "key": "value"
     *                     }
     *                 },
     *                 goSdk: {
     *                     githubRepo: "string",
     *                     version: {
     *                         "key": "value"
     *                     }
     *                 },
     *                 javaSdk: {
     *                     coordinate: "string",
     *                     version: {
     *                         "key": "value"
     *                     }
     *                 },
     *                 rubySdk: {
     *                     gem: "string",
     *                     version: {
     *                         "key": "value"
     *                     }
     *                 }
     *             },
     *             navigation: {
     *                 items: [{
     *                         type: "subpackage"
     *                     }]
     *             }
     *         },
     *         sources: {
     *             "string": {
     *                 type: "openapi"
     *             }
     *         }
     *     })
     */
    public async registerApiDefinition(
        request: FernRegistry.api.v1.register.RegisterApiDefinitionRequest,
        requestOptions?: Register.RequestOptions
    ): Promise<
        core.APIResponse<
            FernRegistry.api.v1.register.RegisterApiDefinitionResponse,
            FernRegistry.api.v1.register.registerApiDefinition.Error
        >
    > {
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernRegistryEnvironment.Prod,
                "/registry/api/register"
            ),
            method: "POST",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                "X-Fern-Language": "JavaScript",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version,
            },
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : undefined,
            maxRetries: requestOptions?.maxRetries,
            abortSignal: requestOptions?.abortSignal,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: _response.body as FernRegistry.api.v1.register.RegisterApiDefinitionResponse,
            };
        }

        if (_response.error.reason === "status-code") {
            switch ((_response.error.body as FernRegistry.api.v1.register.registerApiDefinition.Error)?.error) {
                case "UnauthorizedError":
                case "UserNotInOrgError":
                    return {
                        ok: false,
                        error: _response.error.body as FernRegistry.api.v1.register.registerApiDefinition.Error,
                    };
            }
        }

        return {
            ok: false,
            error: FernRegistry.api.v1.register.registerApiDefinition.Error._unknown(_response.error),
        };
    }

    protected async _getAuthorizationHeader(): Promise<string | undefined> {
        const bearer = await core.Supplier.get(this._options.token);
        if (bearer != null) {
            return `Bearer ${bearer}`;
        }

        return undefined;
    }
}
