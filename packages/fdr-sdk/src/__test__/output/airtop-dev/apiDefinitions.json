[
  {
    "id": "43168098-0988-47e7-bc82-78ae7aaf1fe6",
    "endpoints": {
      "endpoint_profiles.get": {
        "id": "endpoint_profiles.get",
        "namespace": [
          "subpackage_profiles"
        ],
        "description": "Get profiles matching by id",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/profiles"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.airtop.ai/api/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "profileIds",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "A comma-separated list of profile ids."
          }
        ],
        "response": {
          "description": "OK",
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ProfilesResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/profiles",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "meta": {
                  "requestId": "requestId"
                },
                "data": [
                  {
                    "profileId": "profileId",
                    "status": "status"
                  }
                ],
                "errors": [
                  {
                    "message": "message",
                    "code": "code",
                    "details": {
                      "key": "value"
                    }
                  }
                ],
                "warnings": [
                  {
                    "message": "message",
                    "code": "code",
                    "details": {
                      "key": "value"
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.airtop.ai/api/v1/profiles \\\n     -H \"Authorization: Bearer <apiKey>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from airtop import Airtop\n\nclient = Airtop(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.profiles.get()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { AirtopClient } from \"@airtop/sdk\";\n\nconst client = new AirtopClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.profiles.get();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "python": {
            "type": "v1",
            "functionInvocation": {
              "imports": [],
              "isOptional": true,
              "templateString": "client.profiles.get(\n\t$FERN_INPUT\n)",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "profile_ids=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "QUERY",
                        "path": "profileIds",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",\n\t",
              "type": "generic"
            },
            "clientInstantiation": {
              "imports": [
                "from airtop import Airtop"
              ],
              "isOptional": true,
              "templateString": "client = Airtop($FERN_INPUT, )",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": false,
                    "templateString": "api_key=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "AUTH",
                        "path": "token",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",",
              "type": "generic"
            }
          },
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.profiles.get(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "profileIds: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "profileIds"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { AirtopClient } from \"@airtop/sdk\";"
              ],
              "templateString": "const client = new AirtopClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "apiKey: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_profiles.delete": {
        "id": "endpoint_profiles.delete",
        "namespace": [
          "subpackage_profiles"
        ],
        "description": "Delete profiles matching by id",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/profiles"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.airtop.ai/api/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "profileIds",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "A comma-separated list of profile ids."
          }
        ],
        "examples": [
          {
            "path": "/profiles",
            "responseStatusCode": 204,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.airtop.ai/api/v1/profiles \\\n     -H \"Authorization: Bearer <apiKey>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from airtop import Airtop\n\nclient = Airtop(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.profiles.delete()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { AirtopClient } from \"@airtop/sdk\";\n\nconst client = new AirtopClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.profiles.delete();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "python": {
            "type": "v1",
            "functionInvocation": {
              "imports": [],
              "isOptional": true,
              "templateString": "client.profiles.delete(\n\t$FERN_INPUT\n)",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "profile_ids=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "QUERY",
                        "path": "profileIds",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",\n\t",
              "type": "generic"
            },
            "clientInstantiation": {
              "imports": [
                "from airtop import Airtop"
              ],
              "isOptional": true,
              "templateString": "client = Airtop($FERN_INPUT, )",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": false,
                    "templateString": "api_key=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "AUTH",
                        "path": "token",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",",
              "type": "generic"
            }
          },
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.profiles.delete(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "profileIds: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "profileIds"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { AirtopClient } from \"@airtop/sdk\";"
              ],
              "templateString": "const client = new AirtopClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "apiKey: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_sessions.list": {
        "id": "endpoint_sessions.list",
        "namespace": [
          "subpackage_sessions"
        ],
        "description": "Get a list of sessions by ID",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/sessions"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.airtop.ai/api/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "sessionIds",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "A comma-separated list of IDs of the sessions to retrieve."
          },
          {
            "key": "status",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_sessions:SessionsListRequestStatus"
                  }
                }
              }
            },
            "description": "Status of the session to get."
          },
          {
            "key": "offset",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                }
              }
            },
            "description": "Offset for pagination."
          },
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                }
              }
            },
            "description": "Limit for pagination."
          }
        ],
        "response": {
          "description": "OK",
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:SessionsResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ErrorModel"
              }
            },
            "examples": [
              {
                "responseBody": {
                  "type": "json",
                  "value": {
                    "detail": "Property foo is required but is missing.",
                    "instance": "https://example.com/error-log/abc123",
                    "status": 400,
                    "title": "Bad Request",
                    "type": "https://example.com/errors/example"
                  }
                }
              }
            ]
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ErrorModel"
              }
            },
            "examples": [
              {
                "responseBody": {
                  "type": "json",
                  "value": {
                    "detail": "Property foo is required but is missing.",
                    "instance": "https://example.com/error-log/abc123",
                    "status": 400,
                    "title": "Bad Request",
                    "type": "https://example.com/errors/example"
                  }
                }
              }
            ]
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ErrorModel"
              }
            },
            "examples": [
              {
                "responseBody": {
                  "type": "json",
                  "value": {
                    "detail": "Property foo is required but is missing.",
                    "instance": "https://example.com/error-log/abc123",
                    "status": 400,
                    "title": "Bad Request",
                    "type": "https://example.com/errors/example"
                  }
                }
              }
            ]
          }
        ],
        "examples": [
          {
            "path": "/sessions",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "offset": 1,
              "limit": 10
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "pagination": {
                    "currentLimit": 1000000,
                    "currentPage": 1000000,
                    "finalCount": 1000000,
                    "hasMore": true,
                    "initialCount": 1000000,
                    "nextOffset": 1000000,
                    "numberOfPages": 1000000,
                    "totalItems": 1000000
                  },
                  "sessions": [
                    {
                      "configuration": {
                        "baseProfileId": "a13c6f73-bd89-4a76-ab32-5a6c422e8224",
                        "persistProfile": true,
                        "timeoutMinutes": 10
                      },
                      "id": "6aac6f73-bd89-4a76-ab32-5a6c422e8b0b",
                      "status": "active",
                      "profileId": "427c6f73-bd89-4a76-ab32-5a6c422e8b0b"
                    }
                  ]
                },
                "meta": {
                  "requestId": "requestId"
                },
                "errors": [
                  {
                    "message": "message",
                    "code": "code",
                    "details": {
                      "key": "value"
                    }
                  }
                ],
                "warnings": [
                  {
                    "message": "message",
                    "code": "code",
                    "details": {
                      "key": "value"
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.airtop.ai/api/v1/sessions \\\n     -H \"Authorization: Bearer <apiKey>\" \\\n     -d offset=1 \\\n     -d limit=10",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from airtop import Airtop\n\nclient = Airtop(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.sessions.list(\n    offset=1,\n    limit=10,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { AirtopClient } from \"@airtop/sdk\";\n\nconst client = new AirtopClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.sessions.list({\n    offset: 1,\n    limit: 10\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/sessions",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {
              "sessionIds": "string",
              "status": "awaitingCapacity"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "message": "string",
                    "location": "string",
                    "value": {}
                  }
                ],
                "detail": "string",
                "instance": "string",
                "status": 99999,
                "title": "string",
                "type": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.airtop.ai/api/v1/sessions \\\n     -H \"Authorization: Bearer <apiKey>\" \\\n     -d sessionIds=string \\\n     -d status=awaitingCapacity",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from airtop import Airtop\n\nclient = Airtop(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.sessions.list(\n    offset=1,\n    limit=10,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { AirtopClient } from \"@airtop/sdk\";\n\nconst client = new AirtopClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.sessions.list({\n    offset: 1,\n    limit: 10\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/sessions",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {
              "sessionIds": "string",
              "status": "awaitingCapacity"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "message": "string",
                    "location": "string",
                    "value": {}
                  }
                ],
                "detail": "string",
                "instance": "string",
                "status": 99999,
                "title": "string",
                "type": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.airtop.ai/api/v1/sessions \\\n     -H \"Authorization: Bearer <apiKey>\" \\\n     -d sessionIds=string \\\n     -d status=awaitingCapacity",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from airtop import Airtop\n\nclient = Airtop(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.sessions.list(\n    offset=1,\n    limit=10,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { AirtopClient } from \"@airtop/sdk\";\n\nconst client = new AirtopClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.sessions.list({\n    offset: 1,\n    limit: 10\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/sessions",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "sessionIds": "string",
              "status": "awaitingCapacity"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "message": "string",
                    "location": "string",
                    "value": {}
                  }
                ],
                "detail": "string",
                "instance": "string",
                "status": 99999,
                "title": "string",
                "type": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.airtop.ai/api/v1/sessions \\\n     -H \"Authorization: Bearer <apiKey>\" \\\n     -d sessionIds=string \\\n     -d status=awaitingCapacity",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from airtop import Airtop\n\nclient = Airtop(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.sessions.list(\n    offset=1,\n    limit=10,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { AirtopClient } from \"@airtop/sdk\";\n\nconst client = new AirtopClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.sessions.list({\n    offset: 1,\n    limit: 10\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "python": {
            "type": "v1",
            "functionInvocation": {
              "imports": [],
              "isOptional": true,
              "templateString": "client.sessions.list(\n\t$FERN_INPUT\n)",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "session_ids=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "QUERY",
                        "path": "sessionIds",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "status=$FERN_INPUT",
                    "values": {
                      "awaitingCapacity": "\"awaitingCapacity\"",
                      "initializing": "\"initializing\"",
                      "running": "\"running\"",
                      "ended": "\"ended\""
                    },
                    "templateInput": {
                      "location": "QUERY",
                      "path": "status"
                    },
                    "type": "enum"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "offset=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "QUERY",
                        "path": "offset",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "limit=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "QUERY",
                        "path": "limit",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",\n\t",
              "type": "generic"
            },
            "clientInstantiation": {
              "imports": [
                "from airtop import Airtop"
              ],
              "isOptional": true,
              "templateString": "client = Airtop($FERN_INPUT, )",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": false,
                    "templateString": "api_key=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "AUTH",
                        "path": "token",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",",
              "type": "generic"
            }
          },
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.sessions.list(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "sessionIds: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "sessionIds"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "enum",
                          "imports": [],
                          "isOptional": true,
                          "values": {
                            "awaitingCapacity": "Airtop.SessionsListRequestStatus.AwaitingCapacity",
                            "initializing": "Airtop.SessionsListRequestStatus.Initializing",
                            "running": "Airtop.SessionsListRequestStatus.Running",
                            "ended": "Airtop.SessionsListRequestStatus.Ended"
                          },
                          "templateString": "status: $FERN_INPUT",
                          "templateInput": {
                            "location": "QUERY",
                            "path": "status"
                          }
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "offset: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "offset"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "limit: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "limit"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { AirtopClient } from \"@airtop/sdk\";"
              ],
              "templateString": "const client = new AirtopClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "apiKey: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_sessions.create": {
        "id": "endpoint_sessions.create",
        "namespace": [
          "subpackage_sessions"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/sessions"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.airtop.ai/api/v1"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "configuration",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:SessionConfigV1"
                      }
                    }
                  }
                },
                "description": "Session configuration"
              }
            ]
          }
        },
        "response": {
          "description": "Created",
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:SessionResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/sessions",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "configuration": {
                    "baseProfileId": "a13c6f73-bd89-4a76-ab32-5a6c422e8224",
                    "persistProfile": true,
                    "timeoutMinutes": 10
                  },
                  "id": "6aac6f73-bd89-4a76-ab32-5a6c422e8b0b",
                  "status": "active",
                  "cdpUrl": "cdpUrl",
                  "cdpWsUrl": "cdpWsUrl",
                  "chromedriverUrl": "chromedriverUrl",
                  "currentUsage": 1000000,
                  "dateCreated": "2024-01-15T09:30:00Z",
                  "lastActivity": "2024-01-15T09:30:00Z",
                  "profileId": "427c6f73-bd89-4a76-ab32-5a6c422e8b0b"
                },
                "meta": {
                  "requestId": "requestId"
                },
                "errors": [
                  {
                    "message": "message",
                    "code": "code",
                    "details": {
                      "key": "value"
                    }
                  }
                ],
                "warnings": [
                  {
                    "message": "message",
                    "code": "code",
                    "details": {
                      "key": "value"
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.airtop.ai/api/v1/sessions \\\n     -H \"Authorization: Bearer <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from airtop import Airtop\n\nclient = Airtop(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.sessions.create()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { AirtopClient } from \"@airtop/sdk\";\n\nconst client = new AirtopClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.sessions.create();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "python": {
            "type": "v1",
            "functionInvocation": {
              "imports": [],
              "isOptional": true,
              "templateString": "client.sessions.create(\n\t$FERN_INPUT\n)",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [
                      "from airtop import SessionConfigV1"
                    ],
                    "isOptional": true,
                    "templateString": "configuration=SessionConfigV1(\n\t\t$FERN_INPUT\n\t)",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "imports": [],
                          "isOptional": true,
                          "templateString": "base_profile_id=$FERN_INPUT",
                          "templateInputs": [
                            {
                              "location": "BODY",
                              "path": "configuration.baseProfileId",
                              "type": "payload"
                            }
                          ],
                          "type": "generic"
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "imports": [],
                          "isOptional": true,
                          "templateString": "persist_profile=$FERN_INPUT",
                          "templateInputs": [
                            {
                              "location": "BODY",
                              "path": "configuration.persistProfile",
                              "type": "payload"
                            }
                          ],
                          "type": "generic"
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "imports": [],
                          "isOptional": true,
                          "templateString": "proxy=$FERN_INPUT",
                          "members": [
                            {
                              "type": {
                                "value": "type_:CustomProxy",
                                "type": "id"
                              },
                              "template": {
                                "imports": [],
                                "isOptional": true,
                                "templateString": "$FERN_INPUT",
                                "members": [
                                  {
                                    "type": {
                                      "type": "primitive",
                                      "value": {
                                        "type": "string"
                                      }
                                    },
                                    "template": {
                                      "imports": [],
                                      "isOptional": true,
                                      "templateString": "$FERN_INPUT",
                                      "templateInputs": [
                                        {
                                          "location": "RELATIVE",
                                          "path": null,
                                          "type": "payload"
                                        }
                                      ],
                                      "type": "generic"
                                    }
                                  },
                                  {
                                    "type": {
                                      "value": "type_:Proxy",
                                      "type": "id"
                                    },
                                    "template": {
                                      "imports": [
                                        "from airtop import Proxy"
                                      ],
                                      "isOptional": true,
                                      "templateString": "Proxy(\n\t\t\t$FERN_INPUT\n\t\t)",
                                      "templateInputs": [
                                        {
                                          "type": "template",
                                          "value": {
                                            "imports": [],
                                            "isOptional": true,
                                            "templateString": "password=$FERN_INPUT",
                                            "templateInputs": [
                                              {
                                                "location": "RELATIVE",
                                                "path": "password",
                                                "type": "payload"
                                              }
                                            ],
                                            "type": "generic"
                                          }
                                        },
                                        {
                                          "type": "template",
                                          "value": {
                                            "imports": [],
                                            "isOptional": true,
                                            "templateString": "url=$FERN_INPUT",
                                            "templateInputs": [
                                              {
                                                "location": "RELATIVE",
                                                "path": "url",
                                                "type": "payload"
                                              }
                                            ],
                                            "type": "generic"
                                          }
                                        },
                                        {
                                          "type": "template",
                                          "value": {
                                            "imports": [],
                                            "isOptional": true,
                                            "templateString": "username=$FERN_INPUT",
                                            "templateInputs": [
                                              {
                                                "location": "RELATIVE",
                                                "path": "username",
                                                "type": "payload"
                                              }
                                            ],
                                            "type": "generic"
                                          }
                                        }
                                      ],
                                      "inputDelimiter": ",\n\t\t\t",
                                      "type": "generic"
                                    }
                                  }
                                ],
                                "templateInput": {
                                  "location": "RELATIVE",
                                  "path": null
                                },
                                "type": "union_v2"
                              }
                            },
                            {
                              "type": {
                                "itemType": {
                                  "value": "type_:SessionConfigV1ProxyItem",
                                  "type": "id"
                                },
                                "type": "list"
                              },
                              "template": {
                                "imports": [],
                                "isOptional": true,
                                "containerTemplateString": "[\n\t\t\t$FERN_INPUT\n\t\t]",
                                "delimiter": ",\n\t\t\t",
                                "innerTemplate": {
                                  "imports": [
                                    "from airtop import SessionConfigV1ProxyItem"
                                  ],
                                  "isOptional": true,
                                  "templateString": "SessionConfigV1ProxyItem(\n\t\t\t\t$FERN_INPUT\n\t\t\t)",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "domain_pattern=$FERN_INPUT",
                                        "templateInputs": [
                                          {
                                            "location": "RELATIVE",
                                            "path": "domainPattern",
                                            "type": "payload"
                                          }
                                        ],
                                        "type": "generic"
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "imports": [],
                                        "isOptional": true,
                                        "templateString": "relay=$FERN_INPUT",
                                        "members": [
                                          {
                                            "type": {
                                              "type": "primitive",
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "template": {
                                              "imports": [],
                                              "isOptional": true,
                                              "templateString": "$FERN_INPUT",
                                              "templateInputs": [
                                                {
                                                  "location": "RELATIVE",
                                                  "path": null,
                                                  "type": "payload"
                                                }
                                              ],
                                              "type": "generic"
                                            }
                                          },
                                          {
                                            "type": {
                                              "value": "type_:Proxy",
                                              "type": "id"
                                            },
                                            "template": {
                                              "imports": [
                                                "from airtop import Proxy"
                                              ],
                                              "isOptional": true,
                                              "templateString": "Proxy(\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t)",
                                              "templateInputs": [
                                                {
                                                  "type": "template",
                                                  "value": {
                                                    "imports": [],
                                                    "isOptional": true,
                                                    "templateString": "password=$FERN_INPUT",
                                                    "templateInputs": [
                                                      {
                                                        "location": "RELATIVE",
                                                        "path": "password",
                                                        "type": "payload"
                                                      }
                                                    ],
                                                    "type": "generic"
                                                  }
                                                },
                                                {
                                                  "type": "template",
                                                  "value": {
                                                    "imports": [],
                                                    "isOptional": true,
                                                    "templateString": "url=$FERN_INPUT",
                                                    "templateInputs": [
                                                      {
                                                        "location": "RELATIVE",
                                                        "path": "url",
                                                        "type": "payload"
                                                      }
                                                    ],
                                                    "type": "generic"
                                                  }
                                                },
                                                {
                                                  "type": "template",
                                                  "value": {
                                                    "imports": [],
                                                    "isOptional": true,
                                                    "templateString": "username=$FERN_INPUT",
                                                    "templateInputs": [
                                                      {
                                                        "location": "RELATIVE",
                                                        "path": "username",
                                                        "type": "payload"
                                                      }
                                                    ],
                                                    "type": "generic"
                                                  }
                                                }
                                              ],
                                              "inputDelimiter": ",\n\t\t\t\t\t",
                                              "type": "generic"
                                            }
                                          }
                                        ],
                                        "templateInput": {
                                          "location": "RELATIVE",
                                          "path": "relay"
                                        },
                                        "type": "union_v2"
                                      }
                                    }
                                  ],
                                  "inputDelimiter": ",\n\t\t\t\t",
                                  "type": "generic"
                                },
                                "templateInput": {
                                  "location": "RELATIVE",
                                  "path": null
                                },
                                "type": "iterable"
                              }
                            }
                          ],
                          "templateInput": {
                            "location": "BODY",
                            "path": "configuration.proxy"
                          },
                          "type": "union_v2"
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "imports": [],
                          "isOptional": true,
                          "templateString": "timeout_minutes=$FERN_INPUT",
                          "templateInputs": [
                            {
                              "location": "BODY",
                              "path": "configuration.timeoutMinutes",
                              "type": "payload"
                            }
                          ],
                          "type": "generic"
                        }
                      }
                    ],
                    "inputDelimiter": ",\n\t\t",
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",\n\t",
              "type": "generic"
            },
            "clientInstantiation": {
              "imports": [
                "from airtop import Airtop"
              ],
              "isOptional": true,
              "templateString": "client = Airtop($FERN_INPUT, )",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": false,
                    "templateString": "api_key=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "AUTH",
                        "path": "token",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",",
              "type": "generic"
            }
          },
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.sessions.create(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "configuration: {\n\t\t\t$FERN_INPUT\n\t\t}",
                          "isOptional": true,
                          "inputDelimiter": ",\n\t\t\t",
                          "templateInputs": [
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "baseProfileId: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "configuration.baseProfileId"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "persistProfile: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "configuration.persistProfile"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "union_v2",
                                "imports": [],
                                "isOptional": true,
                                "templateString": "proxy: $FERN_INPUT",
                                "members": [
                                  {
                                    "template": {
                                      "type": "union_v2",
                                      "imports": [],
                                      "isOptional": true,
                                      "templateString": "$FERN_INPUT",
                                      "members": [
                                        {
                                          "template": {
                                            "type": "generic",
                                            "imports": [],
                                            "templateString": "$FERN_INPUT",
                                            "isOptional": true,
                                            "templateInputs": [
                                              {
                                                "type": "payload",
                                                "location": "RELATIVE",
                                                "path": null
                                              }
                                            ]
                                          },
                                          "type": {
                                            "type": "primitive",
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        {
                                          "template": {
                                            "type": "generic",
                                            "imports": [],
                                            "templateString": "$FERN_INPUT",
                                            "isOptional": true,
                                            "inputDelimiter": ",\n\t\t\t\t\t",
                                            "templateInputs": [
                                              {
                                                "type": "template",
                                                "value": {
                                                  "type": "generic",
                                                  "imports": [],
                                                  "templateString": "password: $FERN_INPUT",
                                                  "isOptional": true,
                                                  "templateInputs": [
                                                    {
                                                      "type": "payload",
                                                      "location": "RELATIVE",
                                                      "path": "password"
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "template",
                                                "value": {
                                                  "type": "generic",
                                                  "imports": [],
                                                  "templateString": "url: $FERN_INPUT",
                                                  "isOptional": true,
                                                  "templateInputs": [
                                                    {
                                                      "type": "payload",
                                                      "location": "RELATIVE",
                                                      "path": "url"
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "template",
                                                "value": {
                                                  "type": "generic",
                                                  "imports": [],
                                                  "templateString": "username: $FERN_INPUT",
                                                  "isOptional": true,
                                                  "templateInputs": [
                                                    {
                                                      "type": "payload",
                                                      "location": "RELATIVE",
                                                      "path": "username"
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "type": {
                                            "type": "id",
                                            "value": "type_:Proxy"
                                          }
                                        }
                                      ],
                                      "templateInput": {
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    },
                                    "type": {
                                      "type": "id",
                                      "value": "type_:CustomProxy"
                                    }
                                  },
                                  {
                                    "template": {
                                      "type": "iterable",
                                      "imports": [],
                                      "isOptional": true,
                                      "containerTemplateString": "[\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                      "delimiter": ",\n\t\t\t\t\t",
                                      "innerTemplate": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "{\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                        "isOptional": true,
                                        "inputDelimiter": ",\n\t\t\t\t\t\t",
                                        "templateInputs": [
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "domainPattern: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "RELATIVE",
                                                  "path": "domainPattern"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "union_v2",
                                              "imports": [],
                                              "isOptional": true,
                                              "templateString": "relay: $FERN_INPUT",
                                              "members": [
                                                {
                                                  "template": {
                                                    "type": "generic",
                                                    "imports": [],
                                                    "templateString": "$FERN_INPUT",
                                                    "isOptional": true,
                                                    "templateInputs": [
                                                      {
                                                        "type": "payload",
                                                        "location": "RELATIVE",
                                                        "path": null
                                                      }
                                                    ]
                                                  },
                                                  "type": {
                                                    "type": "primitive",
                                                    "value": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                {
                                                  "template": {
                                                    "type": "generic",
                                                    "imports": [],
                                                    "templateString": "$FERN_INPUT",
                                                    "isOptional": true,
                                                    "inputDelimiter": ",\n\t\t\t\t\t\t\t",
                                                    "templateInputs": [
                                                      {
                                                        "type": "template",
                                                        "value": {
                                                          "type": "generic",
                                                          "imports": [],
                                                          "templateString": "password: $FERN_INPUT",
                                                          "isOptional": true,
                                                          "templateInputs": [
                                                            {
                                                              "type": "payload",
                                                              "location": "RELATIVE",
                                                              "path": "password"
                                                            }
                                                          ]
                                                        }
                                                      },
                                                      {
                                                        "type": "template",
                                                        "value": {
                                                          "type": "generic",
                                                          "imports": [],
                                                          "templateString": "url: $FERN_INPUT",
                                                          "isOptional": true,
                                                          "templateInputs": [
                                                            {
                                                              "type": "payload",
                                                              "location": "RELATIVE",
                                                              "path": "url"
                                                            }
                                                          ]
                                                        }
                                                      },
                                                      {
                                                        "type": "template",
                                                        "value": {
                                                          "type": "generic",
                                                          "imports": [],
                                                          "templateString": "username: $FERN_INPUT",
                                                          "isOptional": true,
                                                          "templateInputs": [
                                                            {
                                                              "type": "payload",
                                                              "location": "RELATIVE",
                                                              "path": "username"
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "type": {
                                                    "type": "id",
                                                    "value": "type_:Proxy"
                                                  }
                                                }
                                              ],
                                              "templateInput": {
                                                "location": "RELATIVE",
                                                "path": "relay"
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "templateInput": {
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    },
                                    "type": {
                                      "type": "list",
                                      "itemType": {
                                        "type": "id",
                                        "value": "type_:SessionConfigV1ProxyItem"
                                      }
                                    }
                                  }
                                ],
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "configuration.proxy"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "timeoutMinutes: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "configuration.timeoutMinutes"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { AirtopClient } from \"@airtop/sdk\";"
              ],
              "templateString": "const client = new AirtopClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "apiKey: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_sessions.getInfo": {
        "id": "endpoint_sessions.getInfo",
        "namespace": [
          "subpackage_sessions"
        ],
        "description": "Get a session by ID",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/sessions/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.airtop.ai/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Id of the session to get"
          }
        ],
        "response": {
          "description": "OK",
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:SessionResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ErrorModel"
              }
            },
            "examples": [
              {
                "responseBody": {
                  "type": "json",
                  "value": {
                    "detail": "Property foo is required but is missing.",
                    "instance": "https://example.com/error-log/abc123",
                    "status": 400,
                    "title": "Bad Request",
                    "type": "https://example.com/errors/example"
                  }
                }
              }
            ]
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ErrorModel"
              }
            },
            "examples": [
              {
                "responseBody": {
                  "type": "json",
                  "value": {
                    "detail": "Property foo is required but is missing.",
                    "instance": "https://example.com/error-log/abc123",
                    "status": 400,
                    "title": "Bad Request",
                    "type": "https://example.com/errors/example"
                  }
                }
              }
            ]
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ErrorModel"
              }
            },
            "examples": [
              {
                "responseBody": {
                  "type": "json",
                  "value": {
                    "detail": "Property foo is required but is missing.",
                    "instance": "https://example.com/error-log/abc123",
                    "status": 400,
                    "title": "Bad Request",
                    "type": "https://example.com/errors/example"
                  }
                }
              }
            ]
          }
        ],
        "examples": [
          {
            "path": "/sessions/6aac6f73-bd89-4a76-ab32-5a6c422e8b0b",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "6aac6f73-bd89-4a76-ab32-5a6c422e8b0b"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "configuration": {
                    "baseProfileId": "a13c6f73-bd89-4a76-ab32-5a6c422e8224",
                    "persistProfile": true,
                    "timeoutMinutes": 10
                  },
                  "id": "6aac6f73-bd89-4a76-ab32-5a6c422e8b0b",
                  "status": "active",
                  "cdpUrl": "cdpUrl",
                  "cdpWsUrl": "cdpWsUrl",
                  "chromedriverUrl": "chromedriverUrl",
                  "currentUsage": 1000000,
                  "dateCreated": "2024-01-15T09:30:00Z",
                  "lastActivity": "2024-01-15T09:30:00Z",
                  "profileId": "427c6f73-bd89-4a76-ab32-5a6c422e8b0b"
                },
                "meta": {
                  "requestId": "requestId"
                },
                "errors": [
                  {
                    "message": "message",
                    "code": "code",
                    "details": {
                      "key": "value"
                    }
                  }
                ],
                "warnings": [
                  {
                    "message": "message",
                    "code": "code",
                    "details": {
                      "key": "value"
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.airtop.ai/api/v1/sessions/6aac6f73-bd89-4a76-ab32-5a6c422e8b0b \\\n     -H \"Authorization: Bearer <apiKey>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from airtop import Airtop\n\nclient = Airtop(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.sessions.getinfo(\n    id=\"6aac6f73-bd89-4a76-ab32-5a6c422e8b0b\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { AirtopClient } from \"@airtop/sdk\";\n\nconst client = new AirtopClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.sessions.getinfo(\"6aac6f73-bd89-4a76-ab32-5a6c422e8b0b\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/sessions/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "message": "string",
                    "location": "string",
                    "value": {}
                  }
                ],
                "detail": "string",
                "instance": "string",
                "status": 99999,
                "title": "string",
                "type": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.airtop.ai/api/v1/sessions/:id \\\n     -H \"Authorization: Bearer <apiKey>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from airtop import Airtop\n\nclient = Airtop(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.sessions.getinfo(\n    id=\"6aac6f73-bd89-4a76-ab32-5a6c422e8b0b\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { AirtopClient } from \"@airtop/sdk\";\n\nconst client = new AirtopClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.sessions.getinfo(\"6aac6f73-bd89-4a76-ab32-5a6c422e8b0b\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/sessions/:id",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "message": "string",
                    "location": "string",
                    "value": {}
                  }
                ],
                "detail": "string",
                "instance": "string",
                "status": 99999,
                "title": "string",
                "type": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.airtop.ai/api/v1/sessions/:id \\\n     -H \"Authorization: Bearer <apiKey>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from airtop import Airtop\n\nclient = Airtop(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.sessions.getinfo(\n    id=\"6aac6f73-bd89-4a76-ab32-5a6c422e8b0b\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { AirtopClient } from \"@airtop/sdk\";\n\nconst client = new AirtopClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.sessions.getinfo(\"6aac6f73-bd89-4a76-ab32-5a6c422e8b0b\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/sessions/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "message": "string",
                    "location": "string",
                    "value": {}
                  }
                ],
                "detail": "string",
                "instance": "string",
                "status": 99999,
                "title": "string",
                "type": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.airtop.ai/api/v1/sessions/:id \\\n     -H \"Authorization: Bearer <apiKey>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from airtop import Airtop\n\nclient = Airtop(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.sessions.getinfo(\n    id=\"6aac6f73-bd89-4a76-ab32-5a6c422e8b0b\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { AirtopClient } from \"@airtop/sdk\";\n\nconst client = new AirtopClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.sessions.getinfo(\"6aac6f73-bd89-4a76-ab32-5a6c422e8b0b\");\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "python": {
            "type": "v1",
            "functionInvocation": {
              "imports": [],
              "isOptional": true,
              "templateString": "client.sessions.get_info(\n\t$FERN_INPUT\n)",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "id=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "PATH",
                        "path": "id",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",\n\t",
              "type": "generic"
            },
            "clientInstantiation": {
              "imports": [
                "from airtop import Airtop"
              ],
              "isOptional": true,
              "templateString": "client = Airtop($FERN_INPUT, )",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": false,
                    "templateString": "api_key=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "AUTH",
                        "path": "token",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",",
              "type": "generic"
            }
          }
        }
      },
      "endpoint_sessions.terminate": {
        "id": "endpoint_sessions.terminate",
        "namespace": [
          "subpackage_sessions"
        ],
        "description": "Ends a session by ID. If a given session id does not exist within the organization, it is ignored.",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/sessions/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.airtop.ai/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of the session to delete."
          }
        ],
        "examples": [
          {
            "path": "/sessions/6aac6f73-bd89-4a76-ab32-5a6c422e8b0b",
            "responseStatusCode": 204,
            "pathParameters": {
              "id": "6aac6f73-bd89-4a76-ab32-5a6c422e8b0b"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.airtop.ai/api/v1/sessions/6aac6f73-bd89-4a76-ab32-5a6c422e8b0b \\\n     -H \"Authorization: Bearer <apiKey>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from airtop import Airtop\n\nclient = Airtop(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.sessions.terminate(\n    id=\"6aac6f73-bd89-4a76-ab32-5a6c422e8b0b\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { AirtopClient } from \"@airtop/sdk\";\n\nconst client = new AirtopClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.sessions.terminate(\"6aac6f73-bd89-4a76-ab32-5a6c422e8b0b\");\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "python": {
            "type": "v1",
            "functionInvocation": {
              "imports": [],
              "isOptional": true,
              "templateString": "client.sessions.terminate(\n\t$FERN_INPUT\n)",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "id=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "PATH",
                        "path": "id",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",\n\t",
              "type": "generic"
            },
            "clientInstantiation": {
              "imports": [
                "from airtop import Airtop"
              ],
              "isOptional": true,
              "templateString": "client = Airtop($FERN_INPUT, )",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": false,
                    "templateString": "api_key=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "AUTH",
                        "path": "token",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",",
              "type": "generic"
            }
          },
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.sessions.terminate(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "$FERN_INPUT",
                    "isOptional": false,
                    "inputDelimiter": ",\n\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "$FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "PATH",
                              "path": "id"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { AirtopClient } from \"@airtop/sdk\";"
              ],
              "templateString": "const client = new AirtopClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "apiKey: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_windows.create": {
        "id": "endpoint_windows.create",
        "namespace": [
          "subpackage_windows"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/sessions/"
          },
          {
            "type": "pathParameter",
            "value": "sessionId"
          },
          {
            "type": "literal",
            "value": "/windows"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.airtop.ai/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "sessionId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of the session that owns the window."
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "screenResolution",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "default": "1280x720"
                        }
                      }
                    }
                  }
                },
                "description": "Affects the live view configuration. By default, a live view will fill the parent frame (or local window if loaded directly) when initially loaded, causing the browser window to be resized to match. This parameter can be used to instead configure the returned liveViewUrl so that the live view is loaded with fixed dimensions (e.g. 1280x720), resizing the browser window to match, and then disallows any further resizing from the live view."
              },
              {
                "key": "url",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "default": "https://www.google.com"
                        }
                      }
                    }
                  }
                },
                "description": "Initial url to navigate to"
              },
              {
                "key": "waitUntil",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_windows:CreateWindowInputV1BodyWaitUntil"
                      }
                    }
                  }
                },
                "description": "Wait until the specified loading event occurs. Defaults to 'load', which waits until the page dom and it's assets have loaded. 'domContentLoaded' will wait until the dom has loaded, and 'complete' will wait until the page and all it's iframes have loaded it's dom and assets."
              },
              {
                "key": "waitUntilTimeoutSeconds",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "long"
                        }
                      }
                    }
                  }
                },
                "description": "Maximum time in seconds to wait for the specified loading event to occur before timing out."
              }
            ]
          }
        },
        "response": {
          "description": "Created",
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:WindowIdResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/sessions/6aac6f73-bd89-4a76-ab32-5a6c422e8b0b/windows",
            "responseStatusCode": 200,
            "pathParameters": {
              "sessionId": "6aac6f73-bd89-4a76-ab32-5a6c422e8b0b"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "targetId": "targetId",
                  "windowId": "windowId"
                },
                "meta": {
                  "requestId": "requestId"
                },
                "errors": [
                  {
                    "message": "message",
                    "code": "code",
                    "details": {
                      "key": "value"
                    }
                  }
                ],
                "warnings": [
                  {
                    "message": "message",
                    "code": "code",
                    "details": {
                      "key": "value"
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.airtop.ai/api/v1/sessions/6aac6f73-bd89-4a76-ab32-5a6c422e8b0b/windows \\\n     -H \"Authorization: Bearer <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from airtop import Airtop\n\nclient = Airtop(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.windows.create(\n    session_id=\"6aac6f73-bd89-4a76-ab32-5a6c422e8b0b\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { AirtopClient } from \"@airtop/sdk\";\n\nconst client = new AirtopClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.windows.create(\"6aac6f73-bd89-4a76-ab32-5a6c422e8b0b\");\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "python": {
            "type": "v1",
            "functionInvocation": {
              "imports": [],
              "isOptional": true,
              "templateString": "client.windows.create(\n\t$FERN_INPUT\n)",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "session_id=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "PATH",
                        "path": "sessionId",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "screen_resolution=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "screenResolution",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "url=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "url",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "wait_until=$FERN_INPUT",
                    "values": {
                      "load": "\"load\"",
                      "domContentLoaded": "\"domContentLoaded\"",
                      "complete": "\"complete\""
                    },
                    "templateInput": {
                      "location": "BODY",
                      "path": "waitUntil"
                    },
                    "type": "enum"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "wait_until_timeout_seconds=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "waitUntilTimeoutSeconds",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",\n\t",
              "type": "generic"
            },
            "clientInstantiation": {
              "imports": [
                "from airtop import Airtop"
              ],
              "isOptional": true,
              "templateString": "client = Airtop($FERN_INPUT, )",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": false,
                    "templateString": "api_key=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "AUTH",
                        "path": "token",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",",
              "type": "generic"
            }
          },
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.windows.create(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "$FERN_INPUT",
                    "isOptional": false,
                    "inputDelimiter": ",\n\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "$FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "PATH",
                              "path": "sessionId"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "screenResolution: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "screenResolution"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "url: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "url"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "enum",
                          "imports": [],
                          "isOptional": true,
                          "values": {
                            "load": "Airtop.CreateWindowInputV1BodyWaitUntil.Load",
                            "domContentLoaded": "Airtop.CreateWindowInputV1BodyWaitUntil.DomContentLoaded",
                            "complete": "Airtop.CreateWindowInputV1BodyWaitUntil.Complete"
                          },
                          "templateString": "waitUntil: $FERN_INPUT",
                          "templateInput": {
                            "location": "BODY",
                            "path": "waitUntil"
                          }
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "waitUntilTimeoutSeconds: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "waitUntilTimeoutSeconds"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { AirtopClient } from \"@airtop/sdk\";"
              ],
              "templateString": "const client = new AirtopClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "apiKey: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_windows.get-window-info": {
        "id": "endpoint_windows.get-window-info",
        "namespace": [
          "subpackage_windows"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/sessions/"
          },
          {
            "type": "pathParameter",
            "value": "sessionId"
          },
          {
            "type": "literal",
            "value": "/windows/"
          },
          {
            "type": "pathParameter",
            "value": "windowId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.airtop.ai/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "sessionId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of the session that owns the window."
          },
          {
            "key": "windowId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of the browser window, which can either be a normal AirTop windowId or a [CDP TargetId](https://chromedevtools.github.io/devtools-protocol/tot/Target/#type-TargetID) from a browser automation library like Puppeteer (typically associated with the page or main frame). Our SDKs will handle retrieving a TargetId for you from various popular browser automation libraries, but we also have details in our guides on how to do it manually."
          }
        ],
        "queryParameters": [
          {
            "key": "includeNavigationBar",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "Affects the live view configuration. A navigation bar is not shown in the live view of a browser by default. Set this to true to configure the returned liveViewUrl so that a navigation bar is rendered, allowing users to easily navigate the browser to other pages from the live view."
          },
          {
            "key": "disableResize",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "Affects the live view configuration. Set to true to configure the returned liveViewUrl so that the ability to resize the browser window from the live view is disabled (resizing is allowed by default). Note that, at initial load, the live view will automatically fill the parent frame (or local window if loaded directly) and cause the browser window to be resized to match. This parameter does not affect that initial load behavior. See screenResolution for a way to set a fixed size for the live view."
          },
          {
            "key": "screenResolution",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Affects the live view configuration. By default, a live view will fill the parent frame (or local window if loaded directly) when initially loaded, causing the browser window to be resized to match. This parameter can be used to instead configure the returned liveViewUrl so that the live view is loaded with fixed dimensions (e.g. 1280x720), resizing the browser window to match, and then disallows any further resizing from the live view."
          }
        ],
        "response": {
          "description": "Created",
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:WindowResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/sessions/6aac6f73-bd89-4a76-ab32-5a6c422e8b0b/windows/7334da2a-91b0-42c5-6156-76a5eba87430",
            "responseStatusCode": 200,
            "pathParameters": {
              "sessionId": "6aac6f73-bd89-4a76-ab32-5a6c422e8b0b",
              "windowId": "7334da2a-91b0-42c5-6156-76a5eba87430"
            },
            "queryParameters": {
              "screenResolution": "1280x720"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "liveViewUrl": "liveViewUrl",
                  "windowId": "windowId"
                },
                "meta": {
                  "requestId": "requestId"
                },
                "errors": [
                  {
                    "message": "message",
                    "code": "code",
                    "details": {
                      "key": "value"
                    }
                  }
                ],
                "warnings": [
                  {
                    "message": "message",
                    "code": "code",
                    "details": {
                      "key": "value"
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.airtop.ai/api/v1/sessions/6aac6f73-bd89-4a76-ab32-5a6c422e8b0b/windows/7334da2a-91b0-42c5-6156-76a5eba87430 \\\n     -H \"Authorization: Bearer <apiKey>\" \\\n     -d screenResolution=1280x720",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from airtop import Airtop\n\nclient = Airtop(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.windows.get_window_info(\n    session_id=\"6aac6f73-bd89-4a76-ab32-5a6c422e8b0b\",\n    window_id=\"7334da2a-91b0-42c5-6156-76a5eba87430\",\n    screen_resolution=\"1280x720\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { AirtopClient } from \"@airtop/sdk\";\n\nconst client = new AirtopClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.windows.getWindowInfo(\"6aac6f73-bd89-4a76-ab32-5a6c422e8b0b\", \"7334da2a-91b0-42c5-6156-76a5eba87430\", {\n    screenResolution: \"1280x720\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "python": {
            "type": "v1",
            "functionInvocation": {
              "imports": [],
              "isOptional": true,
              "templateString": "client.windows.get_window_info(\n\t$FERN_INPUT\n)",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "session_id=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "PATH",
                        "path": "sessionId",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "window_id=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "PATH",
                        "path": "windowId",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "include_navigation_bar=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "QUERY",
                        "path": "includeNavigationBar",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "disable_resize=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "QUERY",
                        "path": "disableResize",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "screen_resolution=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "QUERY",
                        "path": "screenResolution",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",\n\t",
              "type": "generic"
            },
            "clientInstantiation": {
              "imports": [
                "from airtop import Airtop"
              ],
              "isOptional": true,
              "templateString": "client = Airtop($FERN_INPUT, )",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": false,
                    "templateString": "api_key=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "AUTH",
                        "path": "token",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",",
              "type": "generic"
            }
          },
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.windows.getWindowInfo(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "$FERN_INPUT",
                    "isOptional": false,
                    "inputDelimiter": ",\n\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "$FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "PATH",
                              "path": "sessionId"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "$FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "PATH",
                              "path": "windowId"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "includeNavigationBar: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "includeNavigationBar"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "disableResize: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "disableResize"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "screenResolution: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "screenResolution"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { AirtopClient } from \"@airtop/sdk\";"
              ],
              "templateString": "const client = new AirtopClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "apiKey: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_windows.loadUrl": {
        "id": "endpoint_windows.loadUrl",
        "namespace": [
          "subpackage_windows"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/sessions/"
          },
          {
            "type": "pathParameter",
            "value": "sessionId"
          },
          {
            "type": "literal",
            "value": "/windows/"
          },
          {
            "type": "pathParameter",
            "value": "windowId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.airtop.ai/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "sessionId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of the session that owns the window."
          },
          {
            "key": "windowId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Airtop window ID of the browser window."
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "url",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "Url to navigate to"
              },
              {
                "key": "waitUntil",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_windows:WindowLoadUrlV1BodyWaitUntil"
                      }
                    }
                  }
                },
                "description": "Wait until the specified loading event occurs. Defaults to 'load', which waits until the page dom and it's assets have loaded. 'domContentLoaded' will wait until the dom has loaded, and 'complete' will wait until the page and all it's iframes have loaded it's dom and assets."
              },
              {
                "key": "waitUntilTimeoutSeconds",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "long"
                        }
                      }
                    }
                  }
                },
                "description": "Maximum time in seconds to wait for the specified loading event to occur before timing out."
              }
            ]
          }
        },
        "response": {
          "description": "Created",
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:EmptyResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/sessions/6aac6f73-bd89-4a76-ab32-5a6c422e8b0b/windows/7334da2a-91b0-42c5-6156-76a5eba87430",
            "responseStatusCode": 200,
            "pathParameters": {
              "sessionId": "6aac6f73-bd89-4a76-ab32-5a6c422e8b0b",
              "windowId": "7334da2a-91b0-42c5-6156-76a5eba87430"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "url": "https://www.airtop.ai"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                },
                "meta": {
                  "requestId": "requestId",
                  "status": "success"
                },
                "errors": [
                  {
                    "message": "message",
                    "code": "code",
                    "details": {
                      "key": "value"
                    }
                  }
                ],
                "warnings": [
                  {
                    "message": "message",
                    "code": "code",
                    "details": {
                      "key": "value"
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.airtop.ai/api/v1/sessions/6aac6f73-bd89-4a76-ab32-5a6c422e8b0b/windows/7334da2a-91b0-42c5-6156-76a5eba87430 \\\n     -H \"Authorization: Bearer <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"url\": \"https://www.airtop.ai\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from airtop import Airtop\n\nclient = Airtop(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.windows.load_url(\n    session_id=\"6aac6f73-bd89-4a76-ab32-5a6c422e8b0b\",\n    window_id=\"7334da2a-91b0-42c5-6156-76a5eba87430\",\n    url=\"https://www.airtop.ai\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { AirtopClient } from \"@airtop/sdk\";\n\nconst client = new AirtopClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.windows.loadUrl(\"6aac6f73-bd89-4a76-ab32-5a6c422e8b0b\", \"7334da2a-91b0-42c5-6156-76a5eba87430\", {\n    url: \"https://www.airtop.ai\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "python": {
            "type": "v1",
            "functionInvocation": {
              "imports": [],
              "isOptional": true,
              "templateString": "client.windows.load_url(\n\t$FERN_INPUT\n)",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "session_id=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "PATH",
                        "path": "sessionId",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "window_id=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "PATH",
                        "path": "windowId",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "url=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "url",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "wait_until=$FERN_INPUT",
                    "values": {
                      "load": "\"load\"",
                      "domContentLoaded": "\"domContentLoaded\"",
                      "complete": "\"complete\""
                    },
                    "templateInput": {
                      "location": "BODY",
                      "path": "waitUntil"
                    },
                    "type": "enum"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "wait_until_timeout_seconds=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "waitUntilTimeoutSeconds",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",\n\t",
              "type": "generic"
            },
            "clientInstantiation": {
              "imports": [
                "from airtop import Airtop"
              ],
              "isOptional": true,
              "templateString": "client = Airtop($FERN_INPUT, )",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": false,
                    "templateString": "api_key=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "AUTH",
                        "path": "token",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",",
              "type": "generic"
            }
          },
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.windows.loadUrl(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "$FERN_INPUT",
                    "isOptional": false,
                    "inputDelimiter": ",\n\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "$FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "PATH",
                              "path": "sessionId"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "$FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "PATH",
                              "path": "windowId"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "url: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "url"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "enum",
                          "imports": [],
                          "isOptional": true,
                          "values": {
                            "load": "Airtop.WindowLoadUrlV1BodyWaitUntil.Load",
                            "domContentLoaded": "Airtop.WindowLoadUrlV1BodyWaitUntil.DomContentLoaded",
                            "complete": "Airtop.WindowLoadUrlV1BodyWaitUntil.Complete"
                          },
                          "templateString": "waitUntil: $FERN_INPUT",
                          "templateInput": {
                            "location": "BODY",
                            "path": "waitUntil"
                          }
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "waitUntilTimeoutSeconds: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "waitUntilTimeoutSeconds"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { AirtopClient } from \"@airtop/sdk\";"
              ],
              "templateString": "const client = new AirtopClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "apiKey: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_windows.close": {
        "id": "endpoint_windows.close",
        "namespace": [
          "subpackage_windows"
        ],
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/sessions/"
          },
          {
            "type": "pathParameter",
            "value": "sessionId"
          },
          {
            "type": "literal",
            "value": "/windows/"
          },
          {
            "type": "pathParameter",
            "value": "windowId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.airtop.ai/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "sessionId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of the session that owns the window."
          },
          {
            "key": "windowId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Airtop window ID of the browser window."
          }
        ],
        "response": {
          "description": "OK",
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:WindowIdResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/sessions/6aac6f73-bd89-4a76-ab32-5a6c422e8b0b/windows/7334da2a-91b0-42c5-6156-76a5eba87430",
            "responseStatusCode": 200,
            "pathParameters": {
              "sessionId": "6aac6f73-bd89-4a76-ab32-5a6c422e8b0b",
              "windowId": "7334da2a-91b0-42c5-6156-76a5eba87430"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "targetId": "targetId",
                  "windowId": "windowId"
                },
                "meta": {
                  "requestId": "requestId"
                },
                "errors": [
                  {
                    "message": "message",
                    "code": "code",
                    "details": {
                      "key": "value"
                    }
                  }
                ],
                "warnings": [
                  {
                    "message": "message",
                    "code": "code",
                    "details": {
                      "key": "value"
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.airtop.ai/api/v1/sessions/6aac6f73-bd89-4a76-ab32-5a6c422e8b0b/windows/7334da2a-91b0-42c5-6156-76a5eba87430 \\\n     -H \"Authorization: Bearer <apiKey>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from airtop import Airtop\n\nclient = Airtop(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.windows.close(\n    session_id=\"6aac6f73-bd89-4a76-ab32-5a6c422e8b0b\",\n    window_id=\"7334da2a-91b0-42c5-6156-76a5eba87430\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { AirtopClient } from \"@airtop/sdk\";\n\nconst client = new AirtopClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.windows.close(\"6aac6f73-bd89-4a76-ab32-5a6c422e8b0b\", \"7334da2a-91b0-42c5-6156-76a5eba87430\");\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "python": {
            "type": "v1",
            "functionInvocation": {
              "imports": [],
              "isOptional": true,
              "templateString": "client.windows.close(\n\t$FERN_INPUT\n)",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "session_id=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "PATH",
                        "path": "sessionId",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "window_id=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "PATH",
                        "path": "windowId",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",\n\t",
              "type": "generic"
            },
            "clientInstantiation": {
              "imports": [
                "from airtop import Airtop"
              ],
              "isOptional": true,
              "templateString": "client = Airtop($FERN_INPUT, )",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": false,
                    "templateString": "api_key=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "AUTH",
                        "path": "token",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",",
              "type": "generic"
            }
          },
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.windows.close(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "$FERN_INPUT",
                    "isOptional": false,
                    "inputDelimiter": ",\n\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "$FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "PATH",
                              "path": "sessionId"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "$FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "PATH",
                              "path": "windowId"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { AirtopClient } from \"@airtop/sdk\";"
              ],
              "templateString": "const client = new AirtopClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "apiKey: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_windows.prompt-content": {
        "id": "endpoint_windows.prompt-content",
        "namespace": [
          "subpackage_windows"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/sessions/"
          },
          {
            "type": "pathParameter",
            "value": "sessionId"
          },
          {
            "type": "literal",
            "value": "/windows/"
          },
          {
            "type": "pathParameter",
            "value": "windowId"
          },
          {
            "type": "literal",
            "value": "/prompt-content"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.airtop.ai/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "sessionId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The session id for the window."
          },
          {
            "key": "windowId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The Airtop window id of the browser window to target with an Airtop AI prompt."
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "clientRequestId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "configuration",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:PromptContentConfig"
                      }
                    }
                  }
                },
                "description": "Request configuration"
              },
              {
                "key": "costThresholdCredits",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "long"
                        }
                      }
                    }
                  }
                },
                "description": "A credit threshold that, once exceeded, will cause the operation to be cancelled. Note that this is *not* a hard limit, but a threshold that is checked periodically during the course of fulfilling the request. A default threshold is used if not specified, but you can use this option to increase or decrease as needed. Set to 0 to disable this feature entirely (not recommended)."
              },
              {
                "key": "followPaginationLinks",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "Make a best effort attempt to load more content items than are originally displayed on the page, e.g. by following pagination links, clicking controls to load more content, utilizing infinite scrolling, etc. This can be quite a bit more costly, but may be necessary for sites that require additional interaction to show the needed results. You can provide constraints in your prompt (e.g. on the total number of pages or results to consider)."
              },
              {
                "key": "prompt",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The prompt to submit about the content in the browser window."
              },
              {
                "key": "timeThresholdSeconds",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "long"
                        }
                      }
                    }
                  }
                },
                "description": "A time threshold in seconds that, once exceeded, will cause the operation to be cancelled. Note that this is *not* a hard limit, but a threshold that is checked periodically during the course of fulfilling the request. A default threshold is used if not specified, but you can use this option to increase or decrease as needed. Set to 0 to disable this feature entirely (not recommended).\n\nThis setting does not extend the maximum session duration provided at the time of session creation."
              }
            ]
          }
        },
        "response": {
          "description": "Created",
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:AiPromptResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/sessions/6aac6f73-bd89-4a76-ab32-5a6c422e8b0b/windows/0334da2a-91b0-42c5-6156-76a5eba87430/prompt-content",
            "responseStatusCode": 200,
            "pathParameters": {
              "sessionId": "6aac6f73-bd89-4a76-ab32-5a6c422e8b0b",
              "windowId": "0334da2a-91b0-42c5-6156-76a5eba87430"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "prompt": "What is the main idea of this page?"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "modelResponse": "modelResponse"
                },
                "meta": {
                  "status": "success",
                  "usage": {
                    "credits": 1000000,
                    "id": "id"
                  },
                  "clientProvided": {
                    "clientRequestId": "clientRequestId"
                  },
                  "requestId": "requestId"
                },
                "errors": [
                  {
                    "message": "message",
                    "code": "code",
                    "details": {
                      "key": "value"
                    }
                  }
                ],
                "warnings": [
                  {
                    "message": "message",
                    "code": "code",
                    "details": {
                      "key": "value"
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.airtop.ai/api/v1/sessions/6aac6f73-bd89-4a76-ab32-5a6c422e8b0b/windows/0334da2a-91b0-42c5-6156-76a5eba87430/prompt-content \\\n     -H \"Authorization: Bearer <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"prompt\": \"What is the main idea of this page?\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from airtop import Airtop\n\nclient = Airtop(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.windows.prompt_content(\n    session_id=\"6aac6f73-bd89-4a76-ab32-5a6c422e8b0b\",\n    window_id=\"0334da2a-91b0-42c5-6156-76a5eba87430\",\n    prompt=\"What is the main idea of this page?\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { AirtopClient } from \"@airtop/sdk\";\n\nconst client = new AirtopClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.windows.promptContent(\"6aac6f73-bd89-4a76-ab32-5a6c422e8b0b\", \"0334da2a-91b0-42c5-6156-76a5eba87430\", {\n    prompt: \"What is the main idea of this page?\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "python": {
            "type": "v1",
            "functionInvocation": {
              "imports": [],
              "isOptional": true,
              "templateString": "client.windows.prompt_content(\n\t$FERN_INPUT\n)",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "session_id=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "PATH",
                        "path": "sessionId",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "window_id=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "PATH",
                        "path": "windowId",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "client_request_id=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "clientRequestId",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "cost_threshold_credits=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "costThresholdCredits",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "follow_pagination_links=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "followPaginationLinks",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "prompt=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "prompt",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "time_threshold_seconds=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "timeThresholdSeconds",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",\n\t",
              "type": "generic"
            },
            "clientInstantiation": {
              "imports": [
                "from airtop import Airtop"
              ],
              "isOptional": true,
              "templateString": "client = Airtop($FERN_INPUT, )",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": false,
                    "templateString": "api_key=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "AUTH",
                        "path": "token",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",",
              "type": "generic"
            }
          },
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.windows.promptContent(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "$FERN_INPUT",
                    "isOptional": false,
                    "inputDelimiter": ",\n\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "$FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "PATH",
                              "path": "sessionId"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "$FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "PATH",
                              "path": "windowId"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "clientRequestId: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "clientRequestId"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "costThresholdCredits: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "costThresholdCredits"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "followPaginationLinks: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "followPaginationLinks"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "prompt: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "prompt"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "timeThresholdSeconds: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "timeThresholdSeconds"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { AirtopClient } from \"@airtop/sdk\";"
              ],
              "templateString": "const client = new AirtopClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "apiKey: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_windows.scrape-content": {
        "id": "endpoint_windows.scrape-content",
        "namespace": [
          "subpackage_windows"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/sessions/"
          },
          {
            "type": "pathParameter",
            "value": "sessionId"
          },
          {
            "type": "literal",
            "value": "/windows/"
          },
          {
            "type": "pathParameter",
            "value": "windowId"
          },
          {
            "type": "literal",
            "value": "/scrape-content"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.airtop.ai/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "sessionId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The session id for the window."
          },
          {
            "key": "windowId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The Airtop window id of the browser window to scrape."
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "clientRequestId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "costThresholdCredits",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "long"
                        }
                      }
                    }
                  }
                },
                "description": "A credit threshold that, once exceeded, will cause the operation to be cancelled. Note that this is *not* a hard limit, but a threshold that is checked periodically during the course of fulfilling the request. A default threshold is used if not specified, but you can use this option to increase or decrease as needed. Set to 0 to disable this feature entirely (not recommended)."
              },
              {
                "key": "timeThresholdSeconds",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "long"
                        }
                      }
                    }
                  }
                },
                "description": "A time threshold in seconds that, once exceeded, will cause the operation to be cancelled. Note that this is *not* a hard limit, but a threshold that is checked periodically during the course of fulfilling the request. A default threshold is used if not specified, but you can use this option to increase or decrease as needed. Set to 0 to disable this feature entirely (not recommended).\n\nThis setting does not extend the maximum session duration provided at the time of session creation."
              }
            ]
          }
        },
        "response": {
          "description": "Created",
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ScrapeResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/sessions/6aac6f73-bd89-4a76-ab32-5a6c422e8b0b/windows/0334da2a-91b0-42c5-6156-76a5eba87430/scrape-content",
            "responseStatusCode": 200,
            "pathParameters": {
              "sessionId": "6aac6f73-bd89-4a76-ab32-5a6c422e8b0b",
              "windowId": "0334da2a-91b0-42c5-6156-76a5eba87430"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "modelResponse": {
                    "scrapedContent": {
                      "contentType": "contentType",
                      "text": "text"
                    },
                    "title": "title",
                    "selectedText": "selectedText"
                  }
                },
                "meta": {
                  "status": "success",
                  "usage": {
                    "credits": 1000000,
                    "id": "id"
                  },
                  "clientProvided": {
                    "clientRequestId": "clientRequestId"
                  },
                  "requestId": "requestId"
                },
                "errors": [
                  {
                    "message": "message",
                    "code": "code",
                    "details": {
                      "key": "value"
                    }
                  }
                ],
                "warnings": [
                  {
                    "message": "message",
                    "code": "code",
                    "details": {
                      "key": "value"
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.airtop.ai/api/v1/sessions/6aac6f73-bd89-4a76-ab32-5a6c422e8b0b/windows/0334da2a-91b0-42c5-6156-76a5eba87430/scrape-content \\\n     -H \"Authorization: Bearer <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from airtop import Airtop\n\nclient = Airtop(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.windows.scrape_content(\n    session_id=\"6aac6f73-bd89-4a76-ab32-5a6c422e8b0b\",\n    window_id=\"0334da2a-91b0-42c5-6156-76a5eba87430\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { AirtopClient } from \"@airtop/sdk\";\n\nconst client = new AirtopClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.windows.scrapeContent(\"6aac6f73-bd89-4a76-ab32-5a6c422e8b0b\", \"0334da2a-91b0-42c5-6156-76a5eba87430\");\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "python": {
            "type": "v1",
            "functionInvocation": {
              "imports": [],
              "isOptional": true,
              "templateString": "client.windows.scrape_content(\n\t$FERN_INPUT\n)",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "session_id=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "PATH",
                        "path": "sessionId",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "window_id=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "PATH",
                        "path": "windowId",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "client_request_id=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "clientRequestId",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "cost_threshold_credits=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "costThresholdCredits",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "time_threshold_seconds=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "timeThresholdSeconds",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",\n\t",
              "type": "generic"
            },
            "clientInstantiation": {
              "imports": [
                "from airtop import Airtop"
              ],
              "isOptional": true,
              "templateString": "client = Airtop($FERN_INPUT, )",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": false,
                    "templateString": "api_key=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "AUTH",
                        "path": "token",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",",
              "type": "generic"
            }
          },
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.windows.scrapeContent(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "$FERN_INPUT",
                    "isOptional": false,
                    "inputDelimiter": ",\n\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "$FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "PATH",
                              "path": "sessionId"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "$FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "PATH",
                              "path": "windowId"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "clientRequestId: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "clientRequestId"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "costThresholdCredits: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "costThresholdCredits"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "timeThresholdSeconds: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "timeThresholdSeconds"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { AirtopClient } from \"@airtop/sdk\";"
              ],
              "templateString": "const client = new AirtopClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "apiKey: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_windows.summarize-content": {
        "id": "endpoint_windows.summarize-content",
        "namespace": [
          "subpackage_windows"
        ],
        "availability": "Deprecated",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/sessions/"
          },
          {
            "type": "pathParameter",
            "value": "sessionId"
          },
          {
            "type": "literal",
            "value": "/windows/"
          },
          {
            "type": "pathParameter",
            "value": "windowId"
          },
          {
            "type": "literal",
            "value": "/summarize-content"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.airtop.ai/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "sessionId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The session id for the window."
          },
          {
            "key": "windowId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The Airtop window id of the browser window to summarize."
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "clientRequestId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "configuration",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:SummaryConfig"
                      }
                    }
                  }
                },
                "description": "Request configuration"
              },
              {
                "key": "costThresholdCredits",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "long"
                        }
                      }
                    }
                  }
                },
                "description": "A credit threshold that, once exceeded, will cause the operation to be cancelled. Note that this is *not* a hard limit, but a threshold that is checked periodically during the course of fulfilling the request. A default threshold is used if not specified, but you can use this option to increase or decrease as needed. Set to 0 to disable this feature entirely (not recommended)."
              },
              {
                "key": "prompt",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "An optional prompt providing the Airtop AI model with additional direction or constraints about the summary (such as desired length)."
              },
              {
                "key": "timeThresholdSeconds",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "long"
                        }
                      }
                    }
                  }
                },
                "description": "A time threshold in seconds that, once exceeded, will cause the operation to be cancelled. Note that this is *not* a hard limit, but a threshold that is checked periodically during the course of fulfilling the request. A default threshold is used if not specified, but you can use this option to increase or decrease as needed. Set to 0 to disable this feature entirely (not recommended).\n\nThis setting does not extend the maximum session duration provided at the time of session creation."
              }
            ]
          }
        },
        "response": {
          "description": "Created",
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:AiPromptResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/sessions/6aac6f73-bd89-4a76-ab32-5a6c422e8b0b/windows/0334da2a-91b0-42c5-6156-76a5eba87430/summarize-content",
            "responseStatusCode": 200,
            "pathParameters": {
              "sessionId": "6aac6f73-bd89-4a76-ab32-5a6c422e8b0b",
              "windowId": "0334da2a-91b0-42c5-6156-76a5eba87430"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "modelResponse": "modelResponse"
                },
                "meta": {
                  "status": "success",
                  "usage": {
                    "credits": 1000000,
                    "id": "id"
                  },
                  "clientProvided": {
                    "clientRequestId": "clientRequestId"
                  },
                  "requestId": "requestId"
                },
                "errors": [
                  {
                    "message": "message",
                    "code": "code",
                    "details": {
                      "key": "value"
                    }
                  }
                ],
                "warnings": [
                  {
                    "message": "message",
                    "code": "code",
                    "details": {
                      "key": "value"
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.airtop.ai/api/v1/sessions/6aac6f73-bd89-4a76-ab32-5a6c422e8b0b/windows/0334da2a-91b0-42c5-6156-76a5eba87430/summarize-content \\\n     -H \"Authorization: Bearer <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from airtop import Airtop\n\nclient = Airtop(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.windows.summarize_content(\n    session_id=\"6aac6f73-bd89-4a76-ab32-5a6c422e8b0b\",\n    window_id=\"0334da2a-91b0-42c5-6156-76a5eba87430\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { AirtopClient } from \"@airtop/sdk\";\n\nconst client = new AirtopClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.windows.summarizeContent(\"6aac6f73-bd89-4a76-ab32-5a6c422e8b0b\", \"0334da2a-91b0-42c5-6156-76a5eba87430\");\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "python": {
            "type": "v1",
            "functionInvocation": {
              "imports": [],
              "isOptional": true,
              "templateString": "client.windows.summarize_content(\n\t$FERN_INPUT\n)",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "session_id=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "PATH",
                        "path": "sessionId",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "window_id=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "PATH",
                        "path": "windowId",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "client_request_id=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "clientRequestId",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "cost_threshold_credits=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "costThresholdCredits",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "prompt=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "prompt",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "time_threshold_seconds=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "timeThresholdSeconds",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",\n\t",
              "type": "generic"
            },
            "clientInstantiation": {
              "imports": [
                "from airtop import Airtop"
              ],
              "isOptional": true,
              "templateString": "client = Airtop($FERN_INPUT, )",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": false,
                    "templateString": "api_key=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "AUTH",
                        "path": "token",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",",
              "type": "generic"
            }
          },
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.windows.summarizeContent(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "$FERN_INPUT",
                    "isOptional": false,
                    "inputDelimiter": ",\n\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "$FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "PATH",
                              "path": "sessionId"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "$FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "PATH",
                              "path": "windowId"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "clientRequestId: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "clientRequestId"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "costThresholdCredits: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "costThresholdCredits"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "prompt: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "prompt"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "timeThresholdSeconds: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "timeThresholdSeconds"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { AirtopClient } from \"@airtop/sdk\";"
              ],
              "templateString": "const client = new AirtopClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "apiKey: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      }
    },
    "websockets": {},
    "webhooks": {},
    "types": {
      "type_sessions:SessionsListRequestStatus": {
        "name": "SessionsListRequestStatus",
        "description": "Status of the session to get.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "awaitingCapacity"
            },
            {
              "value": "initializing"
            },
            {
              "value": "running"
            },
            {
              "value": "ended"
            }
          ]
        }
      },
      "type_windows:CreateWindowInputV1BodyWaitUntil": {
        "name": "CreateWindowInputV1BodyWaitUntil",
        "description": "Wait until the specified loading event occurs. Defaults to 'load', which waits until the page dom and it's assets have loaded. 'domContentLoaded' will wait until the dom has loaded, and 'complete' will wait until the page and all it's iframes have loaded it's dom and assets.",
        "shape": {
          "type": "enum",
          "default": "load",
          "values": [
            {
              "value": "load"
            },
            {
              "value": "domContentLoaded"
            },
            {
              "value": "complete"
            }
          ]
        }
      },
      "type_windows:WindowLoadUrlV1BodyWaitUntil": {
        "name": "WindowLoadUrlV1BodyWaitUntil",
        "description": "Wait until the specified loading event occurs. Defaults to 'load', which waits until the page dom and it's assets have loaded. 'domContentLoaded' will wait until the dom has loaded, and 'complete' will wait until the page and all it's iframes have loaded it's dom and assets.",
        "shape": {
          "type": "enum",
          "default": "load",
          "values": [
            {
              "value": "load"
            },
            {
              "value": "domContentLoaded"
            },
            {
              "value": "complete"
            }
          ]
        }
      },
      "type_:AiPromptResponse": {
        "name": "AiPromptResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:AiResponseEnvelope"
                }
              }
            },
            {
              "key": "errors",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Issue"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "meta",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ExternalSessionAiResponseMetadata"
                }
              }
            },
            {
              "key": "warnings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Issue"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:AiResponseEnvelope": {
        "name": "AiResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "modelResponse",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ClientProvidedResponseMetadata": {
        "name": "ClientProvidedResponseMetadata",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "clientRequestId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:EmptyResponse": {
        "name": "EmptyResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:EmptyResponseJson"
                }
              }
            },
            {
              "key": "errors",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Issue"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "meta",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:EnvelopeStatusDefaultMeta"
                }
              }
            },
            {
              "key": "warnings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Issue"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:EmptyResponseJson": {
        "name": "EmptyResponseJson",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "success",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Indicates if the operations was successful"
            }
          ]
        }
      },
      "type_:EnvelopeDefaultMeta": {
        "name": "EnvelopeDefaultMeta",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "requestId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:EnvelopeStatusDefaultMetaStatus": {
        "name": "EnvelopeStatusDefaultMetaStatus",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "success"
            },
            {
              "value": " failure"
            },
            {
              "value": " timeout"
            }
          ]
        }
      },
      "type_:EnvelopeStatusDefaultMeta": {
        "name": "EnvelopeStatusDefaultMeta",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "requestId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:EnvelopeStatusDefaultMetaStatus"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ErrorDetail": {
        "name": "ErrorDetail",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "location",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Where the error occurred, e.g. 'body.items[3].tags' or 'path.thing-id'"
            },
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Error message text"
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ErrorModel": {
        "name": "ErrorModel",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "detail",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A human-readable explanation specific to this occurrence of the problem."
            },
            {
              "key": "errors",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ErrorDetail"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Optional list of individual error details"
            },
            {
              "key": "instance",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A URI reference that identifies the specific occurrence of the problem."
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "long"
                      }
                    }
                  }
                }
              },
              "description": "HTTP status code"
            },
            {
              "key": "title",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A short, human-readable summary of the problem type. This value should not change between occurrences of the error."
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "default": "about:blank"
                      }
                    }
                  }
                }
              },
              "description": "A URI reference to human-readable documentation for the error."
            }
          ]
        }
      },
      "type_:ExternalProfileV1": {
        "name": "ExternalProfileV1",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "profileId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 1
                  }
                }
              },
              "description": "Id of the profile."
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Status of the profile."
            }
          ]
        }
      },
      "type_:ExternalSessionAiResponseMetadataStatus": {
        "name": "ExternalSessionAiResponseMetadataStatus",
        "description": "Outcome of the operation.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "success"
            },
            {
              "value": "partial"
            },
            {
              "value": "failure"
            }
          ]
        }
      },
      "type_:ExternalSessionAiResponseMetadata": {
        "name": "ExternalSessionAiResponseMetadata",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "clientProvided",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ClientProvidedResponseMetadata"
                    }
                  }
                }
              }
            },
            {
              "key": "requestId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ExternalSessionAiResponseMetadataStatus"
                }
              },
              "description": "Outcome of the operation."
            },
            {
              "key": "usage",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ExternalSessionAiResponseMetadataUsage"
                }
              }
            }
          ]
        }
      },
      "type_:ExternalSessionAiResponseMetadataUsage": {
        "name": "ExternalSessionAiResponseMetadataUsage",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "credits",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              },
              "description": "The credit usage for this request"
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The id of the request"
            }
          ]
        }
      },
      "type_:ExternalSessionConfig": {
        "name": "ExternalSessionConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "baseProfileId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Id of a profile to load into the session."
            },
            {
              "key": "persistProfile",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Persist the profile."
            },
            {
              "key": "timeoutMinutes",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 1440,
                        "default": 10
                      }
                    }
                  }
                }
              },
              "description": "Max length of session in minutes, after which it will terminate if not already deleted."
            }
          ]
        }
      },
      "type_:ExternalSessionWithConnectionInfo": {
        "name": "ExternalSessionWithConnectionInfo",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cdpUrl",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Url to connect to chrome devtools protocol port on the Airtop browser. Include the header 'Authorization: Bearer <api-key>.'"
            },
            {
              "key": "cdpWsUrl",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Websocket url to connect to the Airtop browser for CDP-based automation frameworks (e.g. Puppeteer or Playwright). Include the header 'Authorization: Bearer <airtop-api-key>.'"
            },
            {
              "key": "chromedriverUrl",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Websocket url to connect to the Airtop browser for webdriver-based automation frameworks (e.g. Selenium). Include the header 'Authorization: Bearer <airtop-api-key>.'"
            },
            {
              "key": "configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ExternalSessionConfig"
                }
              },
              "description": "Session configuration details."
            },
            {
              "key": "currentUsage",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "long"
                      }
                    }
                  }
                }
              },
              "description": "Current usage in minutes."
            },
            {
              "key": "dateCreated",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Date the session was created."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Id of the session."
            },
            {
              "key": "lastActivity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Date of the last activity."
            },
            {
              "key": "profileId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Id of a newly persisted profile."
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Session status."
            }
          ]
        }
      },
      "type_:Issue": {
        "name": "Issue",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Issue code."
            },
            {
              "key": "details",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Any associated details."
            },
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Message describing the issue."
            }
          ]
        }
      },
      "type_:Pagination": {
        "name": "Pagination",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "currentLimit",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "currentPage",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "finalCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "hasMore",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "initialCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "nextOffset",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "numberOfPages",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "totalItems",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ProfilesResponse": {
        "name": "ProfilesResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ExternalProfileV1"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "errors",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Issue"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "meta",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:EnvelopeDefaultMeta"
                }
              }
            },
            {
              "key": "warnings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Issue"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PromptContentConfig": {
        "name": "PromptContentConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "outputSchema",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "JSON schema defining the structure of the output. If not provided, the format of the output might vary."
            }
          ]
        }
      },
      "type_:PromptContentExperimentalConfig": {
        "name": "PromptContentExperimentalConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "includeVisualAnalysis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "default": "auto"
                      }
                    }
                  }
                }
              },
              "description": "If set to 'enabled', Airtop AI will also analyze the web page visually when fulfilling the request. Note that this can add to both the execution time and cost of the operation. If the page is too large, the context window can be exceeded and the request will fail. If set to 'auto' or 'disabled', no visual analysis will be conducted. If 'followPaginationLinks' is set to true, visual analysis will be conducted unless 'includeVisualAnalysis' is explicitly set to 'disabled'."
            }
          ]
        }
      },
      "type_:ScrapeResponse": {
        "name": "ScrapeResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ScrapeResponseEnvelope"
                }
              }
            },
            {
              "key": "errors",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Issue"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "meta",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ExternalSessionAiResponseMetadata"
                }
              }
            },
            {
              "key": "warnings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Issue"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ScrapeResponseContent": {
        "name": "ScrapeResponseContent",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "contentType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The mime type of content extracted from the browser window (usually text/plain but could be text/csv or other types depending on the site)."
            },
            {
              "key": "text",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The text content of the browser window."
            }
          ]
        }
      },
      "type_:ScrapeResponseEnvelope": {
        "name": "ScrapeResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "modelResponse",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ScrapeResponseOutput"
                }
              },
              "description": "The response from the Airtop AI model."
            }
          ]
        }
      },
      "type_:ScrapeResponseOutput": {
        "name": "ScrapeResponseOutput",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "scrapedContent",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ScrapeResponseContent"
                }
              },
              "description": "The scraped content of the browser window."
            },
            {
              "key": "selectedText",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Any text that was highlighted in the browser window."
            },
            {
              "key": "title",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The title of the browser page."
            }
          ]
        }
      },
      "type_:Proxy": {
        "name": "Proxy",
        "description": "Proxy object with url of the proxy as a parameter. Takes optional username and password.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "password",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "username",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:CustomProxy": {
        "name": "CustomProxy",
        "description": "Configuration for a single custom proxy.",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Url of the proxy."
            },
            {
              "displayName": "Proxy",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:Proxy"
                }
              },
              "description": "Proxy object with url of the proxy as a parameter. Takes optional username and password."
            }
          ]
        }
      },
      "type_:SessionConfigV1ProxyItem": {
        "name": "SessionConfigV1ProxyItem",
        "description": "You can set multiple proxies. You associate each proxy with a domain pattern. If the domain matches the pattern, the proxy is used. Pattern can contain '?' to match any single character, and '_' to match any sequence of characters. For example, '_.example.com' will match 'www.example.com' and 'sub.example.com'",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "domainPattern",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "relay",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CustomProxy"
                }
              },
              "description": "Configuration for a single custom proxy."
            }
          ]
        }
      },
      "type_:SessionConfigV1Proxy": {
        "name": "SessionConfigV1Proxy",
        "description": "Proxy configuration.",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "displayName": "Custom Proxy",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CustomProxy"
                }
              },
              "description": "Configuration for a single custom proxy."
            },
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:SessionConfigV1ProxyItem"
                    }
                  }
                }
              },
              "description": "Array of proxy configurations. Includes a domain pattern and a proxy configuration to assign proxies to specific domains."
            }
          ]
        }
      },
      "type_:SessionConfigV1": {
        "name": "SessionConfigV1",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "baseProfileId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Id of a profile to load into the session."
            },
            {
              "key": "persistProfile",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Persist the profile."
            },
            {
              "key": "proxy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:SessionConfigV1Proxy"
                    }
                  }
                }
              },
              "description": "Proxy configuration."
            },
            {
              "key": "timeoutMinutes",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 1440,
                        "default": 10
                      }
                    }
                  }
                }
              },
              "description": "Max length of session in minutes, after which it will terminate if not already deleted."
            }
          ]
        }
      },
      "type_:SessionResponse": {
        "name": "SessionResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ExternalSessionWithConnectionInfo"
                }
              }
            },
            {
              "key": "errors",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Issue"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "meta",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:EnvelopeDefaultMeta"
                }
              }
            },
            {
              "key": "warnings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Issue"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:SessionsResponse": {
        "name": "SessionsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:SessionsWithPagination"
                }
              }
            },
            {
              "key": "errors",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Issue"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "meta",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:EnvelopeDefaultMeta"
                }
              }
            },
            {
              "key": "warnings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Issue"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:SessionsWithPagination": {
        "name": "SessionsWithPagination",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "pagination",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:Pagination"
                }
              },
              "description": "Pagination details."
            },
            {
              "key": "sessions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ExternalSessionWithConnectionInfo"
                        }
                      }
                    }
                  }
                }
              },
              "description": "List of sessions."
            }
          ]
        }
      },
      "type_:SummaryConfig": {
        "name": "SummaryConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "outputSchema",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "JSON schema defining the structure of the output. If not provided, the format of the output might vary."
            }
          ]
        }
      },
      "type_:SummaryExperimentalConfig": {
        "name": "SummaryExperimentalConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "includeVisualAnalysis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "default": "auto"
                      }
                    }
                  }
                }
              },
              "description": "If set to 'enabled', Airtop AI will also analyze the web page visually when fulfilling the request. Note that this can add to both the execution time and cost of the operation. If the page is too large, the context window can be exceeded and the request will fail. If set to 'auto' or 'disabled', no visual analysis will be conducted."
            }
          ]
        }
      },
      "type_:Window": {
        "name": "Window",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "liveViewUrl",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Url for loading a browser window live view that is configured according to the request options like screenResolution, disableResize, etc."
            },
            {
              "key": "windowId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Airtop window ID of the browser window"
            }
          ]
        }
      },
      "type_:WindowId": {
        "name": "WindowId",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "targetId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "CDP Window target ID"
            },
            {
              "key": "windowId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Airtop window ID of the browser window"
            }
          ]
        }
      },
      "type_:WindowIdResponse": {
        "name": "WindowIdResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:WindowId"
                }
              }
            },
            {
              "key": "errors",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Issue"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "meta",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:EnvelopeDefaultMeta"
                }
              }
            },
            {
              "key": "warnings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Issue"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:WindowResponse": {
        "name": "WindowResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:Window"
                }
              }
            },
            {
              "key": "errors",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Issue"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "meta",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:EnvelopeDefaultMeta"
                }
              }
            },
            {
              "key": "warnings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Issue"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    "subpackages": {
      "subpackage_profiles": {
        "id": "subpackage_profiles",
        "name": "profiles"
      },
      "subpackage_sessions": {
        "id": "subpackage_sessions",
        "name": "sessions"
      },
      "subpackage_windows": {
        "id": "subpackage_windows",
        "name": "windows"
      }
    },
    "auths": {
      "default": {
        "type": "bearerAuth",
        "tokenName": "apiKey"
      }
    }
  }
]