[
  {
    "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
    "endpoints": {
      "endpoint_integrations/amazon.createSession": {
        "id": "endpoint_integrations/amazon.createSession",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/amazon"
        ],
        "displayName": "Create Session",
        "operationId": "create-session",
        "description": "Create a Amazon session that you can connect to via playwright. See [this link](/overview/integrations/custom-automations) for more info.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/amazon"
          },
          {
            "type": "literal",
            "value": "/session"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/types:CreateSessionResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/amazon/session",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "wsUrl": "string",
                "postSignInUrl": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon/session",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon/session",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon/session",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon/session",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon/session",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.createSession();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.amazon.createSession()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/amazon.getBuyAgainItems": {
        "id": "endpoint_integrations/amazon.getBuyAgainItems",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/amazon"
        ],
        "displayName": "Get Buy Again Items",
        "operationId": "get-buy-again-items",
        "description": "Get a list of products that you can buy again or have purchased before.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/amazon"
          },
          {
            "type": "literal",
            "value": "/items/buy-again"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/amazon:AmazonGetBuyAgainResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/amazon/items/buy-again",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "items": [
                  {
                    "title": "string",
                    "price": "string",
                    "url": "string",
                    "imageUrl": "string",
                    "availability": "string",
                    "brand": "string",
                    "pricePerUnit": "string",
                    "rating": "string",
                    "reviewCount": "string",
                    "merchant": "string",
                    "purchaseDate": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/amazon/items/buy-again \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.getBuyAgainItems();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon/items/buy-again",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/amazon/items/buy-again \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.getBuyAgainItems();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon/items/buy-again",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/amazon/items/buy-again \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.getBuyAgainItems();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon/items/buy-again",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/amazon/items/buy-again \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.getBuyAgainItems();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon/items/buy-again",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/amazon/items/buy-again \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.getBuyAgainItems();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon/items/buy-again",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/amazon/items/buy-again \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.getBuyAgainItems();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.amazon.getBuyAgainItems()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/amazon.buyNow": {
        "id": "endpoint_integrations/amazon.buyNow",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/amazon"
        ],
        "displayName": "Buy Now",
        "operationId": "buy-now",
        "description": "Order an item. **The end user must have a default address and payment method set**. Either ASIN or a valid amazon url to the item must be present. If both are present, the ASIN will be used.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/amazon"
          },
          {
            "type": "literal",
            "value": "/items/buy-now"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "asin",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "key": "itemUrl",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/amazon:AmazonOrderItemResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/amazon/items/buy-now",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon/items/buy-now \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.buyNow({\n    asin: \"string\",\n    itemUrl: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon/items/buy-now",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon/items/buy-now \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.buyNow({\n    asin: \"string\",\n    itemUrl: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon/items/buy-now",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon/items/buy-now \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.buyNow({\n    asin: \"string\",\n    itemUrl: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon/items/buy-now",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon/items/buy-now \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.buyNow({\n    asin: \"string\",\n    itemUrl: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon/items/buy-now",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon/items/buy-now \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.buyNow({\n    asin: \"string\",\n    itemUrl: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon/items/buy-now",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon/items/buy-now \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.buyNow({\n    asin: \"string\",\n    itemUrl: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.amazon.buyNow(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "asin: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "asin"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "itemUrl: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "itemUrl"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/amazon.addToCart": {
        "id": "endpoint_integrations/amazon.addToCart",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/amazon"
        ],
        "displayName": "Add To Cart",
        "operationId": "add-to-cart",
        "description": "Add an item to the cart. **The end user must have a default address and payment method set**. Either ASIN or a valid amazon url to the item must be present. If both are present, the ASIN will be used.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/amazon"
          },
          {
            "type": "literal",
            "value": "/items/add-to-cart"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "asin",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "key": "itemUrl",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/amazon:AmazonAddToCartResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/amazon/items/add-to-cart",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon/items/add-to-cart \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.addToCart({\n    asin: \"string\",\n    itemUrl: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon/items/add-to-cart",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon/items/add-to-cart \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.addToCart({\n    asin: \"string\",\n    itemUrl: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon/items/add-to-cart",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon/items/add-to-cart \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.addToCart({\n    asin: \"string\",\n    itemUrl: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon/items/add-to-cart",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon/items/add-to-cart \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.addToCart({\n    asin: \"string\",\n    itemUrl: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon/items/add-to-cart",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon/items/add-to-cart \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.addToCart({\n    asin: \"string\",\n    itemUrl: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon/items/add-to-cart",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon/items/add-to-cart \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.addToCart({\n    asin: \"string\",\n    itemUrl: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.amazon.addToCart(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "asin: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "asin"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "itemUrl: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "itemUrl"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/amazon.search": {
        "id": "endpoint_integrations/amazon.search",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/amazon"
        ],
        "displayName": "Search",
        "operationId": "search",
        "description": "Search for items.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/amazon"
          },
          {
            "type": "literal",
            "value": "/items/search"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "queryParameters": [
          {
            "key": "query",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "isWholeFoods",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/amazon:AmazonSearchItemsResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/amazon/items/search",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "query": "string",
              "isWholeFoods": true
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "items": [
                  {
                    "title": "string",
                    "price": "string",
                    "url": "string",
                    "imageUrl": "string",
                    "availability": "string",
                    "brand": "string",
                    "pricePerUnit": "string",
                    "rating": "string",
                    "reviewCount": "string",
                    "merchant": "string",
                    "purchaseDate": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/amazon/items/search \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d query=string \\\n     -d isWholeFoods=true",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.search({\n    query: \"string\",\n    isWholeFoods: true\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon/items/search",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {
              "query": "string",
              "isWholeFoods": true
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/amazon/items/search \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d query=string \\\n     -d isWholeFoods=true",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.search({\n    query: \"string\",\n    isWholeFoods: true\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon/items/search",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "query": "string",
              "isWholeFoods": true
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/amazon/items/search \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d query=string \\\n     -d isWholeFoods=true",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.search({\n    query: \"string\",\n    isWholeFoods: true\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon/items/search",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {
              "query": "string",
              "isWholeFoods": true
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/amazon/items/search \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d query=string \\\n     -d isWholeFoods=true",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.search({\n    query: \"string\",\n    isWholeFoods: true\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon/items/search",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "query": "string",
              "isWholeFoods": true
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/amazon/items/search \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d query=string \\\n     -d isWholeFoods=true",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.search({\n    query: \"string\",\n    isWholeFoods: true\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon/items/search",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "query": "string",
              "isWholeFoods": true
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/amazon/items/search \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d query=string \\\n     -d isWholeFoods=true",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.search({\n    query: \"string\",\n    isWholeFoods: true\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.amazon.search(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "query: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "query"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "isWholeFoods: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "isWholeFoods"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/amazonBusiness.createSession": {
        "id": "endpoint_integrations/amazonBusiness.createSession",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/amazonBusiness"
        ],
        "displayName": "Create Session",
        "operationId": "create-session",
        "description": "Create a Amazon business session that you can connect to via playwright. See [this link](/overview/integrations/custom-automations) for more info.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/amazon-business"
          },
          {
            "type": "literal",
            "value": "/session"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/types:CreateSessionResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/amazon-business/session",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "wsUrl": "string",
                "postSignInUrl": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon-business/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon-business/session",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon-business/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon-business/session",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon-business/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon-business/session",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon-business/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon-business/session",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon-business/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon-business/session",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon-business/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.createSession();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.amazonBusiness.createSession()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/amazonBusiness.getOrders": {
        "id": "endpoint_integrations/amazonBusiness.getOrders",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/amazonBusiness"
        ],
        "displayName": "Get Orders",
        "operationId": "get-orders",
        "description": "Get your Amazon Business orders. The default timespan is 30 days and default startIndex is 0.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/amazon-business"
          },
          {
            "type": "literal",
            "value": "/orders"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "queryParameters": [
          {
            "key": "timespan",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_integrations/amazonBusiness:OrdersTimespan"
                  }
                }
              }
            }
          },
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "startIndex",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/amazonBusiness:AmazonBusinessGetOrdersResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/amazon-business/orders",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "timespan": "30d",
              "limit": 0
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "orders": [
                  {
                    "date": "2023-01-01T00:00:00Z",
                    "total": "string",
                    "orderNumber": "string",
                    "items": [
                      "string"
                    ],
                    "address": {
                      "name": "string",
                      "addressLine1": "string",
                      "addressLine2": "string",
                      "country": "string"
                    }
                  }
                ],
                "pageInfo": {
                  "total": 0,
                  "next": 0
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/amazon-business/orders \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d timespan=30d \\\n     -d limit=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.getOrders({\n    timespan: Keet.OrdersTimespan.ThirtyDays,\n    limit: 1,\n    startIndex: 1\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon-business/orders",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {
              "timespan": "30d",
              "limit": 0
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/amazon-business/orders \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d timespan=30d \\\n     -d limit=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.getOrders({\n    timespan: Keet.OrdersTimespan.ThirtyDays,\n    limit: 1,\n    startIndex: 1\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon-business/orders",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "timespan": "30d",
              "limit": 0
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/amazon-business/orders \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d timespan=30d \\\n     -d limit=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.getOrders({\n    timespan: Keet.OrdersTimespan.ThirtyDays,\n    limit: 1,\n    startIndex: 1\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon-business/orders",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {
              "timespan": "30d",
              "limit": 0
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/amazon-business/orders \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d timespan=30d \\\n     -d limit=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.getOrders({\n    timespan: Keet.OrdersTimespan.ThirtyDays,\n    limit: 1,\n    startIndex: 1\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon-business/orders",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "timespan": "30d",
              "limit": 0
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/amazon-business/orders \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d timespan=30d \\\n     -d limit=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.getOrders({\n    timespan: Keet.OrdersTimespan.ThirtyDays,\n    limit: 1,\n    startIndex: 1\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon-business/orders",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "timespan": "30d",
              "limit": 0
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/amazon-business/orders \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d timespan=30d \\\n     -d limit=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.getOrders({\n    timespan: Keet.OrdersTimespan.ThirtyDays,\n    limit: 1,\n    startIndex: 1\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.amazonBusiness.getOrders(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "enum",
                          "imports": [],
                          "isOptional": true,
                          "values": {
                            "30d": "Keet.OrdersTimespan.ThirtyDays",
                            "3m": "Keet.OrdersTimespan.ThreeMonths",
                            "1y": "Keet.OrdersTimespan.OneYear"
                          },
                          "templateString": "timespan: $FERN_INPUT",
                          "templateInput": {
                            "location": "QUERY",
                            "path": "timespan"
                          }
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "limit: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "limit"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "startIndex: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "startIndex"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/amazonBusiness.getBuyAgainItems": {
        "id": "endpoint_integrations/amazonBusiness.getBuyAgainItems",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/amazonBusiness"
        ],
        "displayName": "Get Buy Again Items",
        "operationId": "get-buy-again-items",
        "description": "Get a list of products that you can buy again or have purchased before.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/amazon-business"
          },
          {
            "type": "literal",
            "value": "/items/buy-again"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/amazonBusiness:AmazonBusinessGetBuyAgainResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/amazon-business/items/buy-again",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "items": [
                  {
                    "title": "string",
                    "brand": "string",
                    "price": "string",
                    "url": "string",
                    "imageUrl": "string",
                    "availability": "string",
                    "pricePerUnit": "string",
                    "rating": "string",
                    "reviewCount": "string",
                    "merchant": "string",
                    "purchaseDate": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/amazon-business/items/buy-again \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.getBuyAgainItems();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon-business/items/buy-again",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/amazon-business/items/buy-again \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.getBuyAgainItems();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon-business/items/buy-again",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/amazon-business/items/buy-again \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.getBuyAgainItems();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon-business/items/buy-again",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/amazon-business/items/buy-again \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.getBuyAgainItems();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon-business/items/buy-again",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/amazon-business/items/buy-again \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.getBuyAgainItems();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon-business/items/buy-again",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/amazon-business/items/buy-again \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.getBuyAgainItems();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.amazonBusiness.getBuyAgainItems()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/amazonBusiness.buyNow": {
        "id": "endpoint_integrations/amazonBusiness.buyNow",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/amazonBusiness"
        ],
        "displayName": "Buy Now",
        "operationId": "buy-now",
        "description": "Order an item. **The end user must have a default address and payment method set**. Either ASIN or a valid amazon url to the item must be present. If both are present, the ASIN will be used.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/amazon-business"
          },
          {
            "type": "literal",
            "value": "/items/buy-now"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "itemUrl",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "key": "asin",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/amazonBusiness:AmazonBusinessOrderItemResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/amazon-business/items/buy-now",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon-business/items/buy-now \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.buyNow({\n    itemUrl: \"string\",\n    asin: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon-business/items/buy-now",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon-business/items/buy-now \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.buyNow({\n    itemUrl: \"string\",\n    asin: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon-business/items/buy-now",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon-business/items/buy-now \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.buyNow({\n    itemUrl: \"string\",\n    asin: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon-business/items/buy-now",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon-business/items/buy-now \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.buyNow({\n    itemUrl: \"string\",\n    asin: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon-business/items/buy-now",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon-business/items/buy-now \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.buyNow({\n    itemUrl: \"string\",\n    asin: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon-business/items/buy-now",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon-business/items/buy-now \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.buyNow({\n    itemUrl: \"string\",\n    asin: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.amazonBusiness.buyNow(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "itemUrl: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "itemUrl"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "asin: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "asin"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/amazonSeller.createSession": {
        "id": "endpoint_integrations/amazonSeller.createSession",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/amazonSeller"
        ],
        "displayName": "Create Session",
        "operationId": "create-session",
        "description": "Create a Amazon Seller session that you can connect to via playwright. See [this link](/overview/integrations/custom-automations) for more info.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/amazon-seller"
          },
          {
            "type": "literal",
            "value": "/session"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/types:CreateSessionResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/amazon-seller/session",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "wsUrl": "string",
                "postSignInUrl": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon-seller/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonSeller.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon-seller/session",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon-seller/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonSeller.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon-seller/session",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon-seller/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonSeller.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon-seller/session",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon-seller/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonSeller.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon-seller/session",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon-seller/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonSeller.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/amazon-seller/session",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/amazon-seller/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonSeller.createSession();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.amazonSeller.createSession()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/dispatchMe.createSession": {
        "id": "endpoint_integrations/dispatchMe.createSession",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/dispatchMe"
        ],
        "displayName": "Create Session",
        "operationId": "create-session",
        "description": "Create a Dispatch Me session that you can connect to via playwright. See [this link](/overview/integrations/custom-automations) for more info.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/dispatch-me"
          },
          {
            "type": "literal",
            "value": "/session"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/types:CreateSessionResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/dispatch-me/session",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "wsUrl": "string",
                "postSignInUrl": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/dispatch-me/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/session",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/dispatch-me/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/session",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/dispatch-me/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/session",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/dispatch-me/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/session",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/dispatch-me/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/session",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/dispatch-me/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createSession();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.dispatchMe.createSession()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/dispatchMe.editCustomer": {
        "id": "endpoint_integrations/dispatchMe.editCustomer",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/dispatchMe"
        ],
        "displayName": "Edit Customer",
        "operationId": "edit-customer",
        "method": "PUT",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/dispatch-me"
          },
          {
            "type": "literal",
            "value": "/customers/"
          },
          {
            "type": "pathParameter",
            "value": "customerId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "pathParameters": [
          {
            "key": "customerId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "customer",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_integrations/dispatchMe:DispatchMeCustomer"
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/dispatchMe:EditCustomerResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/dispatch-me/customers/:customerId",
            "responseStatusCode": 200,
            "pathParameters": {
              "customerId": ":customerId"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "customer": {
                  "firstName": "string",
                  "lastName": "string",
                  "organizationId": "string",
                  "companyName": "string",
                  "billingAddress": {
                    "street1": "string",
                    "street2": "string",
                    "city": "string",
                    "state": "string",
                    "postalCode": "string",
                    "district": "string",
                    "county": "string",
                    "country": "string",
                    "formattedAddress": "string",
                    "timezone": "string",
                    "latitude": 1,
                    "longitude": 1
                  },
                  "homeAddress": {
                    "street1": "string",
                    "street2": "string",
                    "city": "string",
                    "state": "string",
                    "postalCode": "string",
                    "district": "string",
                    "county": "string",
                    "country": "string",
                    "formattedAddress": "string",
                    "timezone": "string",
                    "latitude": 1,
                    "longitude": 1
                  },
                  "email": "string",
                  "notes": "string",
                  "phoneNumbers": [
                    {
                      "primary": true,
                      "number": "string"
                    }
                  ],
                  "labels": [
                    "string"
                  ]
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "customer": {},
                "status": "ok"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.trykeet.com/v1/dispatch-me/customers/:customerId \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"customer\": {\n    \"firstName\": \"string\",\n    \"lastName\": \"string\",\n    \"organizationId\": \"string\",\n    \"companyName\": \"string\",\n    \"billingAddress\": {\n      \"street1\": \"string\",\n      \"street2\": \"string\",\n      \"city\": \"string\",\n      \"state\": \"string\",\n      \"postalCode\": \"string\",\n      \"district\": \"string\",\n      \"county\": \"string\",\n      \"country\": \"string\",\n      \"formattedAddress\": \"string\",\n      \"timezone\": \"string\",\n      \"latitude\": 1,\n      \"longitude\": 1\n    },\n    \"homeAddress\": {\n      \"street1\": \"string\",\n      \"street2\": \"string\",\n      \"city\": \"string\",\n      \"state\": \"string\",\n      \"postalCode\": \"string\",\n      \"district\": \"string\",\n      \"county\": \"string\",\n      \"country\": \"string\",\n      \"formattedAddress\": \"string\",\n      \"timezone\": \"string\",\n      \"latitude\": 1,\n      \"longitude\": 1\n    },\n    \"email\": \"string\",\n    \"notes\": \"string\",\n    \"phoneNumbers\": [\n      {\n        \"primary\": true,\n        \"number\": \"string\"\n      }\n    ],\n    \"labels\": [\n      \"string\"\n    ]\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.editCustomer(\"string\", {\n    customer: {\n        firstName: \"string\",\n        lastName: \"string\",\n        organizationId: \"string\",\n        companyName: \"string\",\n        billingAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        homeAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        email: \"string\",\n        notes: \"string\",\n        phoneNumbers: [{\n                primary: true,\n                number: \"string\"\n            }],\n        labels: [\"string\"]\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/customers/:customerId",
            "responseStatusCode": 401,
            "pathParameters": {
              "customerId": ":customerId"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "customer": {
                  "firstName": "string",
                  "lastName": "string",
                  "organizationId": "string",
                  "companyName": "string",
                  "billingAddress": {
                    "street1": "string",
                    "street2": "string",
                    "city": "string",
                    "state": "string",
                    "postalCode": "string",
                    "district": "string",
                    "county": "string",
                    "country": "string",
                    "formattedAddress": "string",
                    "timezone": "string",
                    "latitude": 1,
                    "longitude": 1
                  },
                  "homeAddress": {
                    "street1": "string",
                    "street2": "string",
                    "city": "string",
                    "state": "string",
                    "postalCode": "string",
                    "district": "string",
                    "county": "string",
                    "country": "string",
                    "formattedAddress": "string",
                    "timezone": "string",
                    "latitude": 1,
                    "longitude": 1
                  },
                  "email": "string",
                  "notes": "string",
                  "phoneNumbers": [
                    {
                      "primary": true,
                      "number": "string"
                    }
                  ],
                  "labels": [
                    "string"
                  ]
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.trykeet.com/v1/dispatch-me/customers/:customerId \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"customer\": {\n    \"firstName\": \"string\",\n    \"lastName\": \"string\",\n    \"organizationId\": \"string\",\n    \"companyName\": \"string\",\n    \"billingAddress\": {\n      \"street1\": \"string\",\n      \"street2\": \"string\",\n      \"city\": \"string\",\n      \"state\": \"string\",\n      \"postalCode\": \"string\",\n      \"district\": \"string\",\n      \"county\": \"string\",\n      \"country\": \"string\",\n      \"formattedAddress\": \"string\",\n      \"timezone\": \"string\",\n      \"latitude\": 1,\n      \"longitude\": 1\n    },\n    \"homeAddress\": {\n      \"street1\": \"string\",\n      \"street2\": \"string\",\n      \"city\": \"string\",\n      \"state\": \"string\",\n      \"postalCode\": \"string\",\n      \"district\": \"string\",\n      \"county\": \"string\",\n      \"country\": \"string\",\n      \"formattedAddress\": \"string\",\n      \"timezone\": \"string\",\n      \"latitude\": 1,\n      \"longitude\": 1\n    },\n    \"email\": \"string\",\n    \"notes\": \"string\",\n    \"phoneNumbers\": [\n      {\n        \"primary\": true,\n        \"number\": \"string\"\n      }\n    ],\n    \"labels\": [\n      \"string\"\n    ]\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.editCustomer(\"string\", {\n    customer: {\n        firstName: \"string\",\n        lastName: \"string\",\n        organizationId: \"string\",\n        companyName: \"string\",\n        billingAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        homeAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        email: \"string\",\n        notes: \"string\",\n        phoneNumbers: [{\n                primary: true,\n                number: \"string\"\n            }],\n        labels: [\"string\"]\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/customers/:customerId",
            "responseStatusCode": 500,
            "pathParameters": {
              "customerId": ":customerId"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "customer": {
                  "firstName": "string",
                  "lastName": "string",
                  "organizationId": "string",
                  "companyName": "string",
                  "billingAddress": {
                    "street1": "string",
                    "street2": "string",
                    "city": "string",
                    "state": "string",
                    "postalCode": "string",
                    "district": "string",
                    "county": "string",
                    "country": "string",
                    "formattedAddress": "string",
                    "timezone": "string",
                    "latitude": 1,
                    "longitude": 1
                  },
                  "homeAddress": {
                    "street1": "string",
                    "street2": "string",
                    "city": "string",
                    "state": "string",
                    "postalCode": "string",
                    "district": "string",
                    "county": "string",
                    "country": "string",
                    "formattedAddress": "string",
                    "timezone": "string",
                    "latitude": 1,
                    "longitude": 1
                  },
                  "email": "string",
                  "notes": "string",
                  "phoneNumbers": [
                    {
                      "primary": true,
                      "number": "string"
                    }
                  ],
                  "labels": [
                    "string"
                  ]
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.trykeet.com/v1/dispatch-me/customers/:customerId \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"customer\": {\n    \"firstName\": \"string\",\n    \"lastName\": \"string\",\n    \"organizationId\": \"string\",\n    \"companyName\": \"string\",\n    \"billingAddress\": {\n      \"street1\": \"string\",\n      \"street2\": \"string\",\n      \"city\": \"string\",\n      \"state\": \"string\",\n      \"postalCode\": \"string\",\n      \"district\": \"string\",\n      \"county\": \"string\",\n      \"country\": \"string\",\n      \"formattedAddress\": \"string\",\n      \"timezone\": \"string\",\n      \"latitude\": 1,\n      \"longitude\": 1\n    },\n    \"homeAddress\": {\n      \"street1\": \"string\",\n      \"street2\": \"string\",\n      \"city\": \"string\",\n      \"state\": \"string\",\n      \"postalCode\": \"string\",\n      \"district\": \"string\",\n      \"county\": \"string\",\n      \"country\": \"string\",\n      \"formattedAddress\": \"string\",\n      \"timezone\": \"string\",\n      \"latitude\": 1,\n      \"longitude\": 1\n    },\n    \"email\": \"string\",\n    \"notes\": \"string\",\n    \"phoneNumbers\": [\n      {\n        \"primary\": true,\n        \"number\": \"string\"\n      }\n    ],\n    \"labels\": [\n      \"string\"\n    ]\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.editCustomer(\"string\", {\n    customer: {\n        firstName: \"string\",\n        lastName: \"string\",\n        organizationId: \"string\",\n        companyName: \"string\",\n        billingAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        homeAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        email: \"string\",\n        notes: \"string\",\n        phoneNumbers: [{\n                primary: true,\n                number: \"string\"\n            }],\n        labels: [\"string\"]\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/customers/:customerId",
            "responseStatusCode": 404,
            "pathParameters": {
              "customerId": ":customerId"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "customer": {
                  "firstName": "string",
                  "lastName": "string",
                  "organizationId": "string",
                  "companyName": "string",
                  "billingAddress": {
                    "street1": "string",
                    "street2": "string",
                    "city": "string",
                    "state": "string",
                    "postalCode": "string",
                    "district": "string",
                    "county": "string",
                    "country": "string",
                    "formattedAddress": "string",
                    "timezone": "string",
                    "latitude": 1,
                    "longitude": 1
                  },
                  "homeAddress": {
                    "street1": "string",
                    "street2": "string",
                    "city": "string",
                    "state": "string",
                    "postalCode": "string",
                    "district": "string",
                    "county": "string",
                    "country": "string",
                    "formattedAddress": "string",
                    "timezone": "string",
                    "latitude": 1,
                    "longitude": 1
                  },
                  "email": "string",
                  "notes": "string",
                  "phoneNumbers": [
                    {
                      "primary": true,
                      "number": "string"
                    }
                  ],
                  "labels": [
                    "string"
                  ]
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.trykeet.com/v1/dispatch-me/customers/:customerId \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"customer\": {\n    \"firstName\": \"string\",\n    \"lastName\": \"string\",\n    \"organizationId\": \"string\",\n    \"companyName\": \"string\",\n    \"billingAddress\": {\n      \"street1\": \"string\",\n      \"street2\": \"string\",\n      \"city\": \"string\",\n      \"state\": \"string\",\n      \"postalCode\": \"string\",\n      \"district\": \"string\",\n      \"county\": \"string\",\n      \"country\": \"string\",\n      \"formattedAddress\": \"string\",\n      \"timezone\": \"string\",\n      \"latitude\": 1,\n      \"longitude\": 1\n    },\n    \"homeAddress\": {\n      \"street1\": \"string\",\n      \"street2\": \"string\",\n      \"city\": \"string\",\n      \"state\": \"string\",\n      \"postalCode\": \"string\",\n      \"district\": \"string\",\n      \"county\": \"string\",\n      \"country\": \"string\",\n      \"formattedAddress\": \"string\",\n      \"timezone\": \"string\",\n      \"latitude\": 1,\n      \"longitude\": 1\n    },\n    \"email\": \"string\",\n    \"notes\": \"string\",\n    \"phoneNumbers\": [\n      {\n        \"primary\": true,\n        \"number\": \"string\"\n      }\n    ],\n    \"labels\": [\n      \"string\"\n    ]\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.editCustomer(\"string\", {\n    customer: {\n        firstName: \"string\",\n        lastName: \"string\",\n        organizationId: \"string\",\n        companyName: \"string\",\n        billingAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        homeAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        email: \"string\",\n        notes: \"string\",\n        phoneNumbers: [{\n                primary: true,\n                number: \"string\"\n            }],\n        labels: [\"string\"]\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/customers/:customerId",
            "responseStatusCode": 400,
            "pathParameters": {
              "customerId": ":customerId"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "customer": {
                  "firstName": "string",
                  "lastName": "string",
                  "organizationId": "string",
                  "companyName": "string",
                  "billingAddress": {
                    "street1": "string",
                    "street2": "string",
                    "city": "string",
                    "state": "string",
                    "postalCode": "string",
                    "district": "string",
                    "county": "string",
                    "country": "string",
                    "formattedAddress": "string",
                    "timezone": "string",
                    "latitude": 1,
                    "longitude": 1
                  },
                  "homeAddress": {
                    "street1": "string",
                    "street2": "string",
                    "city": "string",
                    "state": "string",
                    "postalCode": "string",
                    "district": "string",
                    "county": "string",
                    "country": "string",
                    "formattedAddress": "string",
                    "timezone": "string",
                    "latitude": 1,
                    "longitude": 1
                  },
                  "email": "string",
                  "notes": "string",
                  "phoneNumbers": [
                    {
                      "primary": true,
                      "number": "string"
                    }
                  ],
                  "labels": [
                    "string"
                  ]
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.trykeet.com/v1/dispatch-me/customers/:customerId \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"customer\": {\n    \"firstName\": \"string\",\n    \"lastName\": \"string\",\n    \"organizationId\": \"string\",\n    \"companyName\": \"string\",\n    \"billingAddress\": {\n      \"street1\": \"string\",\n      \"street2\": \"string\",\n      \"city\": \"string\",\n      \"state\": \"string\",\n      \"postalCode\": \"string\",\n      \"district\": \"string\",\n      \"county\": \"string\",\n      \"country\": \"string\",\n      \"formattedAddress\": \"string\",\n      \"timezone\": \"string\",\n      \"latitude\": 1,\n      \"longitude\": 1\n    },\n    \"homeAddress\": {\n      \"street1\": \"string\",\n      \"street2\": \"string\",\n      \"city\": \"string\",\n      \"state\": \"string\",\n      \"postalCode\": \"string\",\n      \"district\": \"string\",\n      \"county\": \"string\",\n      \"country\": \"string\",\n      \"formattedAddress\": \"string\",\n      \"timezone\": \"string\",\n      \"latitude\": 1,\n      \"longitude\": 1\n    },\n    \"email\": \"string\",\n    \"notes\": \"string\",\n    \"phoneNumbers\": [\n      {\n        \"primary\": true,\n        \"number\": \"string\"\n      }\n    ],\n    \"labels\": [\n      \"string\"\n    ]\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.editCustomer(\"string\", {\n    customer: {\n        firstName: \"string\",\n        lastName: \"string\",\n        organizationId: \"string\",\n        companyName: \"string\",\n        billingAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        homeAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        email: \"string\",\n        notes: \"string\",\n        phoneNumbers: [{\n                primary: true,\n                number: \"string\"\n            }],\n        labels: [\"string\"]\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/customers/:customerId",
            "responseStatusCode": 500,
            "pathParameters": {
              "customerId": ":customerId"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "customer": {
                  "firstName": "string",
                  "lastName": "string",
                  "organizationId": "string",
                  "companyName": "string",
                  "billingAddress": {
                    "street1": "string",
                    "street2": "string",
                    "city": "string",
                    "state": "string",
                    "postalCode": "string",
                    "district": "string",
                    "county": "string",
                    "country": "string",
                    "formattedAddress": "string",
                    "timezone": "string",
                    "latitude": 1,
                    "longitude": 1
                  },
                  "homeAddress": {
                    "street1": "string",
                    "street2": "string",
                    "city": "string",
                    "state": "string",
                    "postalCode": "string",
                    "district": "string",
                    "county": "string",
                    "country": "string",
                    "formattedAddress": "string",
                    "timezone": "string",
                    "latitude": 1,
                    "longitude": 1
                  },
                  "email": "string",
                  "notes": "string",
                  "phoneNumbers": [
                    {
                      "primary": true,
                      "number": "string"
                    }
                  ],
                  "labels": [
                    "string"
                  ]
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.trykeet.com/v1/dispatch-me/customers/:customerId \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"customer\": {\n    \"firstName\": \"string\",\n    \"lastName\": \"string\",\n    \"organizationId\": \"string\",\n    \"companyName\": \"string\",\n    \"billingAddress\": {\n      \"street1\": \"string\",\n      \"street2\": \"string\",\n      \"city\": \"string\",\n      \"state\": \"string\",\n      \"postalCode\": \"string\",\n      \"district\": \"string\",\n      \"county\": \"string\",\n      \"country\": \"string\",\n      \"formattedAddress\": \"string\",\n      \"timezone\": \"string\",\n      \"latitude\": 1,\n      \"longitude\": 1\n    },\n    \"homeAddress\": {\n      \"street1\": \"string\",\n      \"street2\": \"string\",\n      \"city\": \"string\",\n      \"state\": \"string\",\n      \"postalCode\": \"string\",\n      \"district\": \"string\",\n      \"county\": \"string\",\n      \"country\": \"string\",\n      \"formattedAddress\": \"string\",\n      \"timezone\": \"string\",\n      \"latitude\": 1,\n      \"longitude\": 1\n    },\n    \"email\": \"string\",\n    \"notes\": \"string\",\n    \"phoneNumbers\": [\n      {\n        \"primary\": true,\n        \"number\": \"string\"\n      }\n    ],\n    \"labels\": [\n      \"string\"\n    ]\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.editCustomer(\"string\", {\n    customer: {\n        firstName: \"string\",\n        lastName: \"string\",\n        organizationId: \"string\",\n        companyName: \"string\",\n        billingAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        homeAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        email: \"string\",\n        notes: \"string\",\n        phoneNumbers: [{\n                primary: true,\n                number: \"string\"\n            }],\n        labels: [\"string\"]\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.dispatchMe.editCustomer(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "$FERN_INPUT",
                    "isOptional": false,
                    "inputDelimiter": ",\n\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "$FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "PATH",
                              "path": "customerId"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "customer: {\n\t\t\t$FERN_INPUT\n\t\t}",
                          "isOptional": true,
                          "inputDelimiter": ",\n\t\t\t",
                          "templateInputs": [
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "firstName: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "customer.firstName"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "lastName: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "customer.lastName"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "organizationId: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "customer.organizationId"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "companyName: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "customer.companyName"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "billingAddress: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                "isOptional": true,
                                "inputDelimiter": ",\n\t\t\t\t",
                                "templateInputs": [
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "street1: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.billingAddress.street1"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "street2: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.billingAddress.street2"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "city: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.billingAddress.city"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "state: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.billingAddress.state"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "postalCode: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.billingAddress.postalCode"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "district: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.billingAddress.district"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "county: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.billingAddress.county"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "country: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.billingAddress.country"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "formattedAddress: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.billingAddress.formattedAddress"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "timezone: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.billingAddress.timezone"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "latitude: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.billingAddress.latitude"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "longitude: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.billingAddress.longitude"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "homeAddress: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                "isOptional": true,
                                "inputDelimiter": ",\n\t\t\t\t",
                                "templateInputs": [
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "street1: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.homeAddress.street1"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "street2: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.homeAddress.street2"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "city: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.homeAddress.city"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "state: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.homeAddress.state"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "postalCode: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.homeAddress.postalCode"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "district: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.homeAddress.district"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "county: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.homeAddress.county"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "country: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.homeAddress.country"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "formattedAddress: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.homeAddress.formattedAddress"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "timezone: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.homeAddress.timezone"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "latitude: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.homeAddress.latitude"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "longitude: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.homeAddress.longitude"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "email: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "customer.email"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "notes: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "customer.notes"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "iterable",
                                "imports": [],
                                "isOptional": true,
                                "containerTemplateString": "phoneNumbers: [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                "delimiter": ",\n\t\t\t\t",
                                "innerTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "{\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                  "isOptional": true,
                                  "inputDelimiter": ",\n\t\t\t\t\t",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "primary: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "RELATIVE",
                                            "path": "primary"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "number: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "RELATIVE",
                                            "path": "number"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "customer.phoneNumbers"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "iterable",
                                "imports": [],
                                "isOptional": true,
                                "containerTemplateString": "labels: [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                "delimiter": ",\n\t\t\t\t",
                                "innerTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "customer.labels"
                                }
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/dispatchMe.createCustomer": {
        "id": "endpoint_integrations/dispatchMe.createCustomer",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/dispatchMe"
        ],
        "displayName": "Create Customer",
        "operationId": "create-customer",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/dispatch-me"
          },
          {
            "type": "literal",
            "value": "/customers"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "customer",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_integrations/dispatchMe:DispatchMeCustomer"
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/dispatchMe:CreateDispatchMeCustomerResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/dispatch-me/customers",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "customer": {
                  "firstName": "string",
                  "lastName": "string",
                  "organizationId": "string",
                  "companyName": "string",
                  "billingAddress": {
                    "street1": "string",
                    "street2": "string",
                    "city": "string",
                    "state": "string",
                    "postalCode": "string",
                    "district": "string",
                    "county": "string",
                    "country": "string",
                    "formattedAddress": "string",
                    "timezone": "string",
                    "latitude": 1,
                    "longitude": 1
                  },
                  "homeAddress": {
                    "street1": "string",
                    "street2": "string",
                    "city": "string",
                    "state": "string",
                    "postalCode": "string",
                    "district": "string",
                    "county": "string",
                    "country": "string",
                    "formattedAddress": "string",
                    "timezone": "string",
                    "latitude": 1,
                    "longitude": 1
                  },
                  "email": "string",
                  "notes": "string",
                  "phoneNumbers": [
                    {
                      "primary": true,
                      "number": "string"
                    }
                  ],
                  "labels": [
                    "string"
                  ]
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "customer": {},
                "status": "ok"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/dispatch-me/customers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"customer\": {\n    \"firstName\": \"string\",\n    \"lastName\": \"string\",\n    \"organizationId\": \"string\",\n    \"companyName\": \"string\",\n    \"billingAddress\": {\n      \"street1\": \"string\",\n      \"street2\": \"string\",\n      \"city\": \"string\",\n      \"state\": \"string\",\n      \"postalCode\": \"string\",\n      \"district\": \"string\",\n      \"county\": \"string\",\n      \"country\": \"string\",\n      \"formattedAddress\": \"string\",\n      \"timezone\": \"string\",\n      \"latitude\": 1,\n      \"longitude\": 1\n    },\n    \"homeAddress\": {\n      \"street1\": \"string\",\n      \"street2\": \"string\",\n      \"city\": \"string\",\n      \"state\": \"string\",\n      \"postalCode\": \"string\",\n      \"district\": \"string\",\n      \"county\": \"string\",\n      \"country\": \"string\",\n      \"formattedAddress\": \"string\",\n      \"timezone\": \"string\",\n      \"latitude\": 1,\n      \"longitude\": 1\n    },\n    \"email\": \"string\",\n    \"notes\": \"string\",\n    \"phoneNumbers\": [\n      {\n        \"primary\": true,\n        \"number\": \"string\"\n      }\n    ],\n    \"labels\": [\n      \"string\"\n    ]\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createCustomer({\n    customer: {\n        firstName: \"string\",\n        lastName: \"string\",\n        organizationId: \"string\",\n        companyName: \"string\",\n        billingAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        homeAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        email: \"string\",\n        notes: \"string\",\n        phoneNumbers: [{\n                primary: true,\n                number: \"string\"\n            }],\n        labels: [\"string\"]\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/customers",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "customer": {
                  "firstName": "string",
                  "lastName": "string",
                  "organizationId": "string",
                  "companyName": "string",
                  "billingAddress": {
                    "street1": "string",
                    "street2": "string",
                    "city": "string",
                    "state": "string",
                    "postalCode": "string",
                    "district": "string",
                    "county": "string",
                    "country": "string",
                    "formattedAddress": "string",
                    "timezone": "string",
                    "latitude": 1,
                    "longitude": 1
                  },
                  "homeAddress": {
                    "street1": "string",
                    "street2": "string",
                    "city": "string",
                    "state": "string",
                    "postalCode": "string",
                    "district": "string",
                    "county": "string",
                    "country": "string",
                    "formattedAddress": "string",
                    "timezone": "string",
                    "latitude": 1,
                    "longitude": 1
                  },
                  "email": "string",
                  "notes": "string",
                  "phoneNumbers": [
                    {
                      "primary": true,
                      "number": "string"
                    }
                  ],
                  "labels": [
                    "string"
                  ]
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/dispatch-me/customers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"customer\": {\n    \"firstName\": \"string\",\n    \"lastName\": \"string\",\n    \"organizationId\": \"string\",\n    \"companyName\": \"string\",\n    \"billingAddress\": {\n      \"street1\": \"string\",\n      \"street2\": \"string\",\n      \"city\": \"string\",\n      \"state\": \"string\",\n      \"postalCode\": \"string\",\n      \"district\": \"string\",\n      \"county\": \"string\",\n      \"country\": \"string\",\n      \"formattedAddress\": \"string\",\n      \"timezone\": \"string\",\n      \"latitude\": 1,\n      \"longitude\": 1\n    },\n    \"homeAddress\": {\n      \"street1\": \"string\",\n      \"street2\": \"string\",\n      \"city\": \"string\",\n      \"state\": \"string\",\n      \"postalCode\": \"string\",\n      \"district\": \"string\",\n      \"county\": \"string\",\n      \"country\": \"string\",\n      \"formattedAddress\": \"string\",\n      \"timezone\": \"string\",\n      \"latitude\": 1,\n      \"longitude\": 1\n    },\n    \"email\": \"string\",\n    \"notes\": \"string\",\n    \"phoneNumbers\": [\n      {\n        \"primary\": true,\n        \"number\": \"string\"\n      }\n    ],\n    \"labels\": [\n      \"string\"\n    ]\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createCustomer({\n    customer: {\n        firstName: \"string\",\n        lastName: \"string\",\n        organizationId: \"string\",\n        companyName: \"string\",\n        billingAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        homeAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        email: \"string\",\n        notes: \"string\",\n        phoneNumbers: [{\n                primary: true,\n                number: \"string\"\n            }],\n        labels: [\"string\"]\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/customers",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "customer": {
                  "firstName": "string",
                  "lastName": "string",
                  "organizationId": "string",
                  "companyName": "string",
                  "billingAddress": {
                    "street1": "string",
                    "street2": "string",
                    "city": "string",
                    "state": "string",
                    "postalCode": "string",
                    "district": "string",
                    "county": "string",
                    "country": "string",
                    "formattedAddress": "string",
                    "timezone": "string",
                    "latitude": 1,
                    "longitude": 1
                  },
                  "homeAddress": {
                    "street1": "string",
                    "street2": "string",
                    "city": "string",
                    "state": "string",
                    "postalCode": "string",
                    "district": "string",
                    "county": "string",
                    "country": "string",
                    "formattedAddress": "string",
                    "timezone": "string",
                    "latitude": 1,
                    "longitude": 1
                  },
                  "email": "string",
                  "notes": "string",
                  "phoneNumbers": [
                    {
                      "primary": true,
                      "number": "string"
                    }
                  ],
                  "labels": [
                    "string"
                  ]
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/dispatch-me/customers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"customer\": {\n    \"firstName\": \"string\",\n    \"lastName\": \"string\",\n    \"organizationId\": \"string\",\n    \"companyName\": \"string\",\n    \"billingAddress\": {\n      \"street1\": \"string\",\n      \"street2\": \"string\",\n      \"city\": \"string\",\n      \"state\": \"string\",\n      \"postalCode\": \"string\",\n      \"district\": \"string\",\n      \"county\": \"string\",\n      \"country\": \"string\",\n      \"formattedAddress\": \"string\",\n      \"timezone\": \"string\",\n      \"latitude\": 1,\n      \"longitude\": 1\n    },\n    \"homeAddress\": {\n      \"street1\": \"string\",\n      \"street2\": \"string\",\n      \"city\": \"string\",\n      \"state\": \"string\",\n      \"postalCode\": \"string\",\n      \"district\": \"string\",\n      \"county\": \"string\",\n      \"country\": \"string\",\n      \"formattedAddress\": \"string\",\n      \"timezone\": \"string\",\n      \"latitude\": 1,\n      \"longitude\": 1\n    },\n    \"email\": \"string\",\n    \"notes\": \"string\",\n    \"phoneNumbers\": [\n      {\n        \"primary\": true,\n        \"number\": \"string\"\n      }\n    ],\n    \"labels\": [\n      \"string\"\n    ]\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createCustomer({\n    customer: {\n        firstName: \"string\",\n        lastName: \"string\",\n        organizationId: \"string\",\n        companyName: \"string\",\n        billingAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        homeAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        email: \"string\",\n        notes: \"string\",\n        phoneNumbers: [{\n                primary: true,\n                number: \"string\"\n            }],\n        labels: [\"string\"]\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/customers",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "customer": {
                  "firstName": "string",
                  "lastName": "string",
                  "organizationId": "string",
                  "companyName": "string",
                  "billingAddress": {
                    "street1": "string",
                    "street2": "string",
                    "city": "string",
                    "state": "string",
                    "postalCode": "string",
                    "district": "string",
                    "county": "string",
                    "country": "string",
                    "formattedAddress": "string",
                    "timezone": "string",
                    "latitude": 1,
                    "longitude": 1
                  },
                  "homeAddress": {
                    "street1": "string",
                    "street2": "string",
                    "city": "string",
                    "state": "string",
                    "postalCode": "string",
                    "district": "string",
                    "county": "string",
                    "country": "string",
                    "formattedAddress": "string",
                    "timezone": "string",
                    "latitude": 1,
                    "longitude": 1
                  },
                  "email": "string",
                  "notes": "string",
                  "phoneNumbers": [
                    {
                      "primary": true,
                      "number": "string"
                    }
                  ],
                  "labels": [
                    "string"
                  ]
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/dispatch-me/customers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"customer\": {\n    \"firstName\": \"string\",\n    \"lastName\": \"string\",\n    \"organizationId\": \"string\",\n    \"companyName\": \"string\",\n    \"billingAddress\": {\n      \"street1\": \"string\",\n      \"street2\": \"string\",\n      \"city\": \"string\",\n      \"state\": \"string\",\n      \"postalCode\": \"string\",\n      \"district\": \"string\",\n      \"county\": \"string\",\n      \"country\": \"string\",\n      \"formattedAddress\": \"string\",\n      \"timezone\": \"string\",\n      \"latitude\": 1,\n      \"longitude\": 1\n    },\n    \"homeAddress\": {\n      \"street1\": \"string\",\n      \"street2\": \"string\",\n      \"city\": \"string\",\n      \"state\": \"string\",\n      \"postalCode\": \"string\",\n      \"district\": \"string\",\n      \"county\": \"string\",\n      \"country\": \"string\",\n      \"formattedAddress\": \"string\",\n      \"timezone\": \"string\",\n      \"latitude\": 1,\n      \"longitude\": 1\n    },\n    \"email\": \"string\",\n    \"notes\": \"string\",\n    \"phoneNumbers\": [\n      {\n        \"primary\": true,\n        \"number\": \"string\"\n      }\n    ],\n    \"labels\": [\n      \"string\"\n    ]\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createCustomer({\n    customer: {\n        firstName: \"string\",\n        lastName: \"string\",\n        organizationId: \"string\",\n        companyName: \"string\",\n        billingAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        homeAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        email: \"string\",\n        notes: \"string\",\n        phoneNumbers: [{\n                primary: true,\n                number: \"string\"\n            }],\n        labels: [\"string\"]\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/customers",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "customer": {
                  "firstName": "string",
                  "lastName": "string",
                  "organizationId": "string",
                  "companyName": "string",
                  "billingAddress": {
                    "street1": "string",
                    "street2": "string",
                    "city": "string",
                    "state": "string",
                    "postalCode": "string",
                    "district": "string",
                    "county": "string",
                    "country": "string",
                    "formattedAddress": "string",
                    "timezone": "string",
                    "latitude": 1,
                    "longitude": 1
                  },
                  "homeAddress": {
                    "street1": "string",
                    "street2": "string",
                    "city": "string",
                    "state": "string",
                    "postalCode": "string",
                    "district": "string",
                    "county": "string",
                    "country": "string",
                    "formattedAddress": "string",
                    "timezone": "string",
                    "latitude": 1,
                    "longitude": 1
                  },
                  "email": "string",
                  "notes": "string",
                  "phoneNumbers": [
                    {
                      "primary": true,
                      "number": "string"
                    }
                  ],
                  "labels": [
                    "string"
                  ]
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/dispatch-me/customers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"customer\": {\n    \"firstName\": \"string\",\n    \"lastName\": \"string\",\n    \"organizationId\": \"string\",\n    \"companyName\": \"string\",\n    \"billingAddress\": {\n      \"street1\": \"string\",\n      \"street2\": \"string\",\n      \"city\": \"string\",\n      \"state\": \"string\",\n      \"postalCode\": \"string\",\n      \"district\": \"string\",\n      \"county\": \"string\",\n      \"country\": \"string\",\n      \"formattedAddress\": \"string\",\n      \"timezone\": \"string\",\n      \"latitude\": 1,\n      \"longitude\": 1\n    },\n    \"homeAddress\": {\n      \"street1\": \"string\",\n      \"street2\": \"string\",\n      \"city\": \"string\",\n      \"state\": \"string\",\n      \"postalCode\": \"string\",\n      \"district\": \"string\",\n      \"county\": \"string\",\n      \"country\": \"string\",\n      \"formattedAddress\": \"string\",\n      \"timezone\": \"string\",\n      \"latitude\": 1,\n      \"longitude\": 1\n    },\n    \"email\": \"string\",\n    \"notes\": \"string\",\n    \"phoneNumbers\": [\n      {\n        \"primary\": true,\n        \"number\": \"string\"\n      }\n    ],\n    \"labels\": [\n      \"string\"\n    ]\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createCustomer({\n    customer: {\n        firstName: \"string\",\n        lastName: \"string\",\n        organizationId: \"string\",\n        companyName: \"string\",\n        billingAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        homeAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        email: \"string\",\n        notes: \"string\",\n        phoneNumbers: [{\n                primary: true,\n                number: \"string\"\n            }],\n        labels: [\"string\"]\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/customers",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "customer": {
                  "firstName": "string",
                  "lastName": "string",
                  "organizationId": "string",
                  "companyName": "string",
                  "billingAddress": {
                    "street1": "string",
                    "street2": "string",
                    "city": "string",
                    "state": "string",
                    "postalCode": "string",
                    "district": "string",
                    "county": "string",
                    "country": "string",
                    "formattedAddress": "string",
                    "timezone": "string",
                    "latitude": 1,
                    "longitude": 1
                  },
                  "homeAddress": {
                    "street1": "string",
                    "street2": "string",
                    "city": "string",
                    "state": "string",
                    "postalCode": "string",
                    "district": "string",
                    "county": "string",
                    "country": "string",
                    "formattedAddress": "string",
                    "timezone": "string",
                    "latitude": 1,
                    "longitude": 1
                  },
                  "email": "string",
                  "notes": "string",
                  "phoneNumbers": [
                    {
                      "primary": true,
                      "number": "string"
                    }
                  ],
                  "labels": [
                    "string"
                  ]
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/dispatch-me/customers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"customer\": {\n    \"firstName\": \"string\",\n    \"lastName\": \"string\",\n    \"organizationId\": \"string\",\n    \"companyName\": \"string\",\n    \"billingAddress\": {\n      \"street1\": \"string\",\n      \"street2\": \"string\",\n      \"city\": \"string\",\n      \"state\": \"string\",\n      \"postalCode\": \"string\",\n      \"district\": \"string\",\n      \"county\": \"string\",\n      \"country\": \"string\",\n      \"formattedAddress\": \"string\",\n      \"timezone\": \"string\",\n      \"latitude\": 1,\n      \"longitude\": 1\n    },\n    \"homeAddress\": {\n      \"street1\": \"string\",\n      \"street2\": \"string\",\n      \"city\": \"string\",\n      \"state\": \"string\",\n      \"postalCode\": \"string\",\n      \"district\": \"string\",\n      \"county\": \"string\",\n      \"country\": \"string\",\n      \"formattedAddress\": \"string\",\n      \"timezone\": \"string\",\n      \"latitude\": 1,\n      \"longitude\": 1\n    },\n    \"email\": \"string\",\n    \"notes\": \"string\",\n    \"phoneNumbers\": [\n      {\n        \"primary\": true,\n        \"number\": \"string\"\n      }\n    ],\n    \"labels\": [\n      \"string\"\n    ]\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createCustomer({\n    customer: {\n        firstName: \"string\",\n        lastName: \"string\",\n        organizationId: \"string\",\n        companyName: \"string\",\n        billingAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        homeAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        email: \"string\",\n        notes: \"string\",\n        phoneNumbers: [{\n                primary: true,\n                number: \"string\"\n            }],\n        labels: [\"string\"]\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.dispatchMe.createCustomer(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "customer: {\n\t\t\t$FERN_INPUT\n\t\t}",
                          "isOptional": true,
                          "inputDelimiter": ",\n\t\t\t",
                          "templateInputs": [
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "firstName: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "customer.firstName"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "lastName: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "customer.lastName"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "organizationId: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "customer.organizationId"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "companyName: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "customer.companyName"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "billingAddress: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                "isOptional": true,
                                "inputDelimiter": ",\n\t\t\t\t",
                                "templateInputs": [
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "street1: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.billingAddress.street1"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "street2: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.billingAddress.street2"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "city: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.billingAddress.city"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "state: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.billingAddress.state"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "postalCode: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.billingAddress.postalCode"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "district: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.billingAddress.district"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "county: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.billingAddress.county"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "country: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.billingAddress.country"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "formattedAddress: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.billingAddress.formattedAddress"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "timezone: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.billingAddress.timezone"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "latitude: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.billingAddress.latitude"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "longitude: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.billingAddress.longitude"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "homeAddress: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                "isOptional": true,
                                "inputDelimiter": ",\n\t\t\t\t",
                                "templateInputs": [
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "street1: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.homeAddress.street1"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "street2: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.homeAddress.street2"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "city: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.homeAddress.city"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "state: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.homeAddress.state"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "postalCode: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.homeAddress.postalCode"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "district: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.homeAddress.district"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "county: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.homeAddress.county"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "country: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.homeAddress.country"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "formattedAddress: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.homeAddress.formattedAddress"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "timezone: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.homeAddress.timezone"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "latitude: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.homeAddress.latitude"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "longitude: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "customer.homeAddress.longitude"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "email: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "customer.email"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "notes: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "customer.notes"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "iterable",
                                "imports": [],
                                "isOptional": true,
                                "containerTemplateString": "phoneNumbers: [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                "delimiter": ",\n\t\t\t\t",
                                "innerTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "{\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                  "isOptional": true,
                                  "inputDelimiter": ",\n\t\t\t\t\t",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "primary: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "RELATIVE",
                                            "path": "primary"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "number: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "RELATIVE",
                                            "path": "number"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "customer.phoneNumbers"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "iterable",
                                "imports": [],
                                "isOptional": true,
                                "containerTemplateString": "labels: [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                "delimiter": ",\n\t\t\t\t",
                                "innerTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "customer.labels"
                                }
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/dispatchMe.getCustomers": {
        "id": "endpoint_integrations/dispatchMe.getCustomers",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/dispatchMe"
        ],
        "displayName": "Get Customers",
        "operationId": "get-customers",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/dispatch-me"
          },
          {
            "type": "literal",
            "value": "/customers"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/dispatchMe:GetCustomersResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/dispatch-me/customers",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "customers": {}
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/dispatch-me/customers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getCustomers();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/customers",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/dispatch-me/customers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getCustomers();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/customers",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/dispatch-me/customers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getCustomers();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/customers",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/dispatch-me/customers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getCustomers();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/customers",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/dispatch-me/customers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getCustomers();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/customers",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/dispatch-me/customers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getCustomers();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.dispatchMe.getCustomers()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/dispatchMe.getAccountOrganizations": {
        "id": "endpoint_integrations/dispatchMe.getAccountOrganizations",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/dispatchMe"
        ],
        "displayName": "Get Account Organizations",
        "operationId": "get-account-organizations",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/dispatch-me"
          },
          {
            "type": "literal",
            "value": "/organizations"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/dispatchMe:GetAccountOrganizationsResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/dispatch-me/organizations",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "organizations": {}
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/dispatch-me/organizations \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getAccountOrganizations();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/organizations",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/dispatch-me/organizations \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getAccountOrganizations();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/organizations",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/dispatch-me/organizations \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getAccountOrganizations();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/organizations",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/dispatch-me/organizations \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getAccountOrganizations();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/organizations",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/dispatch-me/organizations \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getAccountOrganizations();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/organizations",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/dispatch-me/organizations \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getAccountOrganizations();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.dispatchMe.getAccountOrganizations()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/dispatchMe.getJobs": {
        "id": "endpoint_integrations/dispatchMe.getJobs",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/dispatchMe"
        ],
        "displayName": "Get Jobs",
        "operationId": "get-jobs",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/dispatch-me"
          },
          {
            "type": "literal",
            "value": "/jobs"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "queryParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "status",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/dispatchMe:DispatchMeJobStatus"
              }
            }
          },
          {
            "key": "offset",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/dispatchMe:GetJobsResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/dispatch-me/jobs",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "organizationId": "string",
              "limit": 0,
              "status": "offered",
              "offset": 0
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "jobs": {}
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/dispatch-me/jobs \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d organizationId=string \\\n     -d limit=0 \\\n     -d status=offered \\\n     -d offset=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getJobs({\n    organizationId: \"string\",\n    limit: 1,\n    status: Keet.DispatchMeJobStatus.Offered,\n    offset: 1\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/jobs",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {
              "organizationId": "string",
              "limit": 0,
              "status": "offered",
              "offset": 0
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/dispatch-me/jobs \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d organizationId=string \\\n     -d limit=0 \\\n     -d status=offered \\\n     -d offset=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getJobs({\n    organizationId: \"string\",\n    limit: 1,\n    status: Keet.DispatchMeJobStatus.Offered,\n    offset: 1\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/jobs",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "organizationId": "string",
              "limit": 0,
              "status": "offered",
              "offset": 0
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/dispatch-me/jobs \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d organizationId=string \\\n     -d limit=0 \\\n     -d status=offered \\\n     -d offset=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getJobs({\n    organizationId: \"string\",\n    limit: 1,\n    status: Keet.DispatchMeJobStatus.Offered,\n    offset: 1\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/jobs",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {
              "organizationId": "string",
              "limit": 0,
              "status": "offered",
              "offset": 0
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/dispatch-me/jobs \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d organizationId=string \\\n     -d limit=0 \\\n     -d status=offered \\\n     -d offset=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getJobs({\n    organizationId: \"string\",\n    limit: 1,\n    status: Keet.DispatchMeJobStatus.Offered,\n    offset: 1\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/jobs",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "organizationId": "string",
              "limit": 0,
              "status": "offered",
              "offset": 0
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/dispatch-me/jobs \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d organizationId=string \\\n     -d limit=0 \\\n     -d status=offered \\\n     -d offset=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getJobs({\n    organizationId: \"string\",\n    limit: 1,\n    status: Keet.DispatchMeJobStatus.Offered,\n    offset: 1\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/jobs",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "organizationId": "string",
              "limit": 0,
              "status": "offered",
              "offset": 0
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/dispatch-me/jobs \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d organizationId=string \\\n     -d limit=0 \\\n     -d status=offered \\\n     -d offset=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getJobs({\n    organizationId: \"string\",\n    limit: 1,\n    status: Keet.DispatchMeJobStatus.Offered,\n    offset: 1\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.dispatchMe.getJobs(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "organizationId: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "organizationId"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "limit: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "limit"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "enum",
                          "imports": [],
                          "isOptional": true,
                          "values": {
                            "offered": "Keet.DispatchMeJobStatus.Offered",
                            "scheduled": "Keet.DispatchMeJobStatus.Scheduled",
                            "un-scheduled": "Keet.DispatchMeJobStatus.Unscheduled",
                            "paused": "Keet.DispatchMeJobStatus.Paused",
                            "in_progress": "Keet.DispatchMeJobStatus.InProgress",
                            "complete": "Keet.DispatchMeJobStatus.Complete"
                          },
                          "templateString": "status: $FERN_INPUT",
                          "templateInput": {
                            "location": "QUERY",
                            "path": "status"
                          }
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "offset: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "offset"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/dispatchMe.getUsers": {
        "id": "endpoint_integrations/dispatchMe.getUsers",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/dispatchMe"
        ],
        "displayName": "Get Users",
        "operationId": "get-users",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/dispatch-me"
          },
          {
            "type": "literal",
            "value": "/users"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "queryParameters": [
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "offset",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/dispatchMe:GetDispatchMeUsersResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/dispatch-me/users",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "limit": 0,
              "offset": 0
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "users": {}
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/dispatch-me/users \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=0 \\\n     -d offset=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getUsers({\n    limit: 1,\n    offset: 1\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/users",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {
              "limit": 0,
              "offset": 0
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/dispatch-me/users \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=0 \\\n     -d offset=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getUsers({\n    limit: 1,\n    offset: 1\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/users",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "limit": 0,
              "offset": 0
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/dispatch-me/users \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=0 \\\n     -d offset=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getUsers({\n    limit: 1,\n    offset: 1\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/users",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {
              "limit": 0,
              "offset": 0
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/dispatch-me/users \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=0 \\\n     -d offset=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getUsers({\n    limit: 1,\n    offset: 1\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/users",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "limit": 0,
              "offset": 0
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/dispatch-me/users \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=0 \\\n     -d offset=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getUsers({\n    limit: 1,\n    offset: 1\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/users",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "limit": 0,
              "offset": 0
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/dispatch-me/users \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=0 \\\n     -d offset=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getUsers({\n    limit: 1,\n    offset: 1\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.dispatchMe.getUsers(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "limit: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "limit"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "offset: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "offset"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/dispatchMe.createAppointment": {
        "id": "endpoint_integrations/dispatchMe.createAppointment",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/dispatchMe"
        ],
        "displayName": "Create Appointment",
        "operationId": "create-appointment",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/dispatch-me"
          },
          {
            "type": "literal",
            "value": "/appointments"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "appointment",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_integrations/dispatchMe:DispatchMeAppointment"
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/dispatchMe:CreateDispatchMeAppointmentResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/dispatch-me/appointments",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "appointment": {
                  "duration": 0,
                  "time": "string",
                  "userId": 0,
                  "secondaryUserIds": [
                    0
                  ],
                  "type": "string",
                  "organizationId": 0,
                  "jobId": 0
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/dispatch-me/appointments \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"appointment\": {\n    \"duration\": 0,\n    \"time\": \"string\",\n    \"userId\": 0,\n    \"secondaryUserIds\": [\n      0\n    ],\n    \"type\": \"string\",\n    \"organizationId\": 0,\n    \"jobId\": 0\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createAppointment({\n    appointment: {\n        duration: 1,\n        time: \"string\",\n        userId: 1,\n        secondaryUserIds: [1],\n        type: \"string\",\n        organizationId: 1,\n        jobId: 1\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/appointments",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "appointment": {
                  "duration": 0,
                  "time": "string",
                  "userId": 0,
                  "secondaryUserIds": [
                    0
                  ],
                  "type": "string",
                  "organizationId": 0,
                  "jobId": 0
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/dispatch-me/appointments \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"appointment\": {\n    \"duration\": 0,\n    \"time\": \"string\",\n    \"userId\": 0,\n    \"secondaryUserIds\": [\n      0\n    ],\n    \"type\": \"string\",\n    \"organizationId\": 0,\n    \"jobId\": 0\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createAppointment({\n    appointment: {\n        duration: 1,\n        time: \"string\",\n        userId: 1,\n        secondaryUserIds: [1],\n        type: \"string\",\n        organizationId: 1,\n        jobId: 1\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/appointments",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "appointment": {
                  "duration": 0,
                  "time": "string",
                  "userId": 0,
                  "secondaryUserIds": [
                    0
                  ],
                  "type": "string",
                  "organizationId": 0,
                  "jobId": 0
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/dispatch-me/appointments \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"appointment\": {\n    \"duration\": 0,\n    \"time\": \"string\",\n    \"userId\": 0,\n    \"secondaryUserIds\": [\n      0\n    ],\n    \"type\": \"string\",\n    \"organizationId\": 0,\n    \"jobId\": 0\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createAppointment({\n    appointment: {\n        duration: 1,\n        time: \"string\",\n        userId: 1,\n        secondaryUserIds: [1],\n        type: \"string\",\n        organizationId: 1,\n        jobId: 1\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/appointments",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "appointment": {
                  "duration": 0,
                  "time": "string",
                  "userId": 0,
                  "secondaryUserIds": [
                    0
                  ],
                  "type": "string",
                  "organizationId": 0,
                  "jobId": 0
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/dispatch-me/appointments \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"appointment\": {\n    \"duration\": 0,\n    \"time\": \"string\",\n    \"userId\": 0,\n    \"secondaryUserIds\": [\n      0\n    ],\n    \"type\": \"string\",\n    \"organizationId\": 0,\n    \"jobId\": 0\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createAppointment({\n    appointment: {\n        duration: 1,\n        time: \"string\",\n        userId: 1,\n        secondaryUserIds: [1],\n        type: \"string\",\n        organizationId: 1,\n        jobId: 1\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/appointments",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "appointment": {
                  "duration": 0,
                  "time": "string",
                  "userId": 0,
                  "secondaryUserIds": [
                    0
                  ],
                  "type": "string",
                  "organizationId": 0,
                  "jobId": 0
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/dispatch-me/appointments \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"appointment\": {\n    \"duration\": 0,\n    \"time\": \"string\",\n    \"userId\": 0,\n    \"secondaryUserIds\": [\n      0\n    ],\n    \"type\": \"string\",\n    \"organizationId\": 0,\n    \"jobId\": 0\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createAppointment({\n    appointment: {\n        duration: 1,\n        time: \"string\",\n        userId: 1,\n        secondaryUserIds: [1],\n        type: \"string\",\n        organizationId: 1,\n        jobId: 1\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/appointments",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "appointment": {
                  "duration": 0,
                  "time": "string",
                  "userId": 0,
                  "secondaryUserIds": [
                    0
                  ],
                  "type": "string",
                  "organizationId": 0,
                  "jobId": 0
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/dispatch-me/appointments \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"appointment\": {\n    \"duration\": 0,\n    \"time\": \"string\",\n    \"userId\": 0,\n    \"secondaryUserIds\": [\n      0\n    ],\n    \"type\": \"string\",\n    \"organizationId\": 0,\n    \"jobId\": 0\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createAppointment({\n    appointment: {\n        duration: 1,\n        time: \"string\",\n        userId: 1,\n        secondaryUserIds: [1],\n        type: \"string\",\n        organizationId: 1,\n        jobId: 1\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.dispatchMe.createAppointment(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "appointment: {\n\t\t\t$FERN_INPUT\n\t\t}",
                          "isOptional": true,
                          "inputDelimiter": ",\n\t\t\t",
                          "templateInputs": [
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "duration: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "appointment.duration"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "time: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "appointment.time"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "userId: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "appointment.userId"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "iterable",
                                "imports": [],
                                "isOptional": true,
                                "containerTemplateString": "secondaryUserIds: [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                "delimiter": ",\n\t\t\t\t",
                                "innerTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "appointment.secondaryUserIds"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "type: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "appointment.type"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "organizationId: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "appointment.organizationId"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "jobId: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "appointment.jobId"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/dispatchMe.createNote": {
        "id": "endpoint_integrations/dispatchMe.createNote",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/dispatchMe"
        ],
        "displayName": "Create Note",
        "operationId": "create-note",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/dispatch-me"
          },
          {
            "type": "literal",
            "value": "/notes"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "note",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_integrations/dispatchMe:DispatchMeNote"
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/dispatchMe:CreateDispatchMeNoteResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/dispatch-me/notes",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "note": {
                  "jobId": 0,
                  "description": "string",
                  "private": true,
                  "priority": true
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/dispatch-me/notes \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"note\": {\n    \"jobId\": 0,\n    \"description\": \"string\",\n    \"private\": true,\n    \"priority\": true\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createNote({\n    note: {\n        jobId: 1,\n        description: \"string\",\n        private: true,\n        priority: true\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/notes",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "note": {
                  "jobId": 0,
                  "description": "string",
                  "private": true,
                  "priority": true
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/dispatch-me/notes \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"note\": {\n    \"jobId\": 0,\n    \"description\": \"string\",\n    \"private\": true,\n    \"priority\": true\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createNote({\n    note: {\n        jobId: 1,\n        description: \"string\",\n        private: true,\n        priority: true\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/notes",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "note": {
                  "jobId": 0,
                  "description": "string",
                  "private": true,
                  "priority": true
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/dispatch-me/notes \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"note\": {\n    \"jobId\": 0,\n    \"description\": \"string\",\n    \"private\": true,\n    \"priority\": true\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createNote({\n    note: {\n        jobId: 1,\n        description: \"string\",\n        private: true,\n        priority: true\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/notes",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "note": {
                  "jobId": 0,
                  "description": "string",
                  "private": true,
                  "priority": true
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/dispatch-me/notes \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"note\": {\n    \"jobId\": 0,\n    \"description\": \"string\",\n    \"private\": true,\n    \"priority\": true\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createNote({\n    note: {\n        jobId: 1,\n        description: \"string\",\n        private: true,\n        priority: true\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/notes",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "note": {
                  "jobId": 0,
                  "description": "string",
                  "private": true,
                  "priority": true
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/dispatch-me/notes \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"note\": {\n    \"jobId\": 0,\n    \"description\": \"string\",\n    \"private\": true,\n    \"priority\": true\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createNote({\n    note: {\n        jobId: 1,\n        description: \"string\",\n        private: true,\n        priority: true\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/dispatch-me/notes",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "note": {
                  "jobId": 0,
                  "description": "string",
                  "private": true,
                  "priority": true
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/dispatch-me/notes \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"note\": {\n    \"jobId\": 0,\n    \"description\": \"string\",\n    \"private\": true,\n    \"priority\": true\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createNote({\n    note: {\n        jobId: 1,\n        description: \"string\",\n        private: true,\n        priority: true\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.dispatchMe.createNote(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "note: {\n\t\t\t$FERN_INPUT\n\t\t}",
                          "isOptional": true,
                          "inputDelimiter": ",\n\t\t\t",
                          "templateInputs": [
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "jobId: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "note.jobId"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "description: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "note.description"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "private: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "note.private"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "priority: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "note.priority"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/facebook.createSession": {
        "id": "endpoint_integrations/facebook.createSession",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/facebook"
        ],
        "displayName": "Create Session",
        "operationId": "create-session",
        "description": "Create a Facebook session that you can connect to via playwright. See [this link](/overview/integrations/custom-automations) for more info.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/facebook"
          },
          {
            "type": "literal",
            "value": "/session"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/types:CreateSessionResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/facebook/session",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "wsUrl": "string",
                "postSignInUrl": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/facebook/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/facebook/session",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/facebook/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/facebook/session",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/facebook/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/facebook/session",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/facebook/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/facebook/session",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/facebook/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/facebook/session",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/facebook/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.createSession();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.facebook.createSession()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/facebook.postGroupMessage": {
        "id": "endpoint_integrations/facebook.postGroupMessage",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/facebook"
        ],
        "displayName": "Post Group Message",
        "operationId": "post-group-message",
        "description": "Post a message to a group",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/facebook"
          },
          {
            "type": "literal",
            "value": "/groups/"
          },
          {
            "type": "pathParameter",
            "value": "groupId"
          },
          {
            "type": "literal",
            "value": "/message"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "pathParameters": [
          {
            "key": "groupId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "message",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The message to post to the group"
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/facebook:PostGroupMessageResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/facebook/groups/:groupId/message",
            "responseStatusCode": 200,
            "pathParameters": {
              "groupId": ":groupId"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "message": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/facebook/groups/:groupId/message \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"message\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.postGroupMessage(\"string\", {\n    message: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/facebook/groups/:groupId/message",
            "responseStatusCode": 401,
            "pathParameters": {
              "groupId": ":groupId"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "message": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/facebook/groups/:groupId/message \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"message\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.postGroupMessage(\"string\", {\n    message: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/facebook/groups/:groupId/message",
            "responseStatusCode": 500,
            "pathParameters": {
              "groupId": ":groupId"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "message": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/facebook/groups/:groupId/message \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"message\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.postGroupMessage(\"string\", {\n    message: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/facebook/groups/:groupId/message",
            "responseStatusCode": 404,
            "pathParameters": {
              "groupId": ":groupId"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "message": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/facebook/groups/:groupId/message \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"message\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.postGroupMessage(\"string\", {\n    message: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/facebook/groups/:groupId/message",
            "responseStatusCode": 400,
            "pathParameters": {
              "groupId": ":groupId"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "message": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/facebook/groups/:groupId/message \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"message\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.postGroupMessage(\"string\", {\n    message: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/facebook/groups/:groupId/message",
            "responseStatusCode": 500,
            "pathParameters": {
              "groupId": ":groupId"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "message": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/facebook/groups/:groupId/message \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"message\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.postGroupMessage(\"string\", {\n    message: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.facebook.postGroupMessage(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "$FERN_INPUT",
                    "isOptional": false,
                    "inputDelimiter": ",\n\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "$FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "PATH",
                              "path": "groupId"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "message: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "message"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/facebook.joinGroup": {
        "id": "endpoint_integrations/facebook.joinGroup",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/facebook"
        ],
        "displayName": "Join Group",
        "operationId": "join-group",
        "description": "Join a group",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/facebook"
          },
          {
            "type": "literal",
            "value": "/groups/"
          },
          {
            "type": "pathParameter",
            "value": "groupId"
          },
          {
            "type": "literal",
            "value": "/join"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "pathParameters": [
          {
            "key": "groupId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/facebook:JoinGroupResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/facebook/groups/:groupId/join",
            "responseStatusCode": 200,
            "pathParameters": {
              "groupId": ":groupId"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/facebook/groups/:groupId/join \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.joinGroup(\"string\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/facebook/groups/:groupId/join",
            "responseStatusCode": 401,
            "pathParameters": {
              "groupId": ":groupId"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/facebook/groups/:groupId/join \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.joinGroup(\"string\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/facebook/groups/:groupId/join",
            "responseStatusCode": 500,
            "pathParameters": {
              "groupId": ":groupId"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/facebook/groups/:groupId/join \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.joinGroup(\"string\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/facebook/groups/:groupId/join",
            "responseStatusCode": 404,
            "pathParameters": {
              "groupId": ":groupId"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/facebook/groups/:groupId/join \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.joinGroup(\"string\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/facebook/groups/:groupId/join",
            "responseStatusCode": 400,
            "pathParameters": {
              "groupId": ":groupId"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/facebook/groups/:groupId/join \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.joinGroup(\"string\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/facebook/groups/:groupId/join",
            "responseStatusCode": 500,
            "pathParameters": {
              "groupId": ":groupId"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/facebook/groups/:groupId/join \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.joinGroup(\"string\");\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.facebook.joinGroup(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "$FERN_INPUT",
                    "isOptional": false,
                    "inputDelimiter": ",\n\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "$FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "PATH",
                              "path": "groupId"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/facebook.searchGroups": {
        "id": "endpoint_integrations/facebook.searchGroups",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/facebook"
        ],
        "displayName": "Search Groups",
        "operationId": "search-groups",
        "description": "Search for groups",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/facebook"
          },
          {
            "type": "literal",
            "value": "/groups"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "queryParameters": [
          {
            "key": "query",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/facebook:SearchGroupsResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/facebook/groups",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "query": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "groups": [
                  {
                    "name": "string",
                    "url": "string",
                    "id": "string",
                    "numMembers": "string",
                    "postsPerDay": "string",
                    "privacy": "string"
                  }
                ],
                "status": "ok"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/facebook/groups \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d query=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.searchGroups({\n    query: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/facebook/groups",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {
              "query": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/facebook/groups \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d query=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.searchGroups({\n    query: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/facebook/groups",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "query": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/facebook/groups \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d query=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.searchGroups({\n    query: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/facebook/groups",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {
              "query": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/facebook/groups \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d query=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.searchGroups({\n    query: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/facebook/groups",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "query": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/facebook/groups \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d query=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.searchGroups({\n    query: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/facebook/groups",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "query": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/facebook/groups \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d query=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.searchGroups({\n    query: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.facebook.searchGroups(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "query: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "query"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/instagram.createSession": {
        "id": "endpoint_integrations/instagram.createSession",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/instagram"
        ],
        "displayName": "Create Session",
        "operationId": "create-session",
        "description": "Create a Instagram session that you can connect to via playwright. See [this link](/overview/integrations/custom-automations) for more info.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/instagram"
          },
          {
            "type": "literal",
            "value": "/session"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/types:CreateSessionResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/instagram/session",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "wsUrl": "string",
                "postSignInUrl": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/instagram/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.instagram.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/instagram/session",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/instagram/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.instagram.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/instagram/session",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/instagram/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.instagram.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/instagram/session",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/instagram/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.instagram.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/instagram/session",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/instagram/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.instagram.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/instagram/session",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/instagram/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.instagram.createSession();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.instagram.createSession()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/linkedin.createSession": {
        "id": "endpoint_integrations/linkedin.createSession",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/linkedin"
        ],
        "displayName": "Create Session",
        "operationId": "create-session",
        "description": "Create a LinkedIn session that you can connect to via playwright. See [this link](/overview/integrations/custom-automations) for more info.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/linkedin"
          },
          {
            "type": "literal",
            "value": "/session"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/types:CreateSessionResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/linkedin/session",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "wsUrl": "string",
                "postSignInUrl": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/linkedin/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/session",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/linkedin/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/session",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/linkedin/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/session",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/linkedin/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/session",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/linkedin/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/session",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/linkedin/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.createSession();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.linkedin.createSession()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/linkedin.getConnectionInvitations": {
        "id": "endpoint_integrations/linkedin.getConnectionInvitations",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/linkedin"
        ],
        "displayName": "Get Connection Invitations",
        "operationId": "get-connection-invitations",
        "description": "Get your the list of pending LinkedIn connection requests.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/linkedin"
          },
          {
            "type": "literal",
            "value": "/invitations"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/linkedin:InvitationRequestsResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/linkedin/invitations",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "invitationRequests": [
                  {
                    "name": "string",
                    "profileUrl": "string",
                    "sentTimeLabel": "string",
                    "description": "string",
                    "sharedConnections": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/linkedin/invitations \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getConnectionInvitations();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/invitations",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/linkedin/invitations \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getConnectionInvitations();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/invitations",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/linkedin/invitations \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getConnectionInvitations();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/invitations",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/linkedin/invitations \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getConnectionInvitations();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/invitations",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/linkedin/invitations \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getConnectionInvitations();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/invitations",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/linkedin/invitations \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getConnectionInvitations();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.linkedin.getConnectionInvitations()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/linkedin.acceptConnectionInvitation": {
        "id": "endpoint_integrations/linkedin.acceptConnectionInvitation",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/linkedin"
        ],
        "displayName": "Accept Connection Invitation",
        "operationId": "accept-connection-invitation",
        "description": "Accept a LinkedIn connection invitation",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/linkedin"
          },
          {
            "type": "literal",
            "value": "/invitations/accept"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "profileUrl",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/linkedin:AcceptInvitationResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/linkedin/invitations/accept",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "profileUrl": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/linkedin/invitations/accept \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"profileUrl\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.acceptConnectionInvitation({\n    profileUrl: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/invitations/accept",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "profileUrl": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/linkedin/invitations/accept \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"profileUrl\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.acceptConnectionInvitation({\n    profileUrl: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/invitations/accept",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "profileUrl": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/linkedin/invitations/accept \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"profileUrl\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.acceptConnectionInvitation({\n    profileUrl: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/invitations/accept",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "profileUrl": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/linkedin/invitations/accept \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"profileUrl\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.acceptConnectionInvitation({\n    profileUrl: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/invitations/accept",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "profileUrl": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/linkedin/invitations/accept \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"profileUrl\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.acceptConnectionInvitation({\n    profileUrl: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/invitations/accept",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "profileUrl": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/linkedin/invitations/accept \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"profileUrl\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.acceptConnectionInvitation({\n    profileUrl: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.linkedin.acceptConnectionInvitation(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "profileUrl: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "profileUrl"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/linkedin.createPost": {
        "id": "endpoint_integrations/linkedin.createPost",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/linkedin"
        ],
        "displayName": "Create Post",
        "operationId": "create-post",
        "description": "Create a new LinkedIn post",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/linkedin"
          },
          {
            "type": "literal",
            "value": "/posts"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "content",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/linkedin:CreatePostResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/linkedin/posts",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "content": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/linkedin/posts \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"content\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.createPost({\n    content: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/posts",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "content": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/linkedin/posts \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"content\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.createPost({\n    content: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/posts",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "content": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/linkedin/posts \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"content\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.createPost({\n    content: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/posts",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "content": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/linkedin/posts \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"content\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.createPost({\n    content: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/posts",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "content": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/linkedin/posts \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"content\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.createPost({\n    content: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/posts",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "content": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/linkedin/posts \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"content\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.createPost({\n    content: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.linkedin.createPost(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "content: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "content"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/linkedin.search": {
        "id": "endpoint_integrations/linkedin.search",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/linkedin"
        ],
        "displayName": "Search",
        "operationId": "search",
        "description": "Search for people on LinkedIn",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/linkedin"
          },
          {
            "type": "literal",
            "value": "/search"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "queryParameters": [
          {
            "key": "firstName",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "lastName",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/linkedin:SearchResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/linkedin/search",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "firstName": "string",
              "lastName": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "results": [
                  {
                    "title": "string",
                    "connectionDegree": "string",
                    "secondarySubtitle": "string",
                    "navigationUrl": "string",
                    "premium": "string",
                    "primarySubtitle": "string",
                    "summary": "string",
                    "navigationContext": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/linkedin/search \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d firstName=string \\\n     -d lastName=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.search({\n    firstName: \"string\",\n    lastName: \"string\",\n    limit: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/search",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {
              "firstName": "string",
              "lastName": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/linkedin/search \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d firstName=string \\\n     -d lastName=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.search({\n    firstName: \"string\",\n    lastName: \"string\",\n    limit: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/search",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "firstName": "string",
              "lastName": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/linkedin/search \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d firstName=string \\\n     -d lastName=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.search({\n    firstName: \"string\",\n    lastName: \"string\",\n    limit: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/search",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {
              "firstName": "string",
              "lastName": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/linkedin/search \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d firstName=string \\\n     -d lastName=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.search({\n    firstName: \"string\",\n    lastName: \"string\",\n    limit: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/search",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "firstName": "string",
              "lastName": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/linkedin/search \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d firstName=string \\\n     -d lastName=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.search({\n    firstName: \"string\",\n    lastName: \"string\",\n    limit: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/search",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "firstName": "string",
              "lastName": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/linkedin/search \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d firstName=string \\\n     -d lastName=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.search({\n    firstName: \"string\",\n    lastName: \"string\",\n    limit: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.linkedin.search(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "firstName: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "firstName"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "lastName: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "lastName"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "limit: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "limit"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/linkedin.getConnections": {
        "id": "endpoint_integrations/linkedin.getConnections",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/linkedin"
        ],
        "displayName": "Get Connections",
        "operationId": "get-connections",
        "description": "Get your LinkedIn connections",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/linkedin"
          },
          {
            "type": "literal",
            "value": "/connections"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "queryParameters": [
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "offset",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/linkedin:GetConnectionsResult"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/linkedin/connections",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "limit": "string",
              "offset": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "connections": [
                  {
                    "firstName": "string",
                    "lastName": "string",
                    "profileUrl": "string",
                    "headline": "string",
                    "publicIdentifier": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/linkedin/connections \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=string \\\n     -d offset=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getConnections({\n    limit: \"string\",\n    offset: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/connections",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {
              "limit": "string",
              "offset": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/linkedin/connections \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=string \\\n     -d offset=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getConnections({\n    limit: \"string\",\n    offset: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/connections",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "limit": "string",
              "offset": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/linkedin/connections \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=string \\\n     -d offset=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getConnections({\n    limit: \"string\",\n    offset: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/connections",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {
              "limit": "string",
              "offset": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/linkedin/connections \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=string \\\n     -d offset=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getConnections({\n    limit: \"string\",\n    offset: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/connections",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "limit": "string",
              "offset": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/linkedin/connections \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=string \\\n     -d offset=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getConnections({\n    limit: \"string\",\n    offset: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/connections",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "limit": "string",
              "offset": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/linkedin/connections \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=string \\\n     -d offset=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getConnections({\n    limit: \"string\",\n    offset: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.linkedin.getConnections(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "limit: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "limit"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "offset: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "offset"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/linkedin.sendMessage": {
        "id": "endpoint_integrations/linkedin.sendMessage",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/linkedin"
        ],
        "displayName": "Send Message",
        "operationId": "send-message",
        "description": "Send a LinkedIn message",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/linkedin"
          },
          {
            "type": "literal",
            "value": "/messages"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "to",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The profile name of the person to send the message to. For example for the account with the url \"https://www.linkedin.com/in/zacharyashen/\" the profile name would be \"zacharyashen\""
                },
                {
                  "key": "content",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/linkedin:LinkedInSendMessageResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/linkedin/messages",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "to": "string",
                "content": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/linkedin/messages \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"to\": \"string\",\n  \"content\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.sendMessage({\n    to: \"string\",\n    content: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/messages",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "to": "string",
                "content": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/linkedin/messages \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"to\": \"string\",\n  \"content\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.sendMessage({\n    to: \"string\",\n    content: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/messages",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "to": "string",
                "content": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/linkedin/messages \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"to\": \"string\",\n  \"content\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.sendMessage({\n    to: \"string\",\n    content: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/messages",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "to": "string",
                "content": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/linkedin/messages \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"to\": \"string\",\n  \"content\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.sendMessage({\n    to: \"string\",\n    content: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/messages",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "to": "string",
                "content": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/linkedin/messages \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"to\": \"string\",\n  \"content\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.sendMessage({\n    to: \"string\",\n    content: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/messages",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "to": "string",
                "content": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/linkedin/messages \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"to\": \"string\",\n  \"content\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.sendMessage({\n    to: \"string\",\n    content: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.linkedin.sendMessage(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "to: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "to"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "content: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "content"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/linkedin.getMessages": {
        "id": "endpoint_integrations/linkedin.getMessages",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/linkedin"
        ],
        "displayName": "Get Messages",
        "operationId": "get-messages",
        "description": "Get your LinkedIn messages",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/linkedin"
          },
          {
            "type": "literal",
            "value": "/messages/"
          },
          {
            "type": "pathParameter",
            "value": "profileName"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "pathParameters": [
          {
            "key": "profileName",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The profile name of the person to get the messages from. For example for the account with the url \"https://www.linkedin.com/in/zacharyashen/\" the profile name would be \"zacharyashen\""
          }
        ],
        "queryParameters": [
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/linkedin:LinkedInGetMessagesResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/linkedin/messages/:profileName",
            "responseStatusCode": 200,
            "pathParameters": {
              "profileName": ":profileName"
            },
            "queryParameters": {
              "limit": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "messages": [
                  {
                    "content": "string",
                    "sentTime": "string",
                    "from": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/linkedin/messages/:profileName \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getMessages(\"string\", {\n    limit: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/messages/:profileName",
            "responseStatusCode": 401,
            "pathParameters": {
              "profileName": ":profileName"
            },
            "queryParameters": {
              "limit": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/linkedin/messages/:profileName \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getMessages(\"string\", {\n    limit: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/messages/:profileName",
            "responseStatusCode": 500,
            "pathParameters": {
              "profileName": ":profileName"
            },
            "queryParameters": {
              "limit": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/linkedin/messages/:profileName \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getMessages(\"string\", {\n    limit: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/messages/:profileName",
            "responseStatusCode": 404,
            "pathParameters": {
              "profileName": ":profileName"
            },
            "queryParameters": {
              "limit": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/linkedin/messages/:profileName \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getMessages(\"string\", {\n    limit: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/messages/:profileName",
            "responseStatusCode": 400,
            "pathParameters": {
              "profileName": ":profileName"
            },
            "queryParameters": {
              "limit": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/linkedin/messages/:profileName \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getMessages(\"string\", {\n    limit: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linkedin/messages/:profileName",
            "responseStatusCode": 500,
            "pathParameters": {
              "profileName": ":profileName"
            },
            "queryParameters": {
              "limit": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/linkedin/messages/:profileName \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getMessages(\"string\", {\n    limit: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.linkedin.getMessages(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "$FERN_INPUT",
                    "isOptional": false,
                    "inputDelimiter": ",\n\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "$FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "PATH",
                              "path": "profileName"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "limit: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "limit"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/ppp.createSession": {
        "id": "endpoint_integrations/ppp.createSession",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/ppp"
        ],
        "displayName": "Create Session",
        "operationId": "create-session",
        "description": "Create a perfect pricing session that you can connect to via playwright. See [this link](/overview/integrations/custom-automations) for more info.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/ppp"
          },
          {
            "type": "literal",
            "value": "/session"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/types:CreateSessionResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/ppp/session",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "wsUrl": "string",
                "postSignInUrl": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/ppp/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/session",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/ppp/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/session",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/ppp/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/session",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/ppp/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/session",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/ppp/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/session",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/ppp/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createSession();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.ppp.createSession()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/ppp.createCustomer": {
        "id": "endpoint_integrations/ppp.createCustomer",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/ppp"
        ],
        "displayName": "Create Customer",
        "operationId": "create-customer",
        "description": "Create a perfect pricing customer",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/ppp"
          },
          {
            "type": "literal",
            "value": "/customers"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/ppp:Customer"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/ppp:CreateCustomerResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/ppp/customers",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "firstName": "string",
                "lastName": "string",
                "companyName": "string",
                "primaryPhoneType": "Home",
                "primaryPhone": "string",
                "primaryEmailType": "Work",
                "primaryEmail": "string",
                "commPreferences": "None",
                "billingTerm": "string",
                "leadSource": "string",
                "customerType": "string",
                "invoiceType": "string",
                "billingStreet1": "string",
                "billingCity": "string",
                "billingState": "string",
                "billingZip": "string",
                "primaryLocationName": "string",
                "primaryStreet1": "string",
                "primaryCity": "string",
                "primaryState": "string",
                "primaryZip": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/ppp/customers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"companyName\": \"string\",\n  \"primaryPhoneType\": \"Home\",\n  \"primaryPhone\": \"string\",\n  \"primaryEmailType\": \"Work\",\n  \"primaryEmail\": \"string\",\n  \"commPreferences\": \"None\",\n  \"billingTerm\": \"string\",\n  \"leadSource\": \"string\",\n  \"customerType\": \"string\",\n  \"invoiceType\": \"string\",\n  \"billingStreet1\": \"string\",\n  \"billingCity\": \"string\",\n  \"billingState\": \"string\",\n  \"billingZip\": \"string\",\n  \"primaryLocationName\": \"string\",\n  \"primaryStreet1\": \"string\",\n  \"primaryCity\": \"string\",\n  \"primaryState\": \"string\",\n  \"primaryZip\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createCustomer({\n    firstName: \"string\",\n    lastName: \"string\",\n    companyName: \"string\",\n    primaryPhoneType: Keet.PhoneType.Home,\n    primaryPhone: \"string\",\n    primaryPhoneLabel: \"string\",\n    primaryEmailType: Keet.EmailType.Work,\n    primaryEmail: \"string\",\n    commPreferences: Keet.CommPreferences.None,\n    billingTerm: \"string\",\n    leadSource: \"string\",\n    customerType: \"string\",\n    comments: \"string\",\n    invoiceType: \"string\",\n    billingLocationName: \"string\",\n    billingStreet1: \"string\",\n    billingStreet2: \"string\",\n    billingCity: \"string\",\n    billingState: \"string\",\n    billingZip: \"string\",\n    billingComments: \"string\",\n    primaryLocationName: \"string\",\n    primaryStreet1: \"string\",\n    primaryStreet2: \"string\",\n    primaryCity: \"string\",\n    primaryState: \"string\",\n    primaryZip: \"string\",\n    salesTax: \"string\",\n    primaryComments: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/customers",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "firstName": "string",
                "lastName": "string",
                "companyName": "string",
                "primaryPhoneType": "Home",
                "primaryPhone": "string",
                "primaryEmailType": "Work",
                "primaryEmail": "string",
                "commPreferences": "None",
                "billingTerm": "string",
                "leadSource": "string",
                "customerType": "string",
                "invoiceType": "string",
                "billingStreet1": "string",
                "billingCity": "string",
                "billingState": "string",
                "billingZip": "string",
                "primaryLocationName": "string",
                "primaryStreet1": "string",
                "primaryCity": "string",
                "primaryState": "string",
                "primaryZip": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/ppp/customers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"companyName\": \"string\",\n  \"primaryPhoneType\": \"Home\",\n  \"primaryPhone\": \"string\",\n  \"primaryEmailType\": \"Work\",\n  \"primaryEmail\": \"string\",\n  \"commPreferences\": \"None\",\n  \"billingTerm\": \"string\",\n  \"leadSource\": \"string\",\n  \"customerType\": \"string\",\n  \"invoiceType\": \"string\",\n  \"billingStreet1\": \"string\",\n  \"billingCity\": \"string\",\n  \"billingState\": \"string\",\n  \"billingZip\": \"string\",\n  \"primaryLocationName\": \"string\",\n  \"primaryStreet1\": \"string\",\n  \"primaryCity\": \"string\",\n  \"primaryState\": \"string\",\n  \"primaryZip\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createCustomer({\n    firstName: \"string\",\n    lastName: \"string\",\n    companyName: \"string\",\n    primaryPhoneType: Keet.PhoneType.Home,\n    primaryPhone: \"string\",\n    primaryPhoneLabel: \"string\",\n    primaryEmailType: Keet.EmailType.Work,\n    primaryEmail: \"string\",\n    commPreferences: Keet.CommPreferences.None,\n    billingTerm: \"string\",\n    leadSource: \"string\",\n    customerType: \"string\",\n    comments: \"string\",\n    invoiceType: \"string\",\n    billingLocationName: \"string\",\n    billingStreet1: \"string\",\n    billingStreet2: \"string\",\n    billingCity: \"string\",\n    billingState: \"string\",\n    billingZip: \"string\",\n    billingComments: \"string\",\n    primaryLocationName: \"string\",\n    primaryStreet1: \"string\",\n    primaryStreet2: \"string\",\n    primaryCity: \"string\",\n    primaryState: \"string\",\n    primaryZip: \"string\",\n    salesTax: \"string\",\n    primaryComments: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/customers",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "firstName": "string",
                "lastName": "string",
                "companyName": "string",
                "primaryPhoneType": "Home",
                "primaryPhone": "string",
                "primaryEmailType": "Work",
                "primaryEmail": "string",
                "commPreferences": "None",
                "billingTerm": "string",
                "leadSource": "string",
                "customerType": "string",
                "invoiceType": "string",
                "billingStreet1": "string",
                "billingCity": "string",
                "billingState": "string",
                "billingZip": "string",
                "primaryLocationName": "string",
                "primaryStreet1": "string",
                "primaryCity": "string",
                "primaryState": "string",
                "primaryZip": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/ppp/customers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"companyName\": \"string\",\n  \"primaryPhoneType\": \"Home\",\n  \"primaryPhone\": \"string\",\n  \"primaryEmailType\": \"Work\",\n  \"primaryEmail\": \"string\",\n  \"commPreferences\": \"None\",\n  \"billingTerm\": \"string\",\n  \"leadSource\": \"string\",\n  \"customerType\": \"string\",\n  \"invoiceType\": \"string\",\n  \"billingStreet1\": \"string\",\n  \"billingCity\": \"string\",\n  \"billingState\": \"string\",\n  \"billingZip\": \"string\",\n  \"primaryLocationName\": \"string\",\n  \"primaryStreet1\": \"string\",\n  \"primaryCity\": \"string\",\n  \"primaryState\": \"string\",\n  \"primaryZip\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createCustomer({\n    firstName: \"string\",\n    lastName: \"string\",\n    companyName: \"string\",\n    primaryPhoneType: Keet.PhoneType.Home,\n    primaryPhone: \"string\",\n    primaryPhoneLabel: \"string\",\n    primaryEmailType: Keet.EmailType.Work,\n    primaryEmail: \"string\",\n    commPreferences: Keet.CommPreferences.None,\n    billingTerm: \"string\",\n    leadSource: \"string\",\n    customerType: \"string\",\n    comments: \"string\",\n    invoiceType: \"string\",\n    billingLocationName: \"string\",\n    billingStreet1: \"string\",\n    billingStreet2: \"string\",\n    billingCity: \"string\",\n    billingState: \"string\",\n    billingZip: \"string\",\n    billingComments: \"string\",\n    primaryLocationName: \"string\",\n    primaryStreet1: \"string\",\n    primaryStreet2: \"string\",\n    primaryCity: \"string\",\n    primaryState: \"string\",\n    primaryZip: \"string\",\n    salesTax: \"string\",\n    primaryComments: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/customers",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "firstName": "string",
                "lastName": "string",
                "companyName": "string",
                "primaryPhoneType": "Home",
                "primaryPhone": "string",
                "primaryEmailType": "Work",
                "primaryEmail": "string",
                "commPreferences": "None",
                "billingTerm": "string",
                "leadSource": "string",
                "customerType": "string",
                "invoiceType": "string",
                "billingStreet1": "string",
                "billingCity": "string",
                "billingState": "string",
                "billingZip": "string",
                "primaryLocationName": "string",
                "primaryStreet1": "string",
                "primaryCity": "string",
                "primaryState": "string",
                "primaryZip": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/ppp/customers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"companyName\": \"string\",\n  \"primaryPhoneType\": \"Home\",\n  \"primaryPhone\": \"string\",\n  \"primaryEmailType\": \"Work\",\n  \"primaryEmail\": \"string\",\n  \"commPreferences\": \"None\",\n  \"billingTerm\": \"string\",\n  \"leadSource\": \"string\",\n  \"customerType\": \"string\",\n  \"invoiceType\": \"string\",\n  \"billingStreet1\": \"string\",\n  \"billingCity\": \"string\",\n  \"billingState\": \"string\",\n  \"billingZip\": \"string\",\n  \"primaryLocationName\": \"string\",\n  \"primaryStreet1\": \"string\",\n  \"primaryCity\": \"string\",\n  \"primaryState\": \"string\",\n  \"primaryZip\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createCustomer({\n    firstName: \"string\",\n    lastName: \"string\",\n    companyName: \"string\",\n    primaryPhoneType: Keet.PhoneType.Home,\n    primaryPhone: \"string\",\n    primaryPhoneLabel: \"string\",\n    primaryEmailType: Keet.EmailType.Work,\n    primaryEmail: \"string\",\n    commPreferences: Keet.CommPreferences.None,\n    billingTerm: \"string\",\n    leadSource: \"string\",\n    customerType: \"string\",\n    comments: \"string\",\n    invoiceType: \"string\",\n    billingLocationName: \"string\",\n    billingStreet1: \"string\",\n    billingStreet2: \"string\",\n    billingCity: \"string\",\n    billingState: \"string\",\n    billingZip: \"string\",\n    billingComments: \"string\",\n    primaryLocationName: \"string\",\n    primaryStreet1: \"string\",\n    primaryStreet2: \"string\",\n    primaryCity: \"string\",\n    primaryState: \"string\",\n    primaryZip: \"string\",\n    salesTax: \"string\",\n    primaryComments: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/customers",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "firstName": "string",
                "lastName": "string",
                "companyName": "string",
                "primaryPhoneType": "Home",
                "primaryPhone": "string",
                "primaryEmailType": "Work",
                "primaryEmail": "string",
                "commPreferences": "None",
                "billingTerm": "string",
                "leadSource": "string",
                "customerType": "string",
                "invoiceType": "string",
                "billingStreet1": "string",
                "billingCity": "string",
                "billingState": "string",
                "billingZip": "string",
                "primaryLocationName": "string",
                "primaryStreet1": "string",
                "primaryCity": "string",
                "primaryState": "string",
                "primaryZip": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/ppp/customers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"companyName\": \"string\",\n  \"primaryPhoneType\": \"Home\",\n  \"primaryPhone\": \"string\",\n  \"primaryEmailType\": \"Work\",\n  \"primaryEmail\": \"string\",\n  \"commPreferences\": \"None\",\n  \"billingTerm\": \"string\",\n  \"leadSource\": \"string\",\n  \"customerType\": \"string\",\n  \"invoiceType\": \"string\",\n  \"billingStreet1\": \"string\",\n  \"billingCity\": \"string\",\n  \"billingState\": \"string\",\n  \"billingZip\": \"string\",\n  \"primaryLocationName\": \"string\",\n  \"primaryStreet1\": \"string\",\n  \"primaryCity\": \"string\",\n  \"primaryState\": \"string\",\n  \"primaryZip\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createCustomer({\n    firstName: \"string\",\n    lastName: \"string\",\n    companyName: \"string\",\n    primaryPhoneType: Keet.PhoneType.Home,\n    primaryPhone: \"string\",\n    primaryPhoneLabel: \"string\",\n    primaryEmailType: Keet.EmailType.Work,\n    primaryEmail: \"string\",\n    commPreferences: Keet.CommPreferences.None,\n    billingTerm: \"string\",\n    leadSource: \"string\",\n    customerType: \"string\",\n    comments: \"string\",\n    invoiceType: \"string\",\n    billingLocationName: \"string\",\n    billingStreet1: \"string\",\n    billingStreet2: \"string\",\n    billingCity: \"string\",\n    billingState: \"string\",\n    billingZip: \"string\",\n    billingComments: \"string\",\n    primaryLocationName: \"string\",\n    primaryStreet1: \"string\",\n    primaryStreet2: \"string\",\n    primaryCity: \"string\",\n    primaryState: \"string\",\n    primaryZip: \"string\",\n    salesTax: \"string\",\n    primaryComments: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/customers",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "firstName": "string",
                "lastName": "string",
                "companyName": "string",
                "primaryPhoneType": "Home",
                "primaryPhone": "string",
                "primaryEmailType": "Work",
                "primaryEmail": "string",
                "commPreferences": "None",
                "billingTerm": "string",
                "leadSource": "string",
                "customerType": "string",
                "invoiceType": "string",
                "billingStreet1": "string",
                "billingCity": "string",
                "billingState": "string",
                "billingZip": "string",
                "primaryLocationName": "string",
                "primaryStreet1": "string",
                "primaryCity": "string",
                "primaryState": "string",
                "primaryZip": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/ppp/customers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"companyName\": \"string\",\n  \"primaryPhoneType\": \"Home\",\n  \"primaryPhone\": \"string\",\n  \"primaryEmailType\": \"Work\",\n  \"primaryEmail\": \"string\",\n  \"commPreferences\": \"None\",\n  \"billingTerm\": \"string\",\n  \"leadSource\": \"string\",\n  \"customerType\": \"string\",\n  \"invoiceType\": \"string\",\n  \"billingStreet1\": \"string\",\n  \"billingCity\": \"string\",\n  \"billingState\": \"string\",\n  \"billingZip\": \"string\",\n  \"primaryLocationName\": \"string\",\n  \"primaryStreet1\": \"string\",\n  \"primaryCity\": \"string\",\n  \"primaryState\": \"string\",\n  \"primaryZip\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createCustomer({\n    firstName: \"string\",\n    lastName: \"string\",\n    companyName: \"string\",\n    primaryPhoneType: Keet.PhoneType.Home,\n    primaryPhone: \"string\",\n    primaryPhoneLabel: \"string\",\n    primaryEmailType: Keet.EmailType.Work,\n    primaryEmail: \"string\",\n    commPreferences: Keet.CommPreferences.None,\n    billingTerm: \"string\",\n    leadSource: \"string\",\n    customerType: \"string\",\n    comments: \"string\",\n    invoiceType: \"string\",\n    billingLocationName: \"string\",\n    billingStreet1: \"string\",\n    billingStreet2: \"string\",\n    billingCity: \"string\",\n    billingState: \"string\",\n    billingZip: \"string\",\n    billingComments: \"string\",\n    primaryLocationName: \"string\",\n    primaryStreet1: \"string\",\n    primaryStreet2: \"string\",\n    primaryCity: \"string\",\n    primaryState: \"string\",\n    primaryZip: \"string\",\n    salesTax: \"string\",\n    primaryComments: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.ppp.createCustomer(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "{\n\t\t\t$FERN_INPUT\n\t\t}",
                          "isOptional": true,
                          "inputDelimiter": ",\n\t\t\t",
                          "templateInputs": [
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "firstName: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "firstName"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "lastName: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "lastName"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "companyName: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "companyName"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "enum",
                                "imports": [],
                                "isOptional": true,
                                "values": {
                                  "Home": "Keet.PhoneType.Home",
                                  "Work": "Keet.PhoneType.Work",
                                  "Cell": "Keet.PhoneType.Cell",
                                  "Fax": "Keet.PhoneType.Fax",
                                  "Other": "Keet.PhoneType.Other"
                                },
                                "templateString": "primaryPhoneType: $FERN_INPUT",
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "primaryPhoneType"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "primaryPhone: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "primaryPhone"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "primaryPhoneLabel: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "primaryPhoneLabel"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "enum",
                                "imports": [],
                                "isOptional": true,
                                "values": {
                                  "Work": "Keet.EmailType.Work",
                                  "Home": "Keet.EmailType.Home",
                                  "Other": "Keet.EmailType.Other"
                                },
                                "templateString": "primaryEmailType: $FERN_INPUT",
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "primaryEmailType"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "primaryEmail: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "primaryEmail"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "enum",
                                "imports": [],
                                "isOptional": true,
                                "values": {
                                  "None": "Keet.CommPreferences.None",
                                  "Email": "Keet.CommPreferences.Email",
                                  "Text": "Keet.CommPreferences.Text",
                                  "Both": "Keet.CommPreferences.Both"
                                },
                                "templateString": "commPreferences: $FERN_INPUT",
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "commPreferences"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "billingTerm: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "billingTerm"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "leadSource: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "leadSource"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "customerType: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "customerType"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "comments: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "comments"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "invoiceType: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "invoiceType"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "billingLocationName: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "billingLocationName"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "billingStreet1: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "billingStreet1"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "billingStreet2: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "billingStreet2"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "billingCity: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "billingCity"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "billingState: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "billingState"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "billingZip: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "billingZip"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "billingComments: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "billingComments"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "primaryLocationName: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "primaryLocationName"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "primaryStreet1: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "primaryStreet1"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "primaryStreet2: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "primaryStreet2"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "primaryCity: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "primaryCity"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "primaryState: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "primaryState"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "primaryZip: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "primaryZip"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "salesTax: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "salesTax"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "primaryComments: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "primaryComments"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/ppp.searchCustomerDetails": {
        "id": "endpoint_integrations/ppp.searchCustomerDetails",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/ppp"
        ],
        "displayName": "Search Customer Details",
        "operationId": "search-customer-details",
        "description": "Search for perfect pricing customer",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/ppp"
          },
          {
            "type": "literal",
            "value": "/customers/search"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "queryParameters": [
          {
            "key": "firstName",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "lastName",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "phoneNumber",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/ppp:SearchCustomerDetailsResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/ppp/customers/search",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "firstName": "string",
              "lastName": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "customerDetails": {}
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/ppp/customers/search \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d firstName=string \\\n     -d lastName=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.searchCustomerDetails({\n    firstName: \"string\",\n    lastName: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/customers/search",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {
              "firstName": "string",
              "lastName": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/ppp/customers/search \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d firstName=string \\\n     -d lastName=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.searchCustomerDetails({\n    firstName: \"string\",\n    lastName: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/customers/search",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "firstName": "string",
              "lastName": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/ppp/customers/search \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d firstName=string \\\n     -d lastName=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.searchCustomerDetails({\n    firstName: \"string\",\n    lastName: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/customers/search",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {
              "firstName": "string",
              "lastName": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/ppp/customers/search \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d firstName=string \\\n     -d lastName=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.searchCustomerDetails({\n    firstName: \"string\",\n    lastName: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/customers/search",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "firstName": "string",
              "lastName": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/ppp/customers/search \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d firstName=string \\\n     -d lastName=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.searchCustomerDetails({\n    firstName: \"string\",\n    lastName: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/customers/search",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "firstName": "string",
              "lastName": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/ppp/customers/search \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d firstName=string \\\n     -d lastName=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.searchCustomerDetails({\n    firstName: \"string\",\n    lastName: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.ppp.searchCustomerDetails(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "firstName: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "firstName"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "lastName: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "lastName"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/ppp.createAppointment": {
        "id": "endpoint_integrations/ppp.createAppointment",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/ppp"
        ],
        "displayName": "Create Appointment",
        "operationId": "create-appointment",
        "description": "Create a perfect pricing appointment",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/ppp"
          },
          {
            "type": "literal",
            "value": "/appointments"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "firstName",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "key": "phoneNumber",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "key": "serviceCallRequest",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_integrations/ppp:ServiceCallRequest"
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/ppp:CreateAppointmentResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/ppp/appointments",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "serviceCallRequest": {
                  "appointmentType": "scheduled",
                  "serviceCallTypeId": 0,
                  "hours": "string",
                  "minutes": "string",
                  "arrivalWindow": "string",
                  "diagnosticFee": 1,
                  "serviceCallStatus": "string",
                  "leadSourceId": 0,
                  "description": "string",
                  "datepicker1": "string",
                  "dispatchBoardId": 0,
                  "sendEmail": 0,
                  "arrivalWindowID": 0,
                  "newCustomer": 0,
                  "customerFirstName": "string",
                  "customerLastName": "string",
                  "customerCompanyName": "string",
                  "customerFullName": "string",
                  "newServiceCallDefLeadSourID": 0,
                  "appointmentSaveFrom": "string",
                  "isSecondaryServiceCallData": 0
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/ppp/appointments \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"serviceCallRequest\": {\n    \"appointmentType\": \"scheduled\",\n    \"serviceCallTypeId\": 0,\n    \"hours\": \"string\",\n    \"minutes\": \"string\",\n    \"arrivalWindow\": \"string\",\n    \"diagnosticFee\": 1,\n    \"serviceCallStatus\": \"string\",\n    \"leadSourceId\": 0,\n    \"description\": \"string\",\n    \"datepicker1\": \"string\",\n    \"dispatchBoardId\": 0,\n    \"sendEmail\": 0,\n    \"arrivalWindowID\": 0,\n    \"newCustomer\": 0,\n    \"customerFirstName\": \"string\",\n    \"customerLastName\": \"string\",\n    \"customerCompanyName\": \"string\",\n    \"customerFullName\": \"string\",\n    \"newServiceCallDefLeadSourID\": 0,\n    \"appointmentSaveFrom\": \"string\",\n    \"isSecondaryServiceCallData\": 0\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createAppointment({\n    firstName: \"string\",\n    lastName: \"string\",\n    serviceCallRequest: {\n        locationContactInfoId: \"string\",\n        appointmentType: Keet.AppointmentType.Scheduled,\n        openServiceCallDate: \"string\",\n        serviceCallTypeId: 1,\n        hours: \"string\",\n        minutes: \"string\",\n        arrivalWindow: \"string\",\n        diagnosticFee: 1.1,\n        serviceCallStatus: \"string\",\n        leadSourceId: 1,\n        poNumber: \"string\",\n        description: \"string\",\n        notes: \"string\",\n        datepicker1: \"string\",\n        dispatchBoardId: 1,\n        callTypeId: \"string\",\n        startTime: \"string\",\n        endTime: \"string\",\n        date: \"string\",\n        technicianId: 1,\n        sendEmail: 1,\n        doNotEmail: 1,\n        arrivalWindowId: 1,\n        id: \"string\",\n        newCustomer: 1,\n        customerFirstName: \"string\",\n        customerLastName: \"string\",\n        customerCompanyName: \"string\",\n        customerFullName: \"string\",\n        newServiceCallDefLeadSourId: 1,\n        appointmentSaveFrom: \"string\",\n        selectedMultiTechSameCall: [{\n                techId: \"string\",\n                startTime: \"string\",\n                endTime: \"string\"\n            }],\n        primaryOpenCallTech: \"string\",\n        selectedMultiTechSameCallOrNot: Keet.MultiTechOrNot.AddNewTechnician,\n        isMultipleTech: \"string\",\n        isPrimaryTechId: 1,\n        isPrimaryTech: \"string\",\n        isSecondaryServiceCallData: 1\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/appointments",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "serviceCallRequest": {
                  "appointmentType": "scheduled",
                  "serviceCallTypeId": 0,
                  "hours": "string",
                  "minutes": "string",
                  "arrivalWindow": "string",
                  "diagnosticFee": 1,
                  "serviceCallStatus": "string",
                  "leadSourceId": 0,
                  "description": "string",
                  "datepicker1": "string",
                  "dispatchBoardId": 0,
                  "sendEmail": 0,
                  "arrivalWindowID": 0,
                  "newCustomer": 0,
                  "customerFirstName": "string",
                  "customerLastName": "string",
                  "customerCompanyName": "string",
                  "customerFullName": "string",
                  "newServiceCallDefLeadSourID": 0,
                  "appointmentSaveFrom": "string",
                  "isSecondaryServiceCallData": 0
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/ppp/appointments \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"serviceCallRequest\": {\n    \"appointmentType\": \"scheduled\",\n    \"serviceCallTypeId\": 0,\n    \"hours\": \"string\",\n    \"minutes\": \"string\",\n    \"arrivalWindow\": \"string\",\n    \"diagnosticFee\": 1,\n    \"serviceCallStatus\": \"string\",\n    \"leadSourceId\": 0,\n    \"description\": \"string\",\n    \"datepicker1\": \"string\",\n    \"dispatchBoardId\": 0,\n    \"sendEmail\": 0,\n    \"arrivalWindowID\": 0,\n    \"newCustomer\": 0,\n    \"customerFirstName\": \"string\",\n    \"customerLastName\": \"string\",\n    \"customerCompanyName\": \"string\",\n    \"customerFullName\": \"string\",\n    \"newServiceCallDefLeadSourID\": 0,\n    \"appointmentSaveFrom\": \"string\",\n    \"isSecondaryServiceCallData\": 0\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createAppointment({\n    firstName: \"string\",\n    lastName: \"string\",\n    serviceCallRequest: {\n        locationContactInfoId: \"string\",\n        appointmentType: Keet.AppointmentType.Scheduled,\n        openServiceCallDate: \"string\",\n        serviceCallTypeId: 1,\n        hours: \"string\",\n        minutes: \"string\",\n        arrivalWindow: \"string\",\n        diagnosticFee: 1.1,\n        serviceCallStatus: \"string\",\n        leadSourceId: 1,\n        poNumber: \"string\",\n        description: \"string\",\n        notes: \"string\",\n        datepicker1: \"string\",\n        dispatchBoardId: 1,\n        callTypeId: \"string\",\n        startTime: \"string\",\n        endTime: \"string\",\n        date: \"string\",\n        technicianId: 1,\n        sendEmail: 1,\n        doNotEmail: 1,\n        arrivalWindowId: 1,\n        id: \"string\",\n        newCustomer: 1,\n        customerFirstName: \"string\",\n        customerLastName: \"string\",\n        customerCompanyName: \"string\",\n        customerFullName: \"string\",\n        newServiceCallDefLeadSourId: 1,\n        appointmentSaveFrom: \"string\",\n        selectedMultiTechSameCall: [{\n                techId: \"string\",\n                startTime: \"string\",\n                endTime: \"string\"\n            }],\n        primaryOpenCallTech: \"string\",\n        selectedMultiTechSameCallOrNot: Keet.MultiTechOrNot.AddNewTechnician,\n        isMultipleTech: \"string\",\n        isPrimaryTechId: 1,\n        isPrimaryTech: \"string\",\n        isSecondaryServiceCallData: 1\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/appointments",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "serviceCallRequest": {
                  "appointmentType": "scheduled",
                  "serviceCallTypeId": 0,
                  "hours": "string",
                  "minutes": "string",
                  "arrivalWindow": "string",
                  "diagnosticFee": 1,
                  "serviceCallStatus": "string",
                  "leadSourceId": 0,
                  "description": "string",
                  "datepicker1": "string",
                  "dispatchBoardId": 0,
                  "sendEmail": 0,
                  "arrivalWindowID": 0,
                  "newCustomer": 0,
                  "customerFirstName": "string",
                  "customerLastName": "string",
                  "customerCompanyName": "string",
                  "customerFullName": "string",
                  "newServiceCallDefLeadSourID": 0,
                  "appointmentSaveFrom": "string",
                  "isSecondaryServiceCallData": 0
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/ppp/appointments \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"serviceCallRequest\": {\n    \"appointmentType\": \"scheduled\",\n    \"serviceCallTypeId\": 0,\n    \"hours\": \"string\",\n    \"minutes\": \"string\",\n    \"arrivalWindow\": \"string\",\n    \"diagnosticFee\": 1,\n    \"serviceCallStatus\": \"string\",\n    \"leadSourceId\": 0,\n    \"description\": \"string\",\n    \"datepicker1\": \"string\",\n    \"dispatchBoardId\": 0,\n    \"sendEmail\": 0,\n    \"arrivalWindowID\": 0,\n    \"newCustomer\": 0,\n    \"customerFirstName\": \"string\",\n    \"customerLastName\": \"string\",\n    \"customerCompanyName\": \"string\",\n    \"customerFullName\": \"string\",\n    \"newServiceCallDefLeadSourID\": 0,\n    \"appointmentSaveFrom\": \"string\",\n    \"isSecondaryServiceCallData\": 0\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createAppointment({\n    firstName: \"string\",\n    lastName: \"string\",\n    serviceCallRequest: {\n        locationContactInfoId: \"string\",\n        appointmentType: Keet.AppointmentType.Scheduled,\n        openServiceCallDate: \"string\",\n        serviceCallTypeId: 1,\n        hours: \"string\",\n        minutes: \"string\",\n        arrivalWindow: \"string\",\n        diagnosticFee: 1.1,\n        serviceCallStatus: \"string\",\n        leadSourceId: 1,\n        poNumber: \"string\",\n        description: \"string\",\n        notes: \"string\",\n        datepicker1: \"string\",\n        dispatchBoardId: 1,\n        callTypeId: \"string\",\n        startTime: \"string\",\n        endTime: \"string\",\n        date: \"string\",\n        technicianId: 1,\n        sendEmail: 1,\n        doNotEmail: 1,\n        arrivalWindowId: 1,\n        id: \"string\",\n        newCustomer: 1,\n        customerFirstName: \"string\",\n        customerLastName: \"string\",\n        customerCompanyName: \"string\",\n        customerFullName: \"string\",\n        newServiceCallDefLeadSourId: 1,\n        appointmentSaveFrom: \"string\",\n        selectedMultiTechSameCall: [{\n                techId: \"string\",\n                startTime: \"string\",\n                endTime: \"string\"\n            }],\n        primaryOpenCallTech: \"string\",\n        selectedMultiTechSameCallOrNot: Keet.MultiTechOrNot.AddNewTechnician,\n        isMultipleTech: \"string\",\n        isPrimaryTechId: 1,\n        isPrimaryTech: \"string\",\n        isSecondaryServiceCallData: 1\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/appointments",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "serviceCallRequest": {
                  "appointmentType": "scheduled",
                  "serviceCallTypeId": 0,
                  "hours": "string",
                  "minutes": "string",
                  "arrivalWindow": "string",
                  "diagnosticFee": 1,
                  "serviceCallStatus": "string",
                  "leadSourceId": 0,
                  "description": "string",
                  "datepicker1": "string",
                  "dispatchBoardId": 0,
                  "sendEmail": 0,
                  "arrivalWindowID": 0,
                  "newCustomer": 0,
                  "customerFirstName": "string",
                  "customerLastName": "string",
                  "customerCompanyName": "string",
                  "customerFullName": "string",
                  "newServiceCallDefLeadSourID": 0,
                  "appointmentSaveFrom": "string",
                  "isSecondaryServiceCallData": 0
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/ppp/appointments \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"serviceCallRequest\": {\n    \"appointmentType\": \"scheduled\",\n    \"serviceCallTypeId\": 0,\n    \"hours\": \"string\",\n    \"minutes\": \"string\",\n    \"arrivalWindow\": \"string\",\n    \"diagnosticFee\": 1,\n    \"serviceCallStatus\": \"string\",\n    \"leadSourceId\": 0,\n    \"description\": \"string\",\n    \"datepicker1\": \"string\",\n    \"dispatchBoardId\": 0,\n    \"sendEmail\": 0,\n    \"arrivalWindowID\": 0,\n    \"newCustomer\": 0,\n    \"customerFirstName\": \"string\",\n    \"customerLastName\": \"string\",\n    \"customerCompanyName\": \"string\",\n    \"customerFullName\": \"string\",\n    \"newServiceCallDefLeadSourID\": 0,\n    \"appointmentSaveFrom\": \"string\",\n    \"isSecondaryServiceCallData\": 0\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createAppointment({\n    firstName: \"string\",\n    lastName: \"string\",\n    serviceCallRequest: {\n        locationContactInfoId: \"string\",\n        appointmentType: Keet.AppointmentType.Scheduled,\n        openServiceCallDate: \"string\",\n        serviceCallTypeId: 1,\n        hours: \"string\",\n        minutes: \"string\",\n        arrivalWindow: \"string\",\n        diagnosticFee: 1.1,\n        serviceCallStatus: \"string\",\n        leadSourceId: 1,\n        poNumber: \"string\",\n        description: \"string\",\n        notes: \"string\",\n        datepicker1: \"string\",\n        dispatchBoardId: 1,\n        callTypeId: \"string\",\n        startTime: \"string\",\n        endTime: \"string\",\n        date: \"string\",\n        technicianId: 1,\n        sendEmail: 1,\n        doNotEmail: 1,\n        arrivalWindowId: 1,\n        id: \"string\",\n        newCustomer: 1,\n        customerFirstName: \"string\",\n        customerLastName: \"string\",\n        customerCompanyName: \"string\",\n        customerFullName: \"string\",\n        newServiceCallDefLeadSourId: 1,\n        appointmentSaveFrom: \"string\",\n        selectedMultiTechSameCall: [{\n                techId: \"string\",\n                startTime: \"string\",\n                endTime: \"string\"\n            }],\n        primaryOpenCallTech: \"string\",\n        selectedMultiTechSameCallOrNot: Keet.MultiTechOrNot.AddNewTechnician,\n        isMultipleTech: \"string\",\n        isPrimaryTechId: 1,\n        isPrimaryTech: \"string\",\n        isSecondaryServiceCallData: 1\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/appointments",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "serviceCallRequest": {
                  "appointmentType": "scheduled",
                  "serviceCallTypeId": 0,
                  "hours": "string",
                  "minutes": "string",
                  "arrivalWindow": "string",
                  "diagnosticFee": 1,
                  "serviceCallStatus": "string",
                  "leadSourceId": 0,
                  "description": "string",
                  "datepicker1": "string",
                  "dispatchBoardId": 0,
                  "sendEmail": 0,
                  "arrivalWindowID": 0,
                  "newCustomer": 0,
                  "customerFirstName": "string",
                  "customerLastName": "string",
                  "customerCompanyName": "string",
                  "customerFullName": "string",
                  "newServiceCallDefLeadSourID": 0,
                  "appointmentSaveFrom": "string",
                  "isSecondaryServiceCallData": 0
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/ppp/appointments \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"serviceCallRequest\": {\n    \"appointmentType\": \"scheduled\",\n    \"serviceCallTypeId\": 0,\n    \"hours\": \"string\",\n    \"minutes\": \"string\",\n    \"arrivalWindow\": \"string\",\n    \"diagnosticFee\": 1,\n    \"serviceCallStatus\": \"string\",\n    \"leadSourceId\": 0,\n    \"description\": \"string\",\n    \"datepicker1\": \"string\",\n    \"dispatchBoardId\": 0,\n    \"sendEmail\": 0,\n    \"arrivalWindowID\": 0,\n    \"newCustomer\": 0,\n    \"customerFirstName\": \"string\",\n    \"customerLastName\": \"string\",\n    \"customerCompanyName\": \"string\",\n    \"customerFullName\": \"string\",\n    \"newServiceCallDefLeadSourID\": 0,\n    \"appointmentSaveFrom\": \"string\",\n    \"isSecondaryServiceCallData\": 0\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createAppointment({\n    firstName: \"string\",\n    lastName: \"string\",\n    serviceCallRequest: {\n        locationContactInfoId: \"string\",\n        appointmentType: Keet.AppointmentType.Scheduled,\n        openServiceCallDate: \"string\",\n        serviceCallTypeId: 1,\n        hours: \"string\",\n        minutes: \"string\",\n        arrivalWindow: \"string\",\n        diagnosticFee: 1.1,\n        serviceCallStatus: \"string\",\n        leadSourceId: 1,\n        poNumber: \"string\",\n        description: \"string\",\n        notes: \"string\",\n        datepicker1: \"string\",\n        dispatchBoardId: 1,\n        callTypeId: \"string\",\n        startTime: \"string\",\n        endTime: \"string\",\n        date: \"string\",\n        technicianId: 1,\n        sendEmail: 1,\n        doNotEmail: 1,\n        arrivalWindowId: 1,\n        id: \"string\",\n        newCustomer: 1,\n        customerFirstName: \"string\",\n        customerLastName: \"string\",\n        customerCompanyName: \"string\",\n        customerFullName: \"string\",\n        newServiceCallDefLeadSourId: 1,\n        appointmentSaveFrom: \"string\",\n        selectedMultiTechSameCall: [{\n                techId: \"string\",\n                startTime: \"string\",\n                endTime: \"string\"\n            }],\n        primaryOpenCallTech: \"string\",\n        selectedMultiTechSameCallOrNot: Keet.MultiTechOrNot.AddNewTechnician,\n        isMultipleTech: \"string\",\n        isPrimaryTechId: 1,\n        isPrimaryTech: \"string\",\n        isSecondaryServiceCallData: 1\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/appointments",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "serviceCallRequest": {
                  "appointmentType": "scheduled",
                  "serviceCallTypeId": 0,
                  "hours": "string",
                  "minutes": "string",
                  "arrivalWindow": "string",
                  "diagnosticFee": 1,
                  "serviceCallStatus": "string",
                  "leadSourceId": 0,
                  "description": "string",
                  "datepicker1": "string",
                  "dispatchBoardId": 0,
                  "sendEmail": 0,
                  "arrivalWindowID": 0,
                  "newCustomer": 0,
                  "customerFirstName": "string",
                  "customerLastName": "string",
                  "customerCompanyName": "string",
                  "customerFullName": "string",
                  "newServiceCallDefLeadSourID": 0,
                  "appointmentSaveFrom": "string",
                  "isSecondaryServiceCallData": 0
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/ppp/appointments \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"serviceCallRequest\": {\n    \"appointmentType\": \"scheduled\",\n    \"serviceCallTypeId\": 0,\n    \"hours\": \"string\",\n    \"minutes\": \"string\",\n    \"arrivalWindow\": \"string\",\n    \"diagnosticFee\": 1,\n    \"serviceCallStatus\": \"string\",\n    \"leadSourceId\": 0,\n    \"description\": \"string\",\n    \"datepicker1\": \"string\",\n    \"dispatchBoardId\": 0,\n    \"sendEmail\": 0,\n    \"arrivalWindowID\": 0,\n    \"newCustomer\": 0,\n    \"customerFirstName\": \"string\",\n    \"customerLastName\": \"string\",\n    \"customerCompanyName\": \"string\",\n    \"customerFullName\": \"string\",\n    \"newServiceCallDefLeadSourID\": 0,\n    \"appointmentSaveFrom\": \"string\",\n    \"isSecondaryServiceCallData\": 0\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createAppointment({\n    firstName: \"string\",\n    lastName: \"string\",\n    serviceCallRequest: {\n        locationContactInfoId: \"string\",\n        appointmentType: Keet.AppointmentType.Scheduled,\n        openServiceCallDate: \"string\",\n        serviceCallTypeId: 1,\n        hours: \"string\",\n        minutes: \"string\",\n        arrivalWindow: \"string\",\n        diagnosticFee: 1.1,\n        serviceCallStatus: \"string\",\n        leadSourceId: 1,\n        poNumber: \"string\",\n        description: \"string\",\n        notes: \"string\",\n        datepicker1: \"string\",\n        dispatchBoardId: 1,\n        callTypeId: \"string\",\n        startTime: \"string\",\n        endTime: \"string\",\n        date: \"string\",\n        technicianId: 1,\n        sendEmail: 1,\n        doNotEmail: 1,\n        arrivalWindowId: 1,\n        id: \"string\",\n        newCustomer: 1,\n        customerFirstName: \"string\",\n        customerLastName: \"string\",\n        customerCompanyName: \"string\",\n        customerFullName: \"string\",\n        newServiceCallDefLeadSourId: 1,\n        appointmentSaveFrom: \"string\",\n        selectedMultiTechSameCall: [{\n                techId: \"string\",\n                startTime: \"string\",\n                endTime: \"string\"\n            }],\n        primaryOpenCallTech: \"string\",\n        selectedMultiTechSameCallOrNot: Keet.MultiTechOrNot.AddNewTechnician,\n        isMultipleTech: \"string\",\n        isPrimaryTechId: 1,\n        isPrimaryTech: \"string\",\n        isSecondaryServiceCallData: 1\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.ppp.createAppointment(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "firstName: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "firstName"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "lastName: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "lastName"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "serviceCallRequest: {\n\t\t\t$FERN_INPUT\n\t\t}",
                          "isOptional": true,
                          "inputDelimiter": ",\n\t\t\t",
                          "templateInputs": [
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "locationContactInfoId: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.locationContactInfoID"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "enum",
                                "imports": [],
                                "isOptional": true,
                                "values": {
                                  "scheduled": "Keet.AppointmentType.Scheduled",
                                  "open": "Keet.AppointmentType.Open"
                                },
                                "templateString": "appointmentType: $FERN_INPUT",
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "serviceCallRequest.appointmentType"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "openServiceCallDate: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.openServiceCallDate"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "serviceCallTypeId: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.serviceCallTypeId"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "hours: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.hours"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "minutes: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.minutes"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "arrivalWindow: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.arrivalWindow"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "diagnosticFee: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.diagnosticFee"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "serviceCallStatus: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.serviceCallStatus"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "leadSourceId: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.leadSourceId"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "poNumber: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.poNumber"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "description: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.description"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "notes: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.notes"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "datepicker1: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.datepicker1"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "dispatchBoardId: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.dispatchBoardId"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "callTypeId: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.callTypeID"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "startTime: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.startTime"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "endTime: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.endTime"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "date: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.date"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "technicianId: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.technicianID"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "sendEmail: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.sendEmail"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "doNotEmail: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.doNotEmail"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "arrivalWindowId: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.arrivalWindowID"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "id: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.id"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "newCustomer: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.newCustomer"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "customerFirstName: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.customerFirstName"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "customerLastName: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.customerLastName"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "customerCompanyName: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.customerCompanyName"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "customerFullName: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.customerFullName"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "newServiceCallDefLeadSourId: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.newServiceCallDefLeadSourID"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "appointmentSaveFrom: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.appointmentSaveFrom"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "iterable",
                                "imports": [],
                                "isOptional": true,
                                "containerTemplateString": "selectedMultiTechSameCall: [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                "delimiter": ",\n\t\t\t\t",
                                "innerTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "{\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                  "isOptional": true,
                                  "inputDelimiter": ",\n\t\t\t\t\t",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "techId: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "RELATIVE",
                                            "path": "techID"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "startTime: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "RELATIVE",
                                            "path": "start_time"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "endTime: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "RELATIVE",
                                            "path": "end_time"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "serviceCallRequest.selectedMultiTechSameCall"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "primaryOpenCallTech: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.primaryOpenCallTech"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "enum",
                                "imports": [],
                                "isOptional": true,
                                "values": {
                                  "Add_New_Technician": "Keet.MultiTechOrNot.AddNewTechnician",
                                  "": "Keet.MultiTechOrNot.Empty"
                                },
                                "templateString": "selectedMultiTechSameCallOrNot: $FERN_INPUT",
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "serviceCallRequest.selectedMultiTechSameCallOrNot"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "isMultipleTech: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.isMultipleTech"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "isPrimaryTechId: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.isPrimaryTechID"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "isPrimaryTech: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.isPrimaryTech"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "isSecondaryServiceCallData: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "serviceCallRequest.isSecondaryServiceCallData"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/ppp.getBillingTerms": {
        "id": "endpoint_integrations/ppp.getBillingTerms",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/ppp"
        ],
        "displayName": "Get Billing Terms",
        "operationId": "get-billing-terms",
        "description": "Get perfect pricing billing terms",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/ppp"
          },
          {
            "type": "literal",
            "value": "/billing-terms"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/ppp:GetBillingTermsResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/ppp/billing-terms",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "billingTerms": {}
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/billing-terms \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getBillingTerms();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/billing-terms",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/billing-terms \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getBillingTerms();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/billing-terms",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/billing-terms \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getBillingTerms();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/billing-terms",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/billing-terms \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getBillingTerms();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/billing-terms",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/billing-terms \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getBillingTerms();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/billing-terms",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/billing-terms \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getBillingTerms();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.ppp.getBillingTerms()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/ppp.getInvoiceTypes": {
        "id": "endpoint_integrations/ppp.getInvoiceTypes",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/ppp"
        ],
        "displayName": "Get Invoice Types",
        "operationId": "get-invoice-types",
        "description": "Get perfect pricing invoice types",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/ppp"
          },
          {
            "type": "literal",
            "value": "/invoice-types"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/ppp:GetInvoiceTypesResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/ppp/invoice-types",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "invoiceTypes": {}
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/invoice-types \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getInvoiceTypes();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/invoice-types",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/invoice-types \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getInvoiceTypes();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/invoice-types",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/invoice-types \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getInvoiceTypes();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/invoice-types",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/invoice-types \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getInvoiceTypes();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/invoice-types",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/invoice-types \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getInvoiceTypes();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/invoice-types",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/invoice-types \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getInvoiceTypes();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.ppp.getInvoiceTypes()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/ppp.getCustomerTypes": {
        "id": "endpoint_integrations/ppp.getCustomerTypes",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/ppp"
        ],
        "displayName": "Get Customer Types",
        "operationId": "get-customer-types",
        "description": "Get perfect pricing customer types",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/ppp"
          },
          {
            "type": "literal",
            "value": "/customer-types"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/ppp:GetCustomerTypesResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/ppp/customer-types",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "customerTypes": {}
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/customer-types \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getCustomerTypes();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/customer-types",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/customer-types \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getCustomerTypes();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/customer-types",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/customer-types \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getCustomerTypes();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/customer-types",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/customer-types \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getCustomerTypes();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/customer-types",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/customer-types \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getCustomerTypes();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/customer-types",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/customer-types \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getCustomerTypes();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.ppp.getCustomerTypes()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/ppp.getArrivalWindow": {
        "id": "endpoint_integrations/ppp.getArrivalWindow",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/ppp"
        ],
        "displayName": "Get Arrival Window",
        "operationId": "get-arrival-window",
        "description": "Get perfect pricing arrival window",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/ppp"
          },
          {
            "type": "literal",
            "value": "/arrival-window"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/ppp:GetArrivalWindowResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/ppp/arrival-window",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "arrivalWindow": {}
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/arrival-window \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getArrivalWindow();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/arrival-window",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/arrival-window \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getArrivalWindow();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/arrival-window",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/arrival-window \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getArrivalWindow();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/arrival-window",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/arrival-window \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getArrivalWindow();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/arrival-window",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/arrival-window \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getArrivalWindow();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/arrival-window",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/arrival-window \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getArrivalWindow();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.ppp.getArrivalWindow()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/ppp.getServiceCallType": {
        "id": "endpoint_integrations/ppp.getServiceCallType",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/ppp"
        ],
        "displayName": "Get Service Call Type",
        "operationId": "get-service-call-type",
        "description": "Get perfect pricing service call type",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/ppp"
          },
          {
            "type": "literal",
            "value": "/service-call-type"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/ppp:GetServiceCallTypeResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/ppp/service-call-type",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "serviceCallType": {}
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/service-call-type \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getServiceCallType();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/service-call-type",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/service-call-type \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getServiceCallType();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/service-call-type",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/service-call-type \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getServiceCallType();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/service-call-type",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/service-call-type \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getServiceCallType();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/service-call-type",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/service-call-type \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getServiceCallType();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/service-call-type",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/service-call-type \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getServiceCallType();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.ppp.getServiceCallType()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/ppp.getDiagnosticFee": {
        "id": "endpoint_integrations/ppp.getDiagnosticFee",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/ppp"
        ],
        "displayName": "Get Diagnostic Fee",
        "operationId": "get-diagnostic-fee",
        "description": "Get perfect pricing diagnostic fee",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/ppp"
          },
          {
            "type": "literal",
            "value": "/diagnostic-fee"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/ppp:GetDiagnosticFeeResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/ppp/diagnostic-fee",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "diagnosticFee": {}
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/diagnostic-fee \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getDiagnosticFee();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/diagnostic-fee",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/diagnostic-fee \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getDiagnosticFee();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/diagnostic-fee",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/diagnostic-fee \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getDiagnosticFee();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/diagnostic-fee",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/diagnostic-fee \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getDiagnosticFee();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/diagnostic-fee",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/diagnostic-fee \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getDiagnosticFee();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/diagnostic-fee",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/diagnostic-fee \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getDiagnosticFee();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.ppp.getDiagnosticFee()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/ppp.getServiceCallStatus": {
        "id": "endpoint_integrations/ppp.getServiceCallStatus",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/ppp"
        ],
        "displayName": "Get Service Call Status",
        "operationId": "get-service-call-status",
        "description": "Get perfect pricing service call status",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/ppp"
          },
          {
            "type": "literal",
            "value": "/service-call-status"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/ppp:GetServiceCallStatusResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/ppp/service-call-status",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "serviceCallStatus": {}
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/service-call-status \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getServiceCallStatus();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/service-call-status",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/service-call-status \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getServiceCallStatus();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/service-call-status",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/service-call-status \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getServiceCallStatus();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/service-call-status",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/service-call-status \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getServiceCallStatus();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/service-call-status",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/service-call-status \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getServiceCallStatus();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/service-call-status",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/service-call-status \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getServiceCallStatus();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.ppp.getServiceCallStatus()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/ppp.getLeadSource": {
        "id": "endpoint_integrations/ppp.getLeadSource",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/ppp"
        ],
        "displayName": "Get Lead Source",
        "operationId": "get-lead-source",
        "description": "Get perfect pricing lead source",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/ppp"
          },
          {
            "type": "literal",
            "value": "/lead-source"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/ppp:GetLeadSourceResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/ppp/lead-source",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "leadSource": {}
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/lead-source \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getLeadSource();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/lead-source",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/lead-source \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getLeadSource();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/lead-source",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/lead-source \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getLeadSource();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/lead-source",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/lead-source \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getLeadSource();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/lead-source",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/lead-source \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getLeadSource();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/lead-source",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/lead-source \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getLeadSource();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.ppp.getLeadSource()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/ppp.getBoardIds": {
        "id": "endpoint_integrations/ppp.getBoardIds",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/ppp"
        ],
        "displayName": "Get Board Ids",
        "operationId": "get-board-ids",
        "description": "Get perfect pricing board ids",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/ppp"
          },
          {
            "type": "literal",
            "value": "/board-ids"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/ppp:GetBoardIdsResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/ppp/board-ids",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "boardIds": {}
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/board-ids \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getBoardIds();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/board-ids",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/board-ids \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getBoardIds();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/board-ids",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/board-ids \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getBoardIds();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/board-ids",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/board-ids \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getBoardIds();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/board-ids",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/board-ids \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getBoardIds();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/board-ids",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/board-ids \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getBoardIds();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.ppp.getBoardIds()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/ppp.getTechnicians": {
        "id": "endpoint_integrations/ppp.getTechnicians",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/ppp"
        ],
        "displayName": "Get Technicians",
        "operationId": "get-technicians",
        "description": "Get perfect pricing technicians",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/ppp"
          },
          {
            "type": "literal",
            "value": "/technicians"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/ppp:GetTechniciansResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/ppp/technicians",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "technicians": {}
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/technicians \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getTechnicians();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/technicians",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/technicians \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getTechnicians();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/technicians",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/technicians \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getTechnicians();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/technicians",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/technicians \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getTechnicians();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/technicians",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/technicians \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getTechnicians();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/technicians",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/ppp/technicians \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getTechnicians();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.ppp.getTechnicians()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/ppp.getCalendar": {
        "id": "endpoint_integrations/ppp.getCalendar",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/ppp"
        ],
        "displayName": "Get Calendar",
        "operationId": "get-calendar",
        "description": "Get perfect pricing calendar",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/ppp"
          },
          {
            "type": "literal",
            "value": "/calendar"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "queryParameters": [
          {
            "key": "boardId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "date",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/ppp:GetCalendarResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/ppp/calendar",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "boardId": "string",
              "date": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "calendar": {}
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/ppp/calendar \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d boardId=string \\\n     -d date=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getCalendar({\n    boardId: \"string\",\n    date: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/calendar",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {
              "boardId": "string",
              "date": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/ppp/calendar \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d boardId=string \\\n     -d date=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getCalendar({\n    boardId: \"string\",\n    date: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/calendar",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "boardId": "string",
              "date": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/ppp/calendar \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d boardId=string \\\n     -d date=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getCalendar({\n    boardId: \"string\",\n    date: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/calendar",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {
              "boardId": "string",
              "date": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/ppp/calendar \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d boardId=string \\\n     -d date=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getCalendar({\n    boardId: \"string\",\n    date: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/calendar",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "boardId": "string",
              "date": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/ppp/calendar \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d boardId=string \\\n     -d date=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getCalendar({\n    boardId: \"string\",\n    date: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/ppp/calendar",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "boardId": "string",
              "date": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/ppp/calendar \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d boardId=string \\\n     -d date=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getCalendar({\n    boardId: \"string\",\n    date: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.ppp.getCalendar(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "boardId: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "boardId"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "date: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "date"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/servicebox.createSession": {
        "id": "endpoint_integrations/servicebox.createSession",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/servicebox"
        ],
        "displayName": "Create Session",
        "operationId": "create-session",
        "description": "Create a Service Box session that you can connect to via playwright. See [this link](/overview/integrations/custom-automations) for more info.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/servicebox"
          },
          {
            "type": "literal",
            "value": "/session"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/types:CreateSessionResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/servicebox/session",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "wsUrl": "string",
                "postSignInUrl": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/servicebox/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/servicebox/session",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/servicebox/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/servicebox/session",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/servicebox/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/servicebox/session",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/servicebox/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/servicebox/session",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/servicebox/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/servicebox/session",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/servicebox/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.createSession();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.servicebox.createSession()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/servicebox.getReceptionnaires": {
        "id": "endpoint_integrations/servicebox.getReceptionnaires",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/servicebox"
        ],
        "displayName": "Get Receptionnaires",
        "operationId": "get-receptionnaires",
        "description": "Get the list of receptionnaires associated with this account",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/servicebox"
          },
          {
            "type": "literal",
            "value": "/receptionnaires"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "queryParameters": [
          {
            "key": "equipe",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/servicebox:ReceptionnairesResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/servicebox/receptionnaires",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "equipe": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "receptionnaires": [
                  {
                    "text": "string",
                    "value": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/servicebox/receptionnaires \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d equipe=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getReceptionnaires({\n    equipe: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/servicebox/receptionnaires",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {
              "equipe": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/servicebox/receptionnaires \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d equipe=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getReceptionnaires({\n    equipe: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/servicebox/receptionnaires",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "equipe": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/servicebox/receptionnaires \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d equipe=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getReceptionnaires({\n    equipe: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/servicebox/receptionnaires",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {
              "equipe": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/servicebox/receptionnaires \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d equipe=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getReceptionnaires({\n    equipe: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/servicebox/receptionnaires",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "equipe": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/servicebox/receptionnaires \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d equipe=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getReceptionnaires({\n    equipe: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/servicebox/receptionnaires",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "equipe": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/servicebox/receptionnaires \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d equipe=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getReceptionnaires({\n    equipe: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.servicebox.getReceptionnaires(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "equipe: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "equipe"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/servicebox.getEquippes": {
        "id": "endpoint_integrations/servicebox.getEquippes",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/servicebox"
        ],
        "displayName": "Get Equippes",
        "operationId": "get-equippes",
        "description": "Get the list of equippes associated with this account",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/servicebox"
          },
          {
            "type": "literal",
            "value": "/equippes"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/servicebox:EquippesResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/servicebox/equippes",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "equippes": [
                  {
                    "text": "string",
                    "value": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/servicebox/equippes \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getEquippes();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/servicebox/equippes",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/servicebox/equippes \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getEquippes();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/servicebox/equippes",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/servicebox/equippes \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getEquippes();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/servicebox/equippes",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/servicebox/equippes \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getEquippes();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/servicebox/equippes",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/servicebox/equippes \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getEquippes();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/servicebox/equippes",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/servicebox/equippes \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getEquippes();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.servicebox.getEquippes()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/servicebox.getBarGraph": {
        "id": "endpoint_integrations/servicebox.getBarGraph",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/servicebox"
        ],
        "displayName": "Get Bar Graph",
        "operationId": "get-bar-graph",
        "description": "Get a bar graph of the number of events in each location",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/servicebox"
          },
          {
            "type": "literal",
            "value": "/bar-graph"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "queryParameters": [
          {
            "key": "date",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "equipe",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/servicebox:BarGraphResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/servicebox/bar-graph",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "date": "string",
              "equipe": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "barGraph": {}
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/servicebox/bar-graph \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d date=string \\\n     -d equipe=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getBarGraph({\n    date: \"string\",\n    equipe: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/servicebox/bar-graph",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {
              "date": "string",
              "equipe": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/servicebox/bar-graph \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d date=string \\\n     -d equipe=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getBarGraph({\n    date: \"string\",\n    equipe: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/servicebox/bar-graph",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "date": "string",
              "equipe": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/servicebox/bar-graph \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d date=string \\\n     -d equipe=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getBarGraph({\n    date: \"string\",\n    equipe: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/servicebox/bar-graph",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {
              "date": "string",
              "equipe": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/servicebox/bar-graph \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d date=string \\\n     -d equipe=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getBarGraph({\n    date: \"string\",\n    equipe: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/servicebox/bar-graph",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "date": "string",
              "equipe": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/servicebox/bar-graph \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d date=string \\\n     -d equipe=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getBarGraph({\n    date: \"string\",\n    equipe: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/servicebox/bar-graph",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "date": "string",
              "equipe": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/servicebox/bar-graph \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d date=string \\\n     -d equipe=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getBarGraph({\n    date: \"string\",\n    equipe: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.servicebox.getBarGraph(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "date: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "date"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "equipe: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "equipe"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/servicebox.getCalendar": {
        "id": "endpoint_integrations/servicebox.getCalendar",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/servicebox"
        ],
        "displayName": "Get Calendar",
        "operationId": "get-calendar",
        "description": "Get the calendar",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/servicebox"
          },
          {
            "type": "literal",
            "value": "/calendar"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "queryParameters": [
          {
            "key": "date",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "receptionnnaire",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "equipe",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/servicebox:CalendarResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/servicebox/calendar",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "date": "string",
              "receptionnnaire": "string",
              "equipe": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "calendar": {}
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/servicebox/calendar \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d date=string \\\n     -d receptionnnaire=string \\\n     -d equipe=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getCalendar({\n    date: \"string\",\n    receptionnnaire: \"string\",\n    equipe: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/servicebox/calendar",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {
              "date": "string",
              "receptionnnaire": "string",
              "equipe": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/servicebox/calendar \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d date=string \\\n     -d receptionnnaire=string \\\n     -d equipe=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getCalendar({\n    date: \"string\",\n    receptionnnaire: \"string\",\n    equipe: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/servicebox/calendar",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "date": "string",
              "receptionnnaire": "string",
              "equipe": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/servicebox/calendar \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d date=string \\\n     -d receptionnnaire=string \\\n     -d equipe=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getCalendar({\n    date: \"string\",\n    receptionnnaire: \"string\",\n    equipe: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/servicebox/calendar",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {
              "date": "string",
              "receptionnnaire": "string",
              "equipe": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/servicebox/calendar \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d date=string \\\n     -d receptionnnaire=string \\\n     -d equipe=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getCalendar({\n    date: \"string\",\n    receptionnnaire: \"string\",\n    equipe: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/servicebox/calendar",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "date": "string",
              "receptionnnaire": "string",
              "equipe": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/servicebox/calendar \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d date=string \\\n     -d receptionnnaire=string \\\n     -d equipe=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getCalendar({\n    date: \"string\",\n    receptionnnaire: \"string\",\n    equipe: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/servicebox/calendar",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "date": "string",
              "receptionnnaire": "string",
              "equipe": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/servicebox/calendar \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d date=string \\\n     -d receptionnnaire=string \\\n     -d equipe=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getCalendar({\n    date: \"string\",\n    receptionnnaire: \"string\",\n    equipe: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.servicebox.getCalendar(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "date: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "date"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "receptionnnaire: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "receptionnnaire"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "equipe: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "equipe"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/toast.createSession": {
        "id": "endpoint_integrations/toast.createSession",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/toast"
        ],
        "displayName": "Create Session",
        "operationId": "create-session",
        "description": "Create a Toast session that you can connect to via playwright. See [this link](/overview/integrations/custom-automations) for more info.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/toast"
          },
          {
            "type": "literal",
            "value": "/session"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/types:CreateSessionResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/toast/session",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "wsUrl": "string",
                "postSignInUrl": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/toast/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.toast.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/toast/session",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/toast/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.toast.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/toast/session",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/toast/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.toast.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/toast/session",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/toast/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.toast.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/toast/session",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/toast/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.toast.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/toast/session",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/toast/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.toast.createSession();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.toast.createSession()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/toast.getMenu": {
        "id": "endpoint_integrations/toast.getMenu",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/toast"
        ],
        "displayName": "Get Menu",
        "operationId": "get-menu",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/toast"
          },
          {
            "type": "literal",
            "value": "/menus"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/toast:GetMenusResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/toast/menus",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "menus": {}
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/toast/menus \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.toast.getMenu();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/toast/menus",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/toast/menus \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.toast.getMenu();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/toast/menus",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/toast/menus \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.toast.getMenu();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/toast/menus",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/toast/menus \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.toast.getMenu();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/toast/menus",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/toast/menus \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.toast.getMenu();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/toast/menus",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/toast/menus \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.toast.getMenu();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.toast.getMenu()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/uber.createSession": {
        "id": "endpoint_integrations/uber.createSession",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/uber"
        ],
        "displayName": "Create Session",
        "operationId": "create-session",
        "description": "Create a Uber session that you can connect to via playwright. See [this link](/overview/integrations/custom-automations) for more info.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/uber"
          },
          {
            "type": "literal",
            "value": "/session"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/types:CreateSessionResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/uber/session",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "wsUrl": "string",
                "postSignInUrl": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/uber/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.uber.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/uber/session",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/uber/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.uber.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/uber/session",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/uber/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.uber.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/uber/session",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/uber/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.uber.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/uber/session",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/uber/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.uber.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/uber/session",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/uber/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.uber.createSession();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.uber.createSession()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/uber.orderRide": {
        "id": "endpoint_integrations/uber.orderRide",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/uber"
        ],
        "displayName": "Order Ride",
        "operationId": "order-ride",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/uber"
          },
          {
            "type": "literal",
            "value": "/ride"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "origin",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_integrations/uber:UberAddress"
                    }
                  }
                },
                {
                  "key": "destination",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_integrations/uber:UberAddress"
                    }
                  }
                },
                {
                  "key": "carType",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_integrations/uber:UberCarTypes"
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/uber:OrderRideResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/uber/ride",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "origin": {
                  "addressLine1": "string",
                  "addressLine2": "string"
                },
                "destination": {
                  "addressLine1": "string",
                  "addressLine2": "string"
                },
                "carType": "UberX"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/uber/ride \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"origin\": {\n    \"addressLine1\": \"string\",\n    \"addressLine2\": \"string\"\n  },\n  \"destination\": {\n    \"addressLine1\": \"string\",\n    \"addressLine2\": \"string\"\n  },\n  \"carType\": \"UberX\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.uber.orderRide({\n    origin: {\n        addressLine1: \"string\",\n        addressLine2: \"string\"\n    },\n    destination: {\n        addressLine1: \"string\",\n        addressLine2: \"string\"\n    },\n    carType: Keet.UberCarTypes.UberX\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/uber/ride",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "origin": {
                  "addressLine1": "string",
                  "addressLine2": "string"
                },
                "destination": {
                  "addressLine1": "string",
                  "addressLine2": "string"
                },
                "carType": "UberX"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/uber/ride \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"origin\": {\n    \"addressLine1\": \"string\",\n    \"addressLine2\": \"string\"\n  },\n  \"destination\": {\n    \"addressLine1\": \"string\",\n    \"addressLine2\": \"string\"\n  },\n  \"carType\": \"UberX\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.uber.orderRide({\n    origin: {\n        addressLine1: \"string\",\n        addressLine2: \"string\"\n    },\n    destination: {\n        addressLine1: \"string\",\n        addressLine2: \"string\"\n    },\n    carType: Keet.UberCarTypes.UberX\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/uber/ride",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "origin": {
                  "addressLine1": "string",
                  "addressLine2": "string"
                },
                "destination": {
                  "addressLine1": "string",
                  "addressLine2": "string"
                },
                "carType": "UberX"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/uber/ride \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"origin\": {\n    \"addressLine1\": \"string\",\n    \"addressLine2\": \"string\"\n  },\n  \"destination\": {\n    \"addressLine1\": \"string\",\n    \"addressLine2\": \"string\"\n  },\n  \"carType\": \"UberX\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.uber.orderRide({\n    origin: {\n        addressLine1: \"string\",\n        addressLine2: \"string\"\n    },\n    destination: {\n        addressLine1: \"string\",\n        addressLine2: \"string\"\n    },\n    carType: Keet.UberCarTypes.UberX\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/uber/ride",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "origin": {
                  "addressLine1": "string",
                  "addressLine2": "string"
                },
                "destination": {
                  "addressLine1": "string",
                  "addressLine2": "string"
                },
                "carType": "UberX"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/uber/ride \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"origin\": {\n    \"addressLine1\": \"string\",\n    \"addressLine2\": \"string\"\n  },\n  \"destination\": {\n    \"addressLine1\": \"string\",\n    \"addressLine2\": \"string\"\n  },\n  \"carType\": \"UberX\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.uber.orderRide({\n    origin: {\n        addressLine1: \"string\",\n        addressLine2: \"string\"\n    },\n    destination: {\n        addressLine1: \"string\",\n        addressLine2: \"string\"\n    },\n    carType: Keet.UberCarTypes.UberX\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/uber/ride",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "origin": {
                  "addressLine1": "string",
                  "addressLine2": "string"
                },
                "destination": {
                  "addressLine1": "string",
                  "addressLine2": "string"
                },
                "carType": "UberX"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/uber/ride \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"origin\": {\n    \"addressLine1\": \"string\",\n    \"addressLine2\": \"string\"\n  },\n  \"destination\": {\n    \"addressLine1\": \"string\",\n    \"addressLine2\": \"string\"\n  },\n  \"carType\": \"UberX\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.uber.orderRide({\n    origin: {\n        addressLine1: \"string\",\n        addressLine2: \"string\"\n    },\n    destination: {\n        addressLine1: \"string\",\n        addressLine2: \"string\"\n    },\n    carType: Keet.UberCarTypes.UberX\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/uber/ride",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "origin": {
                  "addressLine1": "string",
                  "addressLine2": "string"
                },
                "destination": {
                  "addressLine1": "string",
                  "addressLine2": "string"
                },
                "carType": "UberX"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/uber/ride \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"origin\": {\n    \"addressLine1\": \"string\",\n    \"addressLine2\": \"string\"\n  },\n  \"destination\": {\n    \"addressLine1\": \"string\",\n    \"addressLine2\": \"string\"\n  },\n  \"carType\": \"UberX\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.uber.orderRide({\n    origin: {\n        addressLine1: \"string\",\n        addressLine2: \"string\"\n    },\n    destination: {\n        addressLine1: \"string\",\n        addressLine2: \"string\"\n    },\n    carType: Keet.UberCarTypes.UberX\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.uber.orderRide(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "origin: {\n\t\t\t$FERN_INPUT\n\t\t}",
                          "isOptional": true,
                          "inputDelimiter": ",\n\t\t\t",
                          "templateInputs": [
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "addressLine1: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "origin.addressLine1"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "addressLine2: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "origin.addressLine2"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "destination: {\n\t\t\t$FERN_INPUT\n\t\t}",
                          "isOptional": true,
                          "inputDelimiter": ",\n\t\t\t",
                          "templateInputs": [
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "addressLine1: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "destination.addressLine1"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "addressLine2: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "destination.addressLine2"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "enum",
                          "imports": [],
                          "isOptional": true,
                          "values": {
                            "UberX": "Keet.UberCarTypes.UberX",
                            "UberXL": "Keet.UberCarTypes.UberXl",
                            "Comfort": "Keet.UberCarTypes.Comfort",
                            "Share": "Keet.UberCarTypes.Share",
                            "ComfortElectric": "Keet.UberCarTypes.ComfortElectric",
                            "Green": "Keet.UberCarTypes.Green",
                            "UberPet": "Keet.UberCarTypes.UberPet",
                            "UberBlack": "Keet.UberCarTypes.UberBlack",
                            "UberBlackSUV": "Keet.UberCarTypes.UberBlackSuv",
                            "WAV": "Keet.UberCarTypes.Wav"
                          },
                          "templateString": "carType: $FERN_INPUT",
                          "templateInput": {
                            "location": "BODY",
                            "path": "carType"
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/venmo.createSession": {
        "id": "endpoint_integrations/venmo.createSession",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/venmo"
        ],
        "displayName": "Create Session",
        "operationId": "create-session",
        "description": "Create a Venmo session that you can connect to via playwright. See [this link](/overview/integrations/custom-automations) for more info.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/venmo"
          },
          {
            "type": "literal",
            "value": "/session"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/types:CreateSessionResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/venmo/session",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "wsUrl": "string",
                "postSignInUrl": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/venmo/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.venmo.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/venmo/session",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/venmo/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.venmo.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/venmo/session",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/venmo/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.venmo.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/venmo/session",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/venmo/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.venmo.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/venmo/session",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/venmo/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.venmo.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/venmo/session",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/venmo/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.venmo.createSession();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.venmo.createSession()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/venmo.getTransactions": {
        "id": "endpoint_integrations/venmo.getTransactions",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/venmo"
        ],
        "displayName": "Get Transactions",
        "operationId": "get-transactions",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/venmo"
          },
          {
            "type": "literal",
            "value": "/transactions"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/venmo:GetTransactionsResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/venmo/transactions",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "transactions": {
                  "nextId": "string",
                  "stories": [
                    {
                      "amount": "string",
                      "avatar": "string",
                      "initials": "string",
                      "audience": "string",
                      "date": "string",
                      "id": "string",
                      "note": {
                        "content": "string"
                      },
                      "type": "string",
                      "attachments": [
                        {}
                      ],
                      "title": {
                        "titleType": "string",
                        "payload": {
                          "action": "string",
                          "subType": "string"
                        },
                        "receiver": {
                          "id": "string",
                          "displayName": "string",
                          "username": "string",
                          "type": "string"
                        },
                        "sender": {
                          "id": "string",
                          "displayName": "string",
                          "username": "string",
                          "type": "string"
                        }
                      },
                      "mentions": {
                        "count": 0,
                        "data": {}
                      },
                      "paymentId": "string",
                      "likes": {
                        "count": 0,
                        "userCommentedOrLiked": true
                      },
                      "comments": {
                        "count": 0,
                        "userCommentedOrLiked": true
                      },
                      "subType": "string",
                      "externWalletStatus": "string"
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/venmo/transactions \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.venmo.getTransactions();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/venmo/transactions",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/venmo/transactions \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.venmo.getTransactions();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/venmo/transactions",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/venmo/transactions \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.venmo.getTransactions();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/venmo/transactions",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/venmo/transactions \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.venmo.getTransactions();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/venmo/transactions",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/venmo/transactions \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.venmo.getTransactions();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/venmo/transactions",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/venmo/transactions \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.venmo.getTransactions();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.venmo.getTransactions()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/vin.createSession": {
        "id": "endpoint_integrations/vin.createSession",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/vin"
        ],
        "displayName": "Create Session",
        "operationId": "create-session",
        "description": "Create a Vin session that you can connect to via playwright. See [this link](/overview/integrations/custom-automations) for more info.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/vin"
          },
          {
            "type": "literal",
            "value": "/session"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/types:CreateSessionResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/vin/session",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "wsUrl": "string",
                "postSignInUrl": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/vin/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/session",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/vin/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/session",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/vin/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/session",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/vin/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/session",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/vin/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/session",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/vin/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createSession();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.vin.createSession()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/vin.createSalesAppointment": {
        "id": "endpoint_integrations/vin.createSalesAppointment",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/vin"
        ],
        "displayName": "Create Sales Appointment",
        "operationId": "create-sales-appointment",
        "description": "Create a sales appointment",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/vin"
          },
          {
            "type": "literal",
            "value": "/sales/appointments"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "leadId",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "customerId",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "dealerId",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "description",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "endDate",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "startDate",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "assignedUserId",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/vin:CreateVinAppointmentResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/vin/sales/appointments",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "leadId": "string",
                "customerId": "string",
                "dealerId": "string",
                "description": "string",
                "endDate": "string",
                "startDate": "string",
                "assignedUserId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/vin/sales/appointments \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"leadId\": \"string\",\n  \"customerId\": \"string\",\n  \"dealerId\": \"string\",\n  \"description\": \"string\",\n  \"endDate\": \"string\",\n  \"startDate\": \"string\",\n  \"assignedUserId\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createSalesAppointment({\n    leadId: \"string\",\n    customerId: \"string\",\n    dealerId: \"string\",\n    description: \"string\",\n    endDate: \"string\",\n    startDate: \"string\",\n    assignedUserId: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/sales/appointments",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "leadId": "string",
                "customerId": "string",
                "dealerId": "string",
                "description": "string",
                "endDate": "string",
                "startDate": "string",
                "assignedUserId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/vin/sales/appointments \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"leadId\": \"string\",\n  \"customerId\": \"string\",\n  \"dealerId\": \"string\",\n  \"description\": \"string\",\n  \"endDate\": \"string\",\n  \"startDate\": \"string\",\n  \"assignedUserId\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createSalesAppointment({\n    leadId: \"string\",\n    customerId: \"string\",\n    dealerId: \"string\",\n    description: \"string\",\n    endDate: \"string\",\n    startDate: \"string\",\n    assignedUserId: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/sales/appointments",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "leadId": "string",
                "customerId": "string",
                "dealerId": "string",
                "description": "string",
                "endDate": "string",
                "startDate": "string",
                "assignedUserId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/vin/sales/appointments \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"leadId\": \"string\",\n  \"customerId\": \"string\",\n  \"dealerId\": \"string\",\n  \"description\": \"string\",\n  \"endDate\": \"string\",\n  \"startDate\": \"string\",\n  \"assignedUserId\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createSalesAppointment({\n    leadId: \"string\",\n    customerId: \"string\",\n    dealerId: \"string\",\n    description: \"string\",\n    endDate: \"string\",\n    startDate: \"string\",\n    assignedUserId: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/sales/appointments",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "leadId": "string",
                "customerId": "string",
                "dealerId": "string",
                "description": "string",
                "endDate": "string",
                "startDate": "string",
                "assignedUserId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/vin/sales/appointments \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"leadId\": \"string\",\n  \"customerId\": \"string\",\n  \"dealerId\": \"string\",\n  \"description\": \"string\",\n  \"endDate\": \"string\",\n  \"startDate\": \"string\",\n  \"assignedUserId\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createSalesAppointment({\n    leadId: \"string\",\n    customerId: \"string\",\n    dealerId: \"string\",\n    description: \"string\",\n    endDate: \"string\",\n    startDate: \"string\",\n    assignedUserId: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/sales/appointments",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "leadId": "string",
                "customerId": "string",
                "dealerId": "string",
                "description": "string",
                "endDate": "string",
                "startDate": "string",
                "assignedUserId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/vin/sales/appointments \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"leadId\": \"string\",\n  \"customerId\": \"string\",\n  \"dealerId\": \"string\",\n  \"description\": \"string\",\n  \"endDate\": \"string\",\n  \"startDate\": \"string\",\n  \"assignedUserId\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createSalesAppointment({\n    leadId: \"string\",\n    customerId: \"string\",\n    dealerId: \"string\",\n    description: \"string\",\n    endDate: \"string\",\n    startDate: \"string\",\n    assignedUserId: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/sales/appointments",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "leadId": "string",
                "customerId": "string",
                "dealerId": "string",
                "description": "string",
                "endDate": "string",
                "startDate": "string",
                "assignedUserId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/vin/sales/appointments \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"leadId\": \"string\",\n  \"customerId\": \"string\",\n  \"dealerId\": \"string\",\n  \"description\": \"string\",\n  \"endDate\": \"string\",\n  \"startDate\": \"string\",\n  \"assignedUserId\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createSalesAppointment({\n    leadId: \"string\",\n    customerId: \"string\",\n    dealerId: \"string\",\n    description: \"string\",\n    endDate: \"string\",\n    startDate: \"string\",\n    assignedUserId: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.vin.createSalesAppointment(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "leadId: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "leadId"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "customerId: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "customerId"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "dealerId: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "dealerId"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "description: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "description"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "endDate: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "endDate"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "startDate: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "startDate"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "assignedUserId: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "assignedUserId"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/vin.getAppointments": {
        "id": "endpoint_integrations/vin.getAppointments",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/vin"
        ],
        "displayName": "Get Appointments",
        "operationId": "get-appointments",
        "description": "Get a list of sales appointments",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/vin"
          },
          {
            "type": "literal",
            "value": "/sales/appointments"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "queryParameters": [
          {
            "key": "date",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "dealerId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/vin:GetSalesAppointmentsResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/vin/sales/appointments",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "date": "string",
              "dealerId": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "appointments": {}
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/vin/sales/appointments \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d date=string \\\n     -d dealerId=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getAppointments({\n    date: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/sales/appointments",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {
              "date": "string",
              "dealerId": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/vin/sales/appointments \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d date=string \\\n     -d dealerId=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getAppointments({\n    date: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/sales/appointments",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "date": "string",
              "dealerId": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/vin/sales/appointments \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d date=string \\\n     -d dealerId=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getAppointments({\n    date: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/sales/appointments",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {
              "date": "string",
              "dealerId": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/vin/sales/appointments \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d date=string \\\n     -d dealerId=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getAppointments({\n    date: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/sales/appointments",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "date": "string",
              "dealerId": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/vin/sales/appointments \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d date=string \\\n     -d dealerId=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getAppointments({\n    date: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/sales/appointments",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "date": "string",
              "dealerId": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/vin/sales/appointments \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d date=string \\\n     -d dealerId=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getAppointments({\n    date: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.vin.getAppointments(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "date: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "date"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/vin.getUsers": {
        "id": "endpoint_integrations/vin.getUsers",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/vin"
        ],
        "displayName": "Get Users",
        "operationId": "get-users",
        "description": "Get a list of users and assigned users ids.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/vin"
          },
          {
            "type": "literal",
            "value": "/users"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/vin:GetUsersResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/vin/users",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "users": {}
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/vin/users \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getUsers();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/users",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/vin/users \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getUsers();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/users",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/vin/users \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getUsers();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/users",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/vin/users \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getUsers();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/users",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/vin/users \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getUsers();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/users",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/vin/users \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getUsers();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.vin.getUsers()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/vin.getDealers": {
        "id": "endpoint_integrations/vin.getDealers",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/vin"
        ],
        "displayName": "Get Dealers",
        "operationId": "get-dealers",
        "description": "Get a list of dealers",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/vin"
          },
          {
            "type": "literal",
            "value": "/dealers"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/vin:GetVinDealersResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/vin/dealers",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "dealers": {}
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/vin/dealers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getDealers();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/dealers",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/vin/dealers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getDealers();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/dealers",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/vin/dealers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getDealers();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/dealers",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/vin/dealers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getDealers();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/dealers",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/vin/dealers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getDealers();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/dealers",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/vin/dealers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getDealers();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.vin.getDealers()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/vin.searchCustomers": {
        "id": "endpoint_integrations/vin.searchCustomers",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/vin"
        ],
        "displayName": "Search Customers",
        "operationId": "search-customers",
        "description": "Search for customers",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/vin"
          },
          {
            "type": "literal",
            "value": "/customers"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "queryParameters": [
          {
            "key": "firstName",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "lastName",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/vin:SearchVinCustomersResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/vin/customers",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "firstName": "string",
              "lastName": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "customers": {}
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/vin/customers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d firstName=string \\\n     -d lastName=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.searchCustomers({\n    firstName: \"string\",\n    lastName: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/customers",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {
              "firstName": "string",
              "lastName": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/vin/customers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d firstName=string \\\n     -d lastName=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.searchCustomers({\n    firstName: \"string\",\n    lastName: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/customers",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "firstName": "string",
              "lastName": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/vin/customers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d firstName=string \\\n     -d lastName=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.searchCustomers({\n    firstName: \"string\",\n    lastName: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/customers",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {
              "firstName": "string",
              "lastName": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/vin/customers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d firstName=string \\\n     -d lastName=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.searchCustomers({\n    firstName: \"string\",\n    lastName: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/customers",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "firstName": "string",
              "lastName": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/vin/customers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d firstName=string \\\n     -d lastName=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.searchCustomers({\n    firstName: \"string\",\n    lastName: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/customers",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "firstName": "string",
              "lastName": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/vin/customers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d firstName=string \\\n     -d lastName=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.searchCustomers({\n    firstName: \"string\",\n    lastName: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.vin.searchCustomers(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "firstName: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "firstName"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "lastName: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "lastName"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/vin.getVehicles": {
        "id": "endpoint_integrations/vin.getVehicles",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/vin"
        ],
        "displayName": "Get Vehicles",
        "operationId": "get-vehicles",
        "description": "Get a list of vehicles",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/vin"
          },
          {
            "type": "literal",
            "value": "/vehicles"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "queryParameters": [
          {
            "key": "dealerId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/vin:GetVinVehiclesResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/vin/vehicles",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "dealerId": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "vehicles": {}
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/vin/vehicles \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d dealerId=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getVehicles({\n    dealerId: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/vehicles",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {
              "dealerId": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/vin/vehicles \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d dealerId=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getVehicles({\n    dealerId: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/vehicles",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "dealerId": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/vin/vehicles \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d dealerId=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getVehicles({\n    dealerId: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/vehicles",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {
              "dealerId": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/vin/vehicles \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d dealerId=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getVehicles({\n    dealerId: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/vehicles",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "dealerId": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/vin/vehicles \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d dealerId=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getVehicles({\n    dealerId: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/vehicles",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "dealerId": "string"
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/vin/vehicles \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d dealerId=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getVehicles({\n    dealerId: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.vin.getVehicles(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "dealerId: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "dealerId"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/vin.createCustomer": {
        "id": "endpoint_integrations/vin.createCustomer",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/vin"
        ],
        "displayName": "Create Customer",
        "operationId": "create-customer",
        "description": "Create a customer",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/vin"
          },
          {
            "type": "literal",
            "value": "/customers"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "customer",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_integrations/vin:VinCustomer"
                    }
                  }
                },
                {
                  "key": "dealerId",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/vin:CreateVinCustomerResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/vin/customers",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "customer": {
                  "homePhone": "string",
                  "workPhone": "string",
                  "cellPhone": "string",
                  "firstName": "string",
                  "middleName": "string",
                  "lastName": "string",
                  "email": "string",
                  "vehicleNumber": "string"
                },
                "dealerId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/vin/customers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"customer\": {\n    \"homePhone\": \"string\",\n    \"workPhone\": \"string\",\n    \"cellPhone\": \"string\",\n    \"firstName\": \"string\",\n    \"middleName\": \"string\",\n    \"lastName\": \"string\",\n    \"email\": \"string\",\n    \"vehicleNumber\": \"string\"\n  },\n  \"dealerId\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createCustomer({\n    customer: {\n        homePhone: \"string\",\n        workPhone: \"string\",\n        cellPhone: \"string\",\n        firstName: \"string\",\n        middleName: \"string\",\n        lastName: \"string\",\n        email: \"string\",\n        vehicleNumber: \"string\"\n    },\n    dealerId: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/customers",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "customer": {
                  "homePhone": "string",
                  "workPhone": "string",
                  "cellPhone": "string",
                  "firstName": "string",
                  "middleName": "string",
                  "lastName": "string",
                  "email": "string",
                  "vehicleNumber": "string"
                },
                "dealerId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/vin/customers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"customer\": {\n    \"homePhone\": \"string\",\n    \"workPhone\": \"string\",\n    \"cellPhone\": \"string\",\n    \"firstName\": \"string\",\n    \"middleName\": \"string\",\n    \"lastName\": \"string\",\n    \"email\": \"string\",\n    \"vehicleNumber\": \"string\"\n  },\n  \"dealerId\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createCustomer({\n    customer: {\n        homePhone: \"string\",\n        workPhone: \"string\",\n        cellPhone: \"string\",\n        firstName: \"string\",\n        middleName: \"string\",\n        lastName: \"string\",\n        email: \"string\",\n        vehicleNumber: \"string\"\n    },\n    dealerId: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/customers",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "customer": {
                  "homePhone": "string",
                  "workPhone": "string",
                  "cellPhone": "string",
                  "firstName": "string",
                  "middleName": "string",
                  "lastName": "string",
                  "email": "string",
                  "vehicleNumber": "string"
                },
                "dealerId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/vin/customers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"customer\": {\n    \"homePhone\": \"string\",\n    \"workPhone\": \"string\",\n    \"cellPhone\": \"string\",\n    \"firstName\": \"string\",\n    \"middleName\": \"string\",\n    \"lastName\": \"string\",\n    \"email\": \"string\",\n    \"vehicleNumber\": \"string\"\n  },\n  \"dealerId\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createCustomer({\n    customer: {\n        homePhone: \"string\",\n        workPhone: \"string\",\n        cellPhone: \"string\",\n        firstName: \"string\",\n        middleName: \"string\",\n        lastName: \"string\",\n        email: \"string\",\n        vehicleNumber: \"string\"\n    },\n    dealerId: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/customers",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "customer": {
                  "homePhone": "string",
                  "workPhone": "string",
                  "cellPhone": "string",
                  "firstName": "string",
                  "middleName": "string",
                  "lastName": "string",
                  "email": "string",
                  "vehicleNumber": "string"
                },
                "dealerId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/vin/customers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"customer\": {\n    \"homePhone\": \"string\",\n    \"workPhone\": \"string\",\n    \"cellPhone\": \"string\",\n    \"firstName\": \"string\",\n    \"middleName\": \"string\",\n    \"lastName\": \"string\",\n    \"email\": \"string\",\n    \"vehicleNumber\": \"string\"\n  },\n  \"dealerId\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createCustomer({\n    customer: {\n        homePhone: \"string\",\n        workPhone: \"string\",\n        cellPhone: \"string\",\n        firstName: \"string\",\n        middleName: \"string\",\n        lastName: \"string\",\n        email: \"string\",\n        vehicleNumber: \"string\"\n    },\n    dealerId: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/customers",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "customer": {
                  "homePhone": "string",
                  "workPhone": "string",
                  "cellPhone": "string",
                  "firstName": "string",
                  "middleName": "string",
                  "lastName": "string",
                  "email": "string",
                  "vehicleNumber": "string"
                },
                "dealerId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/vin/customers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"customer\": {\n    \"homePhone\": \"string\",\n    \"workPhone\": \"string\",\n    \"cellPhone\": \"string\",\n    \"firstName\": \"string\",\n    \"middleName\": \"string\",\n    \"lastName\": \"string\",\n    \"email\": \"string\",\n    \"vehicleNumber\": \"string\"\n  },\n  \"dealerId\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createCustomer({\n    customer: {\n        homePhone: \"string\",\n        workPhone: \"string\",\n        cellPhone: \"string\",\n        firstName: \"string\",\n        middleName: \"string\",\n        lastName: \"string\",\n        email: \"string\",\n        vehicleNumber: \"string\"\n    },\n    dealerId: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/vin/customers",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "customer": {
                  "homePhone": "string",
                  "workPhone": "string",
                  "cellPhone": "string",
                  "firstName": "string",
                  "middleName": "string",
                  "lastName": "string",
                  "email": "string",
                  "vehicleNumber": "string"
                },
                "dealerId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/vin/customers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"customer\": {\n    \"homePhone\": \"string\",\n    \"workPhone\": \"string\",\n    \"cellPhone\": \"string\",\n    \"firstName\": \"string\",\n    \"middleName\": \"string\",\n    \"lastName\": \"string\",\n    \"email\": \"string\",\n    \"vehicleNumber\": \"string\"\n  },\n  \"dealerId\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createCustomer({\n    customer: {\n        homePhone: \"string\",\n        workPhone: \"string\",\n        cellPhone: \"string\",\n        firstName: \"string\",\n        middleName: \"string\",\n        lastName: \"string\",\n        email: \"string\",\n        vehicleNumber: \"string\"\n    },\n    dealerId: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.vin.createCustomer(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "customer: {\n\t\t\t$FERN_INPUT\n\t\t}",
                          "isOptional": true,
                          "inputDelimiter": ",\n\t\t\t",
                          "templateInputs": [
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "homePhone: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "customer.homePhone"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "workPhone: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "customer.workPhone"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "cellPhone: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "customer.cellPhone"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "firstName: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "customer.firstName"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "middleName: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "customer.middleName"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "lastName: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "customer.lastName"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "email: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "customer.email"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "vehicleNumber: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "customer.vehicleNumber"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "dealerId: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "dealerId"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/whatsapp.createSession": {
        "id": "endpoint_integrations/whatsapp.createSession",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/whatsapp"
        ],
        "displayName": "Create Session",
        "operationId": "create-session",
        "description": "Create a WhatsApp session that you can connect to via playwright. See [this link](/overview/integrations/custom-automations) for more info.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/whatsapp"
          },
          {
            "type": "literal",
            "value": "/session"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/types:CreateSessionResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/whatsapp/session",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "wsUrl": "string",
                "postSignInUrl": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/whatsapp/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/whatsapp/session",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/whatsapp/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/whatsapp/session",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/whatsapp/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/whatsapp/session",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/whatsapp/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/whatsapp/session",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/whatsapp/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/whatsapp/session",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/whatsapp/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.createSession();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.whatsapp.createSession()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/whatsapp.sendMessage": {
        "id": "endpoint_integrations/whatsapp.sendMessage",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/whatsapp"
        ],
        "displayName": "Send Message",
        "operationId": "send-message",
        "description": "Send a message to a WhatsApp number.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/whatsapp"
          },
          {
            "type": "literal",
            "value": "/messages"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "to",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The phone number to send the message to."
                },
                {
                  "key": "message",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/whatsapp:SendMessageResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/whatsapp/messages",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "to": "string",
                "message": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/whatsapp/messages \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"to\": \"string\",\n  \"message\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.sendMessage({\n    to: \"string\",\n    message: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/whatsapp/messages",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "to": "string",
                "message": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/whatsapp/messages \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"to\": \"string\",\n  \"message\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.sendMessage({\n    to: \"string\",\n    message: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/whatsapp/messages",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "to": "string",
                "message": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/whatsapp/messages \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"to\": \"string\",\n  \"message\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.sendMessage({\n    to: \"string\",\n    message: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/whatsapp/messages",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "to": "string",
                "message": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/whatsapp/messages \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"to\": \"string\",\n  \"message\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.sendMessage({\n    to: \"string\",\n    message: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/whatsapp/messages",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "to": "string",
                "message": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/whatsapp/messages \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"to\": \"string\",\n  \"message\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.sendMessage({\n    to: \"string\",\n    message: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/whatsapp/messages",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "to": "string",
                "message": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/whatsapp/messages \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"to\": \"string\",\n  \"message\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.sendMessage({\n    to: \"string\",\n    message: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.whatsapp.sendMessage(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "to: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "to"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "message: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "message"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/whatsapp.changeStatus": {
        "id": "endpoint_integrations/whatsapp.changeStatus",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/whatsapp"
        ],
        "displayName": "Change Status",
        "operationId": "change-status",
        "description": "Change the status on WhatsApp. Text only supported",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/whatsapp"
          },
          {
            "type": "literal",
            "value": "/status"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "statusMessage",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/whatsapp:ChangeStatusResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/whatsapp/status",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "statusMessage": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/whatsapp/status \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"statusMessage\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.changeStatus({\n    statusMessage: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/whatsapp/status",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "statusMessage": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/whatsapp/status \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"statusMessage\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.changeStatus({\n    statusMessage: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/whatsapp/status",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "statusMessage": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/whatsapp/status \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"statusMessage\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.changeStatus({\n    statusMessage: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/whatsapp/status",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "statusMessage": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/whatsapp/status \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"statusMessage\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.changeStatus({\n    statusMessage: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/whatsapp/status",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "statusMessage": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/whatsapp/status \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"statusMessage\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.changeStatus({\n    statusMessage: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/whatsapp/status",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "statusMessage": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/whatsapp/status \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"statusMessage\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.changeStatus({\n    statusMessage: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.whatsapp.changeStatus(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "statusMessage: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "statusMessage"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/whatsapp.readMessages": {
        "id": "endpoint_integrations/whatsapp.readMessages",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/whatsapp"
        ],
        "displayName": "Read Messages",
        "operationId": "read-messages",
        "description": "Read messages from WhatsApp",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/whatsapp"
          },
          {
            "type": "literal",
            "value": "/messages/"
          },
          {
            "type": "pathParameter",
            "value": "phoneNumber"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "pathParameters": [
          {
            "key": "phoneNumber",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/whatsapp:ReadMessagesResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/whatsapp/messages/:phoneNumber",
            "responseStatusCode": 200,
            "pathParameters": {
              "phoneNumber": ":phoneNumber"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "messages": [
                  {
                    "sender": "string",
                    "message": "string",
                    "timestamp": "string"
                  }
                ],
                "status": "ok"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/whatsapp/messages/:phoneNumber \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.readMessages(\"string\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/whatsapp/messages/:phoneNumber",
            "responseStatusCode": 401,
            "pathParameters": {
              "phoneNumber": ":phoneNumber"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/whatsapp/messages/:phoneNumber \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.readMessages(\"string\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/whatsapp/messages/:phoneNumber",
            "responseStatusCode": 500,
            "pathParameters": {
              "phoneNumber": ":phoneNumber"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/whatsapp/messages/:phoneNumber \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.readMessages(\"string\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/whatsapp/messages/:phoneNumber",
            "responseStatusCode": 404,
            "pathParameters": {
              "phoneNumber": ":phoneNumber"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/whatsapp/messages/:phoneNumber \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.readMessages(\"string\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/whatsapp/messages/:phoneNumber",
            "responseStatusCode": 400,
            "pathParameters": {
              "phoneNumber": ":phoneNumber"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/whatsapp/messages/:phoneNumber \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.readMessages(\"string\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/whatsapp/messages/:phoneNumber",
            "responseStatusCode": 500,
            "pathParameters": {
              "phoneNumber": ":phoneNumber"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/whatsapp/messages/:phoneNumber \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.readMessages(\"string\");\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.whatsapp.readMessages(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "$FERN_INPUT",
                    "isOptional": false,
                    "inputDelimiter": ",\n\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "$FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "PATH",
                              "path": "phoneNumber"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/x.createSession": {
        "id": "endpoint_integrations/x.createSession",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/x"
        ],
        "displayName": "Create Session",
        "operationId": "create-session",
        "description": "Create a X session that you can connect to via playwright. See [this link](/overview/integrations/custom-automations) for more info.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/x"
          },
          {
            "type": "literal",
            "value": "/session"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/types:CreateSessionResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/x/session",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "wsUrl": "string",
                "postSignInUrl": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/x/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/x/session",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/x/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/x/session",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/x/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/x/session",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/x/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/x/session",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/x/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.createSession();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/x/session",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/x/session \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.createSession();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.x.createSession()",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": []
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/x.getFollowers": {
        "id": "endpoint_integrations/x.getFollowers",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/x"
        ],
        "displayName": "Get Followers",
        "operationId": "get-followers",
        "description": "Get the list of followers associated with this account",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/x"
          },
          {
            "type": "literal",
            "value": "/followers"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "queryParameters": [
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/x:GetXFollowersResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/x/followers",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "limit": 0
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "profiles": [
                  {
                    "id": "string",
                    "restId": "string",
                    "name": "string",
                    "profileUrl": "string",
                    "numFollowers": 0,
                    "numFollowing": 0,
                    "verified": true,
                    "userIsFollowing": true
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/x/followers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.getFollowers({\n    limit: 1\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/x/followers",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {
              "limit": 0
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/x/followers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.getFollowers({\n    limit: 1\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/x/followers",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "limit": 0
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/x/followers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.getFollowers({\n    limit: 1\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/x/followers",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {
              "limit": 0
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/x/followers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.getFollowers({\n    limit: 1\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/x/followers",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "limit": 0
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/x/followers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.getFollowers({\n    limit: 1\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/x/followers",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "limit": 0
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/x/followers \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.getFollowers({\n    limit: 1\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.x.getFollowers(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "limit: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "limit"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_integrations/x.getFollowingTweets": {
        "id": "endpoint_integrations/x.getFollowingTweets",
        "namespace": [
          "subpackage_integrations",
          "subpackage_integrations/x"
        ],
        "displayName": "Get Following Tweets",
        "operationId": "get-following-tweets",
        "description": "Get the latest tweets from the accounts you follow",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/x"
          },
          {
            "type": "literal",
            "value": "/posts/following"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "queryParameters": [
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_integrations/x:GetXFollowingTweetsResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/x/posts/following",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "limit": 0
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "posts": [
                  {
                    "id": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/x/posts/following \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.getFollowingTweets({\n    limit: 1\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/x/posts/following",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {
              "limit": 0
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/x/posts/following \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.getFollowingTweets({\n    limit: 1\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/x/posts/following",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "limit": 0
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/x/posts/following \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.getFollowingTweets({\n    limit: 1\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/x/posts/following",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {
              "limit": 0
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/x/posts/following \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.getFollowingTweets({\n    limit: 1\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/x/posts/following",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "limit": 0
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/x/posts/following \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.getFollowingTweets({\n    limit: 1\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/x/posts/following",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "limit": 0
            },
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.trykeet.com/v1/x/posts/following \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.getFollowingTweets({\n    limit: 1\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.integrations.x.getFollowingTweets(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "limit: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "limit"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_link.createLinkToken": {
        "id": "endpoint_link.createLinkToken",
        "namespace": [
          "subpackage_link"
        ],
        "displayName": "Create Link Token",
        "operationId": "create-link-token",
        "description": "Create a link token that can be used to link accounts",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/link"
          },
          {
            "type": "literal",
            "value": "/token"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "linkConfig",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_common/types:LinkConfig"
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_link:CreateLinkResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/link/token",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "linkConfig": {
                  "endUserId": "<userId>",
                  "integration": "Instagram",
                  "companyLogoUri": "https://example.com/logo.png"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "linkToken": "<token>"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/link/token \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"linkConfig\": {\n    \"endUserId\": \"<userId>\",\n    \"integration\": \"Instagram\",\n    \"companyLogoUri\": \"https://example.com/logo.png\"\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.link.createLinkToken({\n    linkConfig: {\n        endUserId: \"<userId>\",\n        integration: Keet.OfferedIntegrations.Instagram,\n        companyLogoUri: \"https://example.com/logo.png\"\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/link/token",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "linkConfig": {
                  "endUserId": "string",
                  "integration": "Venmo"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/link/token \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"linkConfig\": {\n    \"endUserId\": \"string\",\n    \"integration\": \"Venmo\"\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.link.createLinkToken({\n    linkConfig: {\n        endUserId: \"<userId>\",\n        integration: Keet.OfferedIntegrations.Instagram,\n        companyLogoUri: \"https://example.com/logo.png\"\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/link/token",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "linkConfig": {
                  "endUserId": "string",
                  "integration": "Venmo"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/link/token \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"linkConfig\": {\n    \"endUserId\": \"string\",\n    \"integration\": \"Venmo\"\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.link.createLinkToken({\n    linkConfig: {\n        endUserId: \"<userId>\",\n        integration: Keet.OfferedIntegrations.Instagram,\n        companyLogoUri: \"https://example.com/logo.png\"\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/link/token",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "linkConfig": {
                  "endUserId": "string",
                  "integration": "Venmo"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/link/token \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"linkConfig\": {\n    \"endUserId\": \"string\",\n    \"integration\": \"Venmo\"\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.link.createLinkToken({\n    linkConfig: {\n        endUserId: \"<userId>\",\n        integration: Keet.OfferedIntegrations.Instagram,\n        companyLogoUri: \"https://example.com/logo.png\"\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/link/token",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "linkConfig": {
                  "endUserId": "string",
                  "integration": "Venmo"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/link/token \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"linkConfig\": {\n    \"endUserId\": \"string\",\n    \"integration\": \"Venmo\"\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.link.createLinkToken({\n    linkConfig: {\n        endUserId: \"<userId>\",\n        integration: Keet.OfferedIntegrations.Instagram,\n        companyLogoUri: \"https://example.com/logo.png\"\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/link/token",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "linkConfig": {
                  "endUserId": "string",
                  "integration": "Venmo"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/link/token \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"linkConfig\": {\n    \"endUserId\": \"string\",\n    \"integration\": \"Venmo\"\n  }\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.link.createLinkToken({\n    linkConfig: {\n        endUserId: \"<userId>\",\n        integration: Keet.OfferedIntegrations.Instagram,\n        companyLogoUri: \"https://example.com/logo.png\"\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.link.createLinkToken(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "linkConfig: {\n\t\t\t$FERN_INPUT\n\t\t}",
                          "isOptional": true,
                          "inputDelimiter": ",\n\t\t\t",
                          "templateInputs": [
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "endUserId: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "linkConfig.endUserId"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "enum",
                                "imports": [],
                                "isOptional": true,
                                "values": {
                                  "Venmo": "Keet.OfferedIntegrations.Venmo",
                                  "LinkedIn": "Keet.OfferedIntegrations.LinkedIn",
                                  "Amazon Business": "Keet.OfferedIntegrations.AmazonBusiness",
                                  "Amazon": "Keet.OfferedIntegrations.Amazon",
                                  "Uber": "Keet.OfferedIntegrations.Uber",
                                  "Instagram": "Keet.OfferedIntegrations.Instagram",
                                  "X": "Keet.OfferedIntegrations.X",
                                  "Facebook": "Keet.OfferedIntegrations.Facebook",
                                  "Amazon Seller": "Keet.OfferedIntegrations.AmazonSeller",
                                  "WhatsApp": "Keet.OfferedIntegrations.WhatsApp",
                                  "Jane": "Keet.OfferedIntegrations.Jane",
                                  "PPP": "Keet.OfferedIntegrations.Ppp",
                                  "ServiceBox": "Keet.OfferedIntegrations.ServiceBox",
                                  "DispatchMe": "Keet.OfferedIntegrations.DispatchMe",
                                  "Toast": "Keet.OfferedIntegrations.Toast",
                                  "Vin": "Keet.OfferedIntegrations.Vin"
                                },
                                "templateString": "integration: $FERN_INPUT",
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "linkConfig.integration"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "companyName: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "linkConfig.companyName"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "companyLogoUri: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "linkConfig.companyLogoUri"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_linked-accounts.getLinkedAccounts": {
        "id": "endpoint_linked-accounts.getLinkedAccounts",
        "namespace": [
          "subpackage_linked-accounts"
        ],
        "displayName": "Get Linked Accounts",
        "operationId": "get-linked-accounts",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/linked-accounts"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_linked-accounts:GetLinkedAccountsResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/linked-accounts",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "linkedAccounts": [
                  {
                    "endUserId": "string",
                    "createdAt": "2023-01-01T00:00:00Z",
                    "integrations": [
                      {
                        "integration": "string",
                        "isAlive": true
                      }
                    ]
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/linked-accounts \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linked-accounts",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/linked-accounts \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linked-accounts",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/linked-accounts \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linked-accounts",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/linked-accounts \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linked-accounts",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/linked-accounts \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linked-accounts",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/linked-accounts \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_linked-accounts.getLinkedAccount": {
        "id": "endpoint_linked-accounts.getLinkedAccount",
        "namespace": [
          "subpackage_linked-accounts"
        ],
        "displayName": "Get Linked Account",
        "operationId": "get-linked-account",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/linked-accounts"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "linkedAccountId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "pathParameters": [
          {
            "key": "linkedAccountId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_linked-accounts:GetLinkedAccountResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/linked-accounts/:linkedAccountId",
            "responseStatusCode": 200,
            "pathParameters": {
              "linkedAccountId": ":linkedAccountId"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "linkedAccount": {
                  "endUserId": "string",
                  "createdAt": "2023-01-01T00:00:00Z",
                  "integrations": [
                    {
                      "integration": "string",
                      "isAlive": true
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/linked-accounts/:linkedAccountId \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.getLinkedAccount(\"string\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linked-accounts/:linkedAccountId",
            "responseStatusCode": 401,
            "pathParameters": {
              "linkedAccountId": ":linkedAccountId"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/linked-accounts/:linkedAccountId \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.getLinkedAccount(\"string\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linked-accounts/:linkedAccountId",
            "responseStatusCode": 500,
            "pathParameters": {
              "linkedAccountId": ":linkedAccountId"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/linked-accounts/:linkedAccountId \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.getLinkedAccount(\"string\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linked-accounts/:linkedAccountId",
            "responseStatusCode": 404,
            "pathParameters": {
              "linkedAccountId": ":linkedAccountId"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/linked-accounts/:linkedAccountId \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.getLinkedAccount(\"string\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linked-accounts/:linkedAccountId",
            "responseStatusCode": 400,
            "pathParameters": {
              "linkedAccountId": ":linkedAccountId"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/linked-accounts/:linkedAccountId \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.getLinkedAccount(\"string\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linked-accounts/:linkedAccountId",
            "responseStatusCode": 500,
            "pathParameters": {
              "linkedAccountId": ":linkedAccountId"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.trykeet.com/v1/linked-accounts/:linkedAccountId \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.getLinkedAccount(\"string\");\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.linkedAccounts.getLinkedAccount(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "$FERN_INPUT",
                    "isOptional": false,
                    "inputDelimiter": ",\n\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "$FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "PATH",
                              "path": "linkedAccountId"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_linked-accounts.deleteLinkedAccount": {
        "id": "endpoint_linked-accounts.deleteLinkedAccount",
        "namespace": [
          "subpackage_linked-accounts"
        ],
        "displayName": "Delete Linked Account",
        "operationId": "delete-linked-account",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/linked-accounts"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "linkedAccountId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "pathParameters": [
          {
            "key": "linkedAccountId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_linked-accounts:DeleteLinkedAccountResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/linked-accounts/:linkedAccountId",
            "responseStatusCode": 200,
            "pathParameters": {
              "linkedAccountId": ":linkedAccountId"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.trykeet.com/v1/linked-accounts/:linkedAccountId \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.deleteLinkedAccount(\"string\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linked-accounts/:linkedAccountId",
            "responseStatusCode": 401,
            "pathParameters": {
              "linkedAccountId": ":linkedAccountId"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.trykeet.com/v1/linked-accounts/:linkedAccountId \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.deleteLinkedAccount(\"string\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linked-accounts/:linkedAccountId",
            "responseStatusCode": 500,
            "pathParameters": {
              "linkedAccountId": ":linkedAccountId"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.trykeet.com/v1/linked-accounts/:linkedAccountId \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.deleteLinkedAccount(\"string\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linked-accounts/:linkedAccountId",
            "responseStatusCode": 404,
            "pathParameters": {
              "linkedAccountId": ":linkedAccountId"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.trykeet.com/v1/linked-accounts/:linkedAccountId \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.deleteLinkedAccount(\"string\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linked-accounts/:linkedAccountId",
            "responseStatusCode": 400,
            "pathParameters": {
              "linkedAccountId": ":linkedAccountId"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.trykeet.com/v1/linked-accounts/:linkedAccountId \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.deleteLinkedAccount(\"string\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linked-accounts/:linkedAccountId",
            "responseStatusCode": 500,
            "pathParameters": {
              "linkedAccountId": ":linkedAccountId"
            },
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.trykeet.com/v1/linked-accounts/:linkedAccountId \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.deleteLinkedAccount(\"string\");\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.linkedAccounts.deleteLinkedAccount(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "$FERN_INPUT",
                    "isOptional": false,
                    "inputDelimiter": ",\n\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "$FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "PATH",
                              "path": "linkedAccountId"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "endpoint_linked-accounts.getToken": {
        "id": "endpoint_linked-accounts.getToken",
        "namespace": [
          "subpackage_linked-accounts"
        ],
        "displayName": "Get Token",
        "operationId": "get-token",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1"
          },
          {
            "type": "literal",
            "value": "/linked-accounts"
          },
          {
            "type": "literal",
            "value": "/token"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.trykeet.com"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "publicToken",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_linked-accounts:GetTokenResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_common/errors:BaseError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/linked-accounts/token",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "publicToken": "..."
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ok",
                "accountToken": "acc_..."
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/linked-accounts/token \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"publicToken\": \"...\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.getToken({\n    publicToken: \"...\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linked-accounts/token",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "publicToken": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/linked-accounts/token \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"publicToken\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.getToken({\n    publicToken: \"...\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linked-accounts/token",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "publicToken": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/linked-accounts/token \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"publicToken\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.getToken({\n    publicToken: \"...\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linked-accounts/token",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "publicToken": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/linked-accounts/token \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"publicToken\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.getToken({\n    publicToken: \"...\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linked-accounts/token",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "publicToken": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/linked-accounts/token \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"publicToken\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.getToken({\n    publicToken: \"...\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/linked-accounts/token",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Account-Token": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "publicToken": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.trykeet.com/v1/linked-accounts/token \\\n     -H \"X-Account-Token: string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"publicToken\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.getToken({\n    publicToken: \"...\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await client.linkedAccounts.getToken(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "publicToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "publicToken"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": {
              "type": "generic",
              "imports": [
                "import { KeetClient } from \"@keet-tech/keet-node-client\";"
              ],
              "templateString": "const client = new KeetClient($FERN_INPUT);",
              "isOptional": false,
              "inputDelimiter": ",",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{ $FERN_INPUT }",
                    "isOptional": true,
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": false,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "AUTH",
                              "path": "token"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "accountToken: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "HEADERS",
                              "path": "X-Account-Token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      }
    },
    "websockets": {},
    "webhooks": {},
    "types": {
      "type_common/errors:BaseError": {
        "name": "BaseError",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "error",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_common/types:LinkedAccount": {
        "name": "LinkedAccount",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "endUserId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "integrations",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_common/types:Integration"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_common/types:Integration": {
        "name": "Integration",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "integration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "isAlive",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_common/types:LinkConfig": {
        "name": "LinkConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "endUserId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "integration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:OfferedIntegrations"
                }
              }
            },
            {
              "key": "companyName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "companyLogoUri",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_common/types:OfferedIntegrations": {
        "name": "OfferedIntegrations",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "Venmo"
            },
            {
              "value": "LinkedIn"
            },
            {
              "value": "Amazon Business"
            },
            {
              "value": "Amazon"
            },
            {
              "value": "Uber"
            },
            {
              "value": "Instagram"
            },
            {
              "value": "X"
            },
            {
              "value": "Facebook"
            },
            {
              "value": "Amazon Seller"
            },
            {
              "value": "WhatsApp"
            },
            {
              "value": "Jane"
            },
            {
              "value": "PPP"
            },
            {
              "value": "ServiceBox"
            },
            {
              "value": "DispatchMe"
            },
            {
              "value": "Toast"
            },
            {
              "value": "Vin"
            }
          ]
        }
      },
      "type_common/types:ResponseStatus": {
        "name": "ResponseStatus",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ok"
            },
            {
              "value": "error"
            }
          ]
        }
      },
      "type_common/types:CreateSessionResponse": {
        "name": "CreateSessionResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "wsUrl",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "postSignInUrl",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/amazon:AmazonItem": {
        "name": "AmazonItem",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "title",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "brand",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "price",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "pricePerUnit",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "rating",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "reviewCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "imageUrl",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "merchant",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "availability",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "purchaseDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/amazon:AmazonGetBuyAgainResponse": {
        "name": "AmazonGetBuyAgainResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "items",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_integrations/amazon:AmazonItem"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/amazon:AmazonSearchItemsResponse": {
        "name": "AmazonSearchItemsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "items",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_integrations/amazon:AmazonItem"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/amazon:AmazonOrderItemResponse": {
        "name": "AmazonOrderItemResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            }
          ]
        }
      },
      "type_integrations/amazon:AmazonAddToCartResponse": {
        "name": "AmazonAddToCartResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            }
          ]
        }
      },
      "type_integrations/amazonBusiness:PageInfo": {
        "name": "PageInfo",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "total",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "next",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/amazonBusiness:AmazonBusinessGetOrdersResponse": {
        "name": "AmazonBusinessGetOrdersResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "orders",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_integrations/amazonBusiness:AmazonBusinessOrder"
                    }
                  }
                }
              }
            },
            {
              "key": "pageInfo",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_integrations/amazonBusiness:PageInfo"
                }
              }
            }
          ]
        }
      },
      "type_integrations/amazonBusiness:AmazonBusinessAddress": {
        "name": "AmazonBusinessAddress",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine1",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine2",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "country",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/amazonBusiness:AmazonBusinessOrder": {
        "name": "AmazonBusinessOrder",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "total",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "address",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_integrations/amazonBusiness:AmazonBusinessAddress"
                    }
                  }
                }
              }
            },
            {
              "key": "orderNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "items",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/amazonBusiness:AmazonBusinessItem": {
        "name": "AmazonBusinessItem",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "title",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "brand",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "price",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "pricePerUnit",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "rating",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "reviewCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "imageUrl",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "merchant",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "availability",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "purchaseDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/amazonBusiness:AmazonBusinessGetBuyAgainResponse": {
        "name": "AmazonBusinessGetBuyAgainResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "items",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_integrations/amazonBusiness:AmazonBusinessItem"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/amazonBusiness:AmazonBusinessOrderItemResponse": {
        "name": "AmazonBusinessOrderItemResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            }
          ]
        }
      },
      "type_integrations/amazonBusiness:OrdersTimespan": {
        "name": "OrdersTimespan",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "30d"
            },
            {
              "value": "3m"
            },
            {
              "value": "1y"
            }
          ]
        }
      },
      "type_integrations/dispatchMe:DispatchMeAddress": {
        "name": "DispatchMeAddress",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "street1",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "street2",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "city",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "state",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "postalCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "district",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "county",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "country",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "formattedAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "timezone",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "latitude",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "key": "longitude",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/dispatchMe:DispatchMePhoneNumber": {
        "name": "DispatchMePhoneNumber",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "primary",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "number",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/dispatchMe:DispatchMeCustomer": {
        "name": "DispatchMeCustomer",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "organizationId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "companyName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "billingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_integrations/dispatchMe:DispatchMeAddress"
                }
              }
            },
            {
              "key": "homeAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_integrations/dispatchMe:DispatchMeAddress"
                }
              }
            },
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "notes",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "phoneNumbers",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_integrations/dispatchMe:DispatchMePhoneNumber"
                    }
                  }
                }
              }
            },
            {
              "key": "labels",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/dispatchMe:DispatchMeJobStatus": {
        "name": "DispatchMeJobStatus",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "offered"
            },
            {
              "value": "scheduled"
            },
            {
              "value": "un-scheduled"
            },
            {
              "value": "paused"
            },
            {
              "value": "in_progress"
            },
            {
              "value": "complete"
            }
          ]
        }
      },
      "type_integrations/dispatchMe:EditCustomerResponse": {
        "name": "EditCustomerResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "customer",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            }
          ]
        }
      },
      "type_integrations/dispatchMe:CreateDispatchMeCustomerResponse": {
        "name": "CreateDispatchMeCustomerResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "customer",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            }
          ]
        }
      },
      "type_integrations/dispatchMe:GetCustomersResponse": {
        "name": "GetCustomersResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "customers",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              }
            }
          ]
        }
      },
      "type_integrations/dispatchMe:GetAccountOrganizationsResponse": {
        "name": "GetAccountOrganizationsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "organizations",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              }
            }
          ]
        }
      },
      "type_integrations/dispatchMe:GetJobsResponse": {
        "name": "GetJobsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "jobs",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              }
            }
          ]
        }
      },
      "type_integrations/dispatchMe:DispatchMeNote": {
        "name": "DispatchMeNote",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "jobId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "private",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "priority",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/dispatchMe:DispatchMeAppointment": {
        "name": "DispatchMeAppointment",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "duration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "time",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "userId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "secondaryUserIds",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "organizationId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "jobId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/dispatchMe:CreateDispatchMeNoteResponse": {
        "name": "CreateDispatchMeNoteResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            }
          ]
        }
      },
      "type_integrations/dispatchMe:CreateDispatchMeAppointmentResponse": {
        "name": "CreateDispatchMeAppointmentResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            }
          ]
        }
      },
      "type_integrations/dispatchMe:GetDispatchMeUsersResponse": {
        "name": "GetDispatchMeUsersResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "users",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              }
            }
          ]
        }
      },
      "type_integrations/facebook:PostGroupMessageResponse": {
        "name": "PostGroupMessageResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            }
          ]
        }
      },
      "type_integrations/facebook:JoinGroupResponse": {
        "name": "JoinGroupResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            }
          ]
        }
      },
      "type_integrations/facebook:FacebookGroup": {
        "name": "FacebookGroup",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "numMembers",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "postsPerDay",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "privacy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/facebook:SearchGroupsResponse": {
        "name": "SearchGroupsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "groups",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_integrations/facebook:FacebookGroup"
                    }
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            }
          ]
        }
      },
      "type_integrations/linkedin:PersonSearchResult": {
        "name": "PersonSearchResult",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "title",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "premium",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "primarySubtitle",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "connectionDegree",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "summary",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "secondarySubtitle",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "navigationUrl",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "navigationContext",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/linkedin:InvitationRequest": {
        "name": "InvitationRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "profileUrl",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "sentTimeLabel",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "sharedConnections",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/linkedin:InvitationRequestsResponse": {
        "name": "InvitationRequestsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "invitationRequests",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_integrations/linkedin:InvitationRequest"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/linkedin:AcceptInvitationResponse": {
        "name": "AcceptInvitationResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            }
          ]
        }
      },
      "type_integrations/linkedin:CreatePostResponse": {
        "name": "CreatePostResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            }
          ]
        }
      },
      "type_integrations/linkedin:SearchResponse": {
        "name": "SearchResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "results",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_integrations/linkedin:PersonSearchResult"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/linkedin:GetConnectionsResult": {
        "name": "GetConnectionsResult",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "connections",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_integrations/linkedin:LinkedInConnection"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/linkedin:LinkedInConnection": {
        "name": "LinkedInConnection",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "profileUrl",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "headline",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "publicIdentifier",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/linkedin:LinkedInSendMessageResponse": {
        "name": "LinkedInSendMessageResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            }
          ]
        }
      },
      "type_integrations/linkedin:LinkedInMessage": {
        "name": "LinkedInMessage",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "content",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "sentTime",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "from",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/linkedin:LinkedInGetMessagesResponse": {
        "name": "LinkedInGetMessagesResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "messages",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_integrations/linkedin:LinkedInMessage"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/ppp:CreateCustomerResponse": {
        "name": "CreateCustomerResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            }
          ]
        }
      },
      "type_integrations/ppp:SearchCustomerDetailsResponse": {
        "name": "SearchCustomerDetailsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "customerDetails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              }
            }
          ]
        }
      },
      "type_integrations/ppp:CreateAppointmentResponse": {
        "name": "CreateAppointmentResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            }
          ]
        }
      },
      "type_integrations/ppp:GetBillingTermsResponse": {
        "name": "GetBillingTermsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "billingTerms",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              }
            }
          ]
        }
      },
      "type_integrations/ppp:GetInvoiceTypesResponse": {
        "name": "GetInvoiceTypesResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "invoiceTypes",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              }
            }
          ]
        }
      },
      "type_integrations/ppp:GetCustomerTypesResponse": {
        "name": "GetCustomerTypesResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "customerTypes",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              }
            }
          ]
        }
      },
      "type_integrations/ppp:GetArrivalWindowResponse": {
        "name": "GetArrivalWindowResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "arrivalWindow",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              }
            }
          ]
        }
      },
      "type_integrations/ppp:GetServiceCallStatusResponse": {
        "name": "GetServiceCallStatusResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "serviceCallStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              }
            }
          ]
        }
      },
      "type_integrations/ppp:GetServiceCallTypeResponse": {
        "name": "GetServiceCallTypeResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "serviceCallType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              }
            }
          ]
        }
      },
      "type_integrations/ppp:GetLeadSourceResponse": {
        "name": "GetLeadSourceResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "leadSource",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              }
            }
          ]
        }
      },
      "type_integrations/ppp:GetBoardIdsResponse": {
        "name": "GetBoardIdsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "boardIds",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              }
            }
          ]
        }
      },
      "type_integrations/ppp:GetTechniciansResponse": {
        "name": "GetTechniciansResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "technicians",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              }
            }
          ]
        }
      },
      "type_integrations/ppp:GetCalendarResponse": {
        "name": "GetCalendarResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "calendar",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              }
            }
          ]
        }
      },
      "type_integrations/ppp:GetDiagnosticFeeResponse": {
        "name": "GetDiagnosticFeeResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "diagnosticFee",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              }
            }
          ]
        }
      },
      "type_integrations/ppp:appointmentType": {
        "name": "appointmentType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "scheduled"
            },
            {
              "value": "open"
            }
          ]
        }
      },
      "type_integrations/ppp:multiTechOrNot": {
        "name": "multiTechOrNot",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "Add_New_Technician"
            },
            {
              "value": ""
            }
          ]
        }
      },
      "type_integrations/ppp:mutliTech": {
        "name": "mutliTech",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "techID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "start_time",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "end_time",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/ppp:ServiceCallRequest": {
        "name": "ServiceCallRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "locationContactInfoID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "appointmentType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_integrations/ppp:appointmentType"
                }
              }
            },
            {
              "key": "openServiceCallDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "serviceCallTypeId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "hours",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "minutes",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "arrivalWindow",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "diagnosticFee",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "key": "serviceCallStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "leadSourceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "poNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "notes",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "datepicker1",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "dispatchBoardId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "callTypeID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "startTime",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "endTime",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "technicianID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "sendEmail",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "doNotEmail",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "arrivalWindowID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "newCustomer",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "customerFirstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "customerLastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "customerCompanyName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "customerFullName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "newServiceCallDefLeadSourID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "appointmentSaveFrom",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "selectedMultiTechSameCall",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_integrations/ppp:mutliTech"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "primaryOpenCallTech",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "selectedMultiTechSameCallOrNot",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_integrations/ppp:multiTechOrNot"
                    }
                  }
                }
              }
            },
            {
              "key": "isMultipleTech",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "isPrimaryTechID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "isPrimaryTech",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "isSecondaryServiceCallData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/ppp:phoneType": {
        "name": "phoneType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "Home"
            },
            {
              "value": "Work"
            },
            {
              "value": "Cell"
            },
            {
              "value": "Fax"
            },
            {
              "value": "Other"
            }
          ]
        }
      },
      "type_integrations/ppp:emailType": {
        "name": "emailType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "Work"
            },
            {
              "value": "Home"
            },
            {
              "value": "Other"
            }
          ]
        }
      },
      "type_integrations/ppp:commPreferences": {
        "name": "commPreferences",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "None"
            },
            {
              "value": "Email"
            },
            {
              "value": "Text"
            },
            {
              "value": "Both"
            }
          ]
        }
      },
      "type_integrations/ppp:Customer": {
        "name": "Customer",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "companyName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "primaryPhoneType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_integrations/ppp:phoneType"
                }
              }
            },
            {
              "key": "primaryPhone",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "primaryPhoneLabel",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "primaryEmailType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_integrations/ppp:emailType"
                }
              }
            },
            {
              "key": "primaryEmail",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "commPreferences",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_integrations/ppp:commPreferences"
                }
              }
            },
            {
              "key": "billingTerm",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "leadSource",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "customerType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "comments",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "invoiceType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "billingLocationName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "billingStreet1",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "billingStreet2",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "billingCity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "billingState",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "billingZip",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "billingComments",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "primaryLocationName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "primaryStreet1",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "primaryStreet2",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "primaryCity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "primaryState",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "primaryZip",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "salesTax",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "primaryComments",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/servicebox:ServiceBoxReceptionnaire": {
        "name": "ServiceBoxReceptionnaire",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "text",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/servicebox:ServiceBoxEquippe": {
        "name": "ServiceBoxEquippe",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "text",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/servicebox:EquippesResponse": {
        "name": "EquippesResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "equippes",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_integrations/servicebox:ServiceBoxReceptionnaire"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/servicebox:ReceptionnairesResponse": {
        "name": "ReceptionnairesResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "receptionnaires",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_integrations/servicebox:ServiceBoxEquippe"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/servicebox:BarGraphResponse": {
        "name": "BarGraphResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "barGraph",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              }
            }
          ]
        }
      },
      "type_integrations/servicebox:CalendarResponse": {
        "name": "CalendarResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "calendar",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              }
            }
          ]
        }
      },
      "type_integrations/toast:GetMenusResponse": {
        "name": "GetMenusResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "menus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              }
            }
          ]
        }
      },
      "type_integrations/uber:OrderRideResponse": {
        "name": "OrderRideResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            }
          ]
        }
      },
      "type_integrations/uber:UberCarTypes": {
        "name": "UberCarTypes",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "UberX"
            },
            {
              "value": "UberXL"
            },
            {
              "value": "Comfort"
            },
            {
              "value": "Share"
            },
            {
              "value": "ComfortElectric"
            },
            {
              "value": "Green"
            },
            {
              "value": "UberPet"
            },
            {
              "value": "UberBlack"
            },
            {
              "value": "UberBlackSUV"
            },
            {
              "value": "WAV"
            }
          ]
        }
      },
      "type_integrations/uber:UberAddress": {
        "name": "UberAddress",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "addressLine1",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "addressLine2",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/venmo:GetTransactionsResponse": {
        "name": "GetTransactionsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "transactions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_integrations/venmo:StoryResponse"
                }
              }
            }
          ]
        }
      },
      "type_integrations/venmo:StoryResponse": {
        "name": "StoryResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "nextId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "stories",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_integrations/venmo:Story"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/venmo:Story": {
        "name": "Story",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "avatar",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "initials",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "audience",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "note",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_integrations/venmo:Note"
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "attachments",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "title",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_integrations/venmo:Title"
                }
              }
            },
            {
              "key": "mentions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_integrations/venmo:Mentions"
                }
              }
            },
            {
              "key": "externWalletStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "paymentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "likes",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_integrations/venmo:Likes"
                }
              }
            },
            {
              "key": "comments",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_integrations/venmo:Comments"
                }
              }
            },
            {
              "key": "subType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/venmo:Note": {
        "name": "Note",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "content",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/venmo:Title": {
        "name": "Title",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "titleType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "payload",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_integrations/venmo:Payload"
                }
              }
            },
            {
              "key": "receiver",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_integrations/venmo:User"
                }
              }
            },
            {
              "key": "sender",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_integrations/venmo:User"
                }
              }
            }
          ]
        }
      },
      "type_integrations/venmo:Payload": {
        "name": "Payload",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "action",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "subType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/venmo:User": {
        "name": "User",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "displayName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "username",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/venmo:Mentions": {
        "name": "Mentions",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "count",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              }
            }
          ]
        }
      },
      "type_integrations/venmo:Likes": {
        "name": "Likes",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "count",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "userCommentedOrLiked",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/venmo:Comments": {
        "name": "Comments",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "count",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "userCommentedOrLiked",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/vin:CreateVinAppointmentResponse": {
        "name": "CreateVinAppointmentResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            }
          ]
        }
      },
      "type_integrations/vin:GetSalesAppointmentsResponse": {
        "name": "GetSalesAppointmentsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "appointments",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              }
            }
          ]
        }
      },
      "type_integrations/vin:GetUsersResponse": {
        "name": "GetUsersResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "users",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              }
            }
          ]
        }
      },
      "type_integrations/vin:GetVinDealersResponse": {
        "name": "GetVinDealersResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "dealers",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              }
            }
          ]
        }
      },
      "type_integrations/vin:SearchVinCustomersResponse": {
        "name": "SearchVinCustomersResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "customers",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              }
            }
          ]
        }
      },
      "type_integrations/vin:GetVinVehiclesResponse": {
        "name": "GetVinVehiclesResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "vehicles",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              }
            }
          ]
        }
      },
      "type_integrations/vin:CreateVinCustomerResponse": {
        "name": "CreateVinCustomerResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            }
          ]
        }
      },
      "type_integrations/vin:VinCustomer": {
        "name": "VinCustomer",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "homePhone",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "workPhone",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "cellPhone",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "middleName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "vehicleNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/whatsapp:SendMessageResponse": {
        "name": "SendMessageResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            }
          ]
        }
      },
      "type_integrations/whatsapp:ChangeStatusResponse": {
        "name": "ChangeStatusResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            }
          ]
        }
      },
      "type_integrations/whatsapp:WhatsAppMessage": {
        "name": "WhatsAppMessage",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "sender",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "timestamp",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/whatsapp:ReadMessagesResponse": {
        "name": "ReadMessagesResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "messages",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_integrations/whatsapp:WhatsAppMessage"
                    }
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            }
          ]
        }
      },
      "type_integrations/x:XProfile": {
        "name": "XProfile",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "restId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "profileUrl",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "numFollowers",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "numFollowing",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "verified",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "userIsFollowing",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/x:GetXFollowersResponse": {
        "name": "GetXFollowersResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "profiles",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_integrations/x:XProfile"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/x:XPost": {
        "name": "XPost",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_integrations/x:GetXFollowingTweetsResponse": {
        "name": "GetXFollowingTweetsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "posts",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_integrations/x:XPost"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_link:CreateLinkResponse": {
        "name": "CreateLinkResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "linkToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_linked-accounts:GetLinkedAccountResponse": {
        "name": "GetLinkedAccountResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "linkedAccount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:LinkedAccount"
                }
              }
            }
          ]
        }
      },
      "type_linked-accounts:DeleteLinkedAccountResponse": {
        "name": "DeleteLinkedAccountResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            }
          ]
        }
      },
      "type_linked-accounts:GetLinkedAccountsResponse": {
        "name": "GetLinkedAccountsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "linkedAccounts",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_common/types:LinkedAccount"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_linked-accounts:GetTokenResponse": {
        "name": "GetTokenResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common/types:ResponseStatus"
                }
              }
            },
            {
              "key": "accountToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      }
    },
    "subpackages": {
      "subpackage_common": {
        "id": "subpackage_common",
        "name": "common"
      },
      "subpackage_common/errors": {
        "id": "subpackage_common/errors",
        "name": "errors"
      },
      "subpackage_common/types": {
        "id": "subpackage_common/types",
        "name": "types"
      },
      "subpackage_integrations": {
        "id": "subpackage_integrations",
        "name": "integrations"
      },
      "subpackage_integrations/amazon": {
        "id": "subpackage_integrations/amazon",
        "name": "amazon"
      },
      "subpackage_integrations/amazonBusiness": {
        "id": "subpackage_integrations/amazonBusiness",
        "name": "amazonBusiness"
      },
      "subpackage_integrations/amazonSeller": {
        "id": "subpackage_integrations/amazonSeller",
        "name": "amazonSeller"
      },
      "subpackage_integrations/dispatchMe": {
        "id": "subpackage_integrations/dispatchMe",
        "name": "dispatchMe"
      },
      "subpackage_integrations/facebook": {
        "id": "subpackage_integrations/facebook",
        "name": "facebook"
      },
      "subpackage_integrations/instagram": {
        "id": "subpackage_integrations/instagram",
        "name": "instagram"
      },
      "subpackage_integrations/linkedin": {
        "id": "subpackage_integrations/linkedin",
        "name": "linkedin"
      },
      "subpackage_integrations/ppp": {
        "id": "subpackage_integrations/ppp",
        "name": "ppp"
      },
      "subpackage_integrations/servicebox": {
        "id": "subpackage_integrations/servicebox",
        "name": "servicebox"
      },
      "subpackage_integrations/toast": {
        "id": "subpackage_integrations/toast",
        "name": "toast"
      },
      "subpackage_integrations/uber": {
        "id": "subpackage_integrations/uber",
        "name": "uber"
      },
      "subpackage_integrations/venmo": {
        "id": "subpackage_integrations/venmo",
        "name": "venmo"
      },
      "subpackage_integrations/vin": {
        "id": "subpackage_integrations/vin",
        "name": "vin"
      },
      "subpackage_integrations/whatsapp": {
        "id": "subpackage_integrations/whatsapp",
        "name": "whatsapp"
      },
      "subpackage_integrations/x": {
        "id": "subpackage_integrations/x",
        "name": "x"
      },
      "subpackage_link": {
        "id": "subpackage_link",
        "name": "link"
      },
      "subpackage_linked-accounts": {
        "id": "subpackage_linked-accounts",
        "name": "linked-accounts"
      }
    },
    "auths": {
      "default": {
        "type": "bearerAuth",
        "tokenName": "token"
      }
    },
    "globalHeaders": [
      {
        "key": "X-Account-Token",
        "valueShape": {
          "type": "alias",
          "value": {
            "type": "optional",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        },
        "description": "Account Token"
      }
    ]
  }
]