[
  {
    "id": "7bbd8b60-d410-43c1-bda4-3c0813a4fbb7",
    "endpoints": {
      "subpackage_organization.ListOrganizations": {
        "id": "subpackage_organization.ListOrganizations",
        "namespace": [
          "subpackage_organization"
        ],
        "description": "List the details about all Organizations that you have access to. Requires using a personal access token (PAT) for authentication.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/organizations"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/platform/v1beta1"
          }
        ],
        "queryParameters": [
          {
            "key": "supportPlan",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_organization:ListOrganizationsRequestSupportPlan"
                  }
                }
              }
            },
            "description": "Filters the Organization list by support plan."
          },
          {
            "key": "product",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_organization:ListOrganizationsRequestProduct"
                  }
                }
              }
            },
            "description": "Filters the Organization list by product."
          },
          {
            "key": "offset",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "The number of results to skip before returning values."
          },
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "The maximum number of results to return."
          },
          {
            "key": "sorts",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_organization:ListOrganizationsRequestSortsItem"
                  }
                }
              }
            },
            "description": "A list of field names to sort by, and whether to show results as ascending or descending. Formatted as `<fieldName>:asc` or `<fieldName>:desc`."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:OrganizationsPaginated"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "limit": 10,
                "offset": 0,
                "organizations": [
                  {
                    "createdAt": "2022-11-22T04:37:12Z",
                    "createdBy": {
                      "id": "clm8qv74h000008mlf08scq7k",
                      "apiTokenName": "my-token",
                      "avatarUrl": "https://avatar.url",
                      "fullName": "Jane Doe",
                      "username": "user1@company.com"
                    },
                    "id": "clmaxoarx000008l2c5ayb9pt",
                    "isScimEnabled": false,
                    "name": "My organization",
                    "supportPlan": "TRIAL",
                    "updatedAt": "2022-11-22T04:37:12Z",
                    "updatedBy": {
                      "id": "clm8qv74h000008mlf08scq7k",
                      "apiTokenName": "my-token",
                      "avatarUrl": "https://avatar.url",
                      "fullName": "Jane Doe",
                      "username": "user1@company.com"
                    },
                    "billingEmail": "billing@company.com",
                    "managedDomains": [
                      {
                        "createdAt": "2024-01-15T09:30:00Z",
                        "id": "cln203mz7000008jv0jyz9m3y",
                        "name": "mycompany.com",
                        "organizationId": "cln204xr2000008mu3hhe3zwe",
                        "status": "PENDING",
                        "updatedAt": "2024-01-15T09:30:00Z"
                      }
                    ],
                    "paymentMethod": "CREDIT_CARD",
                    "product": "HOSTED",
                    "status": "ACTIVE",
                    "trialExpiresAt": "2022-11-22T04:37:12Z"
                  }
                ],
                "totalCount": 100
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/platform/v1beta1/organizations \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "supportPlan": "TRIAL",
              "product": "HOSTED"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d supportPlan=TRIAL \\\n     -d product=HOSTED",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {
              "supportPlan": "TRIAL",
              "product": "HOSTED"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d supportPlan=TRIAL \\\n     -d product=HOSTED",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations",
            "responseStatusCode": 403,
            "pathParameters": {},
            "queryParameters": {
              "supportPlan": "TRIAL",
              "product": "HOSTED"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d supportPlan=TRIAL \\\n     -d product=HOSTED",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "supportPlan": "TRIAL",
              "product": "HOSTED"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d supportPlan=TRIAL \\\n     -d product=HOSTED",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_organization.GetOrganization": {
        "id": "subpackage_organization.GetOrganization",
        "namespace": [
          "subpackage_organization"
        ],
        "description": "Retrieve information about a specific Organization.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/platform/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The Organization's ID."
          }
        ],
        "queryParameters": [
          {
            "key": "isLookUpOnly",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "Whether to show only Organization metadata."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Organization"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "createdAt": "2022-11-22T04:37:12Z",
                "createdBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "id": "clmaxoarx000008l2c5ayb9pt",
                "isScimEnabled": false,
                "name": "My organization",
                "supportPlan": "TRIAL",
                "updatedAt": "2022-11-22T04:37:12Z",
                "updatedBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "billingEmail": "billing@company.com",
                "managedDomains": [
                  {
                    "createdAt": "2024-01-15T09:30:00Z",
                    "id": "cln203mz7000008jv0jyz9m3y",
                    "name": "mycompany.com",
                    "organizationId": "cln204xr2000008mu3hhe3zwe",
                    "status": "PENDING",
                    "updatedAt": "2024-01-15T09:30:00Z",
                    "enforcedLogins": [
                      "enforcedLogins"
                    ]
                  }
                ],
                "paymentMethod": "CREDIT_CARD",
                "product": "HOSTED",
                "status": "ACTIVE",
                "trialExpiresAt": "2022-11-22T04:37:12Z"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/platform/v1beta1/organizations/organizationId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "isLookUpOnly": true
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations/:organizationId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d isLookUpOnly=true",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "isLookUpOnly": true
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations/:organizationId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d isLookUpOnly=true",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "isLookUpOnly": true
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations/:organizationId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d isLookUpOnly=true",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "isLookUpOnly": true
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations/:organizationId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d isLookUpOnly=true",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "isLookUpOnly": true
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations/:organizationId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d isLookUpOnly=true",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_organization.UpdateOrganization": {
        "id": "subpackage_organization.UpdateOrganization",
        "namespace": [
          "subpackage_organization"
        ],
        "description": "Update an Organization's details.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/platform/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The Organization's ID."
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "billingEmail",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The Organization's billing email."
                },
                {
                  "key": "isScimEnabled",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  },
                  "description": "Whether SCIM is enabled for the Organization."
                },
                {
                  "key": "name",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The name of the Organization."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Organization"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "billingEmail": "billing@company.com",
                "isScimEnabled": false,
                "name": "My Organization"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "createdAt": "2022-11-22T04:37:12Z",
                "createdBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "id": "clmaxoarx000008l2c5ayb9pt",
                "isScimEnabled": false,
                "name": "My organization",
                "supportPlan": "TRIAL",
                "updatedAt": "2022-11-22T04:37:12Z",
                "updatedBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "billingEmail": "billing@company.com",
                "managedDomains": [
                  {
                    "createdAt": "2024-01-15T09:30:00Z",
                    "id": "cln203mz7000008jv0jyz9m3y",
                    "name": "mycompany.com",
                    "organizationId": "cln204xr2000008mu3hhe3zwe",
                    "status": "PENDING",
                    "updatedAt": "2024-01-15T09:30:00Z",
                    "enforcedLogins": [
                      "enforcedLogins"
                    ]
                  }
                ],
                "paymentMethod": "CREDIT_CARD",
                "product": "HOSTED",
                "status": "ACTIVE",
                "trialExpiresAt": "2022-11-22T04:37:12Z"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/organizationId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"billingEmail\": \"billing@company.com\",\n  \"isScimEnabled\": false,\n  \"name\": \"My Organization\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "billingEmail": "string",
                "isScimEnabled": true,
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"billingEmail\": \"string\",\n  \"isScimEnabled\": true,\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "billingEmail": "string",
                "isScimEnabled": true,
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"billingEmail\": \"string\",\n  \"isScimEnabled\": true,\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "billingEmail": "string",
                "isScimEnabled": true,
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"billingEmail\": \"string\",\n  \"isScimEnabled\": true,\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "billingEmail": "string",
                "isScimEnabled": true,
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"billingEmail\": \"string\",\n  \"isScimEnabled\": true,\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "billingEmail": "string",
                "isScimEnabled": true,
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"billingEmail\": \"string\",\n  \"isScimEnabled\": true,\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_options.GetClusterOptions": {
        "id": "subpackage_options.GetClusterOptions",
        "namespace": [
          "subpackage_options"
        ],
        "description": "Get all possible options for configuring a cluster.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/cluster-options"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/platform/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization to get cluster options for."
          }
        ],
        "queryParameters": [
          {
            "key": "provider",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_options:GetClusterOptionsRequestProvider"
                  }
                }
              }
            },
            "description": "The cluster's cloud provider."
          },
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_options:GetClusterOptionsRequestType"
              }
            },
            "description": "The cluster type."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:ClusterOptions"
                  }
                }
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/cluster-options",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId"
            },
            "queryParameters": {
              "type": "DEDICATED"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": [
                {
                  "databaseInstances": [
                    {
                      "cpu": 4,
                      "memory": "16Gi",
                      "name": "e2-standard-4"
                    }
                  ],
                  "defaultDatabaseInstance": {
                    "cpu": 4,
                    "memory": "16Gi",
                    "name": "e2-standard-4"
                  },
                  "defaultNodeInstance": {
                    "cpu": 4,
                    "memory": "16Gi",
                    "name": "e2-standard-4"
                  },
                  "defaultRegion": {
                    "name": "us-east-1",
                    "bannedInstances": [
                      "bannedInstances"
                    ],
                    "limited": true
                  },
                  "defaultVpcSubnetRange": "172.20.0.0/19",
                  "nodeCountDefault": 20,
                  "nodeCountMax": 100,
                  "nodeCountMin": 2,
                  "nodeInstances": [
                    {
                      "cpu": 4,
                      "memory": "16Gi",
                      "name": "e2-standard-4"
                    }
                  ],
                  "provider": "AWS",
                  "regions": [
                    {
                      "name": "us-east-1",
                      "limited": true
                    }
                  ],
                  "defaultPodSubnetRange": "172.21.0.0/19",
                  "defaultServicePeeringRange": "172.23.0.0/20",
                  "defaultServiceSubnetRange": "172.22.0.0/22"
                }
              ]
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations/organizationId/cluster-options \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d type=DEDICATED",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/cluster-options",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "provider": "AWS",
              "type": "DEDICATED"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/cluster-options \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d provider=AWS \\\n     -d type=DEDICATED",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/cluster-options",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "provider": "AWS",
              "type": "DEDICATED"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/cluster-options \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d provider=AWS \\\n     -d type=DEDICATED",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/cluster-options",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "provider": "AWS",
              "type": "DEDICATED"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/cluster-options \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d provider=AWS \\\n     -d type=DEDICATED",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/cluster-options",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "provider": "AWS",
              "type": "DEDICATED"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/cluster-options \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d provider=AWS \\\n     -d type=DEDICATED",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/cluster-options",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "provider": "AWS",
              "type": "DEDICATED"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/cluster-options \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d provider=AWS \\\n     -d type=DEDICATED",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_options.GetDeploymentOptions": {
        "id": "subpackage_options.GetDeploymentOptions",
        "namespace": [
          "subpackage_options"
        ],
        "description": "Get the options available for configuring a Deployment.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/deployment-options"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/platform/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization to retrieve Deployment options for."
          }
        ],
        "queryParameters": [
          {
            "key": "deploymentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The ID of a Deployment to retrieve options for."
          },
          {
            "key": "deploymentType",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_options:GetDeploymentOptionsRequestDeploymentType"
                  }
                }
              }
            },
            "description": "The runtime type of the deployment."
          },
          {
            "key": "executor",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_options:GetDeploymentOptionsRequestExecutor"
                  }
                }
              }
            },
            "description": "The executor of the deployment."
          },
          {
            "key": "cloudProvider",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_options:GetDeploymentOptionsRequestCloudProvider"
                  }
                }
              }
            },
            "description": "The cloud provider of the cluster for the deployment."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:DeploymentOptions"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/deployment-options",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "executors": [
                  "executors"
                ],
                "resourceQuotas": {
                  "defaultPodSize": {
                    "cpu": {
                      "ceiling": "10",
                      "default": "5",
                      "floor": "1"
                    },
                    "memory": {
                      "ceiling": "10",
                      "default": "5",
                      "floor": "1"
                    }
                  },
                  "resourceQuota": {
                    "cpu": {
                      "ceiling": "10",
                      "default": "5",
                      "floor": "1"
                    },
                    "memory": {
                      "ceiling": "10",
                      "default": "5",
                      "floor": "1"
                    }
                  }
                },
                "runtimeReleases": [
                  {
                    "airflowDatabaseMigration": false,
                    "airflowVersion": "2.7.1",
                    "channel": "stable",
                    "releaseDate": "2022-11-22T04:37:12Z",
                    "stellarDatabaseMigration": false,
                    "version": "9.1.0"
                  }
                ],
                "schedulerMachines": [
                  {
                    "name": "SMALL",
                    "spec": {
                      "cpu": "1",
                      "memory": "2Gi",
                      "concurrency": 10,
                      "ephemeralStorage": "10Gi"
                    }
                  }
                ],
                "workerMachines": [
                  {
                    "concurrency": {
                      "ceiling": 10,
                      "default": 5,
                      "floor": 1
                    },
                    "name": "A5",
                    "spec": {
                      "cpu": "1",
                      "memory": "2Gi",
                      "concurrency": 10,
                      "ephemeralStorage": "10Gi"
                    }
                  }
                ],
                "workerQueues": {
                  "maxWorkers": {
                    "ceiling": 10,
                    "default": 5,
                    "floor": 1
                  },
                  "minWorkers": {
                    "ceiling": 10,
                    "default": 5,
                    "floor": 1
                  },
                  "workerConcurrency": {
                    "ceiling": 10,
                    "default": 5,
                    "floor": 1
                  }
                },
                "workloadIdentityOptions": [
                  {
                    "label": "workload-label",
                    "role": "workload-role"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/platform/v1beta1/organizations/organizationId/deployment-options \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployment-options",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "deploymentId": "string",
              "deploymentType": "HYBRID"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployment-options \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d deploymentId=string \\\n     -d deploymentType=HYBRID",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployment-options",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "deploymentId": "string",
              "deploymentType": "HYBRID"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployment-options \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d deploymentId=string \\\n     -d deploymentType=HYBRID",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployment-options",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "deploymentId": "string",
              "deploymentType": "HYBRID"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployment-options \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d deploymentId=string \\\n     -d deploymentType=HYBRID",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployment-options",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "deploymentId": "string",
              "deploymentType": "HYBRID"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployment-options \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d deploymentId=string \\\n     -d deploymentType=HYBRID",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_cluster.ListClusters": {
        "id": "subpackage_cluster.ListClusters",
        "namespace": [
          "subpackage_cluster"
        ],
        "description": "List clusters in an Organization.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/clusters"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/platform/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The Organization's unique ID."
          }
        ],
        "queryParameters": [
          {
            "key": "names",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "A list of names for Clusters to filter by. The API returns details only for the specified Clusters."
          },
          {
            "key": "provider",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_cluster:ListClustersRequestProvider"
                  }
                }
              }
            },
            "description": "The cloud provider to list clusters for. Clusters from other providers will be filtered out of the results."
          },
          {
            "key": "offset",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "The number of results to skip before returning values."
          },
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "The maximum number of results to return."
          },
          {
            "key": "sorts",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_cluster:ListClustersRequestSortsItem"
                  }
                }
              }
            },
            "description": "A list of field names to sort by, and whether to show results as ascending or descending. Formatted as `<fieldName>:asc` or `<fieldName>:desc`."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ClustersPaginated"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/clusters",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "clusters": [
                  {
                    "cloudProvider": "AWS",
                    "createdAt": "2022-11-22T04:37:12Z",
                    "dbInstanceType": "db.t3.medium",
                    "id": "clm7k8tgw000008jz97i37y81",
                    "name": "my cluster",
                    "organizationId": "clm88r8hi000008jwhzxu5crg",
                    "region": "us-east-1",
                    "status": "CREATING",
                    "type": "DEDICATED",
                    "updatedAt": "2022-11-22T04:37:12Z",
                    "vpcSubnetRange": "172.20.0.0/22",
                    "isLimited": false,
                    "metadata": {
                      "oidcIssuerUrl": "https://westus2.oic.prod-aks.azure.com/b84efac8-cfae-467a-b223-23b9aea1486d/3075f79e-abc2-4602-a691-28117197e83d/"
                    },
                    "nodePools": [
                      {
                        "cloudProvider": "AWS",
                        "clusterId": "clm891jb6000308jrc3vjdtde",
                        "createdAt": "2022-11-22T04:37:12Z",
                        "id": "clm890zhe000208jr39dd0ubs",
                        "isDefault": true,
                        "maxNodeCount": 1,
                        "name": "default",
                        "nodeInstanceType": "t3.medium",
                        "updatedAt": "2022-11-22T04:37:12Z"
                      }
                    ],
                    "podSubnetRange": "172.21.0.0/19",
                    "providerAccount": "provider-account",
                    "servicePeeringRange": "172.23.0.0/20",
                    "serviceSubnetRange": "172.22.0.0/22",
                    "tags": [
                      {
                        "key": "key1",
                        "value": "value1"
                      }
                    ],
                    "tenantId": "your-tenant-id",
                    "workspaceIds": [
                      "workspaceIds"
                    ]
                  }
                ],
                "limit": 10,
                "offset": 0,
                "totalCount": 100
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/platform/v1beta1/organizations/organizationId/clusters \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/clusters",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "names": "string",
              "provider": "AWS"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/clusters \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d names=string \\\n     -d provider=AWS",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/clusters",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "names": "string",
              "provider": "AWS"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/clusters \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d names=string \\\n     -d provider=AWS",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/clusters",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "names": "string",
              "provider": "AWS"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/clusters \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d names=string \\\n     -d provider=AWS",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/clusters",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "names": "string",
              "provider": "AWS"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/clusters \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d names=string \\\n     -d provider=AWS",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_cluster.CreateCluster": {
        "id": "subpackage_cluster.CreateCluster",
        "namespace": [
          "subpackage_cluster"
        ],
        "description": "Create a cluster in the Organization. An Astro cluster is a Kubernetes cluster that hosts the infrastructure required to run Deployments.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/clusters"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/platform/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization to create the cluster in."
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:CreateClusterRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Cluster"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/clusters",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "cloudProvider": "AWS",
                "dbInstanceType": "Small General Purpose",
                "name": "My cluster",
                "nodePools": [
                  {
                    "isDefault": true,
                    "maxNodeCount": 10,
                    "name": "my-nodepool",
                    "nodeInstanceType": "t3.medium"
                  }
                ],
                "providerAccount": "provider-account",
                "region": "us-east-1",
                "type": "DEDICATED",
                "vpcSubnetRange": "172.20.0.0/22"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "cloudProvider": "AWS",
                "createdAt": "2022-11-22T04:37:12Z",
                "dbInstanceType": "db.t3.medium",
                "id": "clm7k8tgw000008jz97i37y81",
                "name": "my cluster",
                "organizationId": "clm88r8hi000008jwhzxu5crg",
                "region": "us-east-1",
                "status": "CREATING",
                "type": "DEDICATED",
                "updatedAt": "2022-11-22T04:37:12Z",
                "vpcSubnetRange": "172.20.0.0/22",
                "isLimited": false,
                "metadata": {
                  "externalIPs": [
                    "externalIPs"
                  ],
                  "oidcIssuerUrl": "https://westus2.oic.prod-aks.azure.com/b84efac8-cfae-467a-b223-23b9aea1486d/3075f79e-abc2-4602-a691-28117197e83d/"
                },
                "nodePools": [
                  {
                    "cloudProvider": "AWS",
                    "clusterId": "clm891jb6000308jrc3vjdtde",
                    "createdAt": "2022-11-22T04:37:12Z",
                    "id": "clm890zhe000208jr39dd0ubs",
                    "isDefault": true,
                    "maxNodeCount": 1,
                    "name": "default",
                    "nodeInstanceType": "t3.medium",
                    "updatedAt": "2022-11-22T04:37:12Z",
                    "supportedAstroMachines": [
                      "supportedAstroMachines"
                    ]
                  }
                ],
                "podSubnetRange": "172.21.0.0/19",
                "providerAccount": "provider-account",
                "servicePeeringRange": "172.23.0.0/20",
                "serviceSubnetRange": "172.22.0.0/22",
                "tags": [
                  {
                    "key": "key1",
                    "value": "value1"
                  }
                ],
                "tenantId": "your-tenant-id",
                "workspaceIds": [
                  "workspaceIds"
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/organizationId/clusters \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"cloudProvider\": \"AWS\",\n  \"dbInstanceType\": \"Small General Purpose\",\n  \"name\": \"My cluster\",\n  \"nodePools\": [\n    {\n      \"isDefault\": true,\n      \"maxNodeCount\": 10,\n      \"name\": \"my-nodepool\",\n      \"nodeInstanceType\": \"t3.medium\"\n    }\n  ],\n  \"providerAccount\": \"provider-account\",\n  \"region\": \"us-east-1\",\n  \"type\": \"DEDICATED\",\n  \"vpcSubnetRange\": \"172.20.0.0/22\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/clusters",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "cloudProvider": "AWS",
                "name": "string",
                "region": "string",
                "type": "DEDICATED",
                "vpcSubnetRange": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/clusters \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"cloudProvider\": \"AWS\",\n  \"name\": \"string\",\n  \"region\": \"string\",\n  \"type\": \"DEDICATED\",\n  \"vpcSubnetRange\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/clusters",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "cloudProvider": "AWS",
                "name": "string",
                "region": "string",
                "type": "DEDICATED",
                "vpcSubnetRange": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/clusters \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"cloudProvider\": \"AWS\",\n  \"name\": \"string\",\n  \"region\": \"string\",\n  \"type\": \"DEDICATED\",\n  \"vpcSubnetRange\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/clusters",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "cloudProvider": "AWS",
                "name": "string",
                "region": "string",
                "type": "DEDICATED",
                "vpcSubnetRange": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/clusters \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"cloudProvider\": \"AWS\",\n  \"name\": \"string\",\n  \"region\": \"string\",\n  \"type\": \"DEDICATED\",\n  \"vpcSubnetRange\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/clusters",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "cloudProvider": "AWS",
                "name": "string",
                "region": "string",
                "type": "DEDICATED",
                "vpcSubnetRange": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/clusters \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"cloudProvider\": \"AWS\",\n  \"name\": \"string\",\n  \"region\": \"string\",\n  \"type\": \"DEDICATED\",\n  \"vpcSubnetRange\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/clusters",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "cloudProvider": "AWS",
                "name": "string",
                "region": "string",
                "type": "DEDICATED",
                "vpcSubnetRange": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/clusters \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"cloudProvider\": \"AWS\",\n  \"name\": \"string\",\n  \"region\": \"string\",\n  \"type\": \"DEDICATED\",\n  \"vpcSubnetRange\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_cluster.GetCluster": {
        "id": "subpackage_cluster.GetCluster",
        "namespace": [
          "subpackage_cluster"
        ],
        "description": "Retrieve details about a cluster.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/clusters/"
          },
          {
            "type": "pathParameter",
            "value": "clusterId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/platform/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization to which the cluster belongs."
          },
          {
            "key": "clusterId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The cluster's ID."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Cluster"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/clusters/clusterId",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId",
              "clusterId": "clusterId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "cloudProvider": "AWS",
                "createdAt": "2022-11-22T04:37:12Z",
                "dbInstanceType": "db.t3.medium",
                "id": "clm7k8tgw000008jz97i37y81",
                "name": "my cluster",
                "organizationId": "clm88r8hi000008jwhzxu5crg",
                "region": "us-east-1",
                "status": "CREATING",
                "type": "DEDICATED",
                "updatedAt": "2022-11-22T04:37:12Z",
                "vpcSubnetRange": "172.20.0.0/22",
                "isLimited": false,
                "metadata": {
                  "externalIPs": [
                    "externalIPs"
                  ],
                  "oidcIssuerUrl": "https://westus2.oic.prod-aks.azure.com/b84efac8-cfae-467a-b223-23b9aea1486d/3075f79e-abc2-4602-a691-28117197e83d/"
                },
                "nodePools": [
                  {
                    "cloudProvider": "AWS",
                    "clusterId": "clm891jb6000308jrc3vjdtde",
                    "createdAt": "2022-11-22T04:37:12Z",
                    "id": "clm890zhe000208jr39dd0ubs",
                    "isDefault": true,
                    "maxNodeCount": 1,
                    "name": "default",
                    "nodeInstanceType": "t3.medium",
                    "updatedAt": "2022-11-22T04:37:12Z",
                    "supportedAstroMachines": [
                      "supportedAstroMachines"
                    ]
                  }
                ],
                "podSubnetRange": "172.21.0.0/19",
                "providerAccount": "provider-account",
                "servicePeeringRange": "172.23.0.0/20",
                "serviceSubnetRange": "172.22.0.0/22",
                "tags": [
                  {
                    "key": "key1",
                    "value": "value1"
                  }
                ],
                "tenantId": "your-tenant-id",
                "workspaceIds": [
                  "workspaceIds"
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/platform/v1beta1/organizations/organizationId/clusters/clusterId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/clusters/:clusterId",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId",
              "clusterId": ":clusterId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/clusters/:clusterId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/clusters/:clusterId",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId",
              "clusterId": ":clusterId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/clusters/:clusterId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/clusters/:clusterId",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId",
              "clusterId": ":clusterId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/clusters/:clusterId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/clusters/:clusterId",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId",
              "clusterId": ":clusterId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/clusters/:clusterId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/clusters/:clusterId",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId",
              "clusterId": ":clusterId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/clusters/:clusterId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_cluster.UpdateCluster": {
        "id": "subpackage_cluster.UpdateCluster",
        "namespace": [
          "subpackage_cluster"
        ],
        "description": "Update a cluster in the Organization.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/clusters/"
          },
          {
            "type": "pathParameter",
            "value": "clusterId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/platform/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization to which the cluster belongs."
          },
          {
            "key": "clusterId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The cluster's ID"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:UpdateClusterRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Cluster"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/:organizationId/clusters/:clusterId",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": ":organizationId",
              "clusterId": ":clusterId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "clusterType": "DEDICATED",
                "k8sTags": [
                  {}
                ],
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "cloudProvider": "AWS",
                "createdAt": "2023-01-01T00:00:00Z",
                "dbInstanceType": "string",
                "id": "string",
                "name": "string",
                "organizationId": "string",
                "region": "string",
                "status": "CREATING",
                "type": "DEDICATED",
                "updatedAt": "2023-01-01T00:00:00Z",
                "vpcSubnetRange": "string",
                "isLimited": true,
                "metadata": {
                  "externalIPs": [
                    "string"
                  ],
                  "oidcIssuerUrl": "string"
                },
                "nodePools": [
                  {
                    "cloudProvider": "AWS",
                    "clusterId": "string",
                    "createdAt": "2023-01-01T00:00:00Z",
                    "id": "string",
                    "isDefault": true,
                    "maxNodeCount": 0,
                    "name": "string",
                    "nodeInstanceType": "string",
                    "updatedAt": "2023-01-01T00:00:00Z",
                    "supportedAstroMachines": [
                      "string"
                    ]
                  }
                ],
                "podSubnetRange": "string",
                "providerAccount": "string",
                "servicePeeringRange": "string",
                "serviceSubnetRange": "string",
                "tags": [
                  {
                    "key": "string",
                    "value": "string"
                  }
                ],
                "tenantId": "string",
                "workspaceIds": [
                  "string"
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/clusters/:clusterId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"clusterType\": \"DEDICATED\",\n  \"k8sTags\": [\n    {}\n  ],\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/clusters/:clusterId",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId",
              "clusterId": ":clusterId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "clusterType": "DEDICATED",
                "k8sTags": [
                  {}
                ],
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/clusters/:clusterId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"clusterType\": \"DEDICATED\",\n  \"k8sTags\": [\n    {}\n  ],\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/clusters/:clusterId",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId",
              "clusterId": ":clusterId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "clusterType": "DEDICATED",
                "k8sTags": [
                  {}
                ],
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/clusters/:clusterId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"clusterType\": \"DEDICATED\",\n  \"k8sTags\": [\n    {}\n  ],\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/clusters/:clusterId",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId",
              "clusterId": ":clusterId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "clusterType": "DEDICATED",
                "k8sTags": [
                  {}
                ],
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/clusters/:clusterId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"clusterType\": \"DEDICATED\",\n  \"k8sTags\": [\n    {}\n  ],\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/clusters/:clusterId",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId",
              "clusterId": ":clusterId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "clusterType": "DEDICATED",
                "k8sTags": [
                  {}
                ],
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/clusters/:clusterId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"clusterType\": \"DEDICATED\",\n  \"k8sTags\": [\n    {}\n  ],\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/clusters/:clusterId",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId",
              "clusterId": ":clusterId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "clusterType": "DEDICATED",
                "k8sTags": [
                  {}
                ],
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/clusters/:clusterId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"clusterType\": \"DEDICATED\",\n  \"k8sTags\": [\n    {}\n  ],\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_cluster.DeleteCluster": {
        "id": "subpackage_cluster.DeleteCluster",
        "namespace": [
          "subpackage_cluster"
        ],
        "description": "Delete a cluster.",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/clusters/"
          },
          {
            "type": "pathParameter",
            "value": "clusterId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/platform/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization to which the cluster belongs."
          },
          {
            "key": "clusterId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The cluster's ID."
          }
        ],
        "requests": [],
        "responses": [],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/clusters/clusterId",
            "responseStatusCode": 204,
            "pathParameters": {
              "organizationId": "organizationId",
              "clusterId": "clusterId"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/platform/v1beta1/organizations/organizationId/clusters/clusterId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/clusters/:clusterId",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId",
              "clusterId": ":clusterId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/clusters/:clusterId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/clusters/:clusterId",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId",
              "clusterId": ":clusterId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/clusters/:clusterId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/clusters/:clusterId",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId",
              "clusterId": ":clusterId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/clusters/:clusterId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/clusters/:clusterId",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId",
              "clusterId": ":clusterId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/clusters/:clusterId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/clusters/:clusterId",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId",
              "clusterId": ":clusterId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/clusters/:clusterId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_deployment.ListDeployments": {
        "id": "subpackage_deployment.ListDeployments",
        "namespace": [
          "subpackage_deployment"
        ],
        "description": "List Deployments in an Organization.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/deployments"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/platform/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization to list Deployments for."
          }
        ],
        "queryParameters": [
          {
            "key": "deploymentIds",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "A list of IDs for Deployments to show. The API returns details only for the specified Deployments."
          },
          {
            "key": "names",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "A list of names for Deployments to filter by. The API returns details only for the specified Deployments."
          },
          {
            "key": "workspaceIds",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "A list of IDs for Workspaces to filter on. The API returns details for all Deployments belonging only to the specified Workspaces."
          },
          {
            "key": "offset",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "The number of results to skip before returning values."
          },
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "The maximum number of results to return."
          },
          {
            "key": "sorts",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_deployment:ListDeploymentsRequestSortsItem"
                  }
                }
              }
            },
            "description": "A list of field names to sort by, and whether to show results as ascending or descending. Formatted as `<fieldName>:asc` or `<fieldName>:desc`."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:DeploymentsPaginated"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/deployments",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "deployments": [
                  {
                    "airflowVersion": "2.7.2, if airflow version is not found, it will return NA",
                    "astroRuntimeVersion": "9.1.0",
                    "createdAt": "2022-11-22T04:37:12Z",
                    "createdBy": {
                      "id": "clm8qv74h000008mlf08scq7k",
                      "apiTokenName": "my-token",
                      "avatarUrl": "https://avatar.url",
                      "fullName": "Jane Doe",
                      "username": "user1@company.com"
                    },
                    "id": "clmh57jtm000008lb58fe2wmv",
                    "imageRepository": "https://my-image-repository",
                    "imageTag": "my-image-tag",
                    "isCicdEnforced": true,
                    "isDagDeployEnabled": true,
                    "name": "My deployment",
                    "namespace": "weightless-diameter-8927",
                    "organizationId": "clmh59gt0000308lbgswe5fvh",
                    "runtimeVersion": "9.1.0",
                    "schedulerCpu": "1",
                    "schedulerMemory": "1Gi",
                    "schedulerReplicas": 1,
                    "status": "CREATING",
                    "updatedAt": "2022-11-22T04:37:12Z",
                    "updatedBy": {
                      "id": "clm8qv74h000008mlf08scq7k",
                      "apiTokenName": "my-token",
                      "avatarUrl": "https://avatar.url",
                      "fullName": "Jane Doe",
                      "username": "user1@company.com"
                    },
                    "webServerAirflowApiUrl": "myorganization.astronomer-dev.run/d8fe2wmv/api/v1",
                    "webServerCpu": "0.5",
                    "webServerIngressHostname": "clmh597sg000208lb2kjhcn8q.astronomer.run/d8fe2wmv",
                    "webServerMemory": "0.5Gi",
                    "webServerUrl": "myorganization.astronomer-dev.run/d8fe2wmv?orgId=org_edxLzpFcLrgEfpD5",
                    "workspaceId": "clmh58o7d000108lb74ktc9o64",
                    "cloudProvider": "AWS",
                    "clusterId": "clmh597sg000208lb2kjhcn8q",
                    "clusterName": "my cluster",
                    "contactEmails": [
                      "contactEmails"
                    ],
                    "dagTarballVersion": "2024-01-12T18:32:20.5898930Z",
                    "defaultTaskPodCpu": "0.5",
                    "defaultTaskPodMemory": "1Gi",
                    "description": "My deployment description",
                    "desiredDagTarballVersion": "2024-01-12T18:32:20.5898930Z",
                    "environmentVariables": [
                      {
                        "isSecret": true,
                        "key": "my-var",
                        "updatedAt": "2022-11-22T04:37:12Z",
                        "value": "my-var-value"
                      }
                    ],
                    "executor": "CELERY",
                    "externalIPs": [
                      "externalIPs"
                    ],
                    "imageVersion": "deploy-2023-09-14T19-04",
                    "isDevelopmentMode": true,
                    "isHighAvailability": true,
                    "oidcIssuerUrl": "https://westus2.oic.prod-aks.azure.com/b84efac8-cfee-467a-b223-23b9aea1486d/3075f79e-abc2-4602-a691-28117197e83d/",
                    "region": "us-east-1",
                    "resourceQuotaCpu": "160",
                    "resourceQuotaMemory": "320Gi",
                    "schedulerAu": 5,
                    "schedulerSize": "SMALL",
                    "statusReason": "Successfully Deployed",
                    "taskPodNodePoolId": "clmh5mash000008mia6lnbs0f",
                    "type": "DEDICATED",
                    "webServerReplicas": 1,
                    "workerQueues": [
                      {
                        "id": "clmh9vsuf000908midngba9mw",
                        "isDefault": true,
                        "maxWorkerCount": 10,
                        "minWorkerCount": 1,
                        "name": "default",
                        "podCpu": "1",
                        "podMemory": "2Gi",
                        "workerConcurrency": 20,
                        "astroMachine": "A5",
                        "nodePoolId": "clmh9yjcn000a08mi8dsgbno9"
                      }
                    ],
                    "workloadIdentity": "workloadIdentity",
                    "workspaceName": "my-workspace"
                  }
                ],
                "limit": 10,
                "offset": 0,
                "totalCount": 100
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/platform/v1beta1/organizations/organizationId/deployments \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "deploymentIds": "string",
              "names": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d deploymentIds=string \\\n     -d names=string",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "deploymentIds": "string",
              "names": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d deploymentIds=string \\\n     -d names=string",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "deploymentIds": "string",
              "names": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d deploymentIds=string \\\n     -d names=string",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "deploymentIds": "string",
              "names": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d deploymentIds=string \\\n     -d names=string",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_deployment.CreateDeployment": {
        "id": "subpackage_deployment.CreateDeployment",
        "namespace": [
          "subpackage_deployment"
        ],
        "description": "Create a Deployment in the Organization. An Astro Deployment is an Airflow environment that is powered by all core Airflow components.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/deployments"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/platform/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization in which to create the Deployment."
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:CreateDeploymentRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Deployment"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/deployments",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "astroRuntimeVersion": "9.1.0",
                "clusterId": "clmh9g6zj000008mg77if5wa2",
                "defaultTaskPodCpu": "0.5",
                "defaultTaskPodMemory": "1Gi",
                "description": "My deployment description",
                "environmentVariables": [
                  {
                    "isSecret": false,
                    "key": "my-var",
                    "value": "my-var-value"
                  }
                ],
                "executor": "CELERY",
                "isCicdEnforced": true,
                "isDagDeployEnabled": true,
                "isHighAvailability": true,
                "name": "My deployment",
                "resourceQuotaCpu": "160",
                "resourceQuotaMemory": "320Gi",
                "schedulerSize": "SMALL",
                "type": "DEDICATED",
                "workerQueues": [
                  {
                    "astroMachine": "A5",
                    "id": "clmha1mzc000b08mi96n182au",
                    "isDefault": true,
                    "maxWorkerCount": 1,
                    "minWorkerCount": 1,
                    "name": "My worker queue",
                    "workerConcurrency": 1
                  }
                ],
                "workloadIdentity": "arn:aws:iam::123456789:role/AirflowS3Logs-clmk2qqia000008mhff3ndjr0",
                "workspaceId": "clmh8ol3x000008jo656y4285"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "airflowVersion": "2.7.2, if airflow version is not found, it will return NA",
                "astroRuntimeVersion": "9.1.0",
                "createdAt": "2022-11-22T04:37:12Z",
                "createdBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "id": "clmh57jtm000008lb58fe2wmv",
                "imageRepository": "https://my-image-repository",
                "imageTag": "my-image-tag",
                "isCicdEnforced": true,
                "isDagDeployEnabled": true,
                "name": "My deployment",
                "namespace": "weightless-diameter-8927",
                "organizationId": "clmh59gt0000308lbgswe5fvh",
                "runtimeVersion": "9.1.0",
                "schedulerCpu": "1",
                "schedulerMemory": "1Gi",
                "schedulerReplicas": 1,
                "status": "CREATING",
                "updatedAt": "2022-11-22T04:37:12Z",
                "updatedBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "webServerAirflowApiUrl": "myorganization.astronomer-dev.run/d8fe2wmv/api/v1",
                "webServerCpu": "0.5",
                "webServerIngressHostname": "clmh597sg000208lb2kjhcn8q.astronomer.run/d8fe2wmv",
                "webServerMemory": "0.5Gi",
                "webServerUrl": "myorganization.astronomer-dev.run/d8fe2wmv?orgId=org_edxLzpFcLrgEfpD5",
                "workspaceId": "clmh58o7d000108lb74ktc9o64",
                "cloudProvider": "AWS",
                "clusterId": "clmh597sg000208lb2kjhcn8q",
                "clusterName": "my cluster",
                "contactEmails": [
                  "contactEmails"
                ],
                "dagTarballVersion": "2024-01-12T18:32:20.5898930Z",
                "defaultTaskPodCpu": "0.5",
                "defaultTaskPodMemory": "1Gi",
                "description": "My deployment description",
                "desiredDagTarballVersion": "2024-01-12T18:32:20.5898930Z",
                "environmentVariables": [
                  {
                    "isSecret": true,
                    "key": "my-var",
                    "updatedAt": "2022-11-22T04:37:12Z",
                    "value": "my-var-value"
                  }
                ],
                "executor": "CELERY",
                "externalIPs": [
                  "externalIPs"
                ],
                "imageVersion": "deploy-2023-09-14T19-04",
                "isDevelopmentMode": true,
                "isHighAvailability": true,
                "oidcIssuerUrl": "https://westus2.oic.prod-aks.azure.com/b84efac8-cfee-467a-b223-23b9aea1486d/3075f79e-abc2-4602-a691-28117197e83d/",
                "region": "us-east-1",
                "resourceQuotaCpu": "160",
                "resourceQuotaMemory": "320Gi",
                "scalingSpec": {
                  "hibernationSpec": {
                    "schedules": [
                      {
                        "hibernateAtCron": "hibernateAtCron",
                        "isEnabled": true,
                        "wakeAtCron": "wakeAtCron"
                      }
                    ]
                  }
                },
                "scalingStatus": {
                  "hibernationStatus": {
                    "isHibernating": true,
                    "nextEventAt": "nextEventAt",
                    "nextEventType": "HIBERNATE",
                    "reason": "reason"
                  }
                },
                "schedulerAu": 5,
                "schedulerSize": "SMALL",
                "statusReason": "Successfully Deployed",
                "taskPodNodePoolId": "clmh5mash000008mia6lnbs0f",
                "type": "DEDICATED",
                "webServerReplicas": 1,
                "workerQueues": [
                  {
                    "id": "clmh9vsuf000908midngba9mw",
                    "isDefault": true,
                    "maxWorkerCount": 10,
                    "minWorkerCount": 1,
                    "name": "default",
                    "podCpu": "1",
                    "podMemory": "2Gi",
                    "workerConcurrency": 20,
                    "astroMachine": "A5",
                    "nodePoolId": "clmh9yjcn000a08mi8dsgbno9"
                  }
                ],
                "workloadIdentity": "workloadIdentity",
                "workspaceName": "my-workspace"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/organizationId/deployments \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"astroRuntimeVersion\": \"9.1.0\",\n  \"clusterId\": \"clmh9g6zj000008mg77if5wa2\",\n  \"defaultTaskPodCpu\": \"0.5\",\n  \"defaultTaskPodMemory\": \"1Gi\",\n  \"description\": \"My deployment description\",\n  \"environmentVariables\": [\n    {\n      \"isSecret\": false,\n      \"key\": \"my-var\",\n      \"value\": \"my-var-value\"\n    }\n  ],\n  \"executor\": \"CELERY\",\n  \"isCicdEnforced\": true,\n  \"isDagDeployEnabled\": true,\n  \"isHighAvailability\": true,\n  \"name\": \"My deployment\",\n  \"resourceQuotaCpu\": \"160\",\n  \"resourceQuotaMemory\": \"320Gi\",\n  \"schedulerSize\": \"SMALL\",\n  \"type\": \"DEDICATED\",\n  \"workerQueues\": [\n    {\n      \"astroMachine\": \"A5\",\n      \"id\": \"clmha1mzc000b08mi96n182au\",\n      \"isDefault\": true,\n      \"maxWorkerCount\": 1,\n      \"minWorkerCount\": 1,\n      \"name\": \"My worker queue\",\n      \"workerConcurrency\": 1\n    }\n  ],\n  \"workloadIdentity\": \"arn:aws:iam::123456789:role/AirflowS3Logs-clmk2qqia000008mhff3ndjr0\",\n  \"workspaceId\": \"clmh8ol3x000008jo656y4285\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "astroRuntimeVersion": "string",
                "clusterId": "string",
                "defaultTaskPodCpu": "string",
                "defaultTaskPodMemory": "string",
                "executor": "CELERY",
                "isCicdEnforced": true,
                "isDagDeployEnabled": true,
                "isHighAvailability": true,
                "name": "string",
                "resourceQuotaCpu": "string",
                "resourceQuotaMemory": "string",
                "schedulerSize": "SMALL",
                "type": "DEDICATED",
                "workspaceId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"astroRuntimeVersion\": \"string\",\n  \"clusterId\": \"string\",\n  \"defaultTaskPodCpu\": \"string\",\n  \"defaultTaskPodMemory\": \"string\",\n  \"executor\": \"CELERY\",\n  \"isCicdEnforced\": true,\n  \"isDagDeployEnabled\": true,\n  \"isHighAvailability\": true,\n  \"name\": \"string\",\n  \"resourceQuotaCpu\": \"string\",\n  \"resourceQuotaMemory\": \"string\",\n  \"schedulerSize\": \"SMALL\",\n  \"type\": \"DEDICATED\",\n  \"workspaceId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "astroRuntimeVersion": "string",
                "clusterId": "string",
                "defaultTaskPodCpu": "string",
                "defaultTaskPodMemory": "string",
                "executor": "CELERY",
                "isCicdEnforced": true,
                "isDagDeployEnabled": true,
                "isHighAvailability": true,
                "name": "string",
                "resourceQuotaCpu": "string",
                "resourceQuotaMemory": "string",
                "schedulerSize": "SMALL",
                "type": "DEDICATED",
                "workspaceId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"astroRuntimeVersion\": \"string\",\n  \"clusterId\": \"string\",\n  \"defaultTaskPodCpu\": \"string\",\n  \"defaultTaskPodMemory\": \"string\",\n  \"executor\": \"CELERY\",\n  \"isCicdEnforced\": true,\n  \"isDagDeployEnabled\": true,\n  \"isHighAvailability\": true,\n  \"name\": \"string\",\n  \"resourceQuotaCpu\": \"string\",\n  \"resourceQuotaMemory\": \"string\",\n  \"schedulerSize\": \"SMALL\",\n  \"type\": \"DEDICATED\",\n  \"workspaceId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "astroRuntimeVersion": "string",
                "clusterId": "string",
                "defaultTaskPodCpu": "string",
                "defaultTaskPodMemory": "string",
                "executor": "CELERY",
                "isCicdEnforced": true,
                "isDagDeployEnabled": true,
                "isHighAvailability": true,
                "name": "string",
                "resourceQuotaCpu": "string",
                "resourceQuotaMemory": "string",
                "schedulerSize": "SMALL",
                "type": "DEDICATED",
                "workspaceId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"astroRuntimeVersion\": \"string\",\n  \"clusterId\": \"string\",\n  \"defaultTaskPodCpu\": \"string\",\n  \"defaultTaskPodMemory\": \"string\",\n  \"executor\": \"CELERY\",\n  \"isCicdEnforced\": true,\n  \"isDagDeployEnabled\": true,\n  \"isHighAvailability\": true,\n  \"name\": \"string\",\n  \"resourceQuotaCpu\": \"string\",\n  \"resourceQuotaMemory\": \"string\",\n  \"schedulerSize\": \"SMALL\",\n  \"type\": \"DEDICATED\",\n  \"workspaceId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "astroRuntimeVersion": "string",
                "clusterId": "string",
                "defaultTaskPodCpu": "string",
                "defaultTaskPodMemory": "string",
                "executor": "CELERY",
                "isCicdEnforced": true,
                "isDagDeployEnabled": true,
                "isHighAvailability": true,
                "name": "string",
                "resourceQuotaCpu": "string",
                "resourceQuotaMemory": "string",
                "schedulerSize": "SMALL",
                "type": "DEDICATED",
                "workspaceId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"astroRuntimeVersion\": \"string\",\n  \"clusterId\": \"string\",\n  \"defaultTaskPodCpu\": \"string\",\n  \"defaultTaskPodMemory\": \"string\",\n  \"executor\": \"CELERY\",\n  \"isCicdEnforced\": true,\n  \"isDagDeployEnabled\": true,\n  \"isHighAvailability\": true,\n  \"name\": \"string\",\n  \"resourceQuotaCpu\": \"string\",\n  \"resourceQuotaMemory\": \"string\",\n  \"schedulerSize\": \"SMALL\",\n  \"type\": \"DEDICATED\",\n  \"workspaceId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_deployment.GetDeployment": {
        "id": "subpackage_deployment.GetDeployment",
        "namespace": [
          "subpackage_deployment"
        ],
        "description": "Retrieve details about a Deployment.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/deployments/"
          },
          {
            "type": "pathParameter",
            "value": "deploymentId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/platform/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization to which the Deployment belongs."
          },
          {
            "key": "deploymentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The Deployment's ID."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Deployment"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/deployments/deploymentId",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId",
              "deploymentId": "deploymentId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "airflowVersion": "2.7.2, if airflow version is not found, it will return NA",
                "astroRuntimeVersion": "9.1.0",
                "createdAt": "2022-11-22T04:37:12Z",
                "createdBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "id": "clmh57jtm000008lb58fe2wmv",
                "imageRepository": "https://my-image-repository",
                "imageTag": "my-image-tag",
                "isCicdEnforced": true,
                "isDagDeployEnabled": true,
                "name": "My deployment",
                "namespace": "weightless-diameter-8927",
                "organizationId": "clmh59gt0000308lbgswe5fvh",
                "runtimeVersion": "9.1.0",
                "schedulerCpu": "1",
                "schedulerMemory": "1Gi",
                "schedulerReplicas": 1,
                "status": "CREATING",
                "updatedAt": "2022-11-22T04:37:12Z",
                "updatedBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "webServerAirflowApiUrl": "myorganization.astronomer-dev.run/d8fe2wmv/api/v1",
                "webServerCpu": "0.5",
                "webServerIngressHostname": "clmh597sg000208lb2kjhcn8q.astronomer.run/d8fe2wmv",
                "webServerMemory": "0.5Gi",
                "webServerUrl": "myorganization.astronomer-dev.run/d8fe2wmv?orgId=org_edxLzpFcLrgEfpD5",
                "workspaceId": "clmh58o7d000108lb74ktc9o64",
                "cloudProvider": "AWS",
                "clusterId": "clmh597sg000208lb2kjhcn8q",
                "clusterName": "my cluster",
                "contactEmails": [
                  "contactEmails"
                ],
                "dagTarballVersion": "2024-01-12T18:32:20.5898930Z",
                "defaultTaskPodCpu": "0.5",
                "defaultTaskPodMemory": "1Gi",
                "description": "My deployment description",
                "desiredDagTarballVersion": "2024-01-12T18:32:20.5898930Z",
                "environmentVariables": [
                  {
                    "isSecret": true,
                    "key": "my-var",
                    "updatedAt": "2022-11-22T04:37:12Z",
                    "value": "my-var-value"
                  }
                ],
                "executor": "CELERY",
                "externalIPs": [
                  "externalIPs"
                ],
                "imageVersion": "deploy-2023-09-14T19-04",
                "isDevelopmentMode": true,
                "isHighAvailability": true,
                "oidcIssuerUrl": "https://westus2.oic.prod-aks.azure.com/b84efac8-cfee-467a-b223-23b9aea1486d/3075f79e-abc2-4602-a691-28117197e83d/",
                "region": "us-east-1",
                "resourceQuotaCpu": "160",
                "resourceQuotaMemory": "320Gi",
                "scalingSpec": {
                  "hibernationSpec": {
                    "schedules": [
                      {
                        "hibernateAtCron": "hibernateAtCron",
                        "isEnabled": true,
                        "wakeAtCron": "wakeAtCron"
                      }
                    ]
                  }
                },
                "scalingStatus": {
                  "hibernationStatus": {
                    "isHibernating": true,
                    "nextEventAt": "nextEventAt",
                    "nextEventType": "HIBERNATE",
                    "reason": "reason"
                  }
                },
                "schedulerAu": 5,
                "schedulerSize": "SMALL",
                "statusReason": "Successfully Deployed",
                "taskPodNodePoolId": "clmh5mash000008mia6lnbs0f",
                "type": "DEDICATED",
                "webServerReplicas": 1,
                "workerQueues": [
                  {
                    "id": "clmh9vsuf000908midngba9mw",
                    "isDefault": true,
                    "maxWorkerCount": 10,
                    "minWorkerCount": 1,
                    "name": "default",
                    "podCpu": "1",
                    "podMemory": "2Gi",
                    "workerConcurrency": 20,
                    "astroMachine": "A5",
                    "nodePoolId": "clmh9yjcn000a08mi8dsgbno9"
                  }
                ],
                "workloadIdentity": "workloadIdentity",
                "workspaceName": "my-workspace"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/platform/v1beta1/organizations/organizationId/deployments/deploymentId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_deployment.UpdateDeployment": {
        "id": "subpackage_deployment.UpdateDeployment",
        "namespace": [
          "subpackage_deployment"
        ],
        "description": "Update a Deployment in the Organization.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/deployments/"
          },
          {
            "type": "pathParameter",
            "value": "deploymentId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/platform/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization to which the Deployment belongs."
          },
          {
            "key": "deploymentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The Deployment's ID."
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:UpdateDeploymentRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Deployment"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/deployments/deploymentId",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId",
              "deploymentId": "deploymentId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "defaultTaskPodCpu": "0.5",
                "defaultTaskPodMemory": "1Gi",
                "description": "My deployment description",
                "environmentVariables": [
                  {
                    "isSecret": false,
                    "key": "my-var",
                    "value": "my-var-value"
                  }
                ],
                "executor": "CELERY",
                "isCicdEnforced": true,
                "isDagDeployEnabled": true,
                "isHighAvailability": true,
                "name": "My deployment",
                "resourceQuotaCpu": "160",
                "resourceQuotaMemory": "320Gi",
                "schedulerSize": "SMALL",
                "type": "DEDICATED",
                "workerQueues": [
                  {
                    "astroMachine": "A5",
                    "id": "clmha1mzc000b08mi96n182au",
                    "isDefault": true,
                    "maxWorkerCount": 1,
                    "minWorkerCount": 1,
                    "name": "My worker queue",
                    "workerConcurrency": 1
                  }
                ],
                "workloadIdentity": "arn:aws:iam::123456789:role/AirflowS3Logs-clmk2qqia000008mhff3ndjr0",
                "workspaceId": "clmh7vdf4000008lhhlnk9t6o"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "airflowVersion": "2.7.2, if airflow version is not found, it will return NA",
                "astroRuntimeVersion": "9.1.0",
                "createdAt": "2022-11-22T04:37:12Z",
                "createdBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "id": "clmh57jtm000008lb58fe2wmv",
                "imageRepository": "https://my-image-repository",
                "imageTag": "my-image-tag",
                "isCicdEnforced": true,
                "isDagDeployEnabled": true,
                "name": "My deployment",
                "namespace": "weightless-diameter-8927",
                "organizationId": "clmh59gt0000308lbgswe5fvh",
                "runtimeVersion": "9.1.0",
                "schedulerCpu": "1",
                "schedulerMemory": "1Gi",
                "schedulerReplicas": 1,
                "status": "CREATING",
                "updatedAt": "2022-11-22T04:37:12Z",
                "updatedBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "webServerAirflowApiUrl": "myorganization.astronomer-dev.run/d8fe2wmv/api/v1",
                "webServerCpu": "0.5",
                "webServerIngressHostname": "clmh597sg000208lb2kjhcn8q.astronomer.run/d8fe2wmv",
                "webServerMemory": "0.5Gi",
                "webServerUrl": "myorganization.astronomer-dev.run/d8fe2wmv?orgId=org_edxLzpFcLrgEfpD5",
                "workspaceId": "clmh58o7d000108lb74ktc9o64",
                "cloudProvider": "AWS",
                "clusterId": "clmh597sg000208lb2kjhcn8q",
                "clusterName": "my cluster",
                "contactEmails": [
                  "contactEmails"
                ],
                "dagTarballVersion": "2024-01-12T18:32:20.5898930Z",
                "defaultTaskPodCpu": "0.5",
                "defaultTaskPodMemory": "1Gi",
                "description": "My deployment description",
                "desiredDagTarballVersion": "2024-01-12T18:32:20.5898930Z",
                "environmentVariables": [
                  {
                    "isSecret": true,
                    "key": "my-var",
                    "updatedAt": "2022-11-22T04:37:12Z",
                    "value": "my-var-value"
                  }
                ],
                "executor": "CELERY",
                "externalIPs": [
                  "externalIPs"
                ],
                "imageVersion": "deploy-2023-09-14T19-04",
                "isDevelopmentMode": true,
                "isHighAvailability": true,
                "oidcIssuerUrl": "https://westus2.oic.prod-aks.azure.com/b84efac8-cfee-467a-b223-23b9aea1486d/3075f79e-abc2-4602-a691-28117197e83d/",
                "region": "us-east-1",
                "resourceQuotaCpu": "160",
                "resourceQuotaMemory": "320Gi",
                "scalingSpec": {
                  "hibernationSpec": {
                    "schedules": [
                      {
                        "hibernateAtCron": "hibernateAtCron",
                        "isEnabled": true,
                        "wakeAtCron": "wakeAtCron"
                      }
                    ]
                  }
                },
                "scalingStatus": {
                  "hibernationStatus": {
                    "isHibernating": true,
                    "nextEventAt": "nextEventAt",
                    "nextEventType": "HIBERNATE",
                    "reason": "reason"
                  }
                },
                "schedulerAu": 5,
                "schedulerSize": "SMALL",
                "statusReason": "Successfully Deployed",
                "taskPodNodePoolId": "clmh5mash000008mia6lnbs0f",
                "type": "DEDICATED",
                "webServerReplicas": 1,
                "workerQueues": [
                  {
                    "id": "clmh9vsuf000908midngba9mw",
                    "isDefault": true,
                    "maxWorkerCount": 10,
                    "minWorkerCount": 1,
                    "name": "default",
                    "podCpu": "1",
                    "podMemory": "2Gi",
                    "workerConcurrency": 20,
                    "astroMachine": "A5",
                    "nodePoolId": "clmh9yjcn000a08mi8dsgbno9"
                  }
                ],
                "workloadIdentity": "workloadIdentity",
                "workspaceName": "my-workspace"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/organizationId/deployments/deploymentId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"defaultTaskPodCpu\": \"0.5\",\n  \"defaultTaskPodMemory\": \"1Gi\",\n  \"description\": \"My deployment description\",\n  \"environmentVariables\": [\n    {\n      \"isSecret\": false,\n      \"key\": \"my-var\",\n      \"value\": \"my-var-value\"\n    }\n  ],\n  \"executor\": \"CELERY\",\n  \"isCicdEnforced\": true,\n  \"isDagDeployEnabled\": true,\n  \"isHighAvailability\": true,\n  \"name\": \"My deployment\",\n  \"resourceQuotaCpu\": \"160\",\n  \"resourceQuotaMemory\": \"320Gi\",\n  \"schedulerSize\": \"SMALL\",\n  \"type\": \"DEDICATED\",\n  \"workerQueues\": [\n    {\n      \"astroMachine\": \"A5\",\n      \"id\": \"clmha1mzc000b08mi96n182au\",\n      \"isDefault\": true,\n      \"maxWorkerCount\": 1,\n      \"minWorkerCount\": 1,\n      \"name\": \"My worker queue\",\n      \"workerConcurrency\": 1\n    }\n  ],\n  \"workloadIdentity\": \"arn:aws:iam::123456789:role/AirflowS3Logs-clmk2qqia000008mhff3ndjr0\",\n  \"workspaceId\": \"clmh7vdf4000008lhhlnk9t6o\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "defaultTaskPodCpu": "string",
                "defaultTaskPodMemory": "string",
                "environmentVariables": [
                  {
                    "isSecret": true,
                    "key": "string"
                  }
                ],
                "executor": "CELERY",
                "isCicdEnforced": true,
                "isDagDeployEnabled": true,
                "isHighAvailability": true,
                "name": "string",
                "resourceQuotaCpu": "string",
                "resourceQuotaMemory": "string",
                "schedulerSize": "SMALL",
                "type": "DEDICATED",
                "workspaceId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"defaultTaskPodCpu\": \"string\",\n  \"defaultTaskPodMemory\": \"string\",\n  \"environmentVariables\": [\n    {\n      \"isSecret\": true,\n      \"key\": \"string\"\n    }\n  ],\n  \"executor\": \"CELERY\",\n  \"isCicdEnforced\": true,\n  \"isDagDeployEnabled\": true,\n  \"isHighAvailability\": true,\n  \"name\": \"string\",\n  \"resourceQuotaCpu\": \"string\",\n  \"resourceQuotaMemory\": \"string\",\n  \"schedulerSize\": \"SMALL\",\n  \"type\": \"DEDICATED\",\n  \"workspaceId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "defaultTaskPodCpu": "string",
                "defaultTaskPodMemory": "string",
                "environmentVariables": [
                  {
                    "isSecret": true,
                    "key": "string"
                  }
                ],
                "executor": "CELERY",
                "isCicdEnforced": true,
                "isDagDeployEnabled": true,
                "isHighAvailability": true,
                "name": "string",
                "resourceQuotaCpu": "string",
                "resourceQuotaMemory": "string",
                "schedulerSize": "SMALL",
                "type": "DEDICATED",
                "workspaceId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"defaultTaskPodCpu\": \"string\",\n  \"defaultTaskPodMemory\": \"string\",\n  \"environmentVariables\": [\n    {\n      \"isSecret\": true,\n      \"key\": \"string\"\n    }\n  ],\n  \"executor\": \"CELERY\",\n  \"isCicdEnforced\": true,\n  \"isDagDeployEnabled\": true,\n  \"isHighAvailability\": true,\n  \"name\": \"string\",\n  \"resourceQuotaCpu\": \"string\",\n  \"resourceQuotaMemory\": \"string\",\n  \"schedulerSize\": \"SMALL\",\n  \"type\": \"DEDICATED\",\n  \"workspaceId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "defaultTaskPodCpu": "string",
                "defaultTaskPodMemory": "string",
                "environmentVariables": [
                  {
                    "isSecret": true,
                    "key": "string"
                  }
                ],
                "executor": "CELERY",
                "isCicdEnforced": true,
                "isDagDeployEnabled": true,
                "isHighAvailability": true,
                "name": "string",
                "resourceQuotaCpu": "string",
                "resourceQuotaMemory": "string",
                "schedulerSize": "SMALL",
                "type": "DEDICATED",
                "workspaceId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"defaultTaskPodCpu\": \"string\",\n  \"defaultTaskPodMemory\": \"string\",\n  \"environmentVariables\": [\n    {\n      \"isSecret\": true,\n      \"key\": \"string\"\n    }\n  ],\n  \"executor\": \"CELERY\",\n  \"isCicdEnforced\": true,\n  \"isDagDeployEnabled\": true,\n  \"isHighAvailability\": true,\n  \"name\": \"string\",\n  \"resourceQuotaCpu\": \"string\",\n  \"resourceQuotaMemory\": \"string\",\n  \"schedulerSize\": \"SMALL\",\n  \"type\": \"DEDICATED\",\n  \"workspaceId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "defaultTaskPodCpu": "string",
                "defaultTaskPodMemory": "string",
                "environmentVariables": [
                  {
                    "isSecret": true,
                    "key": "string"
                  }
                ],
                "executor": "CELERY",
                "isCicdEnforced": true,
                "isDagDeployEnabled": true,
                "isHighAvailability": true,
                "name": "string",
                "resourceQuotaCpu": "string",
                "resourceQuotaMemory": "string",
                "schedulerSize": "SMALL",
                "type": "DEDICATED",
                "workspaceId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"defaultTaskPodCpu\": \"string\",\n  \"defaultTaskPodMemory\": \"string\",\n  \"environmentVariables\": [\n    {\n      \"isSecret\": true,\n      \"key\": \"string\"\n    }\n  ],\n  \"executor\": \"CELERY\",\n  \"isCicdEnforced\": true,\n  \"isDagDeployEnabled\": true,\n  \"isHighAvailability\": true,\n  \"name\": \"string\",\n  \"resourceQuotaCpu\": \"string\",\n  \"resourceQuotaMemory\": \"string\",\n  \"schedulerSize\": \"SMALL\",\n  \"type\": \"DEDICATED\",\n  \"workspaceId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "defaultTaskPodCpu": "string",
                "defaultTaskPodMemory": "string",
                "environmentVariables": [
                  {
                    "isSecret": true,
                    "key": "string"
                  }
                ],
                "executor": "CELERY",
                "isCicdEnforced": true,
                "isDagDeployEnabled": true,
                "isHighAvailability": true,
                "name": "string",
                "resourceQuotaCpu": "string",
                "resourceQuotaMemory": "string",
                "schedulerSize": "SMALL",
                "type": "DEDICATED",
                "workspaceId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"defaultTaskPodCpu\": \"string\",\n  \"defaultTaskPodMemory\": \"string\",\n  \"environmentVariables\": [\n    {\n      \"isSecret\": true,\n      \"key\": \"string\"\n    }\n  ],\n  \"executor\": \"CELERY\",\n  \"isCicdEnforced\": true,\n  \"isDagDeployEnabled\": true,\n  \"isHighAvailability\": true,\n  \"name\": \"string\",\n  \"resourceQuotaCpu\": \"string\",\n  \"resourceQuotaMemory\": \"string\",\n  \"schedulerSize\": \"SMALL\",\n  \"type\": \"DEDICATED\",\n  \"workspaceId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_deployment.DeleteDeployment": {
        "id": "subpackage_deployment.DeleteDeployment",
        "namespace": [
          "subpackage_deployment"
        ],
        "description": "Delete a Deployment from an Organization.",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/deployments/"
          },
          {
            "type": "pathParameter",
            "value": "deploymentId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/platform/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization to which the Deployment belongs."
          },
          {
            "key": "deploymentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The Deployment's ID."
          }
        ],
        "requests": [],
        "responses": [],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/deployments/deploymentId",
            "responseStatusCode": 204,
            "pathParameters": {
              "organizationId": "organizationId",
              "deploymentId": "deploymentId"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/platform/v1beta1/organizations/organizationId/deployments/deploymentId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_deployment.UpdateDeploymentHibernationOverride": {
        "id": "subpackage_deployment.UpdateDeploymentHibernationOverride",
        "namespace": [
          "subpackage_deployment"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/deployments/"
          },
          {
            "type": "pathParameter",
            "value": "deploymentId"
          },
          {
            "type": "literal",
            "value": "/hibernation-override"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/platform/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The Organization ID"
          },
          {
            "key": "deploymentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The Deployment ID"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "isHibernating",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  },
                  "description": "The type of override to perform. Set this value to 'true' to have the Deployment hibernate regardless of its hibernation schedule. Set the value to 'false' to have the Deployment wake up regardless of its hibernation schedule. Use 'OverrideUntil' to define the length of the override."
                },
                {
                  "key": "overrideUntil",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "datetime"
                          }
                        }
                      }
                    }
                  },
                  "description": "The end of the override time in UTC, formatted as 'YYYY-MM-DDTHH:MM:SSZ'. If this value isn't specified, the override persists until you end it through the Astro UI or another API call."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:DeploymentHibernationOverride"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/deployments/deploymentId/hibernation-override",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId",
              "deploymentId": "deploymentId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "isHibernating": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "isActive": true,
                "isHibernating": true,
                "overrideUntil": "2024-01-15T09:30:00Z"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/organizationId/deployments/deploymentId/hibernation-override \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"isHibernating\": true\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_deployment.DeleteDeploymentHibernationOverride": {
        "id": "subpackage_deployment.DeleteDeploymentHibernationOverride",
        "namespace": [
          "subpackage_deployment"
        ],
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/deployments/"
          },
          {
            "type": "pathParameter",
            "value": "deploymentId"
          },
          {
            "type": "literal",
            "value": "/hibernation-override"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/platform/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The Organization ID"
          },
          {
            "key": "deploymentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The Deployment ID"
          }
        ],
        "requests": [],
        "responses": [],
        "examples": [
          {
            "path": "/organizations/organizationId/deployments/deploymentId/hibernation-override",
            "responseStatusCode": 204,
            "pathParameters": {
              "organizationId": "organizationId",
              "deploymentId": "deploymentId"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/platform/v1beta1/organizations/organizationId/deployments/deploymentId/hibernation-override \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_deploy.ListDeploys": {
        "id": "subpackage_deploy.ListDeploys",
        "namespace": [
          "subpackage_deploy"
        ],
        "description": "List deploys for a deployment",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/deployments/"
          },
          {
            "type": "pathParameter",
            "value": "deploymentId"
          },
          {
            "type": "literal",
            "value": "/deploys"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/platform/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization to which the Deployment belongs."
          },
          {
            "key": "deploymentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The Deployment's ID."
          }
        ],
        "queryParameters": [
          {
            "key": "offset",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "The number of results to skip before returning values."
          },
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "The maximum number of results to return."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:DeploysPaginated"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/deployments/deploymentId/deploys",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId",
              "deploymentId": "deploymentId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "deploys": [
                  {
                    "createdAt": "2022-11-22T04:37:12Z",
                    "deploymentId": "clmh57jtm000008lb58fe2wmv",
                    "id": "clvetru2w000201mowqwua63n",
                    "imageRepository": "https://my-image-repository",
                    "imageTag": "my-image-tag",
                    "isDagDeployEnabled": true,
                    "status": "INITIALIZED",
                    "type": "IMAGE_AND_DAG",
                    "airflowVersion": "2.7.2, if airflow version is not found, it will return NA",
                    "astroRuntimeVersion": "9.1.0",
                    "createdBySubject": {
                      "id": "clm8qv74h000008mlf08scq7k",
                      "apiTokenName": "my-token",
                      "avatarUrl": "https://avatar.url",
                      "fullName": "Jane Doe",
                      "username": "user1@company.com"
                    },
                    "dagTarballVersion": "2024-01-12T18:32:20.5898930Z",
                    "dagsUploadUrl": "https://astroproddagdeploy.windows.core.net/clmh59gt0000308lbgswe5fvh/clmh57jtm000008lb58fe2wmv",
                    "description": "My deploy description",
                    "rollbackFromId": "clvcz1lrq000101oitxtp276e",
                    "updatedAt": "2022-11-22T04:37:12Z",
                    "updatedBySubject": {
                      "id": "clm8qv74h000008mlf08scq7k",
                      "apiTokenName": "my-token",
                      "avatarUrl": "https://avatar.url",
                      "fullName": "Jane Doe",
                      "username": "user1@company.com"
                    }
                  }
                ],
                "limit": 1,
                "offset": 1,
                "totalCount": 1
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/platform/v1beta1/organizations/organizationId/deployments/deploymentId/deploys \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId/deploys",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId"
            },
            "queryParameters": {
              "offset": 0,
              "limit": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId/deploys \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d offset=0 \\\n     -d limit=0",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId/deploys",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId"
            },
            "queryParameters": {
              "offset": 0,
              "limit": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId/deploys \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d offset=0 \\\n     -d limit=0",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId/deploys",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId"
            },
            "queryParameters": {
              "offset": 0,
              "limit": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId/deploys \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d offset=0 \\\n     -d limit=0",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId/deploys",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId"
            },
            "queryParameters": {
              "offset": 0,
              "limit": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId/deploys \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d offset=0 \\\n     -d limit=0",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId/deploys",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId"
            },
            "queryParameters": {
              "offset": 0,
              "limit": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId/deploys \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d offset=0 \\\n     -d limit=0",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_deploy.CreateDeploy": {
        "id": "subpackage_deploy.CreateDeploy",
        "namespace": [
          "subpackage_deploy"
        ],
        "description": "Create a new Deploy. A Deploy represents an intent to deploy new DAG code to an Astro Deployment.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/deployments/"
          },
          {
            "type": "pathParameter",
            "value": "deploymentId"
          },
          {
            "type": "literal",
            "value": "/deploys"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/platform/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization in which to create the Deployment."
          },
          {
            "key": "deploymentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The Deployment's ID."
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "description",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "The deploy's description."
                },
                {
                  "key": "type",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_deploy:CreateDeployRequestType"
                    }
                  },
                  "description": "The type of the deploy."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Deploy"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/deployments/deploymentId/deploys",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId",
              "deploymentId": "deploymentId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "type": "IMAGE_AND_DAG",
                "description": "My deploy description"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "createdAt": "2022-11-22T04:37:12Z",
                "deploymentId": "clmh57jtm000008lb58fe2wmv",
                "id": "clvetru2w000201mowqwua63n",
                "imageRepository": "https://my-image-repository",
                "imageTag": "my-image-tag",
                "isDagDeployEnabled": true,
                "status": "INITIALIZED",
                "type": "IMAGE_AND_DAG",
                "airflowVersion": "2.7.2, if airflow version is not found, it will return NA",
                "astroRuntimeVersion": "9.1.0",
                "createdBySubject": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "dagTarballVersion": "2024-01-12T18:32:20.5898930Z",
                "dagsUploadUrl": "https://astroproddagdeploy.windows.core.net/clmh59gt0000308lbgswe5fvh/clmh57jtm000008lb58fe2wmv",
                "description": "My deploy description",
                "rollbackFromId": "clvcz1lrq000101oitxtp276e",
                "updatedAt": "2022-11-22T04:37:12Z",
                "updatedBySubject": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/organizationId/deployments/deploymentId/deploys \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"type\": \"IMAGE_AND_DAG\",\n  \"description\": \"My deploy description\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId/deploys",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "type": "IMAGE_AND_DAG"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId/deploys \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"type\": \"IMAGE_AND_DAG\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId/deploys",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "type": "IMAGE_AND_DAG"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId/deploys \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"type\": \"IMAGE_AND_DAG\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId/deploys",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "type": "IMAGE_AND_DAG"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId/deploys \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"type\": \"IMAGE_AND_DAG\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId/deploys",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "type": "IMAGE_AND_DAG"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId/deploys \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"type\": \"IMAGE_AND_DAG\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId/deploys",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "type": "IMAGE_AND_DAG"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId/deploys \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"type\": \"IMAGE_AND_DAG\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_deploy.GetDeploy": {
        "id": "subpackage_deploy.GetDeploy",
        "namespace": [
          "subpackage_deploy"
        ],
        "description": "Get a deploy for a deployment",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/deployments/"
          },
          {
            "type": "pathParameter",
            "value": "deploymentId"
          },
          {
            "type": "literal",
            "value": "/deploys/"
          },
          {
            "type": "pathParameter",
            "value": "deployId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/platform/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization in which to create the Deployment."
          },
          {
            "key": "deploymentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The Deployment's ID."
          },
          {
            "key": "deployId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The Deploy's ID."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Deploy"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/deployments/deploymentId/deploys/deployId",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId",
              "deploymentId": "deploymentId",
              "deployId": "deployId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "createdAt": "2022-11-22T04:37:12Z",
                "deploymentId": "clmh57jtm000008lb58fe2wmv",
                "id": "clvetru2w000201mowqwua63n",
                "imageRepository": "https://my-image-repository",
                "imageTag": "my-image-tag",
                "isDagDeployEnabled": true,
                "status": "INITIALIZED",
                "type": "IMAGE_AND_DAG",
                "airflowVersion": "2.7.2, if airflow version is not found, it will return NA",
                "astroRuntimeVersion": "9.1.0",
                "createdBySubject": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "dagTarballVersion": "2024-01-12T18:32:20.5898930Z",
                "dagsUploadUrl": "https://astroproddagdeploy.windows.core.net/clmh59gt0000308lbgswe5fvh/clmh57jtm000008lb58fe2wmv",
                "description": "My deploy description",
                "rollbackFromId": "clvcz1lrq000101oitxtp276e",
                "updatedAt": "2022-11-22T04:37:12Z",
                "updatedBySubject": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/platform/v1beta1/organizations/organizationId/deployments/deploymentId/deploys/deployId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId",
              "deployId": ":deployId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId",
              "deployId": ":deployId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId",
              "deployId": ":deployId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId",
              "deployId": ":deployId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId",
              "deployId": ":deployId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_deploy.UpdateDeploy": {
        "id": "subpackage_deploy.UpdateDeploy",
        "namespace": [
          "subpackage_deploy"
        ],
        "description": "Update an existing Deploy. A Deploy represents an intent to deploy new DAG code to an Astro Deployment.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/deployments/"
          },
          {
            "type": "pathParameter",
            "value": "deploymentId"
          },
          {
            "type": "literal",
            "value": "/deploys/"
          },
          {
            "type": "pathParameter",
            "value": "deployId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/platform/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization in which to create the Deployment."
          },
          {
            "key": "deploymentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The Deployment's ID."
          },
          {
            "key": "deployId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The Deploy's ID."
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "description",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "The deploy's description."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Deploy"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/deployments/deploymentId/deploys/deployId",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId",
              "deploymentId": "deploymentId",
              "deployId": "deployId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "description": "My deploy description"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "createdAt": "2022-11-22T04:37:12Z",
                "deploymentId": "clmh57jtm000008lb58fe2wmv",
                "id": "clvetru2w000201mowqwua63n",
                "imageRepository": "https://my-image-repository",
                "imageTag": "my-image-tag",
                "isDagDeployEnabled": true,
                "status": "INITIALIZED",
                "type": "IMAGE_AND_DAG",
                "airflowVersion": "2.7.2, if airflow version is not found, it will return NA",
                "astroRuntimeVersion": "9.1.0",
                "createdBySubject": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "dagTarballVersion": "2024-01-12T18:32:20.5898930Z",
                "dagsUploadUrl": "https://astroproddagdeploy.windows.core.net/clmh59gt0000308lbgswe5fvh/clmh57jtm000008lb58fe2wmv",
                "description": "My deploy description",
                "rollbackFromId": "clvcz1lrq000101oitxtp276e",
                "updatedAt": "2022-11-22T04:37:12Z",
                "updatedBySubject": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/organizationId/deployments/deploymentId/deploys/deployId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"description\": \"My deploy description\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId",
              "deployId": ":deployId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId",
              "deployId": ":deployId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId",
              "deployId": ":deployId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId",
              "deployId": ":deployId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId",
              "deployId": ":deployId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_deploy.FinalizeDeploy": {
        "id": "subpackage_deploy.FinalizeDeploy",
        "namespace": [
          "subpackage_deploy"
        ],
        "description": "Finalize deploy of a deployment",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/deployments/"
          },
          {
            "type": "pathParameter",
            "value": "deploymentId"
          },
          {
            "type": "literal",
            "value": "/deploys/"
          },
          {
            "type": "pathParameter",
            "value": "deployId"
          },
          {
            "type": "literal",
            "value": "/finalize"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/platform/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization in which to create the Deployment."
          },
          {
            "key": "deploymentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The Deployment's ID."
          },
          {
            "key": "deployId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The Deploy's ID."
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "dagTarballVersion",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "The deploy's DAG tarball version, also known as the Bundle Version in the Astro UI. Required if DAG deploys are enabled on the Deployment, and deploy type is either IMAGE_AND_DAG or DAG_ONLY."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Deploy"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/deployments/deploymentId/deploys/deployId/finalize",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId",
              "deploymentId": "deploymentId",
              "deployId": "deployId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "createdAt": "2022-11-22T04:37:12Z",
                "deploymentId": "clmh57jtm000008lb58fe2wmv",
                "id": "clvetru2w000201mowqwua63n",
                "imageRepository": "https://my-image-repository",
                "imageTag": "my-image-tag",
                "isDagDeployEnabled": true,
                "status": "INITIALIZED",
                "type": "IMAGE_AND_DAG",
                "airflowVersion": "2.7.2, if airflow version is not found, it will return NA",
                "astroRuntimeVersion": "9.1.0",
                "createdBySubject": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "dagTarballVersion": "2024-01-12T18:32:20.5898930Z",
                "dagsUploadUrl": "https://astroproddagdeploy.windows.core.net/clmh59gt0000308lbgswe5fvh/clmh57jtm000008lb58fe2wmv",
                "description": "My deploy description",
                "rollbackFromId": "clvcz1lrq000101oitxtp276e",
                "updatedAt": "2022-11-22T04:37:12Z",
                "updatedBySubject": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/organizationId/deployments/deploymentId/deploys/deployId/finalize \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId/finalize",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId",
              "deployId": ":deployId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId/finalize \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId/finalize",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId",
              "deployId": ":deployId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId/finalize \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId/finalize",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId",
              "deployId": ":deployId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId/finalize \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId/finalize",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId",
              "deployId": ":deployId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId/finalize \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_deploy.DeployRollback": {
        "id": "subpackage_deploy.DeployRollback",
        "namespace": [
          "subpackage_deploy"
        ],
        "description": "Deploy rollback of a deployment",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/deployments/"
          },
          {
            "type": "pathParameter",
            "value": "deploymentId"
          },
          {
            "type": "literal",
            "value": "/deploys/"
          },
          {
            "type": "pathParameter",
            "value": "deployId"
          },
          {
            "type": "literal",
            "value": "/rollback"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/platform/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization in which to create the Deployment."
          },
          {
            "key": "deploymentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The Deployment's ID."
          },
          {
            "key": "deployId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The Deploy's ID."
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "description",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Deploy"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/deployments/deploymentId/deploys/deployId/rollback",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId",
              "deploymentId": "deploymentId",
              "deployId": "deployId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "createdAt": "2022-11-22T04:37:12Z",
                "deploymentId": "clmh57jtm000008lb58fe2wmv",
                "id": "clvetru2w000201mowqwua63n",
                "imageRepository": "https://my-image-repository",
                "imageTag": "my-image-tag",
                "isDagDeployEnabled": true,
                "status": "INITIALIZED",
                "type": "IMAGE_AND_DAG",
                "airflowVersion": "2.7.2, if airflow version is not found, it will return NA",
                "astroRuntimeVersion": "9.1.0",
                "createdBySubject": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "dagTarballVersion": "2024-01-12T18:32:20.5898930Z",
                "dagsUploadUrl": "https://astroproddagdeploy.windows.core.net/clmh59gt0000308lbgswe5fvh/clmh57jtm000008lb58fe2wmv",
                "description": "My deploy description",
                "rollbackFromId": "clvcz1lrq000101oitxtp276e",
                "updatedAt": "2022-11-22T04:37:12Z",
                "updatedBySubject": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/organizationId/deployments/deploymentId/deploys/deployId/rollback \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId/rollback",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId",
              "deployId": ":deployId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId/rollback \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId/rollback",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId",
              "deployId": ":deployId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId/rollback \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId/rollback",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId",
              "deployId": ":deployId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId/rollback \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId/rollback",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId",
              "deployId": ":deployId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId/rollback \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId/rollback",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId",
              "deploymentId": ":deploymentId",
              "deployId": ":deployId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/deployments/:deploymentId/deploys/:deployId/rollback \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_workspace.ListWorkspaces": {
        "id": "subpackage_workspace.ListWorkspaces",
        "namespace": [
          "subpackage_workspace"
        ],
        "description": "List Workspaces in an Organization",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/workspaces"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/platform/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization to list Workspaces for."
          }
        ],
        "queryParameters": [
          {
            "key": "workspaceIds",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "A list of IDs for specific Workspaces to list. The API will list information only for Workspaces which have been specified in this list."
          },
          {
            "key": "names",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "A list of names for specific Workspaces to filter by. The API will list information only for Workspaces which have been specified in this list."
          },
          {
            "key": "offset",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "The number of results to skip before returning values."
          },
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "The maximum number of results to return."
          },
          {
            "key": "sorts",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_workspace:ListWorkspacesRequestSortsItem"
                  }
                }
              }
            },
            "description": "A list of field names to sort by, and whether to show results as ascending or descending. Formatted as `<fieldName>:asc` or `<fieldName>:desc`."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:WorkspacesPaginated"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/workspaces",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "limit": 0,
                "offset": 0,
                "totalCount": 0,
                "workspaces": [
                  {
                    "cicdEnforcedDefault": true,
                    "createdAt": "2023-09-08T12:00:00Z",
                    "id": "clm8t5u4q000008jq4qoc3036",
                    "name": "My Workspace",
                    "organizationId": "clm8t5u4q000008jq4qoc3036",
                    "updatedAt": "2023-09-08T13:30:00Z",
                    "createdBy": {
                      "id": "clm8qv74h000008mlf08scq7k",
                      "apiTokenName": "my-token",
                      "avatarUrl": "https://avatar.url",
                      "fullName": "Jane Doe",
                      "username": "user1@company.com"
                    },
                    "description": "This is a test workspace",
                    "organizationName": "My Organization",
                    "updatedBy": {
                      "id": "clm8qv74h000008mlf08scq7k",
                      "apiTokenName": "my-token",
                      "avatarUrl": "https://avatar.url",
                      "fullName": "Jane Doe",
                      "username": "user1@company.com"
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/platform/v1beta1/organizations/organizationId/workspaces \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/workspaces",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "workspaceIds": "string",
              "names": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/workspaces \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d workspaceIds=string \\\n     -d names=string",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/workspaces",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "workspaceIds": "string",
              "names": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/workspaces \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d workspaceIds=string \\\n     -d names=string",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/workspaces",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "workspaceIds": "string",
              "names": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/workspaces \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d workspaceIds=string \\\n     -d names=string",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/workspaces",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "workspaceIds": "string",
              "names": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/workspaces \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d workspaceIds=string \\\n     -d names=string",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_workspace.CreateWorkspace": {
        "id": "subpackage_workspace.CreateWorkspace",
        "namespace": [
          "subpackage_workspace"
        ],
        "description": "Create a Workspace.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/workspaces"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/platform/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization to which the Workspace will belong."
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "cicdEnforcedDefault",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "description": "Whether new Deployments enforce CI/CD deploys by default."
                },
                {
                  "key": "description",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "The Workspace's description."
                },
                {
                  "key": "name",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The Workspace's name."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Workspace"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/workspaces",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "My Workspace",
                "cicdEnforcedDefault": true,
                "description": "This is a test workspace"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "cicdEnforcedDefault": true,
                "createdAt": "2023-09-08T12:00:00Z",
                "id": "clm8t5u4q000008jq4qoc3036",
                "name": "My Workspace",
                "organizationId": "clm8t5u4q000008jq4qoc3036",
                "updatedAt": "2023-09-08T13:30:00Z",
                "createdBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "description": "This is a test workspace",
                "organizationName": "My Organization",
                "updatedBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/organizationId/workspaces \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"My Workspace\",\n  \"cicdEnforcedDefault\": true,\n  \"description\": \"This is a test workspace\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/workspaces",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/workspaces \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/workspaces",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/workspaces \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/workspaces",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/workspaces \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/workspaces",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/workspaces \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/workspaces",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/workspaces \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_workspace.GetWorkspace": {
        "id": "subpackage_workspace.GetWorkspace",
        "namespace": [
          "subpackage_workspace"
        ],
        "description": "Get information about a Workspace.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/workspaces/"
          },
          {
            "type": "pathParameter",
            "value": "workspaceId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/platform/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization to which the Workspace belongs."
          },
          {
            "key": "workspaceId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The Workspace's ID."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Workspace"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/workspaces/workspaceId",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId",
              "workspaceId": "workspaceId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "cicdEnforcedDefault": true,
                "createdAt": "2023-09-08T12:00:00Z",
                "id": "clm8t5u4q000008jq4qoc3036",
                "name": "My Workspace",
                "organizationId": "clm8t5u4q000008jq4qoc3036",
                "updatedAt": "2023-09-08T13:30:00Z",
                "createdBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "description": "This is a test workspace",
                "organizationName": "My Organization",
                "updatedBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/platform/v1beta1/organizations/organizationId/workspaces/workspaceId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/workspaces/:workspaceId",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId",
              "workspaceId": ":workspaceId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/workspaces/:workspaceId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/workspaces/:workspaceId",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId",
              "workspaceId": ":workspaceId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/workspaces/:workspaceId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/workspaces/:workspaceId",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId",
              "workspaceId": ":workspaceId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/workspaces/:workspaceId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/workspaces/:workspaceId",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId",
              "workspaceId": ":workspaceId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/workspaces/:workspaceId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/workspaces/:workspaceId",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId",
              "workspaceId": ":workspaceId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/workspaces/:workspaceId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_workspace.UpdateWorkspace": {
        "id": "subpackage_workspace.UpdateWorkspace",
        "namespace": [
          "subpackage_workspace"
        ],
        "description": "Update a Workspace.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/workspaces/"
          },
          {
            "type": "pathParameter",
            "value": "workspaceId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/platform/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization to which the Workspace belongs."
          },
          {
            "key": "workspaceId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The Workspace's ID."
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "cicdEnforcedDefault",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  },
                  "description": "Whether new Deployments enforce CI/CD deploys by default."
                },
                {
                  "key": "description",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The Workspace's description."
                },
                {
                  "key": "name",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The Workspace's name."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Workspace"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/workspaces/workspaceId",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId",
              "workspaceId": "workspaceId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "cicdEnforcedDefault": true,
                "description": "This is a test workspace",
                "name": "My Workspace"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "cicdEnforcedDefault": true,
                "createdAt": "2023-09-08T12:00:00Z",
                "id": "clm8t5u4q000008jq4qoc3036",
                "name": "My Workspace",
                "organizationId": "clm8t5u4q000008jq4qoc3036",
                "updatedAt": "2023-09-08T13:30:00Z",
                "createdBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "description": "This is a test workspace",
                "organizationName": "My Organization",
                "updatedBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/organizationId/workspaces/workspaceId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"cicdEnforcedDefault\": true,\n  \"description\": \"This is a test workspace\",\n  \"name\": \"My Workspace\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/workspaces/:workspaceId",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId",
              "workspaceId": ":workspaceId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "cicdEnforcedDefault": true,
                "description": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/workspaces/:workspaceId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"cicdEnforcedDefault\": true,\n  \"description\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/workspaces/:workspaceId",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId",
              "workspaceId": ":workspaceId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "cicdEnforcedDefault": true,
                "description": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/workspaces/:workspaceId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"cicdEnforcedDefault\": true,\n  \"description\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/workspaces/:workspaceId",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId",
              "workspaceId": ":workspaceId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "cicdEnforcedDefault": true,
                "description": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/workspaces/:workspaceId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"cicdEnforcedDefault\": true,\n  \"description\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/workspaces/:workspaceId",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId",
              "workspaceId": ":workspaceId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "cicdEnforcedDefault": true,
                "description": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/workspaces/:workspaceId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"cicdEnforcedDefault\": true,\n  \"description\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/workspaces/:workspaceId",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId",
              "workspaceId": ":workspaceId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "cicdEnforcedDefault": true,
                "description": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/workspaces/:workspaceId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"cicdEnforcedDefault\": true,\n  \"description\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_workspace.DeleteWorkspace": {
        "id": "subpackage_workspace.DeleteWorkspace",
        "namespace": [
          "subpackage_workspace"
        ],
        "description": "Delete a Workspace.",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/workspaces/"
          },
          {
            "type": "pathParameter",
            "value": "workspaceId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/platform/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization to which the Workspace belongs."
          },
          {
            "key": "workspaceId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The Workspace's ID."
          }
        ],
        "requests": [],
        "responses": [],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/workspaces/workspaceId",
            "responseStatusCode": 204,
            "pathParameters": {
              "organizationId": "organizationId",
              "workspaceId": "workspaceId"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/platform/v1beta1/organizations/organizationId/workspaces/workspaceId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/workspaces/:workspaceId",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId",
              "workspaceId": ":workspaceId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/workspaces/:workspaceId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/workspaces/:workspaceId",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId",
              "workspaceId": ":workspaceId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/workspaces/:workspaceId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/workspaces/:workspaceId",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId",
              "workspaceId": ":workspaceId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/workspaces/:workspaceId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/workspaces/:workspaceId",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId",
              "workspaceId": ":workspaceId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/workspaces/:workspaceId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/workspaces/:workspaceId",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId",
              "workspaceId": ":workspaceId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/platform/v1beta1/organizations/:organizationId/workspaces/:workspaceId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      }
    },
    "websockets": {},
    "webhooks": {},
    "types": {
      "type_organization:ListOrganizationsRequestSupportPlan": {
        "name": "ListOrganizationsRequestSupportPlan",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "TRIAL"
            },
            {
              "value": "BASIC"
            },
            {
              "value": "STANDARD"
            },
            {
              "value": "PREMIUM"
            },
            {
              "value": "BUSINESS_CRITICAL"
            }
          ]
        }
      },
      "type_organization:ListOrganizationsRequestProduct": {
        "name": "ListOrganizationsRequestProduct",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "HOSTED"
            },
            {
              "value": "HYBRID"
            }
          ]
        }
      },
      "type_organization:ListOrganizationsRequestSortsItem": {
        "name": "ListOrganizationsRequestSortsItem",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "name:asc"
            },
            {
              "value": "name:desc"
            },
            {
              "value": "createdAt:asc"
            },
            {
              "value": "createdAt:desc"
            },
            {
              "value": "updatedAt:asc"
            },
            {
              "value": "updatedAt:desc"
            }
          ]
        }
      },
      "type_options:GetClusterOptionsRequestProvider": {
        "name": "GetClusterOptionsRequestProvider",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AWS"
            },
            {
              "value": "AZURE"
            },
            {
              "value": "GCP"
            }
          ]
        }
      },
      "type_options:GetClusterOptionsRequestType": {
        "name": "GetClusterOptionsRequestType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "DEDICATED"
            },
            {
              "value": "HYBRID"
            }
          ]
        }
      },
      "type_options:GetDeploymentOptionsRequestDeploymentType": {
        "name": "GetDeploymentOptionsRequestDeploymentType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "HYBRID"
            },
            {
              "value": "DEDICATED"
            },
            {
              "value": "STANDARD"
            }
          ]
        }
      },
      "type_options:GetDeploymentOptionsRequestExecutor": {
        "name": "GetDeploymentOptionsRequestExecutor",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "CELERY"
            },
            {
              "value": "KUBERNETES"
            }
          ]
        }
      },
      "type_options:GetDeploymentOptionsRequestCloudProvider": {
        "name": "GetDeploymentOptionsRequestCloudProvider",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AWS"
            },
            {
              "value": "AZURE"
            },
            {
              "value": "GCP"
            }
          ]
        }
      },
      "type_cluster:ListClustersRequestProvider": {
        "name": "ListClustersRequestProvider",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AWS"
            },
            {
              "value": "AZURE"
            },
            {
              "value": "GCP"
            }
          ]
        }
      },
      "type_cluster:ListClustersRequestSortsItem": {
        "name": "ListClustersRequestSortsItem",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "name:asc"
            },
            {
              "value": "name:desc"
            },
            {
              "value": "createdAt:asc"
            },
            {
              "value": "createdAt:desc"
            },
            {
              "value": "updatedAt:asc"
            },
            {
              "value": "updatedAt:desc"
            }
          ]
        }
      },
      "type_deployment:ListDeploymentsRequestSortsItem": {
        "name": "ListDeploymentsRequestSortsItem",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "name:asc"
            },
            {
              "value": "name:desc"
            },
            {
              "value": "createdAt:asc"
            },
            {
              "value": "createdAt:desc"
            },
            {
              "value": "updatedAt:asc"
            },
            {
              "value": "updatedAt:desc"
            }
          ]
        }
      },
      "type_deploy:CreateDeployRequestType": {
        "name": "CreateDeployRequestType",
        "description": "The type of the deploy.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "IMAGE_AND_DAG"
            },
            {
              "value": "IMAGE_ONLY"
            },
            {
              "value": "DAG_ONLY"
            }
          ]
        }
      },
      "type_workspace:ListWorkspacesRequestSortsItem": {
        "name": "ListWorkspacesRequestSortsItem",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "name:asc"
            },
            {
              "value": "name:desc"
            },
            {
              "value": "createdAt:asc"
            },
            {
              "value": "createdAt:desc"
            },
            {
              "value": "updatedAt:asc"
            },
            {
              "value": "updatedAt:desc"
            }
          ]
        }
      },
      "type_:BasicSubjectProfileSubjectType": {
        "name": "BasicSubjectProfileSubjectType",
        "description": "The subject type.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "USER"
            },
            {
              "value": "SERVICEKEY"
            }
          ]
        }
      },
      "type_:BasicSubjectProfile": {
        "name": "BasicSubjectProfile",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "apiTokenName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The API token's name. Returned only when `SubjectType` is `SERVICEKEY`."
            },
            {
              "key": "avatarUrl",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The URL for the user's profile image. Returned only when `SubjectType` is `USER`."
            },
            {
              "key": "fullName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The subject's full name. Returned only when `SubjectType` is `USER`."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The subject's ID."
            },
            {
              "key": "subjectType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BasicSubjectProfileSubjectType"
                    }
                  }
                }
              },
              "description": "The subject type."
            },
            {
              "key": "username",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The subject's username. Returned only when `SubjectType` is `USER`."
            }
          ]
        }
      },
      "type_:ClusterCloudProvider": {
        "name": "ClusterCloudProvider",
        "description": "The name of the cluster's cloud provider.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AWS"
            },
            {
              "value": "AZURE"
            },
            {
              "value": "GCP"
            }
          ]
        }
      },
      "type_:ClusterStatus": {
        "name": "ClusterStatus",
        "description": "The status of the cluster.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "CREATING"
            },
            {
              "value": "CREATED"
            },
            {
              "value": "CREATE_FAILED"
            },
            {
              "value": "UPDATE_FAILED"
            },
            {
              "value": "UPDATING"
            }
          ]
        }
      },
      "type_:ClusterType": {
        "name": "ClusterType",
        "description": "The type of the cluster.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "DEDICATED"
            },
            {
              "value": "HYBRID"
            }
          ]
        }
      },
      "type_:Cluster": {
        "name": "Cluster",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cloudProvider",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ClusterCloudProvider"
                }
              },
              "description": "The name of the cluster's cloud provider."
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "The time when the cluster was created in UTC. formatted as `YYYY-MM-DDTHH:MM:SSZ`."
            },
            {
              "key": "dbInstanceType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The type of database instance that is used for the cluster."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The cluster's ID."
            },
            {
              "key": "isLimited",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether the cluster is limited."
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ClusterMetadata"
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The cluster's name."
            },
            {
              "key": "nodePools",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:NodePool"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The list of node pools that are created in the cluster."
            },
            {
              "key": "organizationId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The ID of the Organization that the cluster belongs to."
            },
            {
              "key": "podSubnetRange",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The subnet range for Pods. For GCP clusters only."
            },
            {
              "key": "providerAccount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The provider account ID. For GCP clusters only."
            },
            {
              "key": "region",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The region in which the cluster is created."
            },
            {
              "key": "servicePeeringRange",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The service peering range. For GCP clusters only."
            },
            {
              "key": "serviceSubnetRange",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The service subnet range. For GCP clusters only."
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ClusterStatus"
                }
              },
              "description": "The status of the cluster."
            },
            {
              "key": "tags",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ClusterK8STag"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The Kubernetes tags in the cluster. For AWS Hybrid clusters only."
            },
            {
              "key": "tenantId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The tenant ID. For Azure clusters only."
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ClusterType"
                }
              },
              "description": "The type of the cluster."
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "The time when the cluster was last updated in UTC. formatted as `YYYY-MM-DDTHH:MM:SSZ`."
            },
            {
              "key": "vpcSubnetRange",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The VPC subnet range."
            },
            {
              "key": "workspaceIds",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "The list of Workspaces that are authorized to the cluster."
            }
          ]
        }
      },
      "type_:ClusterK8STag": {
        "name": "ClusterK8STag",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The tag's key."
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The tag's value."
            }
          ]
        }
      },
      "type_:ClusterMetadata": {
        "name": "ClusterMetadata",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "externalIPs",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "External IPs of the cluster."
            },
            {
              "key": "oidcIssuerUrl",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "OIDC issuer URL for the cluster"
            }
          ]
        }
      },
      "type_:ClusterOptionsProvider": {
        "name": "ClusterOptionsProvider",
        "description": "The cloud provider.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AWS"
            },
            {
              "value": "AZURE"
            },
            {
              "value": "GCP"
            }
          ]
        }
      },
      "type_:ClusterOptions": {
        "name": "ClusterOptions",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "databaseInstances",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ProviderInstanceType"
                    }
                  }
                }
              },
              "description": "The available database instances."
            },
            {
              "key": "defaultDatabaseInstance",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ProviderInstanceType"
                }
              }
            },
            {
              "key": "defaultNodeInstance",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ProviderInstanceType"
                }
              }
            },
            {
              "key": "defaultPodSubnetRange",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The default pod subnet range."
            },
            {
              "key": "defaultRegion",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ProviderRegion"
                }
              }
            },
            {
              "key": "defaultServicePeeringRange",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The default service peering range."
            },
            {
              "key": "defaultServiceSubnetRange",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The default service subnet range."
            },
            {
              "key": "defaultVpcSubnetRange",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The default VPC subnet range."
            },
            {
              "key": "nodeCountDefault",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The default number of nodes."
            },
            {
              "key": "nodeCountMax",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The maximum number of nodes."
            },
            {
              "key": "nodeCountMin",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The minimum number of nodes."
            },
            {
              "key": "nodeInstances",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ProviderInstanceType"
                    }
                  }
                }
              },
              "description": "The available node instances."
            },
            {
              "key": "provider",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ClusterOptionsProvider"
                }
              },
              "description": "The cloud provider."
            },
            {
              "key": "regions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ProviderRegion"
                    }
                  }
                }
              },
              "description": "The available regions."
            }
          ]
        }
      },
      "type_:ClustersPaginated": {
        "name": "ClustersPaginated",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "clusters",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Cluster"
                    }
                  }
                }
              },
              "description": "The list of clusters in the current page."
            },
            {
              "key": "limit",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The maximum number of clusters in one page."
            },
            {
              "key": "offset",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The offset of the current page of clusters."
            },
            {
              "key": "totalCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The total number of clusters."
            }
          ]
        }
      },
      "type_:CreateAwsClusterRequestCloudProvider": {
        "name": "CreateAwsClusterRequestCloudProvider",
        "description": "The cluster's cloud provider.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AWS"
            },
            {
              "value": "AZURE"
            },
            {
              "value": "GCP"
            }
          ]
        }
      },
      "type_:CreateAwsClusterRequestType": {
        "name": "CreateAwsClusterRequestType",
        "description": "The cluster's type.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "DEDICATED"
            },
            {
              "value": "HYBRID"
            }
          ]
        }
      },
      "type_:CreateAwsClusterRequest": {
        "name": "CreateAwsClusterRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cloudProvider",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CreateAwsClusterRequestCloudProvider"
                }
              },
              "description": "The cluster's cloud provider."
            },
            {
              "key": "dbInstanceType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The type of database instance that is used for the cluster. Required for Hybrid clusters."
            },
            {
              "key": "k8sTags",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ClusterK8STag"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The Kubernetes tags in the cluster."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The cluster's name."
            },
            {
              "key": "nodePools",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:CreateNodePoolRequest"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The list of node pools to create in the cluster."
            },
            {
              "key": "providerAccount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The provider account ID. Required for Hybrid clusters."
            },
            {
              "key": "region",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The cluster's region."
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CreateAwsClusterRequestType"
                }
              },
              "description": "The cluster's type."
            },
            {
              "key": "vpcSubnetRange",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The VPC subnet range."
            },
            {
              "key": "workspaceIds",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "The list of Workspaces that are authorized to the cluster."
            }
          ]
        }
      },
      "type_:CreateAzureClusterRequestCloudProvider": {
        "name": "CreateAzureClusterRequestCloudProvider",
        "description": "The cluster's cloud provider.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AWS"
            },
            {
              "value": "AZURE"
            },
            {
              "value": "GCP"
            }
          ]
        }
      },
      "type_:CreateAzureClusterRequestType": {
        "name": "CreateAzureClusterRequestType",
        "description": "The cluster's type.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "DEDICATED"
            },
            {
              "value": "HYBRID"
            }
          ]
        }
      },
      "type_:CreateAzureClusterRequest": {
        "name": "CreateAzureClusterRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cloudProvider",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CreateAzureClusterRequestCloudProvider"
                }
              },
              "description": "The cluster's cloud provider."
            },
            {
              "key": "dbInstanceType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The type of database instance that is used for the cluster. Required for Hybrid clusters."
            },
            {
              "key": "k8sTags",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ClusterK8STag"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The Kubernetes tags in the cluster."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The cluster's name."
            },
            {
              "key": "nodePools",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:CreateNodePoolRequest"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The list of node pools to create in the cluster."
            },
            {
              "key": "providerAccount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The provider account ID. Required for Hybrid clusters."
            },
            {
              "key": "region",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The cluster's region."
            },
            {
              "key": "tenantId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The tenant ID. For Azure clusters only."
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CreateAzureClusterRequestType"
                }
              },
              "description": "The cluster's type."
            },
            {
              "key": "vpcSubnetRange",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The VPC subnet range."
            },
            {
              "key": "workspaceIds",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "The list of Workspaces that are authorized to the cluster."
            }
          ]
        }
      },
      "type_:CreateClusterRequest": {
        "name": "CreateClusterRequest",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "displayName": "Create Aws Cluster Request",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CreateAwsClusterRequest"
                }
              }
            },
            {
              "displayName": "Create Azure Cluster Request",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CreateAzureClusterRequest"
                }
              }
            },
            {
              "displayName": "Create Gcp Cluster Request",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CreateGcpClusterRequest"
                }
              }
            }
          ]
        }
      },
      "type_:CreateDedicatedDeploymentRequestExecutor": {
        "name": "CreateDedicatedDeploymentRequestExecutor",
        "description": "The Deployment's executor type.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "CELERY"
            },
            {
              "value": "KUBERNETES"
            }
          ]
        }
      },
      "type_:CreateDedicatedDeploymentRequestSchedulerSize": {
        "name": "CreateDedicatedDeploymentRequestSchedulerSize",
        "description": "The size of the scheduler pod.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "SMALL"
            },
            {
              "value": "MEDIUM"
            },
            {
              "value": "LARGE"
            }
          ]
        }
      },
      "type_:CreateDedicatedDeploymentRequestType": {
        "name": "CreateDedicatedDeploymentRequestType",
        "description": "The type of the Deployment.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "DEDICATED"
            },
            {
              "value": "HYBRID"
            },
            {
              "value": "STANDARD"
            }
          ]
        }
      },
      "type_:CreateDedicatedDeploymentRequest": {
        "name": "CreateDedicatedDeploymentRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "astroRuntimeVersion",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Deployment's Astro Runtime version."
            },
            {
              "key": "clusterId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The ID of the cluster where the Deployment will be created."
            },
            {
              "key": "contactEmails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "A list of contact emails for the Deployment."
            },
            {
              "key": "defaultTaskPodCpu",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The default CPU resource usage for a worker Pod when running the Kubernetes executor or KubernetesPodOperator. Units are in number of CPU cores."
            },
            {
              "key": "defaultTaskPodMemory",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The default memory resource usage for a worker Pod when running the Kubernetes executor or KubernetesPodOperator. Units are in `Gi` and must be explicitly included. This value must always be twice the value of `DefaultTaskPodCpu`."
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The Deployment's description."
            },
            {
              "key": "environmentVariables",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:DeploymentEnvironmentVariableRequest"
                        }
                      }
                    }
                  }
                }
              },
              "description": "List of environment variables to add to the Deployment."
            },
            {
              "key": "executor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CreateDedicatedDeploymentRequestExecutor"
                }
              },
              "description": "The Deployment's executor type."
            },
            {
              "key": "isCicdEnforced",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the Deployment requires that all deploys are made through CI/CD."
            },
            {
              "key": "isDagDeployEnabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the Deployment has DAG deploys enabled."
            },
            {
              "key": "isDevelopmentMode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "If true, deployment will be able to use development-only features, such as hibernation, but will not have guaranteed uptime SLAs"
            },
            {
              "key": "isHighAvailability",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the Deployment is configured for high availability. If `true`, multiple scheduler pods will be online."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The Deployment's name."
            },
            {
              "key": "resourceQuotaCpu",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The CPU quota for worker Pods when running the Kubernetes executor or KubernetesPodOperator. If current CPU usage across all workers exceeds the quota, no new worker Pods can be scheduled. Units are in number of CPU cores."
            },
            {
              "key": "resourceQuotaMemory",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The memory quota for worker Pods when running the Kubernetes executor or KubernetesPodOperator. If current memory usage across all workers exceeds the quota, no new worker Pods can be scheduled. Units are in `Gi` and must be explicitly included. This value must always be twice the value of `ResourceQuotaCpu`."
            },
            {
              "key": "scalingSpec",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DeploymentScalingSpecRequest"
                    }
                  }
                }
              }
            },
            {
              "key": "schedulerSize",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CreateDedicatedDeploymentRequestSchedulerSize"
                }
              },
              "description": "The size of the scheduler pod."
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CreateDedicatedDeploymentRequestType"
                }
              },
              "description": "The type of the Deployment."
            },
            {
              "key": "workerQueues",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:WorkerQueueRequest"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The list of worker queues configured for the Deployment. Applies only when `Executor` is `CELERY`. At least 1 worker queue is needed. All Deployments need at least 1 worker queue called `default`."
            },
            {
              "key": "workloadIdentity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The Deployment's workload identity."
            },
            {
              "key": "workspaceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The ID of the workspace to which the Deployment belongs."
            }
          ]
        }
      },
      "type_:CreateDeploymentRequest": {
        "name": "CreateDeploymentRequest",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "displayName": "Create Dedicated Deployment Request",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CreateDedicatedDeploymentRequest"
                }
              }
            },
            {
              "displayName": "Create Hybrid Deployment Request",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CreateHybridDeploymentRequest"
                }
              }
            },
            {
              "displayName": "Create Standard Deployment Request",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CreateStandardDeploymentRequest"
                }
              }
            }
          ]
        }
      },
      "type_:CreateGcpClusterRequestCloudProvider": {
        "name": "CreateGcpClusterRequestCloudProvider",
        "description": "The cluster's cloud provider.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AWS"
            },
            {
              "value": "AZURE"
            },
            {
              "value": "GCP"
            }
          ]
        }
      },
      "type_:CreateGcpClusterRequestType": {
        "name": "CreateGcpClusterRequestType",
        "description": "The cluster's type.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "DEDICATED"
            },
            {
              "value": "HYBRID"
            }
          ]
        }
      },
      "type_:CreateGcpClusterRequest": {
        "name": "CreateGcpClusterRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cloudProvider",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CreateGcpClusterRequestCloudProvider"
                }
              },
              "description": "The cluster's cloud provider."
            },
            {
              "key": "dbInstanceType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The type of database instance that is used for the cluster. Required for Hybrid clusters."
            },
            {
              "key": "k8sTags",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ClusterK8STag"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The Kubernetes tags in the cluster."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The cluster's name."
            },
            {
              "key": "nodePools",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:CreateNodePoolRequest"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The list of node pools to create in the cluster."
            },
            {
              "key": "podSubnetRange",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The subnet range for Pods. For GCP clusters only."
            },
            {
              "key": "providerAccount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The provider account ID. Required for Hybrid clusters."
            },
            {
              "key": "region",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The cluster's region."
            },
            {
              "key": "servicePeeringRange",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The service subnet range. For GCP clusters only."
            },
            {
              "key": "serviceSubnetRange",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The service peering range. For GCP clusters only."
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CreateGcpClusterRequestType"
                }
              },
              "description": "The cluster's type."
            },
            {
              "key": "vpcSubnetRange",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The VPC subnet range."
            },
            {
              "key": "workspaceIds",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "The list of Workspaces that are authorized to the cluster."
            }
          ]
        }
      },
      "type_:CreateHybridDeploymentRequestExecutor": {
        "name": "CreateHybridDeploymentRequestExecutor",
        "description": "The Deployment's executor type.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "CELERY"
            },
            {
              "value": "KUBERNETES"
            }
          ]
        }
      },
      "type_:CreateHybridDeploymentRequestType": {
        "name": "CreateHybridDeploymentRequestType",
        "description": "The type of the Deployment.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "DEDICATED"
            },
            {
              "value": "HYBRID"
            },
            {
              "value": "STANDARD"
            }
          ]
        }
      },
      "type_:CreateHybridDeploymentRequest": {
        "name": "CreateHybridDeploymentRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "astroRuntimeVersion",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Deployment's Astro Runtime version."
            },
            {
              "key": "clusterId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The ID of the cluster where the Deployment will be created."
            },
            {
              "key": "contactEmails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "A list of contact emails for the Deployment."
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The Deployment's description."
            },
            {
              "key": "environmentVariables",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:DeploymentEnvironmentVariableRequest"
                        }
                      }
                    }
                  }
                }
              },
              "description": "List of environment variables to add to the Deployment."
            },
            {
              "key": "executor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CreateHybridDeploymentRequestExecutor"
                }
              },
              "description": "The Deployment's executor type."
            },
            {
              "key": "isCicdEnforced",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the Deployment requires that all deploys are made through CI/CD."
            },
            {
              "key": "isDagDeployEnabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the Deployment has DAG deploys enabled."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The Deployment's name."
            },
            {
              "key": "scheduler",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:DeploymentInstanceSpecRequest"
                }
              }
            },
            {
              "key": "taskPodNodePoolId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The node pool ID for the task pods. For `KUBERNETES` executor only."
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CreateHybridDeploymentRequestType"
                }
              },
              "description": "The type of the Deployment."
            },
            {
              "key": "workerQueues",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:HybridWorkerQueueRequest"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The list of worker queues configured for the Deployment. Applies only when `Executor` is `CELERY`. At least 1 worker queue is needed. All Deployments need at least 1 worker queue called `default`."
            },
            {
              "key": "workloadIdentity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The Deployment's workload identity."
            },
            {
              "key": "workspaceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The ID of the workspace to which the Deployment belongs."
            }
          ]
        }
      },
      "type_:CreateNodePoolRequest": {
        "name": "CreateNodePoolRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "isDefault",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether the node pool is the default node pool of the cluster."
            },
            {
              "key": "maxNodeCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The maximum number of nodes that can be created in the node pool."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The name of the node pool."
            },
            {
              "key": "nodeInstanceType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The type of node instance that is used for the node pool."
            }
          ]
        }
      },
      "type_:CreateStandardDeploymentRequestCloudProvider": {
        "name": "CreateStandardDeploymentRequestCloudProvider",
        "description": "The cloud provider for the Deployment's cluster. Optional if `ClusterId` is specified.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AWS"
            },
            {
              "value": "AZURE"
            },
            {
              "value": "GCP"
            }
          ]
        }
      },
      "type_:CreateStandardDeploymentRequestExecutor": {
        "name": "CreateStandardDeploymentRequestExecutor",
        "description": "The Deployment's executor type.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "CELERY"
            },
            {
              "value": "KUBERNETES"
            }
          ]
        }
      },
      "type_:CreateStandardDeploymentRequestSchedulerSize": {
        "name": "CreateStandardDeploymentRequestSchedulerSize",
        "description": "The size of the scheduler pod.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "SMALL"
            },
            {
              "value": "MEDIUM"
            },
            {
              "value": "LARGE"
            }
          ]
        }
      },
      "type_:CreateStandardDeploymentRequestType": {
        "name": "CreateStandardDeploymentRequestType",
        "description": "The type of the Deployment.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "DEDICATED"
            },
            {
              "value": "HYBRID"
            },
            {
              "value": "STANDARD"
            }
          ]
        }
      },
      "type_:CreateStandardDeploymentRequest": {
        "name": "CreateStandardDeploymentRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "astroRuntimeVersion",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Deployment's Astro Runtime version."
            },
            {
              "key": "cloudProvider",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CreateStandardDeploymentRequestCloudProvider"
                    }
                  }
                }
              },
              "description": "The cloud provider for the Deployment's cluster. Optional if `ClusterId` is specified."
            },
            {
              "key": "clusterId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The ID of the cluster to which the Deployment will be created in. Optional if cloud provider and region is specified."
            },
            {
              "key": "contactEmails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "A list of contact emails for the Deployment."
            },
            {
              "key": "defaultTaskPodCpu",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The default CPU resource usage for a worker Pod when running the Kubernetes executor or KubernetesPodOperator. Units are in number of CPU cores."
            },
            {
              "key": "defaultTaskPodMemory",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The default memory resource usage for a worker Pod when running the Kubernetes executor or KubernetesPodOperator. Units are in `Gi` and must be explicitly included. This value must always be twice the value of `DefaultTaskPodCpu`."
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The Deployment's description."
            },
            {
              "key": "environmentVariables",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:DeploymentEnvironmentVariableRequest"
                        }
                      }
                    }
                  }
                }
              },
              "description": "List of environment variables to add to the Deployment."
            },
            {
              "key": "executor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CreateStandardDeploymentRequestExecutor"
                }
              },
              "description": "The Deployment's executor type."
            },
            {
              "key": "isCicdEnforced",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the Deployment requires that all deploys are made through CI/CD."
            },
            {
              "key": "isDagDeployEnabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the Deployment has DAG deploys enabled."
            },
            {
              "key": "isDevelopmentMode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "If true, deployment will be able to use development-only features, such as hibernation, but will not have guaranteed uptime SLAs"
            },
            {
              "key": "isHighAvailability",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the Deployment is configured for high availability. If `true`, multiple scheduler pods will be online."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The Deployment's name."
            },
            {
              "key": "region",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The region to host the Deployment in. Optional if `ClusterId` is specified."
            },
            {
              "key": "resourceQuotaCpu",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The CPU quota for worker Pods when running the Kubernetes executor or KubernetesPodOperator. If current CPU usage across all workers exceeds the quota, no new worker Pods can be scheduled. Units are in number of CPU cores."
            },
            {
              "key": "resourceQuotaMemory",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The memory quota for worker Pods when running the Kubernetes executor or KubernetesPodOperator. If current memory usage across all workers exceeds the quota, no new worker Pods can be scheduled. Units are in `Gi` and must be explicitly included. This value must always be twice the value of `ResourceQuotaCpu`."
            },
            {
              "key": "scalingSpec",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DeploymentScalingSpecRequest"
                    }
                  }
                }
              }
            },
            {
              "key": "schedulerSize",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CreateStandardDeploymentRequestSchedulerSize"
                }
              },
              "description": "The size of the scheduler pod."
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CreateStandardDeploymentRequestType"
                }
              },
              "description": "The type of the Deployment."
            },
            {
              "key": "workerQueues",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:WorkerQueueRequest"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The list of worker queues configured for the Deployment. Applies only when `Executor` is `CELERY`. At least 1 worker queue is needed. All Deployments need at least 1 worker queue called `default`."
            },
            {
              "key": "workloadIdentity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The Deployment's workload identity."
            },
            {
              "key": "workspaceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The ID of the workspace to which the Deployment belongs."
            }
          ]
        }
      },
      "type_:DeployStatus": {
        "name": "DeployStatus",
        "description": "The status of the deploy.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "INITIALIZED"
            },
            {
              "value": "DEPLOYED"
            },
            {
              "value": "FAILED"
            }
          ]
        }
      },
      "type_:DeployType": {
        "name": "DeployType",
        "description": "The type of deploy.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "IMAGE_AND_DAG"
            },
            {
              "value": "IMAGE_ONLY"
            },
            {
              "value": "DAG_ONLY"
            }
          ]
        }
      },
      "type_:Deploy": {
        "name": "Deploy",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "airflowVersion",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The deploy's Airflow version."
            },
            {
              "key": "astroRuntimeVersion",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The deploy's Astro Runtime version."
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "The time when the deploy was created in UTC, formatted as `YYYY-MM-DDTHH:MM:SSZ`."
            },
            {
              "key": "createdBySubject",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BasicSubjectProfile"
                    }
                  }
                }
              }
            },
            {
              "key": "dagTarballVersion",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The deploy's DAG tarball version, also known as the Bundle Version in the Astro UI."
            },
            {
              "key": "dagsUploadUrl",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The deploy's upload URL to upload DAG bundles. Appears only if dag deploys are enabled on the Deployment."
            },
            {
              "key": "deploymentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The Deployment's ID."
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The deploy's description."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The deploy's ID."
            },
            {
              "key": "imageRepository",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The URL of the deploy's image repository."
            },
            {
              "key": "imageTag",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The deploy's image tag. Appears only if specified in the most recent deploy."
            },
            {
              "key": "isDagDeployEnabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the deploy was triggered on a Deployment with DAG deploys enabled."
            },
            {
              "key": "rollbackFromId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The ID of the deploy that you completed a rollback on. Appears only if a rollback has been performed."
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:DeployStatus"
                }
              },
              "description": "The status of the deploy."
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:DeployType"
                }
              },
              "description": "The type of deploy."
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "The time when the deploy was last updated in UTC, formatted as `YYYY-MM-DDTHH:MM:SSZ`."
            },
            {
              "key": "updatedBySubject",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BasicSubjectProfile"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:DeploymentCloudProvider": {
        "name": "DeploymentCloudProvider",
        "description": "The cloud provider of the cluster. Only for Standard Deployment.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AWS"
            },
            {
              "value": "AZURE"
            },
            {
              "value": "GCP"
            }
          ]
        }
      },
      "type_:DeploymentExecutor": {
        "name": "DeploymentExecutor",
        "description": "The Deployment's executor type.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "CELERY"
            },
            {
              "value": "KUBERNETES"
            }
          ]
        }
      },
      "type_:DeploymentSchedulerSize": {
        "name": "DeploymentSchedulerSize",
        "description": "The Deployment's scheduler size.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "SMALL"
            },
            {
              "value": "MEDIUM"
            },
            {
              "value": "LARGE"
            }
          ]
        }
      },
      "type_:DeploymentStatus": {
        "name": "DeploymentStatus",
        "description": "The status of the Deployment.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "CREATING"
            },
            {
              "value": "DEPLOYING"
            },
            {
              "value": "HEALTHY"
            },
            {
              "value": "UNHEALTHY"
            },
            {
              "value": "UNKNOWN"
            },
            {
              "value": "HIBERNATING"
            }
          ]
        }
      },
      "type_:DeploymentType": {
        "name": "DeploymentType",
        "description": "The type of cluster that the Deployment runs on.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "DEDICATED"
            },
            {
              "value": "HYBRID"
            },
            {
              "value": "STANDARD"
            }
          ]
        }
      },
      "type_:Deployment": {
        "name": "Deployment",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "airflowVersion",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The Deployment's Airflow version."
            },
            {
              "key": "astroRuntimeVersion",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The Deployment's Astro Runtime version."
            },
            {
              "key": "cloudProvider",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DeploymentCloudProvider"
                    }
                  }
                }
              },
              "description": "The cloud provider of the cluster. Only for Standard Deployment."
            },
            {
              "key": "clusterId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The ID of the cluster where the Deployment is hosted."
            },
            {
              "key": "clusterName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The name of the cluster where the Deployment is hosted. Only for Dedicated and Hybrid Deployments."
            },
            {
              "key": "contactEmails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "The list of contact emails for the Deployment."
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "The time when the Deployment was created in UTC, formatted as `YYYY-MM-DDTHH:MM:SSZ`."
            },
            {
              "key": "createdBy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:BasicSubjectProfile"
                }
              }
            },
            {
              "key": "dagTarballVersion",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The Deployment's current DAG tarball version, also known as the Bundle Version in the Astro UI. If no deploys are currently processing, this value should be the same as DesiredDagTarballVersion."
            },
            {
              "key": "defaultTaskPodCpu",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The default CPU resource usage for a worker Pod when running the Kubernetes executor or KubernetesPodOperator. Units are in number of CPU cores."
            },
            {
              "key": "defaultTaskPodMemory",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The default memory resource usage for a worker Pod when running the Kubernetes executor or KubernetesPodOperator. Units are in `Gi`. This value must always be twice the value of `DefaultTaskPodCpu`."
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The Deployment's description."
            },
            {
              "key": "desiredDagTarballVersion",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The Deployment's expected DAG tarball version after a currently processing deploy completes. This value is updated when a user triggers a DAG-only deploy to indicate that the Deployment is expecting a new DAG tarball version. If no deploys are currently processing, this value should be the same as DagTarballVersion."
            },
            {
              "key": "environmentVariables",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:DeploymentEnvironmentVariable"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The Deployment's environment variables. Secret values will be omitted from response."
            },
            {
              "key": "executor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DeploymentExecutor"
                    }
                  }
                }
              },
              "description": "The Deployment's executor type."
            },
            {
              "key": "externalIPs",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "A list of the Deployment's external IPs."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The Deployment's ID."
            },
            {
              "key": "imageRepository",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The URL of the Deployment's image repository."
            },
            {
              "key": "imageTag",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The Deployment's custom image tag. Appears only if specified in the most recent deploy."
            },
            {
              "key": "imageVersion",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A tag that Astronomer applies to the Deployment's Astro Runtime image during a deploy. It includes the date and time of the deploy."
            },
            {
              "key": "isCicdEnforced",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the Deployment requires that all deploys are made through CI/CD."
            },
            {
              "key": "isDagDeployEnabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the Deployment has DAG deploys enabled."
            },
            {
              "key": "isDevelopmentMode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "If true, deployment will be able to use development-only features, such as hibernation, but will not have guaranteed uptime SLAs"
            },
            {
              "key": "isHighAvailability",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether the Deployment has high availability (HA) enabled. If `true`, multiple scheduler Pods will run at once."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The Deployment's name."
            },
            {
              "key": "namespace",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The Deployment's namespace name in the Kubernetes cluster."
            },
            {
              "key": "oidcIssuerUrl",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "OIDC issuer URL of the deployment's cluster"
            },
            {
              "key": "organizationId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The ID of the Organization to which the Deployment belongs."
            },
            {
              "key": "region",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The region of the cluster. Only for Dedicated and Hybrid Deployments."
            },
            {
              "key": "resourceQuotaCpu",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The CPU quota for worker Pods when running the Kubernetes executor or KubernetesPodOperator. If current CPU usage across all workers exceeds the quota, no new worker Pods can be scheduled. Units are in number of CPU cores."
            },
            {
              "key": "resourceQuotaMemory",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The memory quota for worker Pods when running the Kubernetes executor or KubernetesPodOperator. If current memory usage across all workers exceeds the quota, no new worker Pods can be scheduled. Units are in `Gi`. This value must always be twice the value of `ResourceQuotaCpu`."
            },
            {
              "key": "runtimeVersion",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Deprecated: runtimeVersion has been replaced with astroRuntimeVersion"
            },
            {
              "key": "scalingSpec",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DeploymentScalingSpec"
                    }
                  }
                }
              }
            },
            {
              "key": "scalingStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DeploymentScalingStatus"
                    }
                  }
                }
              }
            },
            {
              "key": "schedulerAu",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The number of Astronomer units (AU) for the Deployment's scheduler. Applies only to Deployments hosted on Hybrid clusters."
            },
            {
              "key": "schedulerCpu",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The CPU limit for the Deployment's scheduler. Specified in number of CPU cores."
            },
            {
              "key": "schedulerMemory",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The memory limit for the Deployment's scheduler. Units in Gibibytes or `Gi`."
            },
            {
              "key": "schedulerReplicas",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The number of schedulers to use in the Deployment."
            },
            {
              "key": "schedulerSize",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DeploymentSchedulerSize"
                    }
                  }
                }
              },
              "description": "The Deployment's scheduler size."
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:DeploymentStatus"
                }
              },
              "description": "The status of the Deployment."
            },
            {
              "key": "statusReason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A message that provides context for the Deployment's status."
            },
            {
              "key": "taskPodNodePoolId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The node pool ID for the task pod."
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DeploymentType"
                    }
                  }
                }
              },
              "description": "The type of cluster that the Deployment runs on."
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "The time when the Deployment was last updated in UTC, formatted as `YYYY-MM-DDTHH:MM:SSZ`."
            },
            {
              "key": "updatedBy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:BasicSubjectProfile"
                }
              }
            },
            {
              "key": "webServerAirflowApiUrl",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The Deployment's webserver's base url to directly access the Airflow api."
            },
            {
              "key": "webServerCpu",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The CPU limit for the Deployment's webserver. Units are in number of CPU cores."
            },
            {
              "key": "webServerIngressHostname",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The Deployment's webserver's ingress hostname."
            },
            {
              "key": "webServerMemory",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The memory limit for the Deployment's webserver. Units in Gibibytes or `Gi`."
            },
            {
              "key": "webServerReplicas",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The number of webserver replicas."
            },
            {
              "key": "webServerUrl",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The Deployment's webserver's url."
            },
            {
              "key": "workerQueues",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:WorkerQueue"
                        }
                      }
                    }
                  }
                }
              },
              "description": "A list of the Deployment's worker queues."
            },
            {
              "key": "workloadIdentity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The Deployment's workload identity."
            },
            {
              "key": "workspaceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The ID of the Workspace to which the Deployment belongs."
            },
            {
              "key": "workspaceName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The name of the Workspace to which the Deployment belongs."
            }
          ]
        }
      },
      "type_:DeploymentEnvironmentVariable": {
        "name": "DeploymentEnvironmentVariable",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "isSecret",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the environment variable is a secret."
            },
            {
              "key": "key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The environment variable key, used to call the value in code."
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The time when the environment variable was last updated in UTC, formatted as `YYYY-MM-DDTHH:MM:SSZ`."
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The environment variable value."
            }
          ]
        }
      },
      "type_:DeploymentEnvironmentVariableRequest": {
        "name": "DeploymentEnvironmentVariableRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "isSecret",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the environment variable is a secret."
            },
            {
              "key": "key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The environment variable key, used to call the value in code."
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The environment variable value."
            }
          ]
        }
      },
      "type_:DeploymentHibernationOverride": {
        "name": "DeploymentHibernationOverride",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "isActive",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether the override is currently active or not"
            },
            {
              "key": "isHibernating",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether to go into hibernation or not via the override rule"
            },
            {
              "key": "overrideUntil",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Timestamp till the override on the hibernation schedule is in effect"
            }
          ]
        }
      },
      "type_:DeploymentHibernationOverrideRequest": {
        "name": "DeploymentHibernationOverrideRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "isHibernating",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether to go into hibernation or not via the override rule"
            },
            {
              "key": "overrideUntil",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Timestamp till the override on the hibernation schedule is in effect"
            }
          ]
        }
      },
      "type_:DeploymentHibernationSchedule": {
        "name": "DeploymentHibernationSchedule",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A brief description of the schedule"
            },
            {
              "key": "hibernateAtCron",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "A 5-part cron expression defining the times at which the deployment should hibernate"
            },
            {
              "key": "isEnabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Toggle this schedule on or off. If set to false, this schedule will have no effect on hibernation."
            },
            {
              "key": "wakeAtCron",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "A 5-part cron expression definingh the times at which the deployment should wake from hibernation"
            }
          ]
        }
      },
      "type_:DeploymentHibernationSpec": {
        "name": "DeploymentHibernationSpec",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "override",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DeploymentHibernationOverride"
                    }
                  }
                }
              }
            },
            {
              "key": "schedules",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:DeploymentHibernationSchedule"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The list of schedules for deployment hibernation"
            }
          ]
        }
      },
      "type_:DeploymentHibernationSpecRequest": {
        "name": "DeploymentHibernationSpecRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "override",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DeploymentHibernationOverrideRequest"
                    }
                  }
                }
              }
            },
            {
              "key": "schedules",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:DeploymentHibernationSchedule"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The list of schedules for deployment hibernation"
            }
          ]
        }
      },
      "type_:DeploymentHibernationStatusNextEventType": {
        "name": "DeploymentHibernationStatusNextEventType",
        "description": "The type of the next scheduled event for the deployment. Either HIBERNATE or WAKE",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "HIBERNATE"
            },
            {
              "value": "WAKE"
            }
          ]
        }
      },
      "type_:DeploymentHibernationStatus": {
        "name": "DeploymentHibernationStatus",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "isHibernating",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "If the deployment is currently in hibernating state or not"
            },
            {
              "key": "nextEventAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Timestamp of the next scheduled hibernation event for the deployment"
            },
            {
              "key": "nextEventType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DeploymentHibernationStatusNextEventType"
                    }
                  }
                }
              },
              "description": "The type of the next scheduled event for the deployment. Either HIBERNATE or WAKE"
            },
            {
              "key": "reason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Reason for the current hibernation state of the deployment"
            }
          ]
        }
      },
      "type_:DeploymentInstanceSpecRequest": {
        "name": "DeploymentInstanceSpecRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "au",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The number of Astro unit allocated to the Deployment pod. Minimum `5`, Maximum `24`."
            },
            {
              "key": "replicas",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The number of replicas the pod should have. Minimum `1`, Maximum `4`."
            }
          ]
        }
      },
      "type_:DeploymentOptions": {
        "name": "DeploymentOptions",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "executors",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The available executors."
            },
            {
              "key": "resourceQuotas",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ResourceQuotaOptions"
                }
              }
            },
            {
              "key": "runtimeReleases",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RuntimeRelease"
                    }
                  }
                }
              },
              "description": "The available Astro Runtime versions."
            },
            {
              "key": "schedulerMachines",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:SchedulerMachine"
                    }
                  }
                }
              },
              "description": "The available scheduler sizes."
            },
            {
              "key": "workerMachines",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:WorkerMachine"
                    }
                  }
                }
              },
              "description": "The available worker machine types."
            },
            {
              "key": "workerQueues",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:WorkerQueueOptions"
                }
              }
            },
            {
              "key": "workloadIdentityOptions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:WorkloadIdentityOption"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The available workload identity options."
            }
          ]
        }
      },
      "type_:DeploymentScalingSpec": {
        "name": "DeploymentScalingSpec",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "hibernationSpec",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DeploymentHibernationSpec"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:DeploymentScalingSpecRequest": {
        "name": "DeploymentScalingSpecRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "hibernationSpec",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DeploymentHibernationSpecRequest"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:DeploymentScalingStatus": {
        "name": "DeploymentScalingStatus",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "hibernationStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DeploymentHibernationStatus"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:DeploymentsPaginated": {
        "name": "DeploymentsPaginated",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "deployments",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Deployment"
                    }
                  }
                }
              },
              "description": "A list of Deployments in the current page."
            },
            {
              "key": "limit",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The maximum number of Deployments in one page."
            },
            {
              "key": "offset",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The offset of the current page of Deployments."
            },
            {
              "key": "totalCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The total number of Deployments."
            }
          ]
        }
      },
      "type_:DeploysPaginated": {
        "name": "DeploysPaginated",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "deploys",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Deploy"
                    }
                  }
                }
              },
              "description": "A list of deploys in the current page."
            },
            {
              "key": "limit",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The maximum number of deploys in one page."
            },
            {
              "key": "offset",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The offset of the current page of deploys."
            },
            {
              "key": "totalCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The total number of deploys."
            }
          ]
        }
      },
      "type_:Error": {
        "name": "Error",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "requestId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "statusCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:HybridWorkerQueueRequest": {
        "name": "HybridWorkerQueueRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The worker queue's ID. If not provided, a new worker queue will be created."
            },
            {
              "key": "isDefault",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the worker queue is the default worker queue on the Deployment."
            },
            {
              "key": "maxWorkerCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The maximum number of workers that can run at once."
            },
            {
              "key": "minWorkerCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The minimum number of workers running at once."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The worker queue's name."
            },
            {
              "key": "nodePoolId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The node pool ID associated with the worker queue."
            },
            {
              "key": "workerConcurrency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The maximum number of concurrent tasks that a worker Pod can run at a time."
            }
          ]
        }
      },
      "type_:MachineSpec": {
        "name": "MachineSpec",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "concurrency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                }
              },
              "description": "The maximum number of tasks that a given machine instance can run at once."
            },
            {
              "key": "cpu",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The CPU quantity. Units are in number of CPU cores."
            },
            {
              "key": "ephemeralStorage",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The ephemeral storage quantity. Units in Gibibytes or `Gi`."
            },
            {
              "key": "memory",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The memory quantity. Units in Gibibytes or `Gi`."
            }
          ]
        }
      },
      "type_:ManagedDomainStatus": {
        "name": "ManagedDomainStatus",
        "description": "Whether the managed domain has completed the verification process.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "PENDING"
            },
            {
              "value": "VERIFIED"
            }
          ]
        }
      },
      "type_:ManagedDomain": {
        "name": "ManagedDomain",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "The time when the domain was created in UTC, formatted as `YYYY-MM-DDTHH:MM:SSZ`."
            },
            {
              "key": "enforcedLogins",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "A list of login types that are enforced for users belonging to the domain."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The managed domain's ID."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The managed domain's name/ URL."
            },
            {
              "key": "organizationId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The ID of the Organization to which the managed domain belongs."
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ManagedDomainStatus"
                }
              },
              "description": "Whether the managed domain has completed the verification process."
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "The time when the domain was last updated in UTC, formatted as `YYYY-MM-DDTHH:MM:SSZ`."
            }
          ]
        }
      },
      "type_:NodePoolCloudProvider": {
        "name": "NodePoolCloudProvider",
        "description": "The name of the cloud provider.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AWS"
            },
            {
              "value": "AZURE"
            },
            {
              "value": "GCP"
            }
          ]
        }
      },
      "type_:NodePool": {
        "name": "NodePool",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cloudProvider",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:NodePoolCloudProvider"
                }
              },
              "description": "The name of the cloud provider."
            },
            {
              "key": "clusterId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The ID of the cluster that the node pool belongs to."
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "The time when the node pool was created in UTC, formatted as `YYYY-MM-DDTHH:MM:SSZ`."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The node pool's ID."
            },
            {
              "key": "isDefault",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the node pool is the default node pool of the cluster."
            },
            {
              "key": "maxNodeCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The maximum number of nodes that can be created in the node pool."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The name of the node pool."
            },
            {
              "key": "nodeInstanceType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The type of node instance that is used for the node pool."
            },
            {
              "key": "supportedAstroMachines",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "The list of supported Astro machines for the node pool. Returned only for Hosted dedicated clusters."
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "The time when the node pool was last updated in UTC, formatted as `YYYY-MM-DDTHH:MM:SSZ`."
            }
          ]
        }
      },
      "type_:OrganizationPaymentMethod": {
        "name": "OrganizationPaymentMethod",
        "description": "The Organization's payment method.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "CREDIT_CARD"
            },
            {
              "value": "INVOICE"
            },
            {
              "value": "AWS_MARKETPLACE"
            },
            {
              "value": "AZURE_MARKETPLACE"
            },
            {
              "value": "GCP_MARKETPLACE"
            }
          ]
        }
      },
      "type_:OrganizationProduct": {
        "name": "OrganizationProduct",
        "description": "The Organization's product type.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "HOSTED"
            },
            {
              "value": "HYBRID"
            }
          ]
        }
      },
      "type_:OrganizationStatus": {
        "name": "OrganizationStatus",
        "description": "The Organization's status.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ACTIVE"
            },
            {
              "value": "INACTIVE"
            },
            {
              "value": "SUSPENDED"
            }
          ]
        }
      },
      "type_:OrganizationSupportPlan": {
        "name": "OrganizationSupportPlan",
        "description": "The Organization's support plan.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "TRIAL"
            },
            {
              "value": "BASIC"
            },
            {
              "value": "STANDARD"
            },
            {
              "value": "PREMIUM"
            },
            {
              "value": "BUSINESS_CRITICAL"
            }
          ]
        }
      },
      "type_:Organization": {
        "name": "Organization",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "billingEmail",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The Organization's billing email."
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "The time when the Organization was created in UTC, formatted as `YYYY-MM-DDTHH:MM:SSZ`."
            },
            {
              "key": "createdBy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:BasicSubjectProfile"
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The Organization's ID."
            },
            {
              "key": "isScimEnabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether SCIM is enabled for the Organization."
            },
            {
              "key": "managedDomains",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ManagedDomain"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The list of managed domains configured in the Organization."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The Organization's name."
            },
            {
              "key": "paymentMethod",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:OrganizationPaymentMethod"
                    }
                  }
                }
              },
              "description": "The Organization's payment method."
            },
            {
              "key": "product",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:OrganizationProduct"
                    }
                  }
                }
              },
              "description": "The Organization's product type."
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:OrganizationStatus"
                    }
                  }
                }
              },
              "description": "The Organization's status."
            },
            {
              "key": "supportPlan",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:OrganizationSupportPlan"
                }
              },
              "description": "The Organization's support plan."
            },
            {
              "key": "trialExpiresAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "The time when the Organization's trial expires in UTC, formatted as `YYYY-MM-DDTHH:MM:SSZ`. Organizations that are no longer in Trial will not have a expiry date."
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "The time when the Organization was last updated in UTC, formatted as `YYYY-MM-DDTHH:MM:SSZ`."
            },
            {
              "key": "updatedBy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:BasicSubjectProfile"
                }
              }
            }
          ]
        }
      },
      "type_:OrganizationsPaginated": {
        "name": "OrganizationsPaginated",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "limit",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The maximum number of Organizations in the page."
            },
            {
              "key": "offset",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The offset of the Organizations in the page."
            },
            {
              "key": "organizations",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Organization"
                    }
                  }
                }
              },
              "description": "The list of Organizations in the page."
            },
            {
              "key": "totalCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The total number of Organizations."
            }
          ]
        }
      },
      "type_:ProviderInstanceType": {
        "name": "ProviderInstanceType",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cpu",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The number of CPUs. Units are in number of CPU cores."
            },
            {
              "key": "memory",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The amount of memory. Units in Gibibytes or `Gi`."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The name of the instance type."
            }
          ]
        }
      },
      "type_:ProviderRegion": {
        "name": "ProviderRegion",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "bannedInstances",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "The banned instances in the region."
            },
            {
              "key": "limited",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether the region is limited."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The name of the region."
            }
          ]
        }
      },
      "type_:Range": {
        "name": "Range",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "ceiling",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The maximum value."
            },
            {
              "key": "default",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The default value."
            },
            {
              "key": "floor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The minimum value."
            }
          ]
        }
      },
      "type_:ResourceOption": {
        "name": "ResourceOption",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cpu",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ResourceRange"
                }
              }
            },
            {
              "key": "memory",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ResourceRange"
                }
              }
            }
          ]
        }
      },
      "type_:ResourceQuotaOptions": {
        "name": "ResourceQuotaOptions",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "defaultPodSize",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ResourceOption"
                }
              }
            },
            {
              "key": "resourceQuota",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ResourceOption"
                }
              }
            }
          ]
        }
      },
      "type_:ResourceRange": {
        "name": "ResourceRange",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "ceiling",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The maximum value."
            },
            {
              "key": "default",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The default value."
            },
            {
              "key": "floor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The minimum value."
            }
          ]
        }
      },
      "type_:RuntimeRelease": {
        "name": "RuntimeRelease",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "airflowDatabaseMigration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the release requires an Airflow database migration."
            },
            {
              "key": "airflowVersion",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The Airflow version that the Runtime image is based on."
            },
            {
              "key": "channel",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The release channel."
            },
            {
              "key": "releaseDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "The time when the version is released in UTC, formatted as `YYYY-MM-DDTHH:MM:SSZ`."
            },
            {
              "key": "stellarDatabaseMigration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the release requires a Stellar database migration."
            },
            {
              "key": "version",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The Astro Runtime version."
            }
          ]
        }
      },
      "type_:SchedulerMachineName": {
        "name": "SchedulerMachineName",
        "description": "The machine's name.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "SMALL"
            },
            {
              "value": "MEDIUM"
            },
            {
              "value": "LARGE"
            }
          ]
        }
      },
      "type_:SchedulerMachine": {
        "name": "SchedulerMachine",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:SchedulerMachineName"
                }
              },
              "description": "The machine's name."
            },
            {
              "key": "spec",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:MachineSpec"
                }
              }
            }
          ]
        }
      },
      "type_:UpdateClusterRequest": {
        "name": "UpdateClusterRequest",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "clusterType",
          "variants": [
            {
              "discriminantValue": "DEDICATED",
              "extends": [
                "type_:UpdateDedicatedClusterRequest"
              ],
              "properties": []
            },
            {
              "discriminantValue": "HYBRID",
              "extends": [
                "type_:UpdateHybridClusterRequest"
              ],
              "properties": []
            }
          ]
        }
      },
      "type_:UpdateDedicatedClusterRequest": {
        "name": "UpdateDedicatedClusterRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "dbInstanceType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The cluster's database instance type. Required for Hybrid clusters."
            },
            {
              "key": "k8sTags",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ClusterK8STag"
                    }
                  }
                }
              },
              "description": "A list of Kubernetes tags to add to the cluster."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The cluster's name."
            },
            {
              "key": "nodePools",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:UpdateNodePoolRequest"
                        }
                      }
                    }
                  }
                }
              },
              "description": "A list of node pools to add to the cluster. For Hybrid clusters only."
            },
            {
              "key": "workspaceIds",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "The list of Workspaces that are authorized to the cluster. If this value is not provided, the existing list of Workspaces remains. If this value is '[]' then all workspace cluster mappings are removed."
            }
          ]
        }
      },
      "type_:UpdateDedicatedDeploymentRequestExecutor": {
        "name": "UpdateDedicatedDeploymentRequestExecutor",
        "description": "The executor Deployment's executor.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "CELERY"
            },
            {
              "value": "KUBERNETES"
            }
          ]
        }
      },
      "type_:UpdateDedicatedDeploymentRequestSchedulerSize": {
        "name": "UpdateDedicatedDeploymentRequestSchedulerSize",
        "description": "The size of the scheduler pod.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "SMALL"
            },
            {
              "value": "MEDIUM"
            },
            {
              "value": "LARGE"
            }
          ]
        }
      },
      "type_:UpdateDedicatedDeploymentRequestType": {
        "name": "UpdateDedicatedDeploymentRequestType",
        "description": "The type of the Deployment.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "DEDICATED"
            },
            {
              "value": "HYBRID"
            },
            {
              "value": "STANDARD"
            }
          ]
        }
      },
      "type_:UpdateDedicatedDeploymentRequest": {
        "name": "UpdateDedicatedDeploymentRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "contactEmails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "A list of contact emails for the Deployment."
            },
            {
              "key": "defaultTaskPodCpu",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The default CPU resource usage for a worker Pod when running the Kubernetes executor or KubernetesPodOperator. Units are in number of CPU cores."
            },
            {
              "key": "defaultTaskPodMemory",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The default memory resource usage for a worker Pod when running the Kubernetes executor or KubernetesPodOperator. Units are in `Gi` and must be explicitly included. This value must always be twice the value of `DefaultTaskPodCpu`."
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The Deployment's description."
            },
            {
              "key": "environmentVariables",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DeploymentEnvironmentVariableRequest"
                    }
                  }
                }
              },
              "description": "List of environment variables to add to the Deployment."
            },
            {
              "key": "executor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:UpdateDedicatedDeploymentRequestExecutor"
                }
              },
              "description": "The executor Deployment's executor."
            },
            {
              "key": "isCicdEnforced",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the Deployment requires that all deploys are made through CI/CD."
            },
            {
              "key": "isDagDeployEnabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the Deployment has DAG deploys enabled."
            },
            {
              "key": "isDevelopmentMode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether the Deployment is for development only. If `false`, the Deployment can be considered production for the purposes of support case priority, but development-only features such as hibernation will not be available. You can't update this value to `true` for existing non-development Deployments."
            },
            {
              "key": "isHighAvailability",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the Deployment is configured for high availability. If `true`, multiple scheduler pods will be online."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The Deployment's name."
            },
            {
              "key": "resourceQuotaCpu",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The CPU quota for worker Pods when running the Kubernetes executor or KubernetesPodOperator. If current CPU usage across all workers exceeds the quota, no new worker Pods can be scheduled. Units are in number of CPU cores."
            },
            {
              "key": "resourceQuotaMemory",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The memory quota for worker Pods when running the Kubernetes executor or KubernetesPodOperator. If current memory usage across all workers exceeds the quota, no new worker Pods can be scheduled. Units are in `Gi` and must be explicitly included. This value must always be twice the value of `ResourceQuotaCpu`."
            },
            {
              "key": "scalingSpec",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DeploymentScalingSpecRequest"
                    }
                  }
                }
              }
            },
            {
              "key": "schedulerSize",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:UpdateDedicatedDeploymentRequestSchedulerSize"
                }
              },
              "description": "The size of the scheduler pod."
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:UpdateDedicatedDeploymentRequestType"
                }
              },
              "description": "The type of the Deployment."
            },
            {
              "key": "workerQueues",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:WorkerQueueRequest"
                        }
                      }
                    }
                  }
                }
              },
              "description": "A list of the Deployment's worker queues. Applies only when `Executor` is `CELERY`. All Deployments need at least 1 worker queue called `default`."
            },
            {
              "key": "workloadIdentity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The Deployment's workload identity."
            },
            {
              "key": "workspaceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The ID of the Workspace to which the Deployment belongs."
            }
          ]
        }
      },
      "type_:UpdateDeploymentRequest": {
        "name": "UpdateDeploymentRequest",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "displayName": "Update Dedicated Deployment Request",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:UpdateDedicatedDeploymentRequest"
                }
              }
            },
            {
              "displayName": "Update Hybrid Deployment Request",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:UpdateHybridDeploymentRequest"
                }
              }
            },
            {
              "displayName": "Update Standard Deployment Request",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:UpdateStandardDeploymentRequest"
                }
              }
            }
          ]
        }
      },
      "type_:UpdateHybridClusterRequest": {
        "name": "UpdateHybridClusterRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "workspaceIds",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "The list of Workspaces that are authorized to the cluster. If this value is not provided, the existing list of Workspaces remains. If this value is '[]' then all workspace cluster mappings are removed."
            }
          ]
        }
      },
      "type_:UpdateHybridDeploymentRequestExecutor": {
        "name": "UpdateHybridDeploymentRequestExecutor",
        "description": "The Deployment's executor type.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "CELERY"
            },
            {
              "value": "KUBERNETES"
            }
          ]
        }
      },
      "type_:UpdateHybridDeploymentRequestType": {
        "name": "UpdateHybridDeploymentRequestType",
        "description": "The type of the Deployment.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "DEDICATED"
            },
            {
              "value": "HYBRID"
            },
            {
              "value": "STANDARD"
            }
          ]
        }
      },
      "type_:UpdateHybridDeploymentRequest": {
        "name": "UpdateHybridDeploymentRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "contactEmails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "A list of contact emails for the Deployment."
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The Deployment's description."
            },
            {
              "key": "environmentVariables",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DeploymentEnvironmentVariableRequest"
                    }
                  }
                }
              },
              "description": "List of environment variables to add to the Deployment."
            },
            {
              "key": "executor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:UpdateHybridDeploymentRequestExecutor"
                }
              },
              "description": "The Deployment's executor type."
            },
            {
              "key": "isCicdEnforced",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the Deployment requires that all deploys are made through CI/CD."
            },
            {
              "key": "isDagDeployEnabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the Deployment has DAG deploys enabled."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The Deployment's name."
            },
            {
              "key": "scheduler",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:DeploymentInstanceSpecRequest"
                }
              }
            },
            {
              "key": "taskPodNodePoolId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The node pool ID for worker Pods. Applies only when `Executor` is `KUBERNETES`."
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:UpdateHybridDeploymentRequestType"
                }
              },
              "description": "The type of the Deployment."
            },
            {
              "key": "workerQueues",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:HybridWorkerQueueRequest"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The list of worker queues configured for the Deployment. Applies only when `Executor` is `CELERY`. All Deployments need at least 1 worker queue called `default`."
            },
            {
              "key": "workloadIdentity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The Deployment's workload identity."
            },
            {
              "key": "workspaceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The ID of the Workspace to which the Deployment belongs."
            }
          ]
        }
      },
      "type_:UpdateNodePoolRequest": {
        "name": "UpdateNodePoolRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The node pool's ID."
            },
            {
              "key": "isDefault",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether the node pool is the default node pool of the cluster."
            },
            {
              "key": "maxNodeCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The maximum number of nodes that can be created in the node pool."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The name of the node pool."
            },
            {
              "key": "nodeInstanceType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The type of node instance that is used for the node pool."
            }
          ]
        }
      },
      "type_:UpdateStandardDeploymentRequestExecutor": {
        "name": "UpdateStandardDeploymentRequestExecutor",
        "description": "The executor Deployment's executor.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "CELERY"
            },
            {
              "value": "KUBERNETES"
            }
          ]
        }
      },
      "type_:UpdateStandardDeploymentRequestSchedulerSize": {
        "name": "UpdateStandardDeploymentRequestSchedulerSize",
        "description": "The size of the scheduler pod.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "SMALL"
            },
            {
              "value": "MEDIUM"
            },
            {
              "value": "LARGE"
            }
          ]
        }
      },
      "type_:UpdateStandardDeploymentRequestType": {
        "name": "UpdateStandardDeploymentRequestType",
        "description": "The type of the Deployment.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "DEDICATED"
            },
            {
              "value": "HYBRID"
            },
            {
              "value": "STANDARD"
            }
          ]
        }
      },
      "type_:UpdateStandardDeploymentRequest": {
        "name": "UpdateStandardDeploymentRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "contactEmails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "A list of contact emails for the Deployment."
            },
            {
              "key": "defaultTaskPodCpu",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The default CPU resource usage for a worker Pod when running the Kubernetes executor or KubernetesPodOperator. Units are in number of CPU cores."
            },
            {
              "key": "defaultTaskPodMemory",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The default memory resource usage for a worker Pod when running the Kubernetes executor or KubernetesPodOperator. Units are in `Gi` and must be explicitly included. This value must always be twice the value of `DefaultTaskPodCpu`."
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The Deployment's description."
            },
            {
              "key": "environmentVariables",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DeploymentEnvironmentVariableRequest"
                    }
                  }
                }
              },
              "description": "List of environment variables to add to the Deployment."
            },
            {
              "key": "executor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:UpdateStandardDeploymentRequestExecutor"
                }
              },
              "description": "The executor Deployment's executor."
            },
            {
              "key": "isCicdEnforced",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the Deployment requires that all deploys are made through CI/CD."
            },
            {
              "key": "isDagDeployEnabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the Deployment has DAG deploys enabled."
            },
            {
              "key": "isDevelopmentMode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether the Deployment is for development only. If `false`, the Deployment can be considered production for the purposes of support case priority, but development-only features such as hibernation will not be available. You can't update this value to `true` for existing non-development Deployments."
            },
            {
              "key": "isHighAvailability",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the Deployment is configured for high availability. If `true`, multiple scheduler pods will be online."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The Deployment's name."
            },
            {
              "key": "resourceQuotaCpu",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The CPU quota for worker Pods when running the Kubernetes executor or KubernetesPodOperator. If current CPU usage across all workers exceeds the quota, no new worker Pods can be scheduled. Units are in number of CPU cores."
            },
            {
              "key": "resourceQuotaMemory",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The memory quota for worker Pods when running the Kubernetes executor or KubernetesPodOperator. If current memory usage across all workers exceeds the quota, no new worker Pods can be scheduled. Units are in `Gi` and must be explicitly included. This value must always be twice the value of `ResourceQuotaCpu`."
            },
            {
              "key": "scalingSpec",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DeploymentScalingSpecRequest"
                    }
                  }
                }
              }
            },
            {
              "key": "schedulerSize",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:UpdateStandardDeploymentRequestSchedulerSize"
                }
              },
              "description": "The size of the scheduler pod."
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:UpdateStandardDeploymentRequestType"
                }
              },
              "description": "The type of the Deployment."
            },
            {
              "key": "workerQueues",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:WorkerQueueRequest"
                        }
                      }
                    }
                  }
                }
              },
              "description": "A list of the Deployment's worker queues. Applies only when `Executor` is `CELERY`. All Deployments need at least 1 worker queue called `default`."
            },
            {
              "key": "workloadIdentity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The Deployment's workload identity."
            },
            {
              "key": "workspaceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The ID of the Workspace to which the Deployment belongs."
            }
          ]
        }
      },
      "type_:WorkerMachineName": {
        "name": "WorkerMachineName",
        "description": "The machine's name.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "A5"
            },
            {
              "value": "A10"
            },
            {
              "value": "A20"
            },
            {
              "value": "A40"
            },
            {
              "value": "A60"
            },
            {
              "value": "A120"
            },
            {
              "value": "A160"
            }
          ]
        }
      },
      "type_:WorkerMachine": {
        "name": "WorkerMachine",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "concurrency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:Range"
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:WorkerMachineName"
                }
              },
              "description": "The machine's name."
            },
            {
              "key": "spec",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:MachineSpec"
                }
              }
            }
          ]
        }
      },
      "type_:WorkerQueue": {
        "name": "WorkerQueue",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "astroMachine",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The Astro machine size for each worker node in the queue. For Astro Hosted only."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The worker queue's ID."
            },
            {
              "key": "isDefault",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the worker queue is the default worker queue in the Deployment."
            },
            {
              "key": "maxWorkerCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The maximum number of workers that can run at once."
            },
            {
              "key": "minWorkerCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The minimum number of workers running at once."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The worker queue's name."
            },
            {
              "key": "nodePoolId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The node pool ID associated with the worker queue."
            },
            {
              "key": "podCpu",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The maximum number of CPU units available for a worker node. Units are in number of CPU cores."
            },
            {
              "key": "podMemory",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The maximum amount of memory available for a worker node. Units are in Gibibytes or `Gi`."
            },
            {
              "key": "workerConcurrency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The maximum number of concurrent tasks that a worker Pod can run at a time."
            }
          ]
        }
      },
      "type_:WorkerQueueOptions": {
        "name": "WorkerQueueOptions",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "maxWorkers",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:Range"
                }
              }
            },
            {
              "key": "minWorkers",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:Range"
                }
              }
            },
            {
              "key": "workerConcurrency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:Range"
                }
              }
            }
          ]
        }
      },
      "type_:WorkerQueueRequestAstroMachine": {
        "name": "WorkerQueueRequestAstroMachine",
        "description": "The Astro machine for each worker in the queue. For Astro Hosted only.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "A5"
            },
            {
              "value": "A10"
            },
            {
              "value": "A20"
            },
            {
              "value": "A40"
            },
            {
              "value": "A60"
            },
            {
              "value": "A120"
            },
            {
              "value": "A160"
            }
          ]
        }
      },
      "type_:WorkerQueueRequest": {
        "name": "WorkerQueueRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "astroMachine",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:WorkerQueueRequestAstroMachine"
                }
              },
              "description": "The Astro machine for each worker in the queue. For Astro Hosted only."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The worker queue's ID. If not provided, a new worker queue will be created."
            },
            {
              "key": "isDefault",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the worker queue is the default worker queue on the Deployment."
            },
            {
              "key": "maxWorkerCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The maximum number of workers that can run at once."
            },
            {
              "key": "minWorkerCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The minimum number of workers running at once."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The worker queue's name."
            },
            {
              "key": "workerConcurrency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The maximum number of concurrent tasks that a worker Pod can run at a time."
            }
          ]
        }
      },
      "type_:WorkloadIdentityOption": {
        "name": "WorkloadIdentityOption",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The workload identity label."
            },
            {
              "key": "role",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The workload identity role."
            }
          ]
        }
      },
      "type_:Workspace": {
        "name": "Workspace",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cicdEnforcedDefault",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether CI/CD deploys are enforced by default."
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "The time when the Workspace was created in UTC, formatted as `YYYY-MM-DDTHH:MM:SSZ`"
            },
            {
              "key": "createdBy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BasicSubjectProfile"
                    }
                  }
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The Workspace's description."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The Workspace's ID."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The Workspace's name."
            },
            {
              "key": "organizationId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The ID of the organization to which the workspace belongs."
            },
            {
              "key": "organizationName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The name of the Organization to which the Workspace belongs."
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "The time when the Workspace was updated in UTC, formatted as `YYYY-MM-DDTHH:MM:SSZ`"
            },
            {
              "key": "updatedBy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BasicSubjectProfile"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:WorkspacesPaginated": {
        "name": "WorkspacesPaginated",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "limit",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The maximum number of workspaces that can be retrieved per page."
            },
            {
              "key": "offset",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The offset for the current page of workspaces in the complete result."
            },
            {
              "key": "totalCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The total number of Workspaces in the paginated result."
            },
            {
              "key": "workspaces",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Workspace"
                    }
                  }
                }
              },
              "description": "An array of Workspace objects representing a list of workspaces."
            }
          ]
        }
      }
    },
    "subpackages": {
      "subpackage_organization": {
        "id": "subpackage_organization",
        "name": "Organization",
        "displayName": "Organization"
      },
      "subpackage_options": {
        "id": "subpackage_options",
        "name": "Options",
        "displayName": "Options"
      },
      "subpackage_cluster": {
        "id": "subpackage_cluster",
        "name": "Cluster",
        "displayName": "Cluster"
      },
      "subpackage_deployment": {
        "id": "subpackage_deployment",
        "name": "deployment"
      },
      "subpackage_deploy": {
        "id": "subpackage_deploy",
        "name": "deploy"
      },
      "subpackage_workspace": {
        "id": "subpackage_workspace",
        "name": "Workspace",
        "displayName": "Workspace"
      }
    },
    "auths": {
      "default": {
        "type": "bearerAuth",
        "tokenName": "token"
      }
    }
  },
  {
    "id": "a4030141-9ea5-4ac9-8d2b-f44b815980a8",
    "endpoints": {
      "subpackage_authorization.ListPermissionGroups": {
        "id": "subpackage_authorization.ListPermissionGroups",
        "namespace": [
          "subpackage_authorization"
        ],
        "description": "List the available permissions you can grant to a custom role.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/authorization/permission-groups"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/iam/v1beta1"
          }
        ],
        "queryParameters": [
          {
            "key": "scopeType",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_authorization:ListPermissionGroupsRequestScopeType"
                  }
                }
              }
            },
            "description": "Filter the returned permissions based on the scope they apply to. Note that currently, the only available permissions are in the `DEPLOYMENT` scope."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:PermissionGroup"
                  }
                }
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/authorization/permission-groups",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": [
                {
                  "description": "Astro notification channel defines where alert messages can be sent. For example, alert messages issued via email or slack.",
                  "name": "workspace.notificationChannels",
                  "permissions": [
                    {
                      "action": "get",
                      "description": "Subject is permitted to get the scope."
                    }
                  ],
                  "scope": "Workspace NotificationChannels"
                }
              ]
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/iam/v1beta1/authorization/permission-groups \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/authorization/permission-groups",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "scopeType": "DEPLOYMENT"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/iam/v1beta1/authorization/permission-groups \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d scopeType=DEPLOYMENT",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/authorization/permission-groups",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {
              "scopeType": "DEPLOYMENT"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/iam/v1beta1/authorization/permission-groups \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d scopeType=DEPLOYMENT",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/authorization/permission-groups",
            "responseStatusCode": 403,
            "pathParameters": {},
            "queryParameters": {
              "scopeType": "DEPLOYMENT"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/iam/v1beta1/authorization/permission-groups \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d scopeType=DEPLOYMENT",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/authorization/permission-groups",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "scopeType": "DEPLOYMENT"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/iam/v1beta1/authorization/permission-groups \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d scopeType=DEPLOYMENT",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_invite.CreateUserInvite": {
        "id": "subpackage_invite.CreateUserInvite",
        "namespace": [
          "subpackage_invite"
        ],
        "description": "Invite a user to an Organization.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/invites"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/iam/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization to invite the user to."
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "inviteeEmail",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The email of the user to invite."
                },
                {
                  "key": "role",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_invite:CreateUserInviteRequestRole"
                    }
                  },
                  "description": "The user's Organization role."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Invite"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/invites",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "inviteeEmail": "user1@company.com",
                "role": "ORGANIZATION_OWNER"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "expiresAt": "2022-11-22T04:37:12Z",
                "inviteId": "clm9t1g17000008jmfsw20lsz",
                "invitee": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "inviter": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "organizationId": "clm9t0gbt000108jv4f1cfu8u",
                "organizationName": "My Organization",
                "userId": "clm9t060z000008jv3mira7x5"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/organizationId/invites \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"inviteeEmail\": \"user1@company.com\",\n  \"role\": \"ORGANIZATION_OWNER\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/invites",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "inviteeEmail": "string",
                "role": "ORGANIZATION_OWNER"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/invites \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"inviteeEmail\": \"string\",\n  \"role\": \"ORGANIZATION_OWNER\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/invites",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "inviteeEmail": "string",
                "role": "ORGANIZATION_OWNER"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/invites \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"inviteeEmail\": \"string\",\n  \"role\": \"ORGANIZATION_OWNER\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/invites",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "inviteeEmail": "string",
                "role": "ORGANIZATION_OWNER"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/invites \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"inviteeEmail\": \"string\",\n  \"role\": \"ORGANIZATION_OWNER\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/invites",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "inviteeEmail": "string",
                "role": "ORGANIZATION_OWNER"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/invites \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"inviteeEmail\": \"string\",\n  \"role\": \"ORGANIZATION_OWNER\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/invites",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "inviteeEmail": "string",
                "role": "ORGANIZATION_OWNER"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/invites \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"inviteeEmail\": \"string\",\n  \"role\": \"ORGANIZATION_OWNER\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_invite.DeleteUserInvite": {
        "id": "subpackage_invite.DeleteUserInvite",
        "namespace": [
          "subpackage_invite"
        ],
        "description": "Delete an existing user invite.",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/invites/"
          },
          {
            "type": "pathParameter",
            "value": "inviteId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/iam/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization where the user was invited to."
          },
          {
            "key": "inviteId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The invite's ID."
          }
        ],
        "requests": [],
        "responses": [],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/invites/inviteId",
            "responseStatusCode": 204,
            "pathParameters": {
              "organizationId": "organizationId",
              "inviteId": "inviteId"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/iam/v1beta1/organizations/organizationId/invites/inviteId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/invites/:inviteId",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId",
              "inviteId": ":inviteId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/invites/:inviteId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/invites/:inviteId",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId",
              "inviteId": ":inviteId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/invites/:inviteId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/invites/:inviteId",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId",
              "inviteId": ":inviteId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/invites/:inviteId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/invites/:inviteId",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId",
              "inviteId": ":inviteId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/invites/:inviteId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/invites/:inviteId",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId",
              "inviteId": ":inviteId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/invites/:inviteId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_role.ListRoleTemplates": {
        "id": "subpackage_role.ListRoleTemplates",
        "namespace": [
          "subpackage_role"
        ],
        "description": "Get a list of available role templates in an Organization. A role template can be used as the basis for creating a new custom role.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/role-templates"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/iam/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The Organization's ID."
          }
        ],
        "queryParameters": [
          {
            "key": "scopeTypes",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_role:ListRoleTemplatesRequestScopeTypesItem"
                  }
                }
              }
            },
            "description": "Filter role templates based on the scope of permissions they include."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:RoleTemplate"
                  }
                }
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/role-templates",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": [
                {
                  "name": "Deployment_Viewer",
                  "permissions": [
                    "permissions"
                  ],
                  "scopeType": "DEPLOYMENT",
                  "description": "Subject can only view deployments."
                }
              ]
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/iam/v1beta1/organizations/organizationId/role-templates \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/role-templates",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "scopeTypes": "DEPLOYMENT"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/role-templates \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d scopeTypes=DEPLOYMENT",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/role-templates",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "scopeTypes": "DEPLOYMENT"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/role-templates \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d scopeTypes=DEPLOYMENT",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/role-templates",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "scopeTypes": "DEPLOYMENT"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/role-templates \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d scopeTypes=DEPLOYMENT",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/role-templates",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "scopeTypes": "DEPLOYMENT"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/role-templates \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d scopeTypes=DEPLOYMENT",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/role-templates",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "scopeTypes": "DEPLOYMENT"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/role-templates \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d scopeTypes=DEPLOYMENT",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_role.ListRoles": {
        "id": "subpackage_role.ListRoles",
        "namespace": [
          "subpackage_role"
        ],
        "description": "List available user roles in an Organization.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/roles"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/iam/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The Organization's ID."
          }
        ],
        "queryParameters": [
          {
            "key": "includeDefaultRoles",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "Whether to include default Astro roles in the returned list."
          },
          {
            "key": "scopeTypes",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_role:ListRolesRequestScopeTypesItem"
                  }
                }
              }
            },
            "description": "Filter the list of roles based on the scope of each role."
          },
          {
            "key": "offset",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Offset for pagination."
          },
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Limit for pagination."
          },
          {
            "key": "sorts",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_role:ListRolesRequestSortsItem"
                  }
                }
              }
            },
            "description": "Sorting criteria, each criterion should conform to format 'fieldName:asc' or 'fieldName:desc'."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RolesPaginated"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/roles",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "limit": 1,
                "offset": 1,
                "roles": [
                  {
                    "createdAt": "createdAt",
                    "createdBy": {
                      "id": "clm8qv74h000008mlf08scq7k",
                      "apiTokenName": "my-token",
                      "avatarUrl": "https://avatar.url",
                      "fullName": "Jane Doe",
                      "username": "user1@company.com"
                    },
                    "id": "cluc9tapx000901qn2xrgqdmn",
                    "name": "Deployment_Viewer",
                    "restrictedWorkspaceIds": [
                      "restrictedWorkspaceIds"
                    ],
                    "scopeType": "DEPLOYMENT",
                    "updatedAt": "updatedAt",
                    "updatedBy": {
                      "id": "clm8qv74h000008mlf08scq7k",
                      "apiTokenName": "my-token",
                      "avatarUrl": "https://avatar.url",
                      "fullName": "Jane Doe",
                      "username": "user1@company.com"
                    },
                    "description": "Subject can only view deployments."
                  }
                ],
                "totalCount": 1,
                "defaultRoles": [
                  {
                    "name": "Deployment_Viewer",
                    "permissions": [
                      "permissions"
                    ],
                    "scopeType": "DEPLOYMENT",
                    "description": "Subject can only view deployments."
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/iam/v1beta1/organizations/organizationId/roles \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/roles",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "includeDefaultRoles": true,
              "scopeTypes": "DEPLOYMENT"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/roles \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d includeDefaultRoles=true \\\n     -d scopeTypes=DEPLOYMENT",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/roles",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "includeDefaultRoles": true,
              "scopeTypes": "DEPLOYMENT"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/roles \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d includeDefaultRoles=true \\\n     -d scopeTypes=DEPLOYMENT",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/roles",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "includeDefaultRoles": true,
              "scopeTypes": "DEPLOYMENT"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/roles \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d includeDefaultRoles=true \\\n     -d scopeTypes=DEPLOYMENT",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/roles",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "includeDefaultRoles": true,
              "scopeTypes": "DEPLOYMENT"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/roles \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d includeDefaultRoles=true \\\n     -d scopeTypes=DEPLOYMENT",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/roles",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "includeDefaultRoles": true,
              "scopeTypes": "DEPLOYMENT"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/roles \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d includeDefaultRoles=true \\\n     -d scopeTypes=DEPLOYMENT",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_role.CreateCustomRole": {
        "id": "subpackage_role.CreateCustomRole",
        "namespace": [
          "subpackage_role"
        ],
        "description": "Create a custom role that you can assign to users, Teams, and API tokens.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/roles"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/iam/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization where you want to create the custom role."
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "description",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "The role's description."
                },
                {
                  "key": "name",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The role's name."
                },
                {
                  "key": "permissions",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "The permissions included in the role."
                },
                {
                  "key": "restrictedWorkspaceIds",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "list",
                          "itemShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "The IDs of the Workspaces that the role is restricted to."
                },
                {
                  "key": "scopeType",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "DEPLOYMENT"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RoleWithPermission"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/roles",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "Deployment_Viewer",
                "permissions": [
                  "permissions"
                ],
                "scopeType": "DEPLOYMENT",
                "description": "Subject can only view deployments."
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "createdAt": "createdAt",
                "createdBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "id": "cluc9tapx000901qn2xrgqdmn",
                "name": "Deployment_Viewer",
                "permissions": [
                  "permissions"
                ],
                "restrictedWorkspaceIds": [
                  "restrictedWorkspaceIds"
                ],
                "scopeType": "DEPLOYMENT",
                "updatedAt": "updatedAt",
                "updatedBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "description": "Subject can only view deployments."
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/organizationId/roles \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"Deployment_Viewer\",\n  \"permissions\": [\n    \"permissions\"\n  ],\n  \"scopeType\": \"DEPLOYMENT\",\n  \"description\": \"Subject can only view deployments.\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/roles",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "permissions": [
                  "string"
                ],
                "scopeType": "DEPLOYMENT"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/roles \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"permissions\": [\n    \"string\"\n  ],\n  \"scopeType\": \"DEPLOYMENT\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/roles",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "permissions": [
                  "string"
                ],
                "scopeType": "DEPLOYMENT"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/roles \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"permissions\": [\n    \"string\"\n  ],\n  \"scopeType\": \"DEPLOYMENT\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/roles",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "permissions": [
                  "string"
                ],
                "scopeType": "DEPLOYMENT"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/roles \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"permissions\": [\n    \"string\"\n  ],\n  \"scopeType\": \"DEPLOYMENT\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/roles",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "permissions": [
                  "string"
                ],
                "scopeType": "DEPLOYMENT"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/roles \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"permissions\": [\n    \"string\"\n  ],\n  \"scopeType\": \"DEPLOYMENT\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/roles",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "permissions": [
                  "string"
                ],
                "scopeType": "DEPLOYMENT"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/roles \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"permissions\": [\n    \"string\"\n  ],\n  \"scopeType\": \"DEPLOYMENT\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_role.UpdateCustomRole": {
        "id": "subpackage_role.UpdateCustomRole",
        "namespace": [
          "subpackage_role"
        ],
        "description": "Update the metadata or included permissions for a custom role.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/roles/"
          },
          {
            "type": "pathParameter",
            "value": "customRoleId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/iam/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization to which the role belongs."
          },
          {
            "key": "customRoleId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The custom role's ID."
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "description",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "The role's description."
                },
                {
                  "key": "name",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The role's name."
                },
                {
                  "key": "permissions",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "The permissions included in the role."
                },
                {
                  "key": "restrictedWorkspaceIds",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "list",
                          "itemShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "The IDs of the Workspaces that the role is restricted to."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RoleWithPermission"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/roles/customRoleId",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId",
              "customRoleId": "customRoleId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "Deployment_Viewer",
                "permissions": [
                  "permissions"
                ],
                "description": "Subject can only view deployments."
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "createdAt": "createdAt",
                "createdBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "id": "cluc9tapx000901qn2xrgqdmn",
                "name": "Deployment_Viewer",
                "permissions": [
                  "permissions"
                ],
                "restrictedWorkspaceIds": [
                  "restrictedWorkspaceIds"
                ],
                "scopeType": "DEPLOYMENT",
                "updatedAt": "updatedAt",
                "updatedBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "description": "Subject can only view deployments."
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/organizationId/roles/customRoleId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"Deployment_Viewer\",\n  \"permissions\": [\n    \"permissions\"\n  ],\n  \"description\": \"Subject can only view deployments.\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/roles/:customRoleId",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId",
              "customRoleId": ":customRoleId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "permissions": [
                  "string"
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/roles/:customRoleId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"permissions\": [\n    \"string\"\n  ]\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/roles/:customRoleId",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId",
              "customRoleId": ":customRoleId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "permissions": [
                  "string"
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/roles/:customRoleId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"permissions\": [\n    \"string\"\n  ]\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/roles/:customRoleId",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId",
              "customRoleId": ":customRoleId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "permissions": [
                  "string"
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/roles/:customRoleId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"permissions\": [\n    \"string\"\n  ]\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/roles/:customRoleId",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId",
              "customRoleId": ":customRoleId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "permissions": [
                  "string"
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/roles/:customRoleId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"permissions\": [\n    \"string\"\n  ]\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/roles/:customRoleId",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId",
              "customRoleId": ":customRoleId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "permissions": [
                  "string"
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/roles/:customRoleId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"permissions\": [\n    \"string\"\n  ]\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_role.DeleteCustomRole": {
        "id": "subpackage_role.DeleteCustomRole",
        "namespace": [
          "subpackage_role"
        ],
        "description": "Delete a custom role.",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/roles/"
          },
          {
            "type": "pathParameter",
            "value": "customRoleId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/iam/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization to which the role belongs."
          },
          {
            "key": "customRoleId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the role to delete."
          }
        ],
        "requests": [],
        "responses": [],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/roles/customRoleId",
            "responseStatusCode": 204,
            "pathParameters": {
              "organizationId": "organizationId",
              "customRoleId": "customRoleId"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/iam/v1beta1/organizations/organizationId/roles/customRoleId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/roles/:customRoleId",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId",
              "customRoleId": ":customRoleId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/roles/:customRoleId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/roles/:customRoleId",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId",
              "customRoleId": ":customRoleId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/roles/:customRoleId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/roles/:customRoleId",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId",
              "customRoleId": ":customRoleId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/roles/:customRoleId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/roles/:customRoleId",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId",
              "customRoleId": ":customRoleId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/roles/:customRoleId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/roles/:customRoleId",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId",
              "customRoleId": ":customRoleId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/roles/:customRoleId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_role.GetCustomRole": {
        "id": "subpackage_role.GetCustomRole",
        "namespace": [
          "subpackage_role"
        ],
        "description": "Get details about a custom role.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/roles/"
          },
          {
            "type": "pathParameter",
            "value": "roleId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/iam/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization to which the role belongs."
          },
          {
            "key": "roleId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The role's ID."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RoleWithPermission"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/roles/roleId",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId",
              "roleId": "roleId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "createdAt": "createdAt",
                "createdBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "id": "cluc9tapx000901qn2xrgqdmn",
                "name": "Deployment_Viewer",
                "permissions": [
                  "permissions"
                ],
                "restrictedWorkspaceIds": [
                  "restrictedWorkspaceIds"
                ],
                "scopeType": "DEPLOYMENT",
                "updatedAt": "updatedAt",
                "updatedBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "description": "Subject can only view deployments."
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/iam/v1beta1/organizations/organizationId/roles/roleId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/roles/:roleId",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId",
              "roleId": ":roleId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/roles/:roleId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/roles/:roleId",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId",
              "roleId": ":roleId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/roles/:roleId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/roles/:roleId",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId",
              "roleId": ":roleId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/roles/:roleId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/roles/:roleId",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId",
              "roleId": ":roleId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/roles/:roleId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/roles/:roleId",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId",
              "roleId": ":roleId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/roles/:roleId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_team.ListTeams": {
        "id": "subpackage_team.ListTeams",
        "namespace": [
          "subpackage_team"
        ],
        "description": "List all Teams in an Organization.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/teams"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/iam/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of the Organization to list Teams for."
          }
        ],
        "queryParameters": [
          {
            "key": "names",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "A list of names for Teams to filter by. The API returns details only for the specified Teams."
          },
          {
            "key": "offset",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Offset for pagination"
          },
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Limit for pagination"
          },
          {
            "key": "sorts",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_team:ListTeamsRequestSortsItem"
                  }
                }
              }
            },
            "description": "Sorting criteria, each criterion should conform to format 'fieldName:asc' or 'fieldName:desc'"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:TeamsPaginated"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/teams",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "limit": 10,
                "offset": 0,
                "teams": [
                  {
                    "createdAt": "2022-11-22T04:37:12Z",
                    "id": "clma5ftgk000008mhgev00k7d",
                    "isIdpManaged": false,
                    "name": "My Team",
                    "organizationId": "clma5g8q6000108mh88g27k1y",
                    "organizationRole": "ORGANIZATION_OWNER",
                    "updatedAt": "2022-11-22T04:37:12Z",
                    "createdBy": {
                      "id": "clm8qv74h000008mlf08scq7k",
                      "apiTokenName": "my-token",
                      "avatarUrl": "https://avatar.url",
                      "fullName": "Jane Doe",
                      "username": "user1@company.com"
                    },
                    "deploymentRoles": [
                      {
                        "deploymentId": "clm8t5u4q000008jq4qoc3031",
                        "role": "DEPLOYMENT_ADMIN"
                      }
                    ],
                    "description": "My Team description",
                    "rolesCount": 1,
                    "updatedBy": {
                      "id": "clm8qv74h000008mlf08scq7k",
                      "apiTokenName": "my-token",
                      "avatarUrl": "https://avatar.url",
                      "fullName": "Jane Doe",
                      "username": "user1@company.com"
                    },
                    "workspaceRoles": [
                      {
                        "role": "WORKSPACE_OWNER",
                        "workspaceId": "clm8t5u4q000008jq4qoc3036"
                      }
                    ]
                  }
                ],
                "totalCount": 100
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/iam/v1beta1/organizations/organizationId/teams \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "names": "string",
              "offset": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d names=string \\\n     -d offset=0",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "names": "string",
              "offset": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d names=string \\\n     -d offset=0",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "names": "string",
              "offset": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d names=string \\\n     -d offset=0",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "names": "string",
              "offset": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d names=string \\\n     -d offset=0",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "names": "string",
              "offset": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d names=string \\\n     -d offset=0",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_team.CreateTeam": {
        "id": "subpackage_team.CreateTeam",
        "namespace": [
          "subpackage_team"
        ],
        "description": "Create a Team in an Organization. A Team is a group of users that have the same set of permissions in an Organization or Workspace.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/teams"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/iam/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization where the Team is created."
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "description",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "The Team's description."
                },
                {
                  "key": "memberIds",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "list",
                          "itemShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "The list of IDs for users to add to the Team."
                },
                {
                  "key": "name",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The Team's name."
                },
                {
                  "key": "organizationRole",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_team:CreateTeamRequestOrganizationRole"
                        }
                      }
                    }
                  },
                  "description": "The Team's Organization role."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Team"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/teams",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "My Team",
                "description": "My Team description"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "createdAt": "2022-11-22T04:37:12Z",
                "id": "clma5ftgk000008mhgev00k7d",
                "isIdpManaged": false,
                "name": "My Team",
                "organizationId": "clma5g8q6000108mh88g27k1y",
                "organizationRole": "ORGANIZATION_OWNER",
                "updatedAt": "2022-11-22T04:37:12Z",
                "createdBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "deploymentRoles": [
                  {
                    "deploymentId": "clm8t5u4q000008jq4qoc3031",
                    "role": "DEPLOYMENT_ADMIN"
                  }
                ],
                "description": "My Team description",
                "rolesCount": 1,
                "updatedBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "workspaceRoles": [
                  {
                    "role": "WORKSPACE_OWNER",
                    "workspaceId": "clm8t5u4q000008jq4qoc3036"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/organizationId/teams \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"My Team\",\n  \"description\": \"My Team description\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_team.GetTeam": {
        "id": "subpackage_team.GetTeam",
        "namespace": [
          "subpackage_team"
        ],
        "description": "Retrieve details about a specific Team.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/teams/"
          },
          {
            "type": "pathParameter",
            "value": "teamId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/iam/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization to which the Team belongs."
          },
          {
            "key": "teamId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Team to retrieve data for."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Team"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/teams/teamId",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId",
              "teamId": "teamId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "createdAt": "2022-11-22T04:37:12Z",
                "id": "clma5ftgk000008mhgev00k7d",
                "isIdpManaged": false,
                "name": "My Team",
                "organizationId": "clma5g8q6000108mh88g27k1y",
                "organizationRole": "ORGANIZATION_OWNER",
                "updatedAt": "2022-11-22T04:37:12Z",
                "createdBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "deploymentRoles": [
                  {
                    "deploymentId": "clm8t5u4q000008jq4qoc3031",
                    "role": "DEPLOYMENT_ADMIN"
                  }
                ],
                "description": "My Team description",
                "rolesCount": 1,
                "updatedBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "workspaceRoles": [
                  {
                    "role": "WORKSPACE_OWNER",
                    "workspaceId": "clm8t5u4q000008jq4qoc3036"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/iam/v1beta1/organizations/organizationId/teams/teamId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_team.UpdateTeam": {
        "id": "subpackage_team.UpdateTeam",
        "namespace": [
          "subpackage_team"
        ],
        "description": "Update a Team's details.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/teams/"
          },
          {
            "type": "pathParameter",
            "value": "teamId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/iam/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization to which the Team belongs."
          },
          {
            "key": "teamId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Team to update."
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "description",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "The Team's description."
                },
                {
                  "key": "name",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The Team's name."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Team"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/teams/teamId",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId",
              "teamId": "teamId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "My Team",
                "description": "My Team Description"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "createdAt": "2022-11-22T04:37:12Z",
                "id": "clma5ftgk000008mhgev00k7d",
                "isIdpManaged": false,
                "name": "My Team",
                "organizationId": "clma5g8q6000108mh88g27k1y",
                "organizationRole": "ORGANIZATION_OWNER",
                "updatedAt": "2022-11-22T04:37:12Z",
                "createdBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "deploymentRoles": [
                  {
                    "deploymentId": "clm8t5u4q000008jq4qoc3031",
                    "role": "DEPLOYMENT_ADMIN"
                  }
                ],
                "description": "My Team description",
                "rolesCount": 1,
                "updatedBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "workspaceRoles": [
                  {
                    "role": "WORKSPACE_OWNER",
                    "workspaceId": "clm8t5u4q000008jq4qoc3036"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/organizationId/teams/teamId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"My Team\",\n  \"description\": \"My Team Description\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_team.DeleteTeam": {
        "id": "subpackage_team.DeleteTeam",
        "namespace": [
          "subpackage_team"
        ],
        "description": "Delete a Team. Deleting a Team will remove all permissions associated with the Team. Users that previously belonged to the Team will no longer have these permissions.",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/teams/"
          },
          {
            "type": "pathParameter",
            "value": "teamId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/iam/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization to delete the Team from."
          },
          {
            "key": "teamId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Team to delete."
          }
        ],
        "requests": [],
        "responses": [],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/teams/teamId",
            "responseStatusCode": 204,
            "pathParameters": {
              "organizationId": "organizationId",
              "teamId": "teamId"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/iam/v1beta1/organizations/organizationId/teams/teamId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_team.ListTeamMembers": {
        "id": "subpackage_team.ListTeamMembers",
        "namespace": [
          "subpackage_team"
        ],
        "description": "List the details about all users that belong to a specific Team.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/teams/"
          },
          {
            "type": "pathParameter",
            "value": "teamId"
          },
          {
            "type": "literal",
            "value": "/members"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/iam/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization to which the Team belongs."
          },
          {
            "key": "teamId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Team to retrieve member information for."
          }
        ],
        "queryParameters": [
          {
            "key": "offset",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Offset for pagination"
          },
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Limit for pagination"
          },
          {
            "key": "sorts",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_team:ListTeamMembersRequestSortsItem"
                  }
                }
              }
            },
            "description": "Sorting criteria, each criterion should conform to format 'fieldName:asc' or 'fieldName:desc'"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:TeamMembersPaginated"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/teams/teamId/members",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId",
              "teamId": "teamId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "limit": 10,
                "offset": 0,
                "teamMembers": [
                  {
                    "userId": "clma5vzk2000108k20jhq3f7n",
                    "username": "user1@company.com",
                    "avatarUrl": "https://avatar.url",
                    "createdAt": "2022-11-22T04:37:12Z",
                    "fullName": "Jane Doe"
                  }
                ],
                "totalCount": 100
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/iam/v1beta1/organizations/organizationId/teams/teamId/members \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId/members",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId"
            },
            "queryParameters": {
              "offset": 0,
              "limit": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId/members \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d offset=0 \\\n     -d limit=0",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId/members",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId"
            },
            "queryParameters": {
              "offset": 0,
              "limit": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId/members \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d offset=0 \\\n     -d limit=0",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId/members",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId"
            },
            "queryParameters": {
              "offset": 0,
              "limit": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId/members \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d offset=0 \\\n     -d limit=0",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId/members",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId"
            },
            "queryParameters": {
              "offset": 0,
              "limit": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId/members \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d offset=0 \\\n     -d limit=0",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId/members",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId"
            },
            "queryParameters": {
              "offset": 0,
              "limit": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId/members \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d offset=0 \\\n     -d limit=0",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_team.AddTeamMembers": {
        "id": "subpackage_team.AddTeamMembers",
        "namespace": [
          "subpackage_team"
        ],
        "description": "Add members to a team",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/teams/"
          },
          {
            "type": "pathParameter",
            "value": "teamId"
          },
          {
            "type": "literal",
            "value": "/members"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/iam/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "organization ID"
          },
          {
            "key": "teamId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "team ID"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "memberIds",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "The list of IDs for users to add to the Team."
                }
              ]
            }
          }
        ],
        "responses": [],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/teams/teamId/members",
            "responseStatusCode": 204,
            "pathParameters": {
              "organizationId": "organizationId",
              "teamId": "teamId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "memberIds": [
                  "memberIds"
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/organizationId/teams/teamId/members \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"memberIds\": [\n    \"memberIds\"\n  ]\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId/members",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "memberIds": [
                  "string"
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId/members \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"memberIds\": [\n    \"string\"\n  ]\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId/members",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "memberIds": [
                  "string"
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId/members \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"memberIds\": [\n    \"string\"\n  ]\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId/members",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "memberIds": [
                  "string"
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId/members \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"memberIds\": [\n    \"string\"\n  ]\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId/members",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "memberIds": [
                  "string"
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId/members \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"memberIds\": [\n    \"string\"\n  ]\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId/members",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "memberIds": [
                  "string"
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId/members \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"memberIds\": [\n    \"string\"\n  ]\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_team.RemoveTeamMember": {
        "id": "subpackage_team.RemoveTeamMember",
        "namespace": [
          "subpackage_team"
        ],
        "description": "Remove a user from a Team. The user loses all permissions associated with the Team.",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/teams/"
          },
          {
            "type": "pathParameter",
            "value": "teamId"
          },
          {
            "type": "literal",
            "value": "/members/"
          },
          {
            "type": "pathParameter",
            "value": "memberId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/iam/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization to which the user belongs."
          },
          {
            "key": "teamId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Team to remove the user from."
          },
          {
            "key": "memberId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the user to remove."
          }
        ],
        "requests": [],
        "responses": [],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/teams/teamId/members/memberId",
            "responseStatusCode": 204,
            "pathParameters": {
              "organizationId": "organizationId",
              "teamId": "teamId",
              "memberId": "memberId"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/iam/v1beta1/organizations/organizationId/teams/teamId/members/memberId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId/members/:memberId",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId",
              "memberId": ":memberId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId/members/:memberId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId/members/:memberId",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId",
              "memberId": ":memberId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId/members/:memberId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId/members/:memberId",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId",
              "memberId": ":memberId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId/members/:memberId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId/members/:memberId",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId",
              "memberId": ":memberId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId/members/:memberId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId/members/:memberId",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId",
              "memberId": ":memberId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId/members/:memberId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_team.UpdateTeamRoles": {
        "id": "subpackage_team.UpdateTeamRoles",
        "namespace": [
          "subpackage_team"
        ],
        "description": "Update Organization and Workspace roles for a Team.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/teams/"
          },
          {
            "type": "pathParameter",
            "value": "teamId"
          },
          {
            "type": "literal",
            "value": "/roles"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/iam/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization to which the Team belongs."
          },
          {
            "key": "teamId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Team to update roles for."
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "deploymentRoles",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "list",
                          "itemShape": {
                            "type": "alias",
                            "value": {
                              "type": "id",
                              "id": "type_:DeploymentRole"
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "The user's updated Deployment roles. The Deployments you specify must belong to the Team's Organization."
                },
                {
                  "key": "organizationRole",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_team:UpdateTeamRolesRequestOrganizationRole"
                    }
                  },
                  "description": "The Team's Organization roles."
                },
                {
                  "key": "workspaceRoles",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "list",
                          "itemShape": {
                            "type": "alias",
                            "value": {
                              "type": "id",
                              "id": "type_:WorkspaceRole"
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "The Team's updated Workspace roles. The Workspaces you specify must belong to the Team's Organization."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:SubjectRoles"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/teams/teamId/roles",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId",
              "teamId": "teamId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "organizationRole": "ORGANIZATION_OWNER",
                "deploymentRoles": [
                  {
                    "deploymentId": "clm8t5u4q000008jq4qoc3031",
                    "role": "DEPLOYMENT_ADMIN"
                  }
                ],
                "workspaceRoles": [
                  {
                    "role": "WORKSPACE_OWNER",
                    "workspaceId": "clm8t5u4q000008jq4qoc3036"
                  }
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "deploymentRoles": [
                  {
                    "deploymentId": "clm8t5u4q000008jq4qoc3031",
                    "role": "DEPLOYMENT_ADMIN"
                  }
                ],
                "organizationRole": "ORGANIZATION_OWNER",
                "workspaceRoles": [
                  {
                    "role": "WORKSPACE_OWNER",
                    "workspaceId": "clm8t5u4q000008jq4qoc3036"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/organizationId/teams/teamId/roles \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"organizationRole\": \"ORGANIZATION_OWNER\",\n  \"deploymentRoles\": [\n    {\n      \"deploymentId\": \"clm8t5u4q000008jq4qoc3031\",\n      \"role\": \"DEPLOYMENT_ADMIN\"\n    }\n  ],\n  \"workspaceRoles\": [\n    {\n      \"role\": \"WORKSPACE_OWNER\",\n      \"workspaceId\": \"clm8t5u4q000008jq4qoc3036\"\n    }\n  ]\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId/roles",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "organizationRole": "ORGANIZATION_OWNER"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId/roles \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"organizationRole\": \"ORGANIZATION_OWNER\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId/roles",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "organizationRole": "ORGANIZATION_OWNER"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId/roles \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"organizationRole\": \"ORGANIZATION_OWNER\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId/roles",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "organizationRole": "ORGANIZATION_OWNER"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId/roles \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"organizationRole\": \"ORGANIZATION_OWNER\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId/roles",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "organizationRole": "ORGANIZATION_OWNER"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId/roles \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"organizationRole\": \"ORGANIZATION_OWNER\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/teams/:teamId/roles",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId",
              "teamId": ":teamId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "organizationRole": "ORGANIZATION_OWNER"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/teams/:teamId/roles \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"organizationRole\": \"ORGANIZATION_OWNER\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_apiToken.ListApiTokens": {
        "id": "subpackage_apiToken.ListApiTokens",
        "namespace": [
          "subpackage_apiToken"
        ],
        "description": "List information about all API tokens from an Organization. Filters on Workspace when Workspace ID is provided. When `includeOnlyOrganizationTokens` is `true`, only Organization API tokens are returned.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/tokens"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/iam/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization to list tokens for."
          }
        ],
        "queryParameters": [
          {
            "key": "workspaceId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The ID of the Workspace to list API tokens for."
          },
          {
            "key": "deploymentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The ID of the Deployment to list API tokens for."
          },
          {
            "key": "includeOnlyOrganizationTokens",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "Whether to show only Organization API tokens."
          },
          {
            "key": "offset",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Offset for pagination"
          },
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Limit for pagination"
          },
          {
            "key": "sorts",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_apiToken:ListApiTokensRequestSortsItem"
                  }
                }
              }
            },
            "description": "Sorting criteria, each criterion should conform to format 'fieldName:asc' or 'fieldName:desc'"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiTokensPaginated"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/tokens",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "limit": 10,
                "offset": 0,
                "tokens": [
                  {
                    "createdAt": "2022-11-22T04:37:12Z",
                    "description": "my token description",
                    "id": "clm8q7f6q000008lcgyougpsk",
                    "name": "My token",
                    "shortToken": "short-token",
                    "startAt": "2022-11-22T04:37:12Z",
                    "type": "DEPLOYMENT",
                    "updatedAt": "2022-11-22T04:37:12Z",
                    "createdBy": {
                      "id": "clm8qv74h000008mlf08scq7k",
                      "apiTokenName": "my-token",
                      "avatarUrl": "https://avatar.url",
                      "fullName": "Jane Doe",
                      "username": "user1@company.com"
                    },
                    "endAt": "2022-11-22T04:37:12Z",
                    "expiryPeriodInDays": 30,
                    "lastUsedAt": "2022-11-22T04:37:12Z",
                    "roles": [
                      {
                        "entityId": "clm8sgvai000008l794psbkdv",
                        "entityType": "DEPLOYMENT",
                        "role": "WORKSPACE_MEMBER"
                      }
                    ],
                    "token": "token",
                    "updatedBy": {
                      "id": "clm8qv74h000008mlf08scq7k",
                      "apiTokenName": "my-token",
                      "avatarUrl": "https://avatar.url",
                      "fullName": "Jane Doe",
                      "username": "user1@company.com"
                    }
                  }
                ],
                "totalCount": 100
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/iam/v1beta1/organizations/organizationId/tokens \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "workspaceId": "string",
              "deploymentId": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d workspaceId=string \\\n     -d deploymentId=string",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "workspaceId": "string",
              "deploymentId": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d workspaceId=string \\\n     -d deploymentId=string",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "workspaceId": "string",
              "deploymentId": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d workspaceId=string \\\n     -d deploymentId=string",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "workspaceId": "string",
              "deploymentId": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d workspaceId=string \\\n     -d deploymentId=string",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "workspaceId": "string",
              "deploymentId": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d workspaceId=string \\\n     -d deploymentId=string",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_apiToken.CreateApiToken": {
        "id": "subpackage_apiToken.CreateApiToken",
        "namespace": [
          "subpackage_apiToken"
        ],
        "description": "Create an API token. An API token is an alphanumeric token that grants programmatic access to Astro for automated workflows. An API token can be scoped to an Organization or a Workspace.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/tokens"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/iam/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization where you want to create the token."
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "description",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "The description for the API token."
                },
                {
                  "key": "entityId",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "The ID of the Workspace or Deployment to which the API token is scoped. It is required if `Type` is `WORKSPACE` or `DEPLOYMENT`."
                },
                {
                  "key": "name",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The name of the API token."
                },
                {
                  "key": "role",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The role of the API token."
                },
                {
                  "key": "tokenExpiryPeriodInDays",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  },
                  "description": "The expiry period of the API token in days. If not specified, the token will never expire."
                },
                {
                  "key": "type",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_apiToken:CreateApiTokenRequestType"
                    }
                  },
                  "description": "The scope of the API token."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiToken"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/tokens",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "My token",
                "role": "WORKSPACE_OWNER",
                "type": "DEPLOYMENT",
                "description": "This is my API token",
                "entityId": "clm8pxjjw000008l23jm08hyu",
                "tokenExpiryPeriodInDays": 30
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "createdAt": "2022-11-22T04:37:12Z",
                "description": "my token description",
                "id": "clm8q7f6q000008lcgyougpsk",
                "name": "My token",
                "shortToken": "short-token",
                "startAt": "2022-11-22T04:37:12Z",
                "type": "DEPLOYMENT",
                "updatedAt": "2022-11-22T04:37:12Z",
                "createdBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "endAt": "2022-11-22T04:37:12Z",
                "expiryPeriodInDays": 30,
                "lastUsedAt": "2022-11-22T04:37:12Z",
                "roles": [
                  {
                    "entityId": "clm8sgvai000008l794psbkdv",
                    "entityType": "DEPLOYMENT",
                    "role": "WORKSPACE_MEMBER"
                  }
                ],
                "token": "token",
                "updatedBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/organizationId/tokens \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"My token\",\n  \"role\": \"WORKSPACE_OWNER\",\n  \"type\": \"DEPLOYMENT\",\n  \"description\": \"This is my API token\",\n  \"entityId\": \"clm8pxjjw000008l23jm08hyu\",\n  \"tokenExpiryPeriodInDays\": 30\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "role": "string",
                "type": "DEPLOYMENT"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"role\": \"string\",\n  \"type\": \"DEPLOYMENT\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "role": "string",
                "type": "DEPLOYMENT"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"role\": \"string\",\n  \"type\": \"DEPLOYMENT\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "role": "string",
                "type": "DEPLOYMENT"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"role\": \"string\",\n  \"type\": \"DEPLOYMENT\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "role": "string",
                "type": "DEPLOYMENT"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"role\": \"string\",\n  \"type\": \"DEPLOYMENT\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "role": "string",
                "type": "DEPLOYMENT"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"role\": \"string\",\n  \"type\": \"DEPLOYMENT\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_apiToken.GetApiToken": {
        "id": "subpackage_apiToken.GetApiToken",
        "namespace": [
          "subpackage_apiToken"
        ],
        "description": "Retrieve information about a specific API token.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/tokens/"
          },
          {
            "type": "pathParameter",
            "value": "tokenId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/iam/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization where you want to retrieve token information."
          },
          {
            "key": "tokenId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the token that you want to retrieve data for."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiToken"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/tokens/tokenId",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId",
              "tokenId": "tokenId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "createdAt": "2022-11-22T04:37:12Z",
                "description": "my token description",
                "id": "clm8q7f6q000008lcgyougpsk",
                "name": "My token",
                "shortToken": "short-token",
                "startAt": "2022-11-22T04:37:12Z",
                "type": "DEPLOYMENT",
                "updatedAt": "2022-11-22T04:37:12Z",
                "createdBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "endAt": "2022-11-22T04:37:12Z",
                "expiryPeriodInDays": 30,
                "lastUsedAt": "2022-11-22T04:37:12Z",
                "roles": [
                  {
                    "entityId": "clm8sgvai000008l794psbkdv",
                    "entityType": "DEPLOYMENT",
                    "role": "WORKSPACE_MEMBER"
                  }
                ],
                "token": "token",
                "updatedBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/iam/v1beta1/organizations/organizationId/tokens/tokenId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens/:tokenId",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId",
              "tokenId": ":tokenId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens/:tokenId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens/:tokenId",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId",
              "tokenId": ":tokenId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens/:tokenId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens/:tokenId",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId",
              "tokenId": ":tokenId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens/:tokenId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens/:tokenId",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId",
              "tokenId": ":tokenId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens/:tokenId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens/:tokenId",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId",
              "tokenId": ":tokenId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens/:tokenId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_apiToken.UpdateApiToken": {
        "id": "subpackage_apiToken.UpdateApiToken",
        "namespace": [
          "subpackage_apiToken"
        ],
        "description": "Update the name and description of an API token.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/tokens/"
          },
          {
            "type": "pathParameter",
            "value": "tokenId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/iam/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization where you want to update an API token."
          },
          {
            "key": "tokenId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The API token you want to update."
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "description",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "The description of the API token."
                },
                {
                  "key": "name",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The name of the API token."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiToken"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/tokens/tokenId",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId",
              "tokenId": "tokenId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "My token",
                "description": "This is my API token"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "createdAt": "2022-11-22T04:37:12Z",
                "description": "my token description",
                "id": "clm8q7f6q000008lcgyougpsk",
                "name": "My token",
                "shortToken": "short-token",
                "startAt": "2022-11-22T04:37:12Z",
                "type": "DEPLOYMENT",
                "updatedAt": "2022-11-22T04:37:12Z",
                "createdBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "endAt": "2022-11-22T04:37:12Z",
                "expiryPeriodInDays": 30,
                "lastUsedAt": "2022-11-22T04:37:12Z",
                "roles": [
                  {
                    "entityId": "clm8sgvai000008l794psbkdv",
                    "entityType": "DEPLOYMENT",
                    "role": "WORKSPACE_MEMBER"
                  }
                ],
                "token": "token",
                "updatedBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/organizationId/tokens/tokenId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"My token\",\n  \"description\": \"This is my API token\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens/:tokenId",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId",
              "tokenId": ":tokenId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens/:tokenId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens/:tokenId",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId",
              "tokenId": ":tokenId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens/:tokenId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens/:tokenId",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId",
              "tokenId": ":tokenId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens/:tokenId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens/:tokenId",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId",
              "tokenId": ":tokenId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens/:tokenId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens/:tokenId",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId",
              "tokenId": ":tokenId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens/:tokenId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_apiToken.DeleteApiToken": {
        "id": "subpackage_apiToken.DeleteApiToken",
        "namespace": [
          "subpackage_apiToken"
        ],
        "description": "Delete an API token. When you delete an API token, make sure that no existing automation workflows are using it. After it's deleted, an API token cannot be recovered.",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/tokens/"
          },
          {
            "type": "pathParameter",
            "value": "tokenId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/iam/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization where you want to delete the token."
          },
          {
            "key": "tokenId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The API token ID"
          }
        ],
        "requests": [],
        "responses": [],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/tokens/tokenId",
            "responseStatusCode": 204,
            "pathParameters": {
              "organizationId": "organizationId",
              "tokenId": "tokenId"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/iam/v1beta1/organizations/organizationId/tokens/tokenId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens/:tokenId",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId",
              "tokenId": ":tokenId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens/:tokenId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens/:tokenId",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId",
              "tokenId": ":tokenId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens/:tokenId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens/:tokenId",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId",
              "tokenId": ":tokenId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens/:tokenId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens/:tokenId",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId",
              "tokenId": ":tokenId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens/:tokenId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens/:tokenId",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId",
              "tokenId": ":tokenId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens/:tokenId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_apiToken.UpdateApiTokenRoles": {
        "id": "subpackage_apiToken.UpdateApiTokenRoles",
        "namespace": [
          "subpackage_apiToken"
        ],
        "description": "Update Workspace and Organization roles for an API token.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/tokens/"
          },
          {
            "type": "pathParameter",
            "value": "tokenId"
          },
          {
            "type": "literal",
            "value": "/roles"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/iam/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization where you want to update an API token."
          },
          {
            "key": "tokenId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The API token you want to update."
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "roles",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ApiTokenRole"
                        }
                      }
                    }
                  },
                  "description": "The roles of the API token."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:SubjectRoles"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/tokens/tokenId/roles",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId",
              "tokenId": "tokenId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "roles": [
                  {
                    "entityId": "clm8sgvai000008l794psbkdv",
                    "entityType": "DEPLOYMENT",
                    "role": "WORKSPACE_MEMBER"
                  }
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "deploymentRoles": [
                  {
                    "deploymentId": "clm8t5u4q000008jq4qoc3031",
                    "role": "DEPLOYMENT_ADMIN"
                  }
                ],
                "organizationRole": "ORGANIZATION_OWNER",
                "workspaceRoles": [
                  {
                    "role": "WORKSPACE_OWNER",
                    "workspaceId": "clm8t5u4q000008jq4qoc3036"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/organizationId/tokens/tokenId/roles \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"roles\": [\n    {\n      \"entityId\": \"clm8sgvai000008l794psbkdv\",\n      \"entityType\": \"DEPLOYMENT\",\n      \"role\": \"WORKSPACE_MEMBER\"\n    }\n  ]\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens/:tokenId/roles",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId",
              "tokenId": ":tokenId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "roles": [
                  {
                    "entityId": "string",
                    "entityType": "DEPLOYMENT",
                    "role": "string"
                  }
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens/:tokenId/roles \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"roles\": [\n    {\n      \"entityId\": \"string\",\n      \"entityType\": \"DEPLOYMENT\",\n      \"role\": \"string\"\n    }\n  ]\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens/:tokenId/roles",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId",
              "tokenId": ":tokenId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "roles": [
                  {
                    "entityId": "string",
                    "entityType": "DEPLOYMENT",
                    "role": "string"
                  }
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens/:tokenId/roles \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"roles\": [\n    {\n      \"entityId\": \"string\",\n      \"entityType\": \"DEPLOYMENT\",\n      \"role\": \"string\"\n    }\n  ]\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens/:tokenId/roles",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId",
              "tokenId": ":tokenId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "roles": [
                  {
                    "entityId": "string",
                    "entityType": "DEPLOYMENT",
                    "role": "string"
                  }
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens/:tokenId/roles \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"roles\": [\n    {\n      \"entityId\": \"string\",\n      \"entityType\": \"DEPLOYMENT\",\n      \"role\": \"string\"\n    }\n  ]\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens/:tokenId/roles",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId",
              "tokenId": ":tokenId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "roles": [
                  {
                    "entityId": "string",
                    "entityType": "DEPLOYMENT",
                    "role": "string"
                  }
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens/:tokenId/roles \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"roles\": [\n    {\n      \"entityId\": \"string\",\n      \"entityType\": \"DEPLOYMENT\",\n      \"role\": \"string\"\n    }\n  ]\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens/:tokenId/roles",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId",
              "tokenId": ":tokenId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "roles": [
                  {
                    "entityId": "string",
                    "entityType": "DEPLOYMENT",
                    "role": "string"
                  }
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens/:tokenId/roles \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"roles\": [\n    {\n      \"entityId\": \"string\",\n      \"entityType\": \"DEPLOYMENT\",\n      \"role\": \"string\"\n    }\n  ]\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_apiToken.RotateApiToken": {
        "id": "subpackage_apiToken.RotateApiToken",
        "namespace": [
          "subpackage_apiToken"
        ],
        "description": "Rotate an API token. Creates a new API token and invalidates the one you specify. Any workflows using the previous value stop working.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/tokens/"
          },
          {
            "type": "pathParameter",
            "value": "tokenId"
          },
          {
            "type": "literal",
            "value": "/rotate"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/iam/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization where you want to rotate an API token."
          },
          {
            "key": "tokenId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The token to rotate"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiToken"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/tokens/tokenId/rotate",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId",
              "tokenId": "tokenId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "createdAt": "2022-11-22T04:37:12Z",
                "description": "my token description",
                "id": "clm8q7f6q000008lcgyougpsk",
                "name": "My token",
                "shortToken": "short-token",
                "startAt": "2022-11-22T04:37:12Z",
                "type": "DEPLOYMENT",
                "updatedAt": "2022-11-22T04:37:12Z",
                "createdBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                },
                "endAt": "2022-11-22T04:37:12Z",
                "expiryPeriodInDays": 30,
                "lastUsedAt": "2022-11-22T04:37:12Z",
                "roles": [
                  {
                    "entityId": "clm8sgvai000008l794psbkdv",
                    "entityType": "DEPLOYMENT",
                    "role": "WORKSPACE_MEMBER"
                  }
                ],
                "token": "token",
                "updatedBy": {
                  "id": "clm8qv74h000008mlf08scq7k",
                  "apiTokenName": "my-token",
                  "avatarUrl": "https://avatar.url",
                  "fullName": "Jane Doe",
                  "subjectType": "USER",
                  "username": "user1@company.com"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/organizationId/tokens/tokenId/rotate \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens/:tokenId/rotate",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId",
              "tokenId": ":tokenId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens/:tokenId/rotate \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens/:tokenId/rotate",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId",
              "tokenId": ":tokenId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens/:tokenId/rotate \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens/:tokenId/rotate",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId",
              "tokenId": ":tokenId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens/:tokenId/rotate \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens/:tokenId/rotate",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId",
              "tokenId": ":tokenId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens/:tokenId/rotate \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/tokens/:tokenId/rotate",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId",
              "tokenId": ":tokenId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/tokens/:tokenId/rotate \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_user.ListUsers": {
        "id": "subpackage_user.ListUsers",
        "namespace": [
          "subpackage_user"
        ],
        "description": "List users in an Organization or a specific Workspace within an Organization.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/users"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/iam/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization to list users for."
          }
        ],
        "queryParameters": [
          {
            "key": "workspaceId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The ID of the Workspace to filter the list of users for. When specified, the API returns only users belonging to the specified Workspace."
          },
          {
            "key": "deploymentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The ID of the Deployment to filter the list of users for. When specified, the API returns only users belonging to the specified Deployment."
          },
          {
            "key": "offset",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Offset for pagination"
          },
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Limit for pagination"
          },
          {
            "key": "sorts",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_user:ListUsersRequestSortsItem"
                  }
                }
              }
            },
            "description": "Sorting criteria, each criterion should conform to format 'fieldName:asc' or 'fieldName:desc'"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:UsersPaginated"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/users",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "limit": 10,
                "offset": 0,
                "totalCount": 100,
                "users": [
                  {
                    "avatarUrl": "https://avatar.url",
                    "createdAt": "2022-11-22T04:37:12Z",
                    "fullName": "Jane Doe",
                    "id": "clm9sq6s0000008kz7uvl7yz7",
                    "status": "ACTIVE",
                    "updatedAt": "2022-11-22T04:37:12Z",
                    "username": "user1@company.com",
                    "deploymentRoles": [
                      {
                        "deploymentId": "clm8t5u4q000008jq4qoc3031",
                        "role": "DEPLOYMENT_ADMIN"
                      }
                    ],
                    "organizationRole": "ORGANIZATION_OWNER",
                    "workspaceRoles": [
                      {
                        "role": "WORKSPACE_OWNER",
                        "workspaceId": "clm8t5u4q000008jq4qoc3036"
                      }
                    ]
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/iam/v1beta1/organizations/organizationId/users \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/users",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "workspaceId": "string",
              "deploymentId": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/users \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d workspaceId=string \\\n     -d deploymentId=string",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/users",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "workspaceId": "string",
              "deploymentId": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/users \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d workspaceId=string \\\n     -d deploymentId=string",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/users",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "workspaceId": "string",
              "deploymentId": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/users \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d workspaceId=string \\\n     -d deploymentId=string",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/users",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId"
            },
            "queryParameters": {
              "workspaceId": "string",
              "deploymentId": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/users \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d workspaceId=string \\\n     -d deploymentId=string",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_user.GetUser": {
        "id": "subpackage_user.GetUser",
        "namespace": [
          "subpackage_user"
        ],
        "description": "Retrieve user information about a specific user account.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/users/"
          },
          {
            "type": "pathParameter",
            "value": "userId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/iam/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization to which the user belongs."
          },
          {
            "key": "userId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The user's ID."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:User"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/users/userId",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId",
              "userId": "userId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "avatarUrl": "https://avatar.url",
                "createdAt": "2022-11-22T04:37:12Z",
                "fullName": "Jane Doe",
                "id": "clm9sq6s0000008kz7uvl7yz7",
                "status": "ACTIVE",
                "updatedAt": "2022-11-22T04:37:12Z",
                "username": "user1@company.com",
                "deploymentRoles": [
                  {
                    "deploymentId": "clm8t5u4q000008jq4qoc3031",
                    "role": "DEPLOYMENT_ADMIN"
                  }
                ],
                "organizationRole": "ORGANIZATION_OWNER",
                "workspaceRoles": [
                  {
                    "role": "WORKSPACE_OWNER",
                    "workspaceId": "clm8t5u4q000008jq4qoc3036"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/iam/v1beta1/organizations/organizationId/users/userId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/users/:userId",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId",
              "userId": ":userId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/users/:userId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/users/:userId",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId",
              "userId": ":userId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/users/:userId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/users/:userId",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId",
              "userId": ":userId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/users/:userId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/users/:userId",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId",
              "userId": ":userId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/users/:userId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/users/:userId",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId",
              "userId": ":userId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/users/:userId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_user.UpdateUserRoles": {
        "id": "subpackage_user.UpdateUserRoles",
        "namespace": [
          "subpackage_user"
        ],
        "description": "Update Organization and Workspace roles for a user.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "organizationId"
          },
          {
            "type": "literal",
            "value": "/users/"
          },
          {
            "type": "pathParameter",
            "value": "userId"
          },
          {
            "type": "literal",
            "value": "/roles"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.astronomer.io/iam/v1beta1"
          }
        ],
        "pathParameters": [
          {
            "key": "organizationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Organization to which the user belongs."
          },
          {
            "key": "userId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The user's ID"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "deploymentRoles",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "list",
                          "itemShape": {
                            "type": "alias",
                            "value": {
                              "type": "id",
                              "id": "type_:DeploymentRole"
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "The user's updated Deployment roles. Requires also specifying an `OrganizationRole`."
                },
                {
                  "key": "organizationRole",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_user:UpdateUserRolesRequestOrganizationRole"
                        }
                      }
                    }
                  },
                  "description": "The user's updated Organization role."
                },
                {
                  "key": "workspaceRoles",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "list",
                          "itemShape": {
                            "type": "alias",
                            "value": {
                              "type": "id",
                              "id": "type_:WorkspaceRole"
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "The user's updated Workspace roles. Requires also specifying an `OrganizationRole`."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:SubjectRoles"
              }
            }
          }
        ],
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          },
          {
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/organizations/organizationId/users/userId/roles",
            "responseStatusCode": 200,
            "pathParameters": {
              "organizationId": "organizationId",
              "userId": "userId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "deploymentRoles": [
                  {
                    "deploymentId": "clm8t5u4q000008jq4qoc3031",
                    "role": "DEPLOYMENT_ADMIN"
                  }
                ],
                "workspaceRoles": [
                  {
                    "role": "WORKSPACE_OWNER",
                    "workspaceId": "clm8t5u4q000008jq4qoc3036"
                  }
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "deploymentRoles": [
                  {
                    "deploymentId": "clm8t5u4q000008jq4qoc3031",
                    "role": "DEPLOYMENT_ADMIN"
                  }
                ],
                "organizationRole": "ORGANIZATION_OWNER",
                "workspaceRoles": [
                  {
                    "role": "WORKSPACE_OWNER",
                    "workspaceId": "clm8t5u4q000008jq4qoc3036"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/organizationId/users/userId/roles \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"deploymentRoles\": [\n    {\n      \"deploymentId\": \"clm8t5u4q000008jq4qoc3031\",\n      \"role\": \"DEPLOYMENT_ADMIN\"\n    }\n  ],\n  \"workspaceRoles\": [\n    {\n      \"role\": \"WORKSPACE_OWNER\",\n      \"workspaceId\": \"clm8t5u4q000008jq4qoc3036\"\n    }\n  ]\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/users/:userId/roles",
            "responseStatusCode": 400,
            "pathParameters": {
              "organizationId": ":organizationId",
              "userId": ":userId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/users/:userId/roles \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/users/:userId/roles",
            "responseStatusCode": 401,
            "pathParameters": {
              "organizationId": ":organizationId",
              "userId": ":userId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/users/:userId/roles \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/users/:userId/roles",
            "responseStatusCode": 403,
            "pathParameters": {
              "organizationId": ":organizationId",
              "userId": ":userId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/users/:userId/roles \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/users/:userId/roles",
            "responseStatusCode": 404,
            "pathParameters": {
              "organizationId": ":organizationId",
              "userId": ":userId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/users/:userId/roles \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/organizations/:organizationId/users/:userId/roles",
            "responseStatusCode": 500,
            "pathParameters": {
              "organizationId": ":organizationId",
              "userId": ":userId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "requestId": "string",
                "statusCode": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.astronomer.io/iam/v1beta1/organizations/:organizationId/users/:userId/roles \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      }
    },
    "websockets": {},
    "webhooks": {},
    "types": {
      "type_authorization:ListPermissionGroupsRequestScopeType": {
        "name": "ListPermissionGroupsRequestScopeType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "DEPLOYMENT"
            },
            {
              "value": "WORKSPACE"
            },
            {
              "value": "ORGANIZATION"
            }
          ]
        }
      },
      "type_invite:CreateUserInviteRequestRole": {
        "name": "CreateUserInviteRequestRole",
        "description": "The user's Organization role.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ORGANIZATION_OWNER"
            },
            {
              "value": "ORGANIZATION_BILLING_ADMIN"
            },
            {
              "value": "ORGANIZATION_MEMBER"
            }
          ]
        }
      },
      "type_role:ListRoleTemplatesRequestScopeTypesItem": {
        "name": "ListRoleTemplatesRequestScopeTypesItem",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "DEPLOYMENT"
            },
            {
              "value": "WORKSPACE"
            },
            {
              "value": "ORGANIZATION"
            }
          ]
        }
      },
      "type_role:ListRolesRequestScopeTypesItem": {
        "name": "ListRolesRequestScopeTypesItem",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "DEPLOYMENT"
            },
            {
              "value": "WORKSPACE"
            },
            {
              "value": "ORGANIZATION"
            }
          ]
        }
      },
      "type_role:ListRolesRequestSortsItem": {
        "name": "ListRolesRequestSortsItem",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "name:asc"
            },
            {
              "value": "name:desc"
            },
            {
              "value": "scopeType:asc"
            },
            {
              "value": "scopeType:desc"
            },
            {
              "value": "description:asc"
            },
            {
              "value": "description:desc"
            },
            {
              "value": "createdAt:asc"
            },
            {
              "value": "createdAt:desc"
            },
            {
              "value": "updatedAt:asc"
            },
            {
              "value": "updatedAt:desc"
            }
          ]
        }
      },
      "type_team:ListTeamsRequestSortsItem": {
        "name": "ListTeamsRequestSortsItem",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "name:asc"
            },
            {
              "value": "name:desc"
            },
            {
              "value": "description:asc"
            },
            {
              "value": "description:desc"
            },
            {
              "value": "createdAt:asc"
            },
            {
              "value": "createdAt:desc"
            },
            {
              "value": "updatedAt:asc"
            },
            {
              "value": "updatedAt:desc"
            }
          ]
        }
      },
      "type_team:CreateTeamRequestOrganizationRole": {
        "name": "CreateTeamRequestOrganizationRole",
        "description": "The Team's Organization role.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ORGANIZATION_OWNER"
            },
            {
              "value": "ORGANIZATION_BILLING_ADMIN"
            },
            {
              "value": "ORGANIZATION_MEMBER"
            }
          ]
        }
      },
      "type_team:ListTeamMembersRequestSortsItem": {
        "name": "ListTeamMembersRequestSortsItem",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "userId:asc"
            },
            {
              "value": "userId:desc"
            },
            {
              "value": "fullName:asc"
            },
            {
              "value": "fullName:desc"
            },
            {
              "value": "username:asc"
            },
            {
              "value": "username:desc"
            },
            {
              "value": "createdAt:asc"
            },
            {
              "value": "createdAt:desc"
            }
          ]
        }
      },
      "type_team:UpdateTeamRolesRequestOrganizationRole": {
        "name": "UpdateTeamRolesRequestOrganizationRole",
        "description": "The Team's Organization roles.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ORGANIZATION_OWNER"
            },
            {
              "value": "ORGANIZATION_BILLING_ADMIN"
            },
            {
              "value": "ORGANIZATION_MEMBER"
            }
          ]
        }
      },
      "type_apiToken:ListApiTokensRequestSortsItem": {
        "name": "ListApiTokensRequestSortsItem",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "name:asc"
            },
            {
              "value": "name:desc"
            },
            {
              "value": "description:asc"
            },
            {
              "value": "description:desc"
            },
            {
              "value": "createdAt:asc"
            },
            {
              "value": "createdAt:desc"
            },
            {
              "value": "updatedAt:asc"
            },
            {
              "value": "updatedAt:desc"
            },
            {
              "value": "tokenStartAt:asc"
            },
            {
              "value": "tokenStartAt:desc"
            }
          ]
        }
      },
      "type_apiToken:CreateApiTokenRequestType": {
        "name": "CreateApiTokenRequestType",
        "description": "The scope of the API token.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "DEPLOYMENT"
            },
            {
              "value": "WORKSPACE"
            },
            {
              "value": "ORGANIZATION"
            }
          ]
        }
      },
      "type_user:ListUsersRequestSortsItem": {
        "name": "ListUsersRequestSortsItem",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "id:asc"
            },
            {
              "value": "id:desc"
            },
            {
              "value": "username:asc"
            },
            {
              "value": "username:desc"
            },
            {
              "value": "fullName:asc"
            },
            {
              "value": "fullName:desc"
            },
            {
              "value": "createdAt:asc"
            },
            {
              "value": "createdAt:desc"
            },
            {
              "value": "updatedAt:asc"
            },
            {
              "value": "updatedAt:desc"
            }
          ]
        }
      },
      "type_user:UpdateUserRolesRequestOrganizationRole": {
        "name": "UpdateUserRolesRequestOrganizationRole",
        "description": "The user's updated Organization role.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ORGANIZATION_OWNER"
            },
            {
              "value": "ORGANIZATION_BILLING_ADMIN"
            },
            {
              "value": "ORGANIZATION_MEMBER"
            }
          ]
        }
      },
      "type_:ApiTokenType": {
        "name": "ApiTokenType",
        "description": "The type of the API token.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "DEPLOYMENT"
            },
            {
              "value": "WORKSPACE"
            },
            {
              "value": "ORGANIZATION"
            }
          ]
        }
      },
      "type_:ApiToken": {
        "name": "ApiToken",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "The time when the API token was created in UTC, formatted as `YYYY-MM-DDTHH:MM:SSZ`."
            },
            {
              "key": "createdBy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BasicSubjectProfile"
                    }
                  }
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The description of the API token."
            },
            {
              "key": "endAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "The time when the API token expires in UTC, formatted as `YYYY-MM-DDTHH:MM:SSZ`."
            },
            {
              "key": "expiryPeriodInDays",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The expiry period of the API token in days."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The API token's ID."
            },
            {
              "key": "lastUsedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "The time when the API token was last used in UTC, formatted as `YYYY-MM-DDTHH:MM:SSZ`."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The name of the API token."
            },
            {
              "key": "roles",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ApiTokenRole"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The roles of the API token."
            },
            {
              "key": "shortToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The short value of the API token."
            },
            {
              "key": "startAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "The time when the API token will become valid in UTC, formatted as `YYYY-MM-DDTHH:MM:SSZ`."
            },
            {
              "key": "token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The value of the API token."
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ApiTokenType"
                }
              },
              "description": "The type of the API token."
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "The time when the API token was last updated in UTC, formatted as `YYYY-MM-DDTHH:MM:SSZ`."
            },
            {
              "key": "updatedBy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BasicSubjectProfile"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ApiTokenRoleEntityType": {
        "name": "ApiTokenRoleEntityType",
        "description": "The type of the entity to which the API token is scoped for.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "DEPLOYMENT"
            },
            {
              "value": "WORKSPACE"
            },
            {
              "value": "ORGANIZATION"
            }
          ]
        }
      },
      "type_:ApiTokenRole": {
        "name": "ApiTokenRole",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "entityId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The ID of the entity to which the API token is scoped for. For example, for Workspace API tokens, this is the Workspace ID."
            },
            {
              "key": "entityType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ApiTokenRoleEntityType"
                }
              },
              "description": "The type of the entity to which the API token is scoped for."
            },
            {
              "key": "role",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The role of the API token."
            }
          ]
        }
      },
      "type_:ApiTokensPaginated": {
        "name": "ApiTokensPaginated",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "limit",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The limit of values in this page."
            },
            {
              "key": "offset",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The offset of values in this page."
            },
            {
              "key": "tokens",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ApiToken"
                    }
                  }
                }
              },
              "description": "The list of API tokens in this page."
            },
            {
              "key": "totalCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The total number of API tokens."
            }
          ]
        }
      },
      "type_:BasicSubjectProfileSubjectType": {
        "name": "BasicSubjectProfileSubjectType",
        "description": "The subject type.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "USER"
            },
            {
              "value": "SERVICEKEY"
            }
          ]
        }
      },
      "type_:BasicSubjectProfile": {
        "name": "BasicSubjectProfile",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "apiTokenName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The API token's name. Returned only when `SubjectType` is `SERVICEKEY`."
            },
            {
              "key": "avatarUrl",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The URL for the user's profile image. Returned only when `SubjectType` is `USER`."
            },
            {
              "key": "fullName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The subject's full name. Returned only when `SubjectType` is `USER`."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The subject's ID."
            },
            {
              "key": "subjectType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BasicSubjectProfileSubjectType"
                    }
                  }
                }
              },
              "description": "The subject type."
            },
            {
              "key": "username",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The subject's username. Returned only when `SubjectType` is `USER`."
            }
          ]
        }
      },
      "type_:DefaultRoleScopeType": {
        "name": "DefaultRoleScopeType",
        "description": "The role's scope.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "DEPLOYMENT"
            },
            {
              "value": "WORKSPACE"
            },
            {
              "value": "ORGANIZATION"
            },
            {
              "value": "SYSTEM"
            }
          ]
        }
      },
      "type_:DefaultRole": {
        "name": "DefaultRole",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The role's description."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The role's name."
            },
            {
              "key": "permissions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The role's permissions."
            },
            {
              "key": "scopeType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:DefaultRoleScopeType"
                }
              },
              "description": "The role's scope."
            }
          ]
        }
      },
      "type_:DeploymentRole": {
        "name": "DeploymentRole",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "deploymentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The Deployment ID."
            },
            {
              "key": "role",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The name of the role for the subject in the Deployment."
            }
          ]
        }
      },
      "type_:Error": {
        "name": "Error",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "requestId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "statusCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Invite": {
        "name": "Invite",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "expiresAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The time when the invite is expired in UTC, formatted as `YYYY-MM-DDTHH:MM:SSZ`."
            },
            {
              "key": "inviteId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The invite ID."
            },
            {
              "key": "invitee",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:BasicSubjectProfile"
                }
              }
            },
            {
              "key": "inviter",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:BasicSubjectProfile"
                }
              }
            },
            {
              "key": "organizationId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The ID of the Organization where the invite was sent."
            },
            {
              "key": "organizationName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The name of the Organization where the invite was sent."
            },
            {
              "key": "userId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The ID for the user who was invited."
            }
          ]
        }
      },
      "type_:PermissionEntry": {
        "name": "PermissionEntry",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "action",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The permission's action."
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The permission's description."
            }
          ]
        }
      },
      "type_:PermissionGroup": {
        "name": "PermissionGroup",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The permission group's description."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The permission group's name."
            },
            {
              "key": "permissions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PermissionEntry"
                    }
                  }
                }
              },
              "description": "The permission group's permissions."
            },
            {
              "key": "scope",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The permission group's scope."
            }
          ]
        }
      },
      "type_:RoleScopeType": {
        "name": "RoleScopeType",
        "description": "The role's scope.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "DEPLOYMENT"
            },
            {
              "value": "WORKSPACE"
            },
            {
              "value": "ORGANIZATION"
            }
          ]
        }
      },
      "type_:Role": {
        "name": "Role",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The time the role was created."
            },
            {
              "key": "createdBy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:BasicSubjectProfile"
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The role's description."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The role's ID."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The role's name."
            },
            {
              "key": "restrictedWorkspaceIds",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The IDs of Workspaces that the role is restricted to."
            },
            {
              "key": "scopeType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:RoleScopeType"
                }
              },
              "description": "The role's scope."
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The time the role was last updated."
            },
            {
              "key": "updatedBy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:BasicSubjectProfile"
                }
              }
            }
          ]
        }
      },
      "type_:RoleTemplateScopeType": {
        "name": "RoleTemplateScopeType",
        "description": "The role's scope.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "DEPLOYMENT"
            },
            {
              "value": "WORKSPACE"
            },
            {
              "value": "ORGANIZATION"
            },
            {
              "value": "SYSTEM"
            }
          ]
        }
      },
      "type_:RoleTemplate": {
        "name": "RoleTemplate",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The role's description."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The role's name."
            },
            {
              "key": "permissions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The role's permissions."
            },
            {
              "key": "scopeType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:RoleTemplateScopeType"
                }
              },
              "description": "The role's scope."
            }
          ]
        }
      },
      "type_:RoleWithPermissionScopeType": {
        "name": "RoleWithPermissionScopeType",
        "description": "The role's scope.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "DEPLOYMENT"
            },
            {
              "value": "WORKSPACE"
            },
            {
              "value": "ORGANIZATION"
            }
          ]
        }
      },
      "type_:RoleWithPermission": {
        "name": "RoleWithPermission",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The time the role was created."
            },
            {
              "key": "createdBy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:BasicSubjectProfile"
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The role's description."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The role's ID."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The role's name."
            },
            {
              "key": "permissions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The role's permissions."
            },
            {
              "key": "restrictedWorkspaceIds",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The IDs of Workspaces that the role is restricted to."
            },
            {
              "key": "scopeType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:RoleWithPermissionScopeType"
                }
              },
              "description": "The role's scope."
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The time the role was last updated."
            },
            {
              "key": "updatedBy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:BasicSubjectProfile"
                }
              }
            }
          ]
        }
      },
      "type_:RolesPaginated": {
        "name": "RolesPaginated",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "defaultRoles",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:DefaultRole"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The list of default roles."
            },
            {
              "key": "limit",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The number of custom roles returned."
            },
            {
              "key": "offset",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The offset of the custom roles."
            },
            {
              "key": "roles",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Role"
                    }
                  }
                }
              },
              "description": "The list of custom roles."
            },
            {
              "key": "totalCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The total number of custom roles."
            }
          ]
        }
      },
      "type_:SubjectRolesOrganizationRole": {
        "name": "SubjectRolesOrganizationRole",
        "description": "The subject's Organization role.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ORGANIZATION_OWNER"
            },
            {
              "value": "ORGANIZATION_BILLING_ADMIN"
            },
            {
              "value": "ORGANIZATION_MEMBER"
            }
          ]
        }
      },
      "type_:SubjectRoles": {
        "name": "SubjectRoles",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "deploymentRoles",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:DeploymentRole"
                        }
                      }
                    }
                  }
                }
              },
              "description": "A list of the subject's Deployment roles. Currently only for API tokens."
            },
            {
              "key": "organizationRole",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:SubjectRolesOrganizationRole"
                    }
                  }
                }
              },
              "description": "The subject's Organization role."
            },
            {
              "key": "workspaceRoles",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:WorkspaceRole"
                        }
                      }
                    }
                  }
                }
              },
              "description": "A list of the subject's Workspace roles."
            }
          ]
        }
      },
      "type_:TeamOrganizationRole": {
        "name": "TeamOrganizationRole",
        "description": "The Team's Organization role.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ORGANIZATION_OWNER"
            },
            {
              "value": "ORGANIZATION_BILLING_ADMIN"
            },
            {
              "value": "ORGANIZATION_MEMBER"
            }
          ]
        }
      },
      "type_:Team": {
        "name": "Team",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "The time when the Team was created in UTC, formatted as `YYYY-MM-DDTHH:MM:SSZ`."
            },
            {
              "key": "createdBy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BasicSubjectProfile"
                    }
                  }
                }
              }
            },
            {
              "key": "deploymentRoles",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:DeploymentRole"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The Team's role in each Deployment it belongs to."
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The Team's description."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The Team's ID."
            },
            {
              "key": "isIdpManaged",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the Team is managed by an identity provider (IdP)."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The Team's name."
            },
            {
              "key": "organizationId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The ID of the Organization to which the Team belongs."
            },
            {
              "key": "organizationRole",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:TeamOrganizationRole"
                }
              },
              "description": "The Team's Organization role."
            },
            {
              "key": "rolesCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The number of roles the Team has."
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "The time when the Team was last updated in UTC, formatted as `YYYY-MM-DDTHH:MM:SSZ`."
            },
            {
              "key": "updatedBy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BasicSubjectProfile"
                    }
                  }
                }
              }
            },
            {
              "key": "workspaceRoles",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:WorkspaceRole"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The Team's role in each Workspace it belongs to."
            }
          ]
        }
      },
      "type_:TeamMember": {
        "name": "TeamMember",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "avatarUrl",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The URL for the Team member's profile image."
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "The time when the Team member was added in UTC, formatted as `YYYY-MM-DDTHH:MM:SSZ`."
            },
            {
              "key": "fullName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The Team member's full name."
            },
            {
              "key": "userId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The Team member's ID."
            },
            {
              "key": "username",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The Team member's username."
            }
          ]
        }
      },
      "type_:TeamMembersPaginated": {
        "name": "TeamMembersPaginated",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "limit",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The maximum number of Team members in one page."
            },
            {
              "key": "offset",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The offset of the current page of Team members."
            },
            {
              "key": "teamMembers",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:TeamMember"
                    }
                  }
                }
              },
              "description": "The list of Team members in the current page."
            },
            {
              "key": "totalCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The total number of Team members."
            }
          ]
        }
      },
      "type_:TeamsPaginated": {
        "name": "TeamsPaginated",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "limit",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The maximum number of Teams in one page."
            },
            {
              "key": "offset",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The offset of the current page of Teams."
            },
            {
              "key": "teams",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Team"
                    }
                  }
                }
              },
              "description": "The list of Teams in the current page."
            },
            {
              "key": "totalCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The total number of Teams."
            }
          ]
        }
      },
      "type_:UserOrganizationRole": {
        "name": "UserOrganizationRole",
        "description": "The user's Organization role.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ORGANIZATION_OWNER"
            },
            {
              "value": "ORGANIZATION_BILLING_ADMIN"
            },
            {
              "value": "ORGANIZATION_MEMBER"
            }
          ]
        }
      },
      "type_:UserStatus": {
        "name": "UserStatus",
        "description": "The user's status.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ACTIVE"
            },
            {
              "value": "INACTIVE"
            },
            {
              "value": "PENDING"
            },
            {
              "value": "BANNED"
            }
          ]
        }
      },
      "type_:User": {
        "name": "User",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "avatarUrl",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The URL for the user's profile image."
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "The time when the user was created in UTC, formatted as `YYYY-MM-DDTHH:MM:SSZ`."
            },
            {
              "key": "deploymentRoles",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:DeploymentRole"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The user's Deployment roles."
            },
            {
              "key": "fullName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The user's full name."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The user's ID."
            },
            {
              "key": "organizationRole",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:UserOrganizationRole"
                    }
                  }
                }
              },
              "description": "The user's Organization role."
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:UserStatus"
                }
              },
              "description": "The user's status."
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "The time when the user was updated in UTC, formatted as `YYYY-MM-DDTHH:MM:SSZ`."
            },
            {
              "key": "username",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The user's username."
            },
            {
              "key": "workspaceRoles",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:WorkspaceRole"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The user's Workspace roles."
            }
          ]
        }
      },
      "type_:UsersPaginated": {
        "name": "UsersPaginated",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "limit",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The maximum number of users in one page."
            },
            {
              "key": "offset",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The offset of the current page of users."
            },
            {
              "key": "totalCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The total number of users."
            },
            {
              "key": "users",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:User"
                    }
                  }
                }
              },
              "description": "The list of users in the current page."
            }
          ]
        }
      },
      "type_:WorkspaceRoleRole": {
        "name": "WorkspaceRoleRole",
        "description": "The role of the subject in the Workspace.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "WORKSPACE_OWNER"
            },
            {
              "value": "WORKSPACE_OPERATOR"
            },
            {
              "value": "WORKSPACE_AUTHOR"
            },
            {
              "value": "WORKSPACE_MEMBER"
            },
            {
              "value": "WORKSPACE_ACCESSOR"
            }
          ]
        }
      },
      "type_:WorkspaceRole": {
        "name": "WorkspaceRole",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "role",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:WorkspaceRoleRole"
                }
              },
              "description": "The role of the subject in the Workspace."
            },
            {
              "key": "workspaceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The Workspace ID."
            }
          ]
        }
      }
    },
    "subpackages": {
      "subpackage_authorization": {
        "id": "subpackage_authorization",
        "name": "authorization"
      },
      "subpackage_invite": {
        "id": "subpackage_invite",
        "name": "Invite",
        "displayName": "Invite"
      },
      "subpackage_role": {
        "id": "subpackage_role",
        "name": "role"
      },
      "subpackage_team": {
        "id": "subpackage_team",
        "name": "Team",
        "displayName": "Team"
      },
      "subpackage_apiToken": {
        "id": "subpackage_apiToken",
        "name": "ApiToken",
        "displayName": "ApiToken"
      },
      "subpackage_user": {
        "id": "subpackage_user",
        "name": "User",
        "displayName": "User"
      }
    },
    "auths": {
      "default": {
        "type": "bearerAuth",
        "tokenName": "token"
      }
    }
  }
]